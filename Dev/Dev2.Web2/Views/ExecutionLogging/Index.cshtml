@model Tuple<List<Dev2.Common.LogEntry>, ExecutionLoggingRequestViewModel>
@using Dev2.Web2.Models.ExecutionLogging;

@{
    ViewBag.Title = "Index";
}

<head>
    <meta charset='utf-8' />
    <meta content='en' name='language' />
    <meta content='width=device-width, initial-scale=1' name='viewport' />
    <link rel='stylesheet' type='text/css' href='http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css' />
    <link rel="stylesheet" type="text/css" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    <link rel='stylesheet' type='text/css' href='~/Content/Site.css' />


    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
</head>
<body>
    <div id="ExecutionFilters" class="well">

        <table id="filterTable">
            <tr>
                <td class="serverName">
                    @Html.LabelFor(model => model.Item2.Server)
                </td>
                <td class="protocol">
                    @Html.DropDownListFor(m => m.Item2.Protocol, Model.Item2.Protocols, new { id = "protocolDropdown", @class = "form-control" })
                </td>
                <td class="serverDesc">://</td>
                <td class="serverText">@Html.EditorFor(model => model.Item2.Server, new { htmlAttributes = new { id = "serverName", @class = "form-control" } })</td>
                <td class="serverDesc">:</td>
                <td>@Html.EditorFor(model => model.Item2.Port, new { htmlAttributes = new { id = "port", @class = "form-control" } })</td>
                <td><button id="updateServer" class="btn btn-default">Update</button></td>
            </tr>
        </table>
    </div>
    <div class="divclass">
        @{Html.RenderPartial("ExecutionList", Model.Item1);}
    </div>
</body>


<script type="text/javascript">

    function getServerUrl() {
        var protocol = document.getElementById("protocolDropdown").value;
        var serverName = document.getElementById("serverName").value;
        var port = document.getElementById("port").value;
        var serverUrl = protocol + "://" + serverName + ":" + port;

        return serverUrl;
    }

    function getLogData() {
        var serverUrl = getServerUrl();
        var wareWolfUrl = serverUrl + "/services/GetLogDataService"

        $.ajax({
            type: "GET",
            url: wareWolfUrl,
            cache: false,
            xhrFields: {
                withCredentials: true
            },
            success: function (response) {
                var jsonData = JSON.stringify(response);
                $.post('@Url.Action("ExecutionList", "ExecutionLogging")', { jsonData: jsonData },
                    function (data, textStatus, jqXHR) {
                        $('.divclass').html(data);
                    });
            },
            error: function (errorThrown) {
                console.log(errorThrown);
            }
        });
    }

    $(document).one('ready', function () {
        getLogData();
    });

    $(document).ready(function () {
        $('#updateServer').on('click', function (e) {
            e.preventDefault();
            getLogData();
        });

        $("#protocolDropdown").change(function () {
            var value = document.getElementById("protocolDropdown").value;
            if (value == "https") {
                $("#port").val("3143");
            }
            else {
                $("#port").val("3142");
            }
        });
    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}