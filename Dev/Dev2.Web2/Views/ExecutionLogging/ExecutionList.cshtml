@model IEnumerable<Dev2.Common.LogEntry>

<head>
    <link rel="stylesheet" href="~/Content/DetailsModal.css" type="text/css" />
</head>

<body>
    <div>
        <table id="executionFilters" class="table">
            <tr>
                <td class='filter-container filterContainId'>
                    <input id="filterId" autocomplete='off' class='filter' name='Execution Id' placeholder='Execution Id' data-col='Execution Id' />
                </td>
                <td class='filter-container filterContainTime'>
                    <input id="filterTime" autocomplete='off' class='filter' name='Execution Time' placeholder='Time (ms)' data-col='Execution Time' />
                </td>
                <td class='filter-container filterContainStatus'>
                    <input id="filterStatus" autocomplete='off' class='filter' name='Status' placeholder='Status' data-col='Status' />
                </td>
                <td class='filter-container filterContainStart'>
                    <input id="filterStart" autocomplete='off' class='filter' name='Start Time' placeholder='Start Time' onchange="filterStart()" data-col='Start Time' />
                </td>
                <td class='filter-container filterContainComplete'>
                    <input id="filterComplete" autocomplete='off' class='filter' name='Completed Time' placeholder='Completed Time' onchange="filterComplete()" data-col='Completed Time' />
                </td>
                <td class='filter-container filterContainUrl' style="width:100%">
                    <input id="filterUrl" autocomplete='off' class='filter' name='Url' placeholder='Url' data-col='Url' />
                </td>
                <td class='filter-container filterContainUser'>
                    <input id="filterUser" autocomplete='off' class='filter' name='User' placeholder='User' data-col='User' />
                </td>
                <td class='filter-container filterContainReset'>
                    <button type="button" class="btn btn-default" id="ResetButton">Clear</button>
                </td>
            </tr>
        </table>
    </div>
    <div>
        <table id="executionList" class="table">
            <thead>
                <tr data-toggle="tooltip" data-placement="right">
                    <th class="exId" title="Execution Id" onclick="sortTable(0)">Execution Id</th>
                    <th class="exTime" title="Execution Time (ms)" onclick="sortTable(1)">Time (ms)</th>
                    <th class="exStatus" title="Status" onclick="sortTable(2)">Status</th>
                    <th class="exStart" title="Start Time" onclick="sortTable(3)">Start Time</th>
                    <th class="exComplete" title="Completed Time" onclick="sortTable(4)">Completed Time</th>
                    <th class="exUrl" title="Url" onclick="sortTable(5)">Url</th>
                    <th class="exUser" title="User" onclick="sortTable(6)">User</th>
                    <th class="exResult" title="Result" onclick="sortTable(7)">Result</th>
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.ExecutionId)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.ExecutionTime)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.StartDateTime)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.CompletedDateTime)
                    </td>
                    <td class="exRow" >
                        @{
                            if (item.Url == null)
                            {
                                @Html.DisplayFor(modelItem => item.Url)
                            }
                            else
                            {
                                <a class="executionUrl" title="@item.Url" href="@item.Url" target="_blank">@item.Url</a>
                            }
                        }
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.User)
                    </td>
                    <td>
                        <a class="details" href="javascript:;">[...]</a>
                    </td>
                </tr>
                            }
        </table>
    </div>

</body>

<div id="dialog" style="display: none">
</div>

<script type="text/javascript">
    jQuery(document).ready(function ($) {

        $('.executionUrl').on('click', function () {
            return confirm('Are you sure you want to execute the process again?');
        });

        $('.filter').multifilter();

        $("#filterStart").datetimepicker({
            format: 'd/m/Y H:i:s',
            lang: 'ru'
        });

        $("#filterComplete").datetimepicker({
            format: 'd/m/Y H:i:s',
            lang: 'ru'
        });

        $('#ResetButton').on('click', function (e) {
            $('#executionFilters input').val(null).trigger('change');
            $('#filterContainStart input').val(null).trigger('change');
            $('#filterContainComplete input').val(null).trigger('change');
        });

        $("#dialog").dialog({
            autoOpen: false,
            modal: true,
            title: "Result",
            maxWidth: 600,
            maxHeight: 500,
            minWidth: 400,
            minHeight: 300,
            width: 400,
            height: 300
        });
        $("#executionList .details").click(function () {
            var executionId = $(this).closest("tr").find("td").eq(0).html();
            $.ajax({
                type: "POST",
                url: "/ExecutionLogging/Details",
                data: '{executionId: "' + executionId + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $('#dialog').html(response);
                    $('#dialog').dialog('open');
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    });
</script>


@section scripts
{
    <script>
        var TeamDetailPostBackURL = '/ExecutionLogging/Index';
        $(function () {
            $(".anchorDetail").click(function () {
                debugger;
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: TeamDetailPostBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    datatype: "json",
                    success: function (data) {
                        debugger;
                        $('#myModalContent').html(data);
                        $('#myModal').modal(options);
                        $('#myModal').modal('show');

                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            });

            $("#closbtn").click(function () {
                $('#myModal').modal('hide');
            });
        });

    </script>

}




