@model IEnumerable<Dev2.Common.LogEntry>

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.datetimepicker.css" />

    <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.8.3.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.9.2.custom.min.js")" type="text/javascript"></script>
    <script type='text/javascript' src='~/Scripts/multifilter.js'></script>
    <script type='text/javascript' src="~/Scripts/jquery.datetimepicker.full.min.js"></script>
    <script type="text/javascript" src="~/Scripts/tsorter.min.js"></script>
</head>

<div style="padding-top: 3px;">
    <table id="executionFilters" class="table">
        <tr>
            <td style="display:none;" class='filter-container filterContainId'>
                <input id="filterId" autocomplete='off' class='filter' name='Execution Id' placeholder='Execution Id' data-col='Execution Id' />
            </td>
            <td class='filter-container filterContainUrl' style="width:100%">
                <input id="filterUrl" autocomplete='off' class='filter' name='Url' placeholder='Url' data-col='Url' />
            </td>
            <td class='filter-container filterContainTime'>
                <input id="filterTime" autocomplete='off' class='filter' name='Execution Time' placeholder='Time (ms)' data-col='Execution Time' />
            </td>
            <td class='filter-container filterContainStatus'>
                <input id="filterStatus" autocomplete='off' class='filter' name='Status' placeholder='Status' data-col='Status' />
            </td>
            <td class='filter-container filterContainStart'>
                <input id="filterStart" autocomplete='off' class='filter' name='Start Time' placeholder='Start Time' data-col='Start Time' />
            </td>
            <td class='filter-container filterContainComplete'>
                <input id="filterComplete" autocomplete='off' class='filter' name='Completed Time' placeholder='Completed Time' data-col='Completed Time' />
            </td>
            <td class='filter-container filterContainUser'>
                <input id="filterUser" autocomplete='off' class='filter' name='User' placeholder='User' data-col='User' />
            </td>
            <td class='filter-container filterContainReset'>
                <button type="button" class="btn btn-default" id="ResetButton">Clear</button>
            </td>
        </tr>
    </table>
</div>
<div>
    <table id="executionList" class="tablesorter">
        <thead>
            <tr>
                <th style="display:none;" class="exId" title="Execution Id">Execution Id</th>
                <th class="exUrl" title="Url">Url</th>
                <th class="exTime" title="Execution Time">Execution Time</th>
                <th class="exStatus" title="Status">Status</th>
                <th class="exStart" title="Start Time">Start Time</th>
                <th class="exComplete" title="Completed Time">Completed Time</th>
                <th class="exUser" title="User">User</th>
                <th>Result</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="exRow" style="display:none;">
                        @Html.DisplayFor(modelItem => item.ExecutionId)
                    </td>
                    <td class="exRow">
                        @{
                            if (item.Url == null)
                            {
                                @Html.DisplayFor(modelItem => item.Url)
                            }
                            else
                            {
                                <a class="executionUrl" title="@item.Url" href="@item.Url" target="_blank">@item.Url</a>
                            }
                        }
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.ExecutionTime)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.StartDateTime)
                    </td>
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.CompletedDateTime)
                    </td>
                    
                    <td class="exRow">
                        @Html.DisplayFor(modelItem => item.User)
                    </td>
                    <td>
                        <a class="details" href="javascript:;">[...]</a>
                    </td>
                </tr>
                            }
        </tbody>
    </table>
</div>

<div id="dialogResult" class="dialogResult">
    <p class="exResult"></p>
</div>

<script type="text/javascript">
    jQuery(document).ready(function ($) {

        $("#executionList").tablesorter();

        $('.filter').multifilter();

        $("#filterStart").datetimepicker({
            format: 'Y-m-d H:i:s',
            lang: 'en'
        });

        $("#filterComplete").datetimepicker({
            format: 'Y-m-d H:i:s',
            lang: 'en'
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#executionList .details").click(function (e) {
            e.preventDefault();
            var serverUrl = getServerUrl();
            var executionId = $(this).closest("tr").find("td").eq(0).html().trim();
            var wareWolfUrl = serverUrl + "/services/GetServiceExecutionResult";

            $.ajax({
                type: "GET",
                url: wareWolfUrl,
                data: { ExecutionId: executionId },
                cache: false,
                xhrFields: {
                    withCredentials: true
                },
                success: function (response) {
                    var dg = createDialog();
                    $('.exResult').text(response.Result);
                    dg.dialog("open");
                },
                fail: OnFailCall,
                error: OnErrorCall
            });
        });

        var createDialog = function () {
            var opt = {
                autoOpen: false,
                modal: true,
                title: "Result",
                maxWidth: 600,
                maxHeight: 500,
                minWidth: 400,
                minHeight: 300,
                width: 400,
                height: 300,
                hide: {
                    effect: "fade",
                    duration: 500
                },
                close: function (event, ui) {
                    $(this).dialog('close');
                }
            };
            return $('#dialogResult').dialog(opt);
        };

        $('.executionUrl').on('click', function () {
            return confirm('Are you sure you want to execute the process again?');
        });

        $('#ResetButton').on('click', function (e) {
            $('#executionFilters input').val(null).trigger('change');

            var table = document.getElementById("executionList");
            var tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    tr[i].style.display = "";
                }
            }
        });
    })
</script>
