//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warewolf.Resource.Errors {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Warewolf.Resource.Errors.ErrorResource", typeof(ErrorResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents - Invalid expression: Opening and closing brackets don&apos;t match.
        /// </summary>
        public static string ContentOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("ContentOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string ContentRecordsetIndexContainsInvalidCharecters {
            get {
                return ResourceManager.GetString("ContentRecordsetIndexContainsInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents - Recordset name  {0} contains invalid character(s).
        /// </summary>
        public static string ContentRecordsetnameInvalidCharecters {
            get {
                return ResourceManager.GetString("ContentRecordsetnameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents - No Value assigned for : {0}.
        /// </summary>
        public static string ContentsNoValueAssigned {
            get {
                return ResourceManager.GetString("ContentsNoValueAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents - Variable name  {0}  contains invalid character(s).
        /// </summary>
        public static string ContentVariablenameInvalidCharecters {
            get {
                return ResourceManager.GetString("ContentVariablenameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination cannot be empty or only white space.
        /// </summary>
        public static string DestinationEmpty {
            get {
                return ResourceManager.GetString("DestinationEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination - Invalid expression: opening and closing brackets don&quot;t match.
        /// </summary>
        public static string DestinationOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("DestinationOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string DestinationRecordsetIndexInvalidCharecters {
            get {
                return ResourceManager.GetString("DestinationRecordsetIndexInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination - Recordset name [[rec(a]] contains invalid character(s).
        /// </summary>
        public static string DestinationRecordsetInvalidCharecters {
            get {
                return ResourceManager.GetString("DestinationRecordsetInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination Username - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string DestinationUsernameRecordsetIndexInvalidCharecters {
            get {
                return ResourceManager.GetString("DestinationUsernameRecordsetIndexInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination Username - Variable name {0} contains invalid character(s).
        /// </summary>
        public static string DestinationUsernameVariableInvalidCharecters {
            get {
                return ResourceManager.GetString("DestinationUsernameVariableInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination - Variable name {0} contains invalid character(s).
        /// </summary>
        public static string DestinationVariablenameInvalidCharecters {
            get {
                return ResourceManager.GetString("DestinationVariablenameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory -  {0} does not exist in your variable list.
        /// </summary>
        public static string DirectoryDoesNotExist {
            get {
                return ResourceManager.GetString("DirectoryDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found {0}.
        /// </summary>
        public static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory - Invalid expression: opening and closing brackets don&quot;t match.
        /// </summary>
        public static string DirectoryOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("DirectoryOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string DirectoryRecordsetIndexInvalidCharecters {
            get {
                return ResourceManager.GetString("DirectoryRecordsetIndexInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory - Variable name  {0} contains invalid character(s).
        /// </summary>
        public static string DirectoryVariablenameInvalidCharecters {
            get {
                return ResourceManager.GetString("DirectoryVariablenameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name -  {0} does not exist in your variable list.
        /// </summary>
        public static string FileNameNotInVariableList {
            get {
                return ResourceManager.GetString("FileNameNotInVariableList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name - Invalid expression: opening and closing brackets don&quot;t match.
        /// </summary>
        public static string FilenameOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("FilenameOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name - Recordset name  {0} contains invalid character(s).
        /// </summary>
        public static string FileNameRecordsetnameInvalidCharecters {
            get {
                return ResourceManager.GetString("FileNameRecordsetnameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File {0} not found .
        /// </summary>
        public static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder cannot be empty or only white space.
        /// </summary>
        public static string FileOrFolderEmpty {
            get {
                return ResourceManager.GetString("FileOrFolderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder - Invalid expression: opening and closing brackets don&quot;t match.
        /// </summary>
        public static string FileOrFolderOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("FileOrFolderOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string FileOrFolderRecordsetindexInvalid {
            get {
                return ResourceManager.GetString("FileOrFolderRecordsetindexInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string FileOrFolderRecordsetIndexInvalidCharecters {
            get {
                return ResourceManager.GetString("FileOrFolderRecordsetIndexInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder - Recordset name {0} contains invalid character(s).
        /// </summary>
        public static string FileOrFolderRecordsetnameInvalidCharecters {
            get {
                return ResourceManager.GetString("FileOrFolderRecordsetnameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder - Variable name {0} contains invalid character(s).
        /// </summary>
        public static string FileOrFolderVariableInvalidCharecters {
            get {
                return ResourceManager.GetString("FileOrFolderVariableInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File or Folder - Variable name [[a&amp;]] contains invalid character(s).
        /// </summary>
        public static string FileOrFolderVariablenameInvalidCharecters {
            get {
                return ResourceManager.GetString("FileOrFolderVariablenameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please supply a valid File/Folder.
        /// </summary>
        public static string InvalidFileOrFolder {
            get {
                return ResourceManager.GetString("InvalidFileOrFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Value assigned for {0}.
        /// </summary>
        public static string NoValueAssigned {
            get {
                return ResourceManager.GetString("NoValueAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password cannot be empty or only white space.
        /// </summary>
        public static string PasswordEmpty {
            get {
                return ResourceManager.GetString("PasswordEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result - Invalid Region  {0}.
        /// </summary>
        public static string ResultInvalidRegion {
            get {
                return ResourceManager.GetString("ResultInvalidRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result - Invalid expression: opening and closing brackets don&quot;t match.
        /// </summary>
        public static string ResultOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("ResultOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result - Recordset index {0} contains invalid character(s).
        /// </summary>
        public static string ResultRecordsetIndexInvalidCharecters {
            get {
                return ResourceManager.GetString("ResultRecordsetIndexInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result - Recordset name [[rec&quot;()&quot;]] contains invalid character(s).
        /// </summary>
        public static string ResultRecordsetInvalidCharecters {
            get {
                return ResourceManager.GetString("ResultRecordsetInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result - Variable name  {0} contains invalid character(s).
        /// </summary>
        public static string ResultVariableContainsInvalidCharecters {
            get {
                return ResourceManager.GetString("ResultVariableContainsInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result field only allows a single result.
        /// </summary>
        public static string SingleResultAllowed {
            get {
                return ResourceManager.GetString("SingleResultAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username - Invalid expression: opening and closing brackets don&quot;t match.
        /// </summary>
        public static string UsernameOpeningClosingBracketMismatch {
            get {
                return ResourceManager.GetString("UsernameOpeningClosingBracketMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username - Recordset name {0} contains invalid character(s).
        /// </summary>
        public static string UsernameRecordsetnameInvalidCharecters {
            get {
                return ResourceManager.GetString("UsernameRecordsetnameInvalidCharecters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username - Variable name  {0} contains invalid character(s).
        /// </summary>
        public static string UsernameVariablenameInvalidCharecters {
            get {
                return ResourceManager.GetString("UsernameVariablenameInvalidCharecters", resourceCulture);
            }
        }
    }
}
