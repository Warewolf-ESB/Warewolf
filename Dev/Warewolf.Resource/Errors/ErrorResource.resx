<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DirectoryDoesNotExist" xml:space="preserve">
    <value>Directory -  {0} does not exist in your variable list</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>Directory not found {0}</value>
  </data>
  <data name="DirectoryOpeningClosingBracketMismatch" xml:space="preserve">
    <value>Directory - Invalid expression: opening and closing brackets dont match</value>
  </data>
  <data name="PasswordEmpty" xml:space="preserve">
    <value>Password cannot be empty or only white space</value>
  </data>
  <data name="FileNameNotInVariableList" xml:space="preserve">
    <value>File Name -  {0} does not exist in your variable list</value>
  </data>
  <data name="FilenameOpeningClosingBracketMismatch" xml:space="preserve">
    <value>File Name - Invalid expression: opening and closing brackets dont match</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File {0} not found </value>
  </data>
  <data name="InvalidFileOrFolder" xml:space="preserve">
    <value>Please supply a valid File/Folder</value>
  </data>
  <data name="NoValueAssigned" xml:space="preserve">
    <value>No Value assigned for {0}</value>
  </data>
  <data name="ResultRecordsetIndexInvalidCharecters" xml:space="preserve">
    <value>Result - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="FileNameRecordsetnameInvalidCharecters" xml:space="preserve">
    <value>File Name - Recordset name  {0} contains invalid character(s)</value>
  </data>
  <data name="ResultOpeningClosingBracketMismatch" xml:space="preserve">
    <value>Result - Invalid expression: opening and closing brackets dont match</value>
  </data>
  <data name="SingleResultAllowed" xml:space="preserve">
    <value>The result field only allows a single result</value>
  </data>
  <data name="ResultVariableContainsInvalidCharecters" xml:space="preserve">
    <value>Result - Variable name  {0} contains invalid character(s)</value>
  </data>
  <data name="ResultInvalidRegion" xml:space="preserve">
    <value>Result - Invalid Region  {0}</value>
  </data>
  <data name="DirectoryRecordsetIndexInvalidCharecters" xml:space="preserve">
    <value>Directory - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="DirectoryVariablenameInvalidCharecters" xml:space="preserve">
    <value>Directory - Variable name  {0} contains invalid character(s)</value>
  </data>
  <data name="ContentOpeningClosingBracketMismatch" xml:space="preserve">
    <value>Contents - Invalid expression: Opening and closing brackets dont match</value>
  </data>
  <data name="ContentRecordsetIndexContainsInvalidCharecters" xml:space="preserve">
    <value>Contents - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="ContentRecordsetnameInvalidCharecters" xml:space="preserve">
    <value>Contents - Recordset name  {0} contains invalid character(s)</value>
  </data>
  <data name="ContentVariablenameInvalidCharecters" xml:space="preserve">
    <value>Contents - Variable name  {0}  contains invalid character(s)</value>
  </data>
  <data name="UsernameOpeningClosingBracketMismatch" xml:space="preserve">
    <value>Username - Invalid expression: opening and closing brackets dont match</value>
  </data>
  <data name="UsernameVariablenameInvalidCharecters" xml:space="preserve">
    <value>Username - Variable name  {0} contains invalid character(s)</value>
  </data>
  <data name="ContentsNoValueAssigned" xml:space="preserve">
    <value>Contents - No Value assigned for : {0}</value>
  </data>
  <data name="DestinationEmpty" xml:space="preserve">
    <value>Destination cannot be empty or only white space</value>
  </data>
  <data name="DestinationOpeningClosingBracketMismatch" xml:space="preserve">
    <value>Destination - Invalid expression: opening and closing brackets dont match</value>
  </data>
  <data name="DestinationRecordsetIndexInvalidCharecters" xml:space="preserve">
    <value>Destination - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="DestinationRecordsetInvalidCharecters" xml:space="preserve">
    <value>Destination - Recordset name [[rec(a]] contains invalid character(s)</value>
  </data>
  <data name="DestinationUsernameRecordsetIndexInvalidCharecters" xml:space="preserve">
    <value>Destination Username - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="DestinationUsernameVariableInvalidCharecters" xml:space="preserve">
    <value>Destination Username - Variable name {0} contains invalid character(s)</value>
  </data>
  <data name="DestinationVariablenameInvalidCharecters" xml:space="preserve">
    <value>Destination - Variable name {0} contains invalid character(s)</value>
  </data>
  <data name="FileOrFolderEmpty" xml:space="preserve">
    <value>File or Folder cannot be empty or only white space</value>
  </data>
  <data name="FileOrFolderOpeningClosingBracketMismatch" xml:space="preserve">
    <value>File or Folder - Invalid expression: opening and closing brackets dont match</value>
  </data>
  <data name="FileOrFolderRecordsetindexInvalid" xml:space="preserve">
    <value>File or Folder - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="FileOrFolderRecordsetIndexInvalidCharecters" xml:space="preserve">
    <value>File or Folder - Recordset index {0} contains invalid character(s)</value>
  </data>
  <data name="FileOrFolderRecordsetnameInvalidCharecters" xml:space="preserve">
    <value>File or Folder - Recordset name {0} contains invalid character(s)</value>
  </data>
  <data name="FileOrFolderVariableInvalidCharecters" xml:space="preserve">
    <value>File or Folder - Variable name {0} contains invalid character(s)</value>
  </data>
  <data name="FileOrFolderVariablenameInvalidCharecters" xml:space="preserve">
    <value>File or Folder - Variable name [[a&amp;]] contains invalid character(s)</value>
  </data>
  <data name="ResultRecordsetInvalidCharecters" xml:space="preserve">
    <value>Result - Recordset name {0} contains invalid character(s)</value>
  </data>
  <data name="UsernameRecordsetnameInvalidCharecters" xml:space="preserve">
    <value>Username - Recordset name {0} contains invalid character(s)</value>
  </data>
  <data name="AliasEmpty" xml:space="preserve">
    <value>Alias cannot be empty</value>
  </data>
  <data name="AttachmentInvalidFormat" xml:space="preserve">
    <value>Attachments is not in the valid format: {0}</value>
  </data>
  <data name="BCCAddressInvalidFormat" xml:space="preserve">
    <value>BCC address is not in the valid format: {0}</value>
  </data>
  <data name="BlankResultVariable" xml:space="preserve">
    <value>Blank result variable</value>
  </data>
  <data name="BlankUSINGValue" xml:space="preserve">
    <value>The 'Using' value cannot be blank.</value>
  </data>
  <data name="BodyMustHaveMember" xml:space="preserve">
    <value>Body must have Member</value>
  </data>
  <data name="CannotBeVariable" xml:space="preserve">
    <value>Cannot be a variable</value>
  </data>
  <data name="CannotCommaSeperateRecordset" xml:space="preserve">
    <value>Cannot specify a Recordset as part of a comma saperated list of expressions</value>
  </data>
  <data name="CannotExecuteCMDFromTool" xml:space="preserve">
    <value>Cannot execute CMD from tool.</value>
  </data>
  <data name="CannotExecuteExplorerFromTool" xml:space="preserve">
    <value>Cannot execute explorer from tool.</value>
  </data>
  <data name="CannotLocateRootDataList" xml:space="preserve">
    <value>Fatal Error : Cannot locate Root DataList for resumption!</value>
  </data>
  <data name="CCAddressInvalidFormat" xml:space="preserve">
    <value>CC address is not in the valid format: {0}</value>
  </data>
  <data name="ColumnDoesNotAlloNull" xml:space="preserve">
    <value>The column {0} does not allow NULL. Please check your mappings to ensure you have mapped data into it.</value>
  </data>
  <data name="ColumnSetAsIdentityKeepIdentityIsFalse" xml:space="preserve">
    <value>The column {0} is an IDENTITY and you have the Keep Identity option disabled. Either enable it or remove the mapping.</value>
  </data>
  <data name="ColumnSetAsIdentityKeepIdentityIsTrue" xml:space="preserve">
    <value>The column {0} is an IDENTITY and you have the Keep Identity option enabled. Either disable this option or map data.</value>
  </data>
  <data name="ConvertOptionDoesNotExist" xml:space="preserve">
    <value>Convert option does not exist</value>
  </data>
  <data name="CSVInvalidCharecters" xml:space="preserve">
    <value>Invalid characters have been entered in the CSV Numbers</value>
  </data>
  <data name="DataSourceEmpty" xml:space="preserve">
    <value>DataSource cannot be empty</value>
  </data>
  <data name="DataSourceMustBeJSonOrRecordSet" xml:space="preserve">
    <value>DataSource must be a Recordset or JSON array variable.</value>
  </data>
  <data name="DecimalsNotValid" xml:space="preserve">
    <value>Decimals to show is not valid</value>
  </data>
  <data name="DropBoxCallerHasNoPermission" xml:space="preserve">
    <value>The caller does not have the required permissions</value>
  </data>
  <data name="DropBoxCannotLocateSpecifiedFiles" xml:space="preserve">
    <value>Cannot locate the file/s specified. Please confirm that the correct file location has been entered.</value>
  </data>
  <data name="DropBoxConfirmCorrectFileDestination" xml:space="preserve">
    <value>Please confirm that the correct file destination has been entered</value>
  </data>
  <data name="DropBoxConfirmCorrectFileLocation" xml:space="preserve">
    <value>Please confirm that the correct file location has been entered</value>
  </data>
  <data name="DropboxCorrectFileName" xml:space="preserve">
    <value>Please specify a correct dropbox file name</value>
  </data>
  <data name="DropBoxDestinationFileAlreadyExist" xml:space="preserve">
    <value>Destination File already exists and overwrite is set to false</value>
  </data>
  <data name="DropBoxFilePathMissing" xml:space="preserve">
    <value>Please specify the path of file in Dropbox</value>
  </data>
  <data name="DropBoxPathContainsColon" xml:space="preserve">
    <value>Path contains a colon (\":\") that is not part of a volume identifier (for example, \"c:\")</value>
  </data>
  <data name="DropBoxSpecifiedPathExceedMaxLength" xml:space="preserve">
    <value>The specified path, file name, or both exceed the system-defined maximum length</value>
  </data>
  <data name="EmptyScript" xml:space="preserve">
    <value>Empty script to execute</value>
  </data>
  <data name="EnsureValueIsInteger" xml:space="preserve">
    <value>Please ensure that the {0} is an integer value.</value>
  </data>
  <data name="ExpectedLambdaExpresion" xml:space="preserve">
    <value>Value must be a lamda expression</value>
  </data>
  <data name="ExpressionMustBeCommaSeperated" xml:space="preserve">
    <value>Problem with input: expressions must be comma separated</value>
  </data>
  <data name="ForEachWithNoContentError" xml:space="preserve">
    <value>Can not execute a For Each with no content</value>
  </data>
  <data name="FROMAddressInvalidFormat" xml:space="preserve">
    <value>FROM address is not in the valid format: {0}</value>
  </data>
  <data name="FROMAndTORequired" xml:space="preserve">
    <value>From and to Must be populated</value>
  </data>
  <data name="HeadersAreNull" xml:space="preserve">
    <value>Headers Are Null</value>
  </data>
  <data name="IntegerOrDecimaExpectedForEnd" xml:space="preserve">
    <value>Please ensure that you have entered an integer or decimal number for End</value>
  </data>
  <data name="IntegerOrDecimaExpectedForStart" xml:space="preserve">
    <value>Please ensure that you have entered an integer or decimal number for Start</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid {0}</value>
  </data>
  <data name="InvalidActivity" xml:space="preserve">
    <value>Invalid activity</value>
  </data>
  <data name="InvalidCalculate" xml:space="preserve">
    <value>Invalid Calculate</value>
  </data>
  <data name="InvalidEmailSource" xml:space="preserve">
    <value>Invalid Email Source</value>
  </data>
  <data name="InvalidRecordset" xml:space="preserve">
    <value>Invalid recordset:</value>
  </data>
  <data name="InvalidResultTypeFromWarewolfStorage" xml:space="preserve">
    <value>Invalid result type was encountered from warewolfstorage</value>
  </data>
  <data name="InvalidSortField" xml:space="preserve">
    <value>Sort field is invalid. You may only sort on a single RecordSet columns</value>
  </data>
  <data name="InvalidTimeOutSecondsText" xml:space="preserve">
    <value>Value {0} for TimeoutSecondsText could not be interpreted as a numeric value.</value>
  </data>
  <data name="IsBetweenDataTypeMismatch" xml:space="preserve">
    <value>IsBetween Numeric and DateTime mis-match</value>
  </data>
  <data name="IsBlank" xml:space="preserve">
    <value>{0} is blank</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>{0} is Required</value>
  </data>
  <data name="LocalInputPathEmpty" xml:space="preserve">
    <value>Local input path is not set</value>
  </data>
  <data name="MultipleVariablesInResultField" xml:space="preserve">
    <value>Multiple variables in result field.</value>
  </data>
  <data name="MustHaveBody" xml:space="preserve">
    <value>Must have body</value>
  </data>
  <data name="NoActionsInSelectedDB" xml:space="preserve">
    <value>The selected database does not contain actions to perform</value>
  </data>
  <data name="NoMethodSelected" xml:space="preserve">
    <value>No Method Selected</value>
  </data>
  <data name="NoNamespaceSelected" xml:space="preserve">
    <value>No Namespace Selected.</value>
  </data>
  <data name="NoOutPuts" xml:space="preserve">
    <value>There are no outputs</value>
  </data>
  <data name="NoProcessFound" xml:space="preserve">
    <value>No process found matching the search criteria</value>
  </data>
  <data name="NoRecordSet" xml:space="preserve">
    <value>No recordset given</value>
  </data>
  <data name="NoWebResponse" xml:space="preserve">
    <value>No Web Response received</value>
  </data>
  <data name="NullESBChannel" xml:space="preserve">
    <value>FATAL ERROR : Null ESB channel!!</value>
  </data>
  <data name="NullRecordSet" xml:space="preserve">
    <value>Recordset is null {0}</value>
  </data>
  <data name="NullScalarValue" xml:space="preserve">
    <value>Scalar value {{{0}}} is NULL</value>
  </data>
  <data name="OneVariableAccepted" xml:space="preserve">
    <value>Can only accept one variable</value>
  </data>
  <data name="OnlyScalarRecordsetCommaSeperated" xml:space="preserve">
    <value>Can only have a scalar, a RecordSet or a RecordSet with column qualification as input</value>
  </data>
  <data name="PADDINGMustBeSingleCharecter" xml:space="preserve">
    <value>'Padding' must be a single character</value>
  </data>
  <data name="PositiveIntegerRequired" xml:space="preserve">
    <value>Please enter a positive integer for the {0}</value>
  </data>
  <data name="ProblemsWithIterators" xml:space="preserve">
    <value>Problems with Iterators for: {0}</value>
  </data>
  <data name="QueryIsNull" xml:space="preserve">
    <value>Query is Null</value>
  </data>
  <data name="RabbitQueueNameAndMessageRequired" xml:space="preserve">
    <value>Failure: Queue Name and Message are required.</value>
  </data>
  <data name="RabbitQueueNameRequired" xml:space="preserve">
    <value>Failure: Queue Name is required.</value>
  </data>
  <data name="RabbitQueueNotFound" xml:space="preserve">
    <value>Queue {0} not found</value>
  </data>
  <data name="RabbitSourceHasBeenDeleted" xml:space="preserve">
    <value>Failure: Source has been deleted.</value>
  </data>
  <data name="RangeFromOne" xml:space="preserve">
    <value>{0} must be a whole number from 1 onwards.</value>
  </data>
  <data name="RequiredRecordSetName" xml:space="preserve">
    <value>Value must be a recordset name</value>
  </data>
  <data name="RequiredRecordSetNameONLY" xml:space="preserve">
    <value>Must only be a recordset name</value>
  </data>
  <data name="RequiredVaraibleNameONLY" xml:space="preserve">
    <value>Please insert only variables into Fields To Search</value>
  </data>
  <data name="RoundingNotValid" xml:space="preserve">
    <value>Rounding decimal places is not valid</value>
  </data>
  <data name="SameParentAndChildDataListId" xml:space="preserve">
    <value>Parent and Child DataList IDs are the same, aborting resumption!</value>
  </data>
  <data name="ScalarsNotAllowed" xml:space="preserve">
    <value>Scalars are not allowed. Please check the following:</value>
  </data>
  <data name="ScriptingErrorReturningValue" xml:space="preserve">
    <value>There was an error when returning a value from your script, remember to use the 'Return' keyword when returning the result</value>
  </data>
  <data name="ServerInputPathEmpty" xml:space="preserve">
    <value>Server input path {0} is not set</value>
  </data>
  <data name="InvalidSource" xml:space="preserve">
    <value>Please select valid source</value>
  </data>
  <data name="StarNotationNotAllowed" xml:space="preserve">
    <value>The Star notation is not accepted in the {0}.</value>
  </data>
  <data name="SupplyDestinationName" xml:space="preserve">
    <value>Must supply a Destination Name</value>
  </data>
  <data name="SupplySourceName" xml:space="preserve">
    <value>Must supply a Source Name</value>
  </data>
  <data name="TimeMustBeNumeric" xml:space="preserve">
    <value>Add Time amount must be numeric</value>
  </data>
  <data name="ToAddressInvalidFormat" xml:space="preserve">
    <value>TO address is not in the valid format: {0}</value>
  </data>
  <data name="UnableToParseSourceName" xml:space="preserve">
    <value>Unable to parse the Source Name</value>
  </data>
  <data name="UserInputRequired" xml:space="preserve">
    <value>The process required user input.</value>
  </data>
  <data name="USINGMustBeARealNumber" xml:space="preserve">
    <value>The 'Using' value must be a real number.</value>
  </data>
  <data name="ValueTimeOutOutOfRange" xml:space="preserve">
    <value>Value of TimeoutSecondsText out of range: please specify a value between 0 and {0}.</value>
  </data>
  <data name="VariableInputError" xml:space="preserve">
    <value>Error with variables in input.</value>
  </data>
  <data name="WebRequestError" xml:space="preserve">
    <value>Error getting web request</value>
  </data>
  <data name="BrokerConversionInvalid" xml:space="preserve">
    <value>Base Conversion Broker was expecting [{0}] but the data was not in this format</value>
  </data>
  <data name="CannotDeleteSystemFiles" xml:space="preserve">
    <value>Not allowed to delete system files/directories. {0}</value>
  </data>
  <data name="ChannelDisposing" xml:space="preserve">
    <value>Channel is disposing.</value>
  </data>
  <data name="CharEnumeratorNotSupported" xml:space="preserve">
    <value>CharEnumerator is not supported for this operation type!</value>
  </data>
  <data name="CouldntCreateMapper" xml:space="preserve">
    <value>Couldn't create a mapper for '{0}'.</value>
  </data>
  <data name="CouldntCreateNavigator" xml:space="preserve">
    <value>Couldn't create a navigator for the path '", path.ToString(), "</value>
  </data>
  <data name="DataTypeMismatch" xml:space="preserve">
    <value>Data of type '{0}' expected, data of type '{1}' received.</value>
  </data>
  <data name="DependencyInormationMalformed" xml:space="preserve">
    <value>Dependency information is malformed</value>
  </data>
  <data name="DependencyMissing" xml:space="preserve">
    <value>Dependency information could not be retrieved</value>
  </data>
  <data name="ExpectedEnumerationTypeParameter" xml:space="preserve">
    <value>Generic parameter T must be an enumeration type.</value>
  </data>
  <data name="FailedToAuthenticateUser" xml:space="preserve">
    <value>Failed to authenticate with user [ {0} ] for resource [ {1} ] </value>
  </data>
  <data name="InvalidLength" xml:space="preserve">
    <value>Length must be greater than or equal to zero if the type is Letters or LettersAndNumbers</value>
  </data>
  <data name="InvalidTimeOut" xml:space="preserve">
    <value>Invalid time out. The timeout must be a valid variable or positive integer number.</value>
  </data>
  <data name="LocalPathRequired" xml:space="preserve">
    <value>Please enter local path</value>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>The method or operation is not implemented.</value>
  </data>
  <data name="NoPermissionToExecuteTool" xml:space="preserve">
    <value>You do not have permissions to View or Execute this resource.</value>
  </data>
  <data name="NothingToSplit" xml:space="preserve">
    <value>Cant find anything to split on!</value>
  </data>
  <data name="NullTokenzeString" xml:space="preserve">
    <value>Null or empty tokenize string!</value>
  </data>
  <data name="NumberOfResultsMismatch" xml:space="preserve">
    <value>The number of results for the paths representing the {0}  expression didnt match.</value>
  </data>
  <data name="OpeningClosingBracketMismatch" xml:space="preserve">
    <value>Invalid expression: opening and closing brackets don't match.</value>
  </data>
  <data name="OutputDecriptionInvalid" xml:space="preserve">
    <value>Invalid output description {0}.</value>
  </data>
  <data name="PathMismatch" xml:space="preserve">
    <value>Path of type '{0}' expected, path of type '{1}' received.</value>
  </data>
  <data name="PropertyMusHaveAValue" xml:space="preserve">
    <value>{0} must have a value</value>
  </data>
  <data name="ServerSourceNotFound" xml:space="preserve">
    <value>Server source not found. This service will not execute.</value>
  </data>
  <data name="ServerVersionsIncompatiable" xml:space="preserve">
    <value>Server version {0} is incompatiable with version {1}</value>
  </data>
  <data name="SharepointServerPathRequired" xml:space="preserve">
    <value>Please enter SharePoint Server path From</value>
  </data>
  <data name="SharepointServerPathToRequired" xml:space="preserve">
    <value>Please enter SharePoint Server path To</value>
  </data>
  <data name="SharepointServerRequired" xml:space="preserve">
    <value>Please Select a SharePoint Server</value>
  </data>
  <data name="SourceDirectoryDoesNotExist" xml:space="preserve">
    <value>Source directory does not exist or could not be found: {0}</value>
  </data>
  <data name="ToAddressRequired" xml:space="preserve">
    <value>Please supply a To address in order to Test.</value>
  </data>
  <data name="ValidateBeforeMinimising" xml:space="preserve">
    <value>{0} must be validated before minimising</value>
  </data>
  <data name="VariableListStringRequired" xml:space="preserve">
    <value>Variable List String can not be blank/empty</value>
  </data>
  <data name="AssemblyCreationError" xml:space="preserve">
    <value>Compilation Error Creating Assembly</value>
  </data>
  <data name="ConvertBackNotSupported" xml:space="preserve">
    <value>ConvertBack not supported.</value>
  </data>
  <data name="ConvertersCollectionContainsNull" xml:space="preserve">
    <value>The Converters collection of the ValueConverterGroup contains a null reference at index: {0}</value>
  </data>
  <data name="ElementBeingDraggedIsNull" xml:space="preserve">
    <value>ElementBeingDragged is null.</value>
  </data>
  <data name="GridsplitterOnlyWorksInGrids" xml:space="preserve">
    <value>Gridsplitter only works in grid</value>
  </data>
  <data name="MathConverterAcceptsDoubles" xml:space="preserve">
    <value>Converter only accepts doubles</value>
  </data>
  <data name="RegexValidationRuleShouldHaveOneRule" xml:space="preserve">
    <value>There should not be more than one RegexValidationRule in a Bindings ValidationRules</value>
  </data>
  <data name="RegexValidatorUsedWithTexyBoxs" xml:space="preserve">
    <value>The RegexValidator can only be used with a TextBox.</value>
  </data>
  <data name="TargetobjectMustBeUIElement" xml:space="preserve">
    <value>Target object must be a UIElement.</value>
  </data>
  <data name="TexBoxMustBeBoundForRegexValidation" xml:space="preserve">
    <value>The TextBox's Text property must be bound for the RegexValidator to validate it.</value>
  </data>
  <data name="TextBoxTextBindingHasNoParent" xml:space="preserve">
    <value>Unexpected situation: the TextBox.Text binding expression has no parent binding.</value>
  </data>
  <data name="ValueMustBeAnEnum" xml:space="preserve">
    <value>VALUE must be an enum.</value>
  </data>
  <data name="WebServiceDescriptionInvalid" xml:space="preserve">
    <value>Invalid Web Service Description</value>
  </data>
  <data name="WebServiceNotFound" xml:space="preserve">
    <value>Web Service Not Found</value>
  </data>
</root>