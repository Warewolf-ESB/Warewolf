//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warewolf.Resource.Messages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Warewolf.Resource.Messages.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Choose failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_Choose {
            get {
                return ResourceManager.GetString("Test_FailureMessage_Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Equal failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_Equals {
            get {
                return ResourceManager.GetString("Test_FailureMessage_Equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Alphanumeric failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsAlphanumeric {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsAlphanumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Base64 failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsBase64 {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsBase64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Between failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsBetween {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Binary failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsBinary {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Contains failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsContains {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsContains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Date failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsDate {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Email failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsEmail {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Ends With failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsEndsWith {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsEndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Error failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsError {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Greater Than failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsGreaterThan {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Greater Than Or Equal failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsGreaterThanOrEqual {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsGreaterThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Hex failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsHex {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Less Than failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsLessThan {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Less Than Or Equal failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsLessThanOrEqual {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsLessThanOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Alphanumeric failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotAlphanumeric {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotAlphanumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Base64 failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotBase64 {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotBase64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Binary failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotBinary {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Date failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotDate {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Email failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotEmail {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Equal failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotEqual {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Error failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotError {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Hex failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotHex {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Null failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotNull {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Numeric failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotNumeric {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not Text failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotText {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Not XML failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNotXML {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNotXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Null failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNull {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Numeric failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsNumeric {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsNumeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Reg Ex failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsRegEx {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Starts With failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsStartsWith {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsStartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is Text failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsText {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Is XML failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_IsXML {
            get {
                return ResourceManager.GetString("Test_FailureMessage_IsXML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Not Between failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_NotBetween {
            get {
                return ResourceManager.GetString("Test_FailureMessage_NotBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Not Contain failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_NotContain {
            get {
                return ResourceManager.GetString("Test_FailureMessage_NotContain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Not Ends With failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_NotEndsWith {
            get {
                return ResourceManager.GetString("Test_FailureMessage_NotEndsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Not Reg Ex failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_NotRegEx {
            get {
                return ResourceManager.GetString("Test_FailureMessage_NotRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assert Not Starts With failed. Expected &quot;{0}&quot; for &apos;{1}&apos; but got &quot;{2}&quot;.
        /// </summary>
        public static string Test_FailureMessage_NotStartsWith {
            get {
                return ResourceManager.GetString("Test_FailureMessage_NotStartsWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        public static string Test_FailureResult {
            get {
                return ResourceManager.GetString("Test_FailureResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid.
        /// </summary>
        public static string Test_InvalidResult {
            get {
                return ResourceManager.GetString("Test_InvalidResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passed.
        /// </summary>
        public static string Test_PassedResult {
            get {
                return ResourceManager.GetString("Test_PassedResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pending.
        /// </summary>
        public static string Test_PendingResult {
            get {
                return ResourceManager.GetString("Test_PendingResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResourceDelete.
        /// </summary>
        public static string Test_ResourceDeleteResult {
            get {
                return ResourceManager.GetString("Test_ResourceDeleteResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResourcpathUpdated.
        /// </summary>
        public static string Test_ResourcpathUpdatedResult {
            get {
                return ResourceManager.GetString("Test_ResourcpathUpdatedResult", resourceCulture);
            }
        }
    }
}
