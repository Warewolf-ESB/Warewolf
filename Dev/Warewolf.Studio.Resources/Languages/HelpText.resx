<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssignHelpNewValue" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To assign a value to a variable, put the value in here.	If you put an = as the first character, it will turn into a calculation e.g. =[[qty]]*[[price]]	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;	= fx</value>
  </data>
  <data name="AssignHelpVariable" xml:space="preserve">
    <value>Only variables go in here.	To assign a value to a variable, put the variable here.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="AssignObjectHelpNewValue" xml:space="preserve">
    <value>Any object and/or data goes in here.	To assign a value to a object, put the value in here.	If you put an = as the first character, it will turn into a calculation e.g. =[[qty]]*[[price]]	&lt;br /&gt;	Allowed: &lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;li&gt;[[@Object(*).Field]]&lt;/li&gt;	&lt;li&gt;[[@Object().Field]]&lt;/li&gt;	&lt;li&gt;[[@Object.InnerCollection().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="AssignObjectHelpVariable" xml:space="preserve">
    <value>Only objects go in here.	To assign a value to an object, put the object path in here.	&lt;br /&gt;	Allowed: &lt;br /&gt;	[[@Object.Property]]&lt;br /&gt;	[[@Object.Object(n).Property]]</value>
  </data>
  <data name="BaseConversionHelpBaseInput" xml:space="preserve">
    <value>Any variable and data goes in here.	To convert Text, Hex, Binary and Base64, put the data to be converted in here.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="BaseConversionHelpFromType" xml:space="preserve">
    <value>Select the type of data you are converting from.	e.g. If the data is Binary and you would like Text, then select Binary here.	Allowed:	na</value>
  </data>
  <data name="BaseConversionHelpToType" xml:space="preserve">
    <value>Select the type of data you are converting to.	e.g. If the data is Binary and you would like Text, then select Text here.	Allowed:	na</value>
  </data>
  <data name="CalculateForAggregatesHelpFx" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To perform a calculation, put the calculation in here in BODMAS format.	To use the aggregate functions, use the recordset (*) notation e.g. SUM([[Staff(*).Salaries]]) will perform one calculation and give one result that is the total of all the Salaries fields in the Staff() recordset.	Aggregate functions are:	&lt;table&gt;	&lt;tr&gt;	&lt;td&gt;sum()&lt;/td&gt;	&lt;td&gt;average()&lt;/td&gt;	&lt;td&gt;product()&lt;/td&gt;	&lt;td&gt;count()&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;	&lt;td&gt;max()&lt;/td&gt;	&lt;td&gt;median()&lt;/td&gt;	&lt;td&gt;min()&lt;/td&gt;	&lt;td&gt;var()&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;	&lt;td&gt;stdev()&lt;/td&gt;	&lt;td&gt;concatenate()&lt;/td&gt;	&lt;td&gt;choose()&lt;/td&gt;	&lt;td&gt;irr()&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;	&lt;td&gt;counta()&lt;/td&gt;	&lt;td&gt;subtotal()&lt;/td&gt;	&lt;td&gt;avedev()&lt;/td&gt;	&lt;td&gt;and()&lt;/td&gt;	&lt;/tr&gt;	&lt;tr&gt;	&lt;td&gt;or()&lt;/td&gt;	&lt;td&gt;isnull()&lt;/td&gt;	&lt;td&gt;istext()&lt;/td&gt;	&lt;td&gt;npv()&lt;/td&gt;	&lt;/tr&gt;	&lt;/table&gt;   </value>
  </data>
  <data name="CalculateForAggregatesHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the formatted number.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CalculateHelpFx" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To perform a calculation, put the calculation in here in BODMAS format.	Using (*) notation for recordsets, will perform the calculation and give a result, for each record.	To use aggregate functions on the whole recordset e.g. to Sum all the [[Product(*).Price]] fields in a recordset, use the Aggregate Calculate tool.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;abs&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the absolute value of a number. The absolute value of a number is the number without its sign.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;acos&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the arccosine, or inverse cosine, of a number. The arccosine is the angle whose cosine is specified number. The returned angle is given in radians in the range zero to pi. To convert the result from radians to degrees, multiply by 180/PI().&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;acosh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the inverse hyperbolic cosine of the given number. The inverse hyperbolic cosine is the angle whose hyperbolic cosine is specified number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;and&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if all values are true or returns false if one or more values are false.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;asin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the arcsine, or inverse sine, of a number. The arcsine is the angle whose sine is the specified number. The returned angle is given in radians in the range -pi/2 to pi/2. To express the arcsine in degrees, multiply the result by 180/PI().&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;asinh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the inverse hyperbolic sine of the given number. The inverse hyperbolic sine is the angle whose hyperbolic sine is specified number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;atan&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the arctangent, or inverse tangent, of a number. The arctangent is the angle whose tangent is the specified number. The returned angle is given in radians in the range -pi/2 to pi/2. To express the arctangent in degrees, multiply the result by 180/PI().&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;atan2&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the arctangent, or inverse tangent, of the specified x and y-coordinates. The arctangent is the angle from the x-axis to a line containing the origin (0, 0) and a point with coordinates (x_num, y_num). The angle is given in radians between -pi and pi, excluding -pi.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;atanh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the inverse hyperbolic tangent of the given number. The inverse hyperbolic tangent is the angle whose hyperbolic tangent is specified number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;avedev&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the average deviation from the average of all numeric values.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;average&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the average (arithmetic mean) of one or more values.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;bin2dec&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the decimal value of a text representation of a number in the binary number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;bin2hex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing a binary number to a text expression representing the same number in the hexadecimal number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;bin2oct&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing a binary number to a text expression representing the same number in the octal number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ceiling&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the smallest multiple of the significance (defaults to 1) greater than or equal to the specified number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;char&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the character specified by the code number from the character set for your computer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;choose&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns one of the values provided in its arguments based on the number in the first argument.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;code&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a numeric code for the first character in a text expression using the character set used by your computer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;combin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the number of possible combinations given a set of items and a number of chosen items from that set.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;complex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a complex number represented as a text expression in the format "x + yi" or "x + yj" by combining a real and imaginary number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;concatenate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Joins all the arguments into one text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;convert&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a value from one system of measurement to another, such as meters to inches or hours to seconds.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;cos&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the cosine of the given angle.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;cosh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the hyperbolic cosine of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;count&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Counts the number of references that contain numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;counta&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Counts the number of references that are not blank.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;date&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sequential serial number that represents a particular date.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dateadd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a date to which the specified interval has been added.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;datediff&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a value indicating the number of intervals between two DateTime values.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;datevalue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the date value of the specified date text.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;day&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the day of month of a date value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;days360&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the number of days between two dates based on a 360-day year.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;db&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the depreciation of an asset for a specified period using the fixed-declining balance method.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dbnull&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns something that represents a non-existent value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ddb&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the depreciation of an asset for a specified period using the double-declining balance method or some other method specified.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dec2bin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a text expression representing the specified decimal value as a binary number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dec2hex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a text expression representing the specified decimal value as a hexadecimal number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dec2oct&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a text expression representing the specified decimal value as an octal number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;degrees&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts radians to degrees.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;delta&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Compares two numbers and returns one if they are equal or zero if they are not.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dollarde&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a dollar amount expressed as a fraction into a dollar amount expressed as a decimal.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dollarfr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a dollar amount expressed as a decimal into a dollar amount expressed as a fraction.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;edate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a date that is the specified number of months before or after the start date.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;eomonth&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a date that is at the end of the month which is the specified number of months before or after the start date.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;errortype&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a number corresponding to an error value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;even&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a positive number up and a negative number down to nearest even integer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;exp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns e raised to the power of the specified number. The constant e equals 2.71828182845904.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;fact&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the factorial of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;factdouble&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the double factorial of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;find&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the starting position of one text expression within another, case sensitively.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;fixed&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a number to the specified number of decimals and returns the result as text with or without commas.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;floor&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the largest multiple of the significance (defaults to 1) less than or equal to the given number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;fv&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the future value of an investment based on periodic.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;gcd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the greatest common divisor of one or more integer values.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;gestep&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Compares two numbers and returns one if the first number is greater than or equal to the second or returns zero if not.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;hex2bin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing a hexadecimal number to a text expression representing the same number in the binary number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;hex2dec&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the decimal value of a text representation of a number in the hexadecimal number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;hex2oct&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing a hexadecimal number to a text expression representing the same number in the octal number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;hour&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the hour of a time value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;if&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns one value if the specified condition evaluates to true and another value if it evaluates to false.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;iferror&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns one of two values depending on whether or not the first value is an error or not.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imabs&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the absolute value of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imaginary&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the imaginary coefficient of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imargument&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the argument theta, an angle expressed in radians.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imconjugate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the conjugate of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imcos&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the cosine of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imdiv&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the quotient of two complex numbers (Dividend / Divisor).&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imexp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the exponential of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imln&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the natural logarithm of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imlog10&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the base-10 logarithm of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imlog2&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the base-2 logarithm of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;impower&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the complex number raised to the specified power.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;improduct&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the product of one or more complex numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imreal&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the real coefficient of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imsin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sine of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imsqrt&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the square root of a complex number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imsub&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the difference between two complex numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;imsum&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sum of one or more complex numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;info&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns information about the current operating environment.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;int&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a number down to the nearest integer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;intrate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the interest rate for a fully invested security.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ipmt&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the interest payment for a given period for an investment, based on periodic, constant payments and a constant interest rate.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;irr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the internal rate of return for a series of cash flows.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isblank&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is blank.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isdbnull&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value represents a non-existent value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;iserr&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is any error value except #N/A.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;iserror&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is any error value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;iseven&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is an even number, else returns false.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;islogical&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is a logical value (true or false).&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isna&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is the #N/A (value not available) error value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isnontext&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is any item that is not text.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isnull&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is non-existent.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isnumber&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isodd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is an odd number, else returns false.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;isref&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is a reference.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;istext&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if the value is a text value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;lcm&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the least common multiple of one or more integer values.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;left&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the first character or characters in a text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;len&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the number of characters in a text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ln&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the natural logarithm of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;log&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the logarithm of a number to the base specified.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;log10&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the base-10 logarithm of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;lower&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts all uppercase letters in a text expression to lowercase.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;max&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the largest number in a set of numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;median&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the median of a set of numbers. The median is the middle number when the numbers are sorted or the average of the two middle numbers if there are an even number of specified numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;mid&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a specific number of characters from a text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;min&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the smallest number in a set of numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;minute&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the minute of a time value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;mod&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the remainder after a number is divided by a divisor. The result has the same sign as the divisor.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;month&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the month of a date value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;mround&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a number to the nearest multiple of another number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;multinomial&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the multinomial of a set of numbers. The multinomial is the ratio of the factorial of a sum of values to the product of their factorials.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;n&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a value to a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;na&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the #N/A (value not available) error value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;networkdays&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the total number of whole work days between the specified dates, excluding any specified holidays.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;not&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Reverses a logical value (changes true to false and false to true).&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;now&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a value representing the current date and time.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;nper&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;npv&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive value).&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;null&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a non-existent value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;oct2bin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing an octal number to a text expression representing the same number in the binary number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;oct2dec&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the decimal value of a text representation of a number in the octal number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;oct2hex&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing an octal number to a text expression representing the same number in the hexadecimal number system.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;odd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a positive number up and a negative number down to the nearest odd integer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;or&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns true if one or more values are true; returns false if all values are false.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;pi&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the constant pi, which is 3.14159265358979.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;pmt&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Calculates the payment for a loan based on constant payments and a constant interest rate.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;power&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the result of a number raised to a power.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ppmt&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;product&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Multiplies all the numbers given as arguments and returns the product.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;pv&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the present value of an investment.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;quotient&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the integer portion of a division. This will discard the remainder of the division.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;radians&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts degrees to radians.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;rand&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns an evenly distributed random number greater than or equal to 0 and less than 1&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;randbetween&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Generates a pseudorandom integer between two specified numbers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;rate&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the interest rate per period of an annuity.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;replace&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Replaces part of a text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;rept&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Repeats text a specific number of times.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;right&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the last character or characters in a text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;roman&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a number into a roman number as a text expression.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;round&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a number to a specified number of digits.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;rounddown&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a number to down to the specified number of digits.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;roundup&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Rounds a number to up to the specified number of digits.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;search&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the 1-based index of one string within another, searching case insensitively.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;searchb&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the 1-based index of one string within another, searching case insensitively.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;second&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the second of a time value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;seriessum&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sum of a power series.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sign&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sign of a number (-1, 0, or 1).&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sin&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sine of the specified angle.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sinh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the hyperbolic sine of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sln&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the straight-line depreciation of an asset for one period.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sqrt&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a positive square root of a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sqrtpi&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Multiplies the specified number by pi and returns the square root of the result.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;stdev&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the standard deviation of a population sample.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;subtotal&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Calculates the subtotal in one of more references.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sum&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Sums all the numbers given as arguments and returns the sum.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;syd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the sum-of-years' digits depreciation of an asset for a specified period.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;tan&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the tangent of the specified angle.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;tanh&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the hyperbolic tangent of the specified angle.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;text&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts the value to text based on the specified format.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;time&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a number that represents a particular time value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;timevalue&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression representing a time to its equivalent time value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;today&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the current date.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;trim&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Removes all spaces from text except for single spaces between words.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;trunc&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Truncates a number to an integer by removing the fractional part of the number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;type&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a number representing the type of value: number = 1; text = 2; logical value (true or false) = 4; error value = 16; array = 64.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;upper&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts all lowercase letters in a text expression to uppercase.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;value&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Converts a text expression that represents a number to a number.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;var&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the variance of a population sample.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;weekday&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a number representing the day of the week of the specified date.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;weeknum&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the number of the week into which the specified date falls.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;workday&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns a work day the specified number of days from the specified date, excluding any specified holidays.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;year&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the year of a date value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;FALSE&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the logical value false.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;TRUE&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Returns the logical value true.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="CalculateHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the formatted number.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CaseConversionHelpConvertToCaseType" xml:space="preserve">
    <value>Select the type of conversion you would like to make.</value>
  </data>
  <data name="CaseConversionHelpTextInput" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To convert the case of some text, put the variable containing the text here.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ChooseAttachmentsHelp" xml:space="preserve">
    <value>File picker to help you locate the location of the items you want to attach</value>
  </data>
  <data name="CMDLineHelpCMD" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To execute a command line action or actions, enter them in here. Acts like a batch file. Any user driven task will simply be ignored.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CMDLineHelpPrioritytype" xml:space="preserve">
    <value>The process priority for execution. Very helpful for long running processes that need/don’t need to be resource intensive.	Allowed:	na</value>
  </data>
  <data name="CMDLineHelpResult" xml:space="preserve">
    <value>Returns the output of the execution if any. Varies depending on what was executed.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CommentHelpComment" xml:space="preserve">
    <value>Comments do not execute and are place holders for future services or tools or simply to leave commentary inside the workflow.	You can connect comments into the process flow and they will simply be skipped during execution. However, they will appear in the debug output.	Allowed:	Notes and comments will not be executed at run time but will show up in the debug output.</value>
  </data>
  <data name="ComPluginServiceEditSourceHelp" xml:space="preserve">
    <value>Edits the selected COM plugin source connection.</value>
  </data>
  <data name="ComPluginServiceNewSourceHelp" xml:space="preserve">
    <value>To create a reference to a new COM object, click New.</value>
  </data>
  <data name="ComPluginServiceSourcesHelp" xml:space="preserve">
    <value>Select the COM DLL you want to use from previously setup sources.</value>
  </data>
  <data name="ComPluginSourceClearSearchHelp" xml:space="preserve">
    <value>Clears the Search Filter</value>
  </data>
  <data name="ComPluginSourceDllFullNameHelp" xml:space="preserve">
    <value>PROGrammatic IDentifier of the COM DLL</value>
  </data>
  <data name="ComPluginSourceRefreshCommandHelp" xml:space="preserve">
    <value>Refresh the view based on the filter.&lt;br/&gt;	&lt;br/&gt;	Newly added resources should show after a refresh.</value>
  </data>
  <data name="ConnectControlViewEditHelp" xml:space="preserve">
    <value>Change the connection properties of the selected Warewolf Server.&lt;br&gt;	&lt;br/&gt;	Allows you to change remote server URL, Port and Authentication.&lt;br&gt;	&lt;br/&gt;	&lt;b&gt;localhost&lt;/b&gt; cannot be edited in this way.</value>
  </data>
  <data name="ConnectControlViewSelectHelp" xml:space="preserve">
    <value>Select the Warewolf Server from the drop down list that you want to use. &lt;br/&gt;	&lt;br/&gt;	If you want to connect to a Warewolf Server that is not in the drop down list, then select  &lt;b&gt;New Remote Server…&lt;/b&gt;&lt;br/&gt;	&lt;br/&gt;	Servers with an active connection will show &lt;b&gt;(Connected)&lt;/b&gt; next to them.</value>
  </data>
  <data name="ConnectControlViewToggleConnectionHelp" xml:space="preserve">
    <value>Disconnects or Connects to the selected remote Warewolf Server. &lt;br/&gt;	&lt;br/&gt;	Connected Servers will be Disconnected and vice versa. &lt;br/&gt;	&lt;br/&gt;	&lt;b&gt;localhost&lt;/b&gt; cannot be disconnected and should always be connected. If it is not connected, try restarting the Warewolf Server service in Task Manager.</value>
  </data>
  <data name="CopyHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put the full path of the destination you are copying to here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CopyHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To copy a file or folder, put the full path and file or folder name here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CopyHelpForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.	Allowed:	If it exists already, force an overwrite</value>
  </data>
  <data name="CopyHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CopyHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Copy action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CopyHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CountHelpRecordset" xml:space="preserve">
    <value>To Count the number of records/indexes in a recordset, put the recordset name in here. E.g. [[Customer()]]	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset()]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CountHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns a number specifying how many records/indexes are in the recordset.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset() will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To create a file or folder, put the full path and file or folder name here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateHelpForceOverWrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.	Allowed:	If it exists already, force an overwrite</value>
  </data>
  <data name="CreateHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Create action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateJSONHelpInput" xml:space="preserve">
    <value>To create JSON data, enter the Name and Data of the JSON variables. 	To create JSON Arrays use a single recordset field with a star for every record e.g. 	[[rec(*).name]] 	To create JSON Objects, use a comma separated list of recordset fields, or, just the recordset name to use the whole recordset. e.g. 	[[rec(*).surname]], [[rec(*).name]], [[rec(*).middle]] 	or simply 	[[rec(*)]]	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateJSONHelpName" xml:space="preserve">
    <value>The JSON variable name will default to the Warewolf variable name in the Data column. 	Array and Object names will default to the recordset name used. 	Object data names will be the field names of the recordset.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="CreateJSONHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the inputs in JSON format.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DatabaseServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected Database.&lt;br&gt;	&lt;br/&gt;	Change the connection string from, say, a development database to a live database.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DatabaseServiceNewSourceHelp" xml:space="preserve">
    <value>Create a connection to a new database server.</value>
  </data>
  <data name="DatabaseServiceRefreshHelp" xml:space="preserve">
    <value>Refreshes the list of available actions on the database.</value>
  </data>
  <data name="DatabaseServiceSelectActionHelp" xml:space="preserve">
    <value>The available database actions you can perform such as stored procedures or function calls.</value>
  </data>
  <data name="DatabaseServiceSourceTypesHelp" xml:space="preserve">
    <value>The available database connections. To create a new connection, click New.</value>
  </data>
  <data name="DatabaseSourceCancelHelp" xml:space="preserve">
    <value>Cancels the setup of this database source.</value>
  </data>
  <data name="DatabaseSourceDatabasesHelp" xml:space="preserve">
    <value>The available databases on the Server.</value>
  </data>
  <data name="DatabaseSourceServerHelp" xml:space="preserve">
    <value>The Server/Computer Name on your network with the Database Engine.&lt;br/&gt;	&lt;br/&gt;	Alternatively, the URL for your online Server, such as Azure SQL.</value>
  </data>
  <data name="DatabaseSourceServerTypesHelp" xml:space="preserve">
    <value>These are the currently supported database engines.</value>
  </data>
  <data name="DatabaseSourceTestConnectionHelp" xml:space="preserve">
    <value>Test the connection to the Database. </value>
  </data>
  <data name="DataListDeleteButtonHelp" xml:space="preserve">
    <value>When the variable is not used in the service at all, you can select Marks the variable as an input to the service. To pass this variable into the workflow, make this checkbox selected.&lt;br/&gt;	&lt;br/&gt;	This variable is not being used in the service and can safely be deleted.</value>
  </data>
  <data name="DataListInputCheckBoxHelp" xml:space="preserve">
    <value>Marks the variable as an input to the service. To pass this variable into the workflow, make this checkbox selected.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/the-variable-list/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DataListOutputCheckBoxHelp" xml:space="preserve">
    <value>Marks the variable as an output of the service. To return this variable from the workflow service, make this checkbox selected.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/warewolf-language/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DataListSortButtonHelp" xml:space="preserve">
    <value>Sort the variable list alphabetically.</value>
  </data>
  <data name="DataListVariableInputHelp" xml:space="preserve">
    <value>Input the variable you want to use in your service.&lt;br/&gt;	&lt;br/&gt;	If you use a variable on the design surface it will automatically appear here.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/the-variable-list/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DataMergeHelpAlignType" xml:space="preserve">
    <value>For Index you can specify if your data is aligned to the right or left.	E.g. Text is normally left and numbers normally right.	Allowed:	na</value>
  </data>
  <data name="DataMergeHelpInput" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To join two or more pieces of data together list them in the order you would like them joined. If you use recordset (*) notation, the list will be repeated for every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataMergeHelpPadding" xml:space="preserve">
    <value>If Index is being used and there is extra space between the data supplied and the number of index characters, you can specify what makes up the padding e.g. 0 for numbers or blank space for text.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataMergeHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the merged string.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataMergeHelpUsing" xml:space="preserve">
    <value>For Index use the number of characters that this merge will use. It will either trim if too little, or pad if too much.	For Char put any characters or combination of characters you would like.	Not applicable to New Line or Tab	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataMergeHelpWithType" xml:space="preserve">
    <value>Select the type of merge you would like between each piece of merged data, if any.</value>
  </data>
  <data name="DataSplitHelpEscape" xml:space="preserve">
    <value>If there is an occurrence or an item being split on, that should not be split on, it will be preceded with this character. e.g., a comma separated file might have a comma in a name, so don’t split on it if it is preceded by \ or some other characters.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;&lt;br/&gt;
&lt;table border='1px solid black'&gt;
&lt;tr&gt;&lt;th border='1px solid black'&gt;Escape Sequence&lt;/th&gt;&lt;th border='1px solid black'&gt;Represents&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\a&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Bell (alert)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\b&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Backspace&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\f&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Formfeed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\n&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;New line&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\r&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Carriage return&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\t&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Horizontal tab&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\v&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Vertical tab&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\'&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Single quotation mark&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\"&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Double quotation mark&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\\&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Backslash&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;center&gt;&lt;b&gt;\?&lt;/b&gt;&lt;/center&gt;&lt;/td&gt;&lt;td&gt;Literal question mark&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="DataSplitHelpInclude" xml:space="preserve">
    <value>If you would like the data or item you are splitting on to be included in the result data, select this checkbox.	Allowed:	Include the information you are splitting on?</value>
  </data>
  <data name="DataSplitHelpProcessDirection" xml:space="preserve">
    <value>Default direction to process is forward or left to right (reading direction). Selecting Backwards will process from the end of the data (right) to the beginning (left).	Allowed:	Which direction would you like to process in?</value>
  </data>
  <data name="DataSplitHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the split data in the pattern as described by the results.	The variable pattern will be repeated until the end of the input data.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataSplitHelpSkipBlankRows" xml:space="preserve">
    <value>For file processing you can skip rows in the file that are blank. This saves you having to remove them afterwards.	Allowed:	Blank rows will be ignored</value>
  </data>
  <data name="DataSplitHelpString" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To split a value into one or more variables, put the value in here.	You can process entire file content or just trim the white space from a variable.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataSplitHelpUsing" xml:space="preserve">
    <value>For Index use the number of characters that this split will use. 	For Char put any characters or combination of characters you would like.	Not applicable to New Line, Tab or End	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DataSplitHelpWithType" xml:space="preserve">
    <value>Select where you would like to split the data.	Allowed:	na</value>
  </data>
  <data name="DateTimeDifferenceHelpDatetime1" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To find the difference in time between two date times, put the first date time in here. The format needs to be the same for the two.	Leaving this field blank will give you the system date time.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeDifferenceHelpDatetime2" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To find the difference in time between two date times, put the second date time in here. The format needs to be the same for the two.	Leaving this field blank will give you the system date time.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeDifferenceHelpInputFormat" xml:space="preserve">
    <value>Describe the format of the date times you are entering. e.g. 23-July 1978 would be described as dd-MM yyyy.	Leaving this field blank will assume the system date time format.	To escape text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an input format of 'Time is now' 24hr 'hours and' min 'minutes.' 	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;12h&lt;/b&gt;&lt;/td&gt;&lt;td&gt;12 hour format: 3&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;24h&lt;/b&gt;&lt;/td&gt;&lt;td&gt;24 hour format: 15&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;am/pm&lt;/b&gt;&lt;/td&gt;&lt;td&gt;am or pm&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;d&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of month in single digit: 6&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of month in double digit: 06&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dw&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of week number: 4&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dW&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of week text abbreviated: Thur&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;DW&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of week in full: Thursday&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dy&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of year: 361&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Era&lt;/b&gt;&lt;/td&gt;&lt;td&gt;A.D.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;m&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month in single digit: 8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;M&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month text abbreviated: Aug&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;min&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Minutes:  32&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;mm&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month in double digits: 08&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;MM&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month in full: August&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Split seconds: 999&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ss&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Seconds: 59&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;w&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Week of year single digit: 9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ww&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Week of year double digit: 52&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;yy&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Year in 2 digits: 78&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;yyyy&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Year in 4 digits: 2013&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Z&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Time zone in short format: GMT (if available)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ZZ&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Time zone: Greenwich mean time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ZZZ&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Time zone offset: GMT +2:00&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="DateTimeDifferenceHelpOutputType" xml:space="preserve">
    <value>Select the unit of time to output the difference in.</value>
  </data>
  <data name="DateTimeDifferenceHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the difference in time between the two date times.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeHelpAddtime" xml:space="preserve">
    <value>Put a positive or negative number here to add or subtract from the input date time.	Leave this field blank if you do not want to change the date time.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeHelpDatetime" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To format a date time, or to add/subtract from a date time, put it in here.	Leaving this field blank will give you the system date time.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeHelpInputformat" xml:space="preserve">
    <value>Describe the format of the date time you are entering. e.g. 23-July 1978 would be described as dd-MM yyyy.	Leaving this field blank will assume the system date time format.	To escape text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an input format of 'Time is now' 24hr 'hours and' min 'minutes.' 	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;12h&lt;/b&gt;&lt;/td&gt;&lt;td&gt;12 hour format: 3&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;24h&lt;/b&gt;&lt;/td&gt;&lt;td&gt;24 hour format: 15&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;am/pm&lt;/b&gt;&lt;/td&gt;&lt;td&gt;am or pm&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;d&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of month in single digit: 6&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dd&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of month in double digit: 06&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dw&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of week number: 4&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dW&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of week text abbreviated: Thur&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;DW&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of week in full: Thursday&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;dy&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Day of year: 361&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Era&lt;/b&gt;&lt;/td&gt;&lt;td&gt;A.D.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;m&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month in single digit: 8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;M&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month text abbreviated: Aug&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;min&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Minutes:  32&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;mm&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month in double digits: 08&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;MM&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Month in full: August&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;sp&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Split seconds: 999&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ss&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Seconds: 59&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;w&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Week of year single digit: 9&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ww&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Week of year double digit: 52&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;yy&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Year in 2 digits: 78&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;yyyy&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Year in 4 digits: 2013&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Z&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Time zone in short format: GMT (if available)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ZZ&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Time zone: Greenwich mean time&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;ZZZ&lt;/b&gt;&lt;/td&gt;&lt;td&gt;Time zone offset: GMT +2:00&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="DateTimeHelpOutputformat" xml:space="preserve">
    <value>Describe the format you would like the date time to be returned in.	Leaving this field blank will assume the same as the Input Format.	To include text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an output format of 'Time is now' 24hr 'hours and' min 'minutes.' 	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the formatted and/or added/subtracted date time.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DateTimeHelpTimeType" xml:space="preserve">
    <value>Select the unit of time to add or subtract. This is ignored if the unit is blank or 0.</value>
  </data>
  <data name="DbInputDefaultValueHelp" xml:space="preserve">
    <value>Put your test data in here then click Test. If possible this execution will automatically roll back.</value>
  </data>
  <data name="DebugOutputViewAddNewTestHelp" xml:space="preserve">
    <value>Create a test for the current workflow</value>
  </data>
  <data name="DebugOutputViewExpandAllHelp" xml:space="preserve">
    <value>Expand/Collapse all</value>
  </data>
  <data name="DebugOutputViewFilterSearchHelp" xml:space="preserve">
    <value>Filter the debug response information</value>
  </data>
  <data name="DebugOutputViewOptionsHelp" xml:space="preserve">
    <value>Change the debug items that reflect in the debug output.</value>
  </data>
  <data name="DeleteHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To Delete a file or folder, put the full path and file or folder name to delete in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DeleteHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DeleteHelpRecords" xml:space="preserve">
    <value>* in Recordset will execute every index in the given recordset.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DeleteHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or Failure depending on the success of the Delete action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DeleteHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DeployCommandHelp" xml:space="preserve">
    <value>Deploy the selected Source files to the Destination Server.</value>
  </data>
  <data name="DeployNewResourcesViewHelp" xml:space="preserve">
    <value>These are the new resources that will be found on the remote server after deploy.</value>
  </data>
  <data name="DeployOverridesCountViewHelp" xml:space="preserve">
    <value>These resources will be overwritten on the destination server</value>
  </data>
  <data name="DeploySelectDependenciesHelp" xml:space="preserve">
    <value>Automatically include everything that this resource would need to execute at the destination.&lt;br/&gt;	&lt;br/&gt;	&lt;b&gt;Warning: &lt;b/&gt;Deploying Sources that are already on the destination Server, will overwrite their connection strings. </value>
  </data>
  <data name="DotNetInputDefaultValueHelp" xml:space="preserve">
    <value>The data or variable that will be passed into the action at run time.</value>
  </data>
  <data name="DotNetPluginServiceSelectNamespaceHelp" xml:space="preserve">
    <value>Select a ClassName or a fully qualified ClassName(Namespace+ClassName) if it exists to filter the actions you can perform.</value>
  </data>
  <data name="DropBoxDeleteFileNameHelpText" xml:space="preserve">
    <value>Specify the Dropbox file or folder you would like to delete. This is the path from the root of the Dropbox account.</value>
  </data>
  <data name="DropboxResultHelpText" xml:space="preserve">
    <value>The result of the drop box operation will be assigned to this value</value>
  </data>
  <data name="EditEmailSourceHelp" xml:space="preserve">
    <value>Edit the email source that is selected.</value>
  </data>
  <data name="EditRabbitMQSourceHelp" xml:space="preserve">
    <value>Edit RabbitMQ Source</value>
  </data>
  <data name="EmailHelpAttachments" xml:space="preserve">
    <value>Enter the path to the attachments you want to send, separated by a semicolon ;</value>
  </data>
  <data name="EmailHelpBcc" xml:space="preserve">
    <value>List the email addresses you want to blind carbon copy on the email you are sending, separated by a semicolon ;	If you are on a domain, you still need to provide the email address of the account you are sending to.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpBody" xml:space="preserve">
    <value>The main body of the email goes in here.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpBodyCheckbox" xml:space="preserve">
    <value>If the email is HTML, select this checkbox. If it is plain text, uncheck the box.</value>
  </data>
  <data name="EmailHelpCc" xml:space="preserve">
    <value>List the email addresses you want to carbon copy on the email you are sending, separated by a semicolon ;	If you are on a domain, you still need to provide the email address of the account you are sending to.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpFromAddress" xml:space="preserve">
    <value>Any data or variable can go in here.	To send an email, enter the email address of the account you want to send from.	If you are on a domain, you still need to provide the email address of the account you are sending from.	If you leave it blank, the account used to setup the Email Source will be used.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpMailSource" xml:space="preserve">
    <value>Select a preconfigured email source or "New Email Source..." to add a new one.</value>
  </data>
  <data name="EmailHelpPassword" xml:space="preserve">
    <value>Enter the password, if there is one, for the account you are sending from.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpPriorityType" xml:space="preserve">
    <value>Select the message priority.</value>
  </data>
  <data name="EmailHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or Failure depending on the success of the send action.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpSubject" xml:space="preserve">
    <value>Enter the subject for your email.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailHelpTo" xml:space="preserve">
    <value>List the email addresses you want to send to, separated by a semicolon ;	If you are on a domain, you still need to provide the email address of the account you are sending to.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="EmailSourceEmailFromHelp" xml:space="preserve">
    <value>The email address that will be used to send the email from.&lt;br/&gt;	&lt;br/&gt;	This account needs to be a valid email address/account for the Host server.</value>
  </data>
  <data name="EmailSourceEmailToHelp" xml:space="preserve">
    <value>The email address you want to send the test message to.</value>
  </data>
  <data name="EmailSourceEnableSslHelp" xml:space="preserve">
    <value>Does the Host require a secure connection?	&lt;style type="text/css"&gt;#smtptable td{text-align:center;border:0px;}&lt;/style&gt;&lt;br/&gt;	e.g.&lt;br/&gt;	&lt;table border="1" id="smtptable"&gt;	&lt;tr align="center"&gt;&lt;th&gt;Host&lt;/th&gt;&lt;th&gt;Require SSL&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;gmail&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;yahoo&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;zoho&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;465&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp-mail.&lt;b&gt;outlook&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;live&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;/table&gt;</value>
  </data>
  <data name="EmailSourceHostNameHelp" xml:space="preserve">
    <value>The Host name of the server you want to use for sending emails.	&lt;style type="text/css"&gt;#smtptable td{text-align:center;border:0px;}&lt;/style&gt;&lt;br/&gt;	e.g.&lt;br/&gt;	&lt;table border="1" id="smtptable"&gt;	&lt;tr align="center"&gt;&lt;th&gt;Host&lt;/th&gt;&lt;th&gt;Require SSL&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;gmail&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;yahoo&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;zoho&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;465&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp-mail.&lt;b&gt;outlook&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;live&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;/table&gt;</value>
  </data>
  <data name="EmailSourcePortHelp" xml:space="preserve">
    <value>&lt;style type="text/css"&gt;	#smtptable td	{	text-align:center;	border:0px;	}	&lt;/style&gt;	The Port of the email server.	&lt;br/&gt;	e.g.&lt;br/&gt;	&lt;table border="1" id="smtptable"&gt;	&lt;tr align="center"&gt;&lt;th&gt;Host&lt;/th&gt;&lt;th&gt;Require SSL&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;gmail&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;yahoo&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;zoho&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;465&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp-mail.&lt;b&gt;outlook&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;live&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;	&lt;/table&gt;</value>
  </data>
  <data name="EmailSourceTestHelp" xml:space="preserve">
    <value>Sends a test email from this account so you can confirm its working.</value>
  </data>
  <data name="EmailSourceTimeoutHelp" xml:space="preserve">
    <value>The time allowed for the operation to connect before throwing an error.</value>
  </data>
  <data name="ExchangeEmailSourceHostNameHelp" xml:space="preserve">
    <value>The Exchange web service endpoint url to connect to your Exchange enviroment.	&lt;style type="text/css"&gt;#smtptable td{text-align:center;border:0px;}&lt;/style&gt;&lt;br/&gt;	e.g.&lt;br/&gt;	&lt;table border="1" id="smtptable"&gt;	&lt;tr align="center"&gt;&lt;th&gt;Auto Dicover Url&lt;&gt;&lt;th/tr&gt;	&lt;tr&gt;&lt;td&gt;https://outlook.office365.com/EWS/Exchange.asmx&lt;/td&gt;&lt;/tr&gt;	&lt;/table&gt;&lt;br/&gt;If the Autodiscover url is left empty, the Exchange service endpoint will be auto dicovered based on the user name</value>
  </data>
  <data name="ExchangeServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected connection.&lt;br&gt;	&lt;br/&gt;	Change the connection string from, say, a development database to a live database.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="ExchangeServiceNewSourceHelp" xml:space="preserve">
    <value>Create a connection to a new exchange server.</value>
  </data>
  <data name="ExchangeServiceSourceTypesHelp" xml:space="preserve">
    <value>The available exchange connections. To create a new connection, click New.</value>
  </data>
  <data name="ExchangeUserNameAuthenticationHelp" xml:space="preserve">
    <value>The user name to authenticate against the exhange server</value>
  </data>
  <data name="ExpertHelpUrl" xml:space="preserve">
    <value>http://warewolf.io/knowledge-base/</value>
  </data>
  <data name="ExplorerViewFilterSearchHelp" xml:space="preserve">
    <value>Search the connected servers by filtering based on this input.</value>
  </data>
  <data name="ExplorerViewRefreshHelp" xml:space="preserve">
    <value>Refresh the connected server(s) content.</value>
  </data>
  <data name="FindHelpFrom" xml:space="preserve">
    <value>The value that the search will start at, this must be a number, date or time and must be the same type as the "To" type.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindHelpInFields" xml:space="preserve">
    <value>To find the indexes/rows that match certain criteria, put the comma separated list of fields to search in here.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindHelpLookForMatchType" xml:space="preserve">
    <value>Select the type of information you want to match on.</value>
  </data>
  <data name="FindHelpMatch" xml:space="preserve">
    <value>The criteria to match on	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindHelpRequireAllFieldsToMatch" xml:space="preserve">
    <value>Will only return rows where each field specified meets the match criteria if selected.</value>
  </data>
  <data name="FindHelpRequireAllMatchesToBeTrue" xml:space="preserve">
    <value>Will only return rows that match all of the criteria if selected.</value>
  </data>
  <data name="FindHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the indexes of the successful matches.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	If there are multiple results and a scalar is used, then each result will be separated with a comma.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindHelpTo" xml:space="preserve">
    <value>The value that the search will end at, this must be a number, date or time and must be the same type as the "From" type.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindIndexHelpCharacters" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put  the index of the string you are looking for in here.	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindIndexHelpDirectiontype" xml:space="preserve">
    <value>Select the direction to search in.</value>
  </data>
  <data name="FindIndexHelpIndexType" xml:space="preserve">
    <value>Select which index(s) you would like found.</value>
  </data>
  <data name="FindIndexHelpInField" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To find the character index(s) of a string inside another string, put the string to be searched here.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindIndexHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the index(s) of the found string.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record. If you are finding All Occurrences and using a scalar, the results will be comma separated.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FindRecordsFromHelpText" xml:space="preserve">
    <value>The value that the search will start at, this must be a number, date or time and must be the same type as the "To" type.</value>
  </data>
  <data name="FindRecordsToHelpText" xml:space="preserve">
    <value>The value that the search will end at, this must be a number, date or time and must be the same type as the "From" type.</value>
  </data>
  <data name="ForEachHelpForEachType" xml:space="preserve">
    <value>Generally Replaces the * in the activity with the relevant index. e.g. If 1-3 is provided then [[Customer(*).ID]] will execute as [[Customer(1).ID]],	[[Customer(2).ID]],	[[Customer(3).ID]].	* in Range allows you to input a range of indexes.	* in CSV allows a specific set of indexes to be specified e.g. 1,5,7,9.	* in Recordset will execute every index in the given recordset.	* in Executes will execute the activity a given number of times and replace the * with the number of times it has executed e.g. 1,2,3... up to the number you specify.	No Subs. Execution WILL NOT substitute * with anything. The inner item(s) will execute given number of times in full.	Allowed:	na</value>
  </data>
  <data name="FormatNumberHelpDecimalsToShow" xml:space="preserve">
    <value>How many decimals should be returned as a factor of 10? e.g. 3 will show 0.000 and negative 3 (-3) will show 15000 as 15.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FormatNumberHelpNumber" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To format a number, put the number in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FormatNumberHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the formatted number.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="FormatNumberHelpRoundType" xml:space="preserve">
    <value>How would you like to round the number?	None: No rounding is done	Normal: 5,6,7,8,9 round up &amp; 1,2,3,4 round down	Up: 1-9 all round up	Down: 1-9 all round down	Allowed:	na</value>
  </data>
  <data name="FormatNumberHelpRoundValue" xml:space="preserve">
    <value>At what point in the number should the rounding be done as a factor of 10? e.g. 3 will round to 3 decimal places and negative 3 (-3) will round to the nearest thousand.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="InputDefaultValueHelp" xml:space="preserve">
    <value>The variable or the value that you want passed into this action.</value>
  </data>
  <data name="InputEmptyIsNullDefaultValueHelp" xml:space="preserve">
    <value>If the variable coming in has no value assigned to it, this will allow you to pass it in as NULL.</value>
  </data>
  <data name="InputGenerateOutputsDefaultHelp" xml:space="preserve">
    <value>To get the response data of this action, put some test data in. The transaction will be rolled back if possible.</value>
  </data>
  <data name="LengthHelpRecordset" xml:space="preserve">
    <value>To get the length or max index in a recordset, put the recordset name in here. E.g. [[Customer()]]	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset()]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="LengthHelpResult" xml:space="preserve">
    <value>Only variables go in here. Returns a number specifying the highest index / max index in the recordset.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="LoggingViewServerEventLogDebugHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Details up to System Activity:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events&lt;br /&gt;	Server Pulse Data&lt;br /&gt;	Server System Activity</value>
  </data>
  <data name="LoggingViewServerEventLogErrorHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to error details:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events</value>
  </data>
  <data name="LoggingViewServerEventLogFatalHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Only Server fatal events are logged.</value>
  </data>
  <data name="LoggingViewServerEventLogInfoHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Up to information detail:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events&lt;br /&gt;	Server Pulse Data</value>
  </data>
  <data name="LoggingViewServerEventLogOffHelpText" xml:space="preserve">
    <value>No Server logging is done to the Windows Event Log. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewServerEventLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to the Windows Event Log:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events&lt;br /&gt;	Server Pulse Data&lt;br /&gt;	Server System Activity&lt;br /&gt;	Server Detailed System information</value>
  </data>
  <data name="LoggingViewServerEventLogWarnHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to warning severity:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events</value>
  </data>
  <data name="LoggingViewServerFileLogDebugHelpText" xml:space="preserve">
    <value>Logs to file: Details up to System Activity:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events&lt;br /&gt;	Server Pulse Data&lt;br /&gt;	Server System Activity</value>
  </data>
  <data name="LoggingViewServerFileLogErrorHelpText" xml:space="preserve">
    <value>Logs to file: Events up to error details:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events</value>
  </data>
  <data name="LoggingViewServerFileLogFatalHelpText" xml:space="preserve">
    <value>Logs to file: Only Server fatal events are logged.</value>
  </data>
  <data name="LoggingViewServerFileLogInfoHelpText" xml:space="preserve">
    <value>Logs to file: Up to information detail:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events&lt;br /&gt;	Server Pulse Data</value>
  </data>
  <data name="LoggingViewServerFileLogOffHelpText" xml:space="preserve">
    <value>No Server logging is done to file. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewServerFileLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to file:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events&lt;br /&gt;	Server Pulse Data&lt;br /&gt;	Server System Activity&lt;br /&gt;	Server Detailed System information</value>
  </data>
  <data name="LoggingViewServerFileLogWarnHelpText" xml:space="preserve">
    <value>Logs to file: Events up to warning severity:&lt;br /&gt;	Server Fatal Events&lt;br /&gt;	Server Error Events&lt;br /&gt;	Server Warning Events</value>
  </data>
  <data name="LoggingViewStudioEventLogDebugHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Details up to System Activity:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events&lt;br /&gt;	Studio Pulse Data&lt;br /&gt;	Studio System Activity</value>
  </data>
  <data name="LoggingViewStudioEventLogErrorHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to error details:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events</value>
  </data>
  <data name="LoggingViewStudioEventLogFatalHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Only Studio fatal events are logged.</value>
  </data>
  <data name="LoggingViewStudioEventLogInfoHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Up to information detail:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events&lt;br /&gt;	Studio Pulse Data</value>
  </data>
  <data name="LoggingViewStudioEventLogOffHelpText" xml:space="preserve">
    <value>No Studio logging is done to Windows Event Logger. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewStudioEventLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to the Windows Event Log:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events&lt;br /&gt;	Studio Pulse Data&lt;br /&gt;	Studio System Activity&lt;br /&gt;	Studio Detailed System information</value>
  </data>
  <data name="LoggingViewStudioEventLogWarnHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to warning severity:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events</value>
  </data>
  <data name="LoggingViewStudioFileLogDebugHelpText" xml:space="preserve">
    <value>Logs to file: Details up to System Activity:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events&lt;br /&gt;	Studio Pulse Data&lt;br /&gt;	Studio System Activity</value>
  </data>
  <data name="LoggingViewStudioFileLogErrorHelpText" xml:space="preserve">
    <value>Logs to file: Events up to error details:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events</value>
  </data>
  <data name="LoggingViewStudioFileLogFatalHelpText" xml:space="preserve">
    <value>Logs to file: Only Studio fatal events are logged.</value>
  </data>
  <data name="LoggingViewStudioFileLogInfoHelpText" xml:space="preserve">
    <value>Logs to file: Up to information detail:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events&lt;br /&gt;	Studio Pulse Data</value>
  </data>
  <data name="LoggingViewStudioFileLogOffHelpText" xml:space="preserve">
    <value>No Studio logging is done to file. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewStudioFileLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to file:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events&lt;br /&gt;	Studio Pulse Data&lt;br /&gt;	Studio System Activity&lt;br /&gt;	Studio Detailed System information</value>
  </data>
  <data name="LoggingViewStudioFileLogWarnHelpText" xml:space="preserve">
    <value>Logs to file: Events up to warning severity:&lt;br /&gt;	Studio Fatal Events&lt;br /&gt;	Studio Error Events&lt;br /&gt;	Studio Warning Events</value>
  </data>
  <data name="ManageOAuthAuthoriseHelp" xml:space="preserve">
    <value>Warewolf needs to get Authorization from the external application to connect using your key and credentials. Make sure your application is setup correctly on the remote system before continuing with this step.&lt;br/&gt;	&lt;br/&gt;	Dropbox: &lt;a href="https://www.dropbox.com/developers/apps/create"&gt;Create your app in Dropbox here.&lt;/a&gt;&lt;br/&gt;	Make sure you have set the &lt;b&gt;Redirect URIs&lt;/b&gt; in your app to:	https://www.dropbox.com/1/oauth2/redirect_receiver/</value>
  </data>
  <data name="ManageOAuthKeyHelp" xml:space="preserve">
    <value>The app key provided by the application that is doing the authentication. You will need to log into that application and follow their instructions to generate this key.&lt;br/&gt;	&lt;br/&gt;	Dropbox: &lt;a href="https://www.dropbox.com/developers/apps/create"&gt;Create your app in Dropbox here.&lt;/a&gt;&lt;br/&gt;	Make sure you have set the &lt;b&gt;Redirect URIs&lt;/b&gt; in your app to:	https://www.dropbox.com/1/oauth2/redirect_receiver/</value>
  </data>
  <data name="ManageOAuthTypesHelp" xml:space="preserve">
    <value>Select the provider you want to use for Authentication. The provider must be compatible with the tool you are using. Make sure you have setup the account on the external application correctly.</value>
  </data>
  <data name="ManageOdbcServiceActionsHelpText" xml:space="preserve">
    <value>The Structured Query Language (SQL) of the action you want to perform on the ODBC source.</value>
  </data>
  <data name="MappingsDefaultValueHelp" xml:space="preserve">
    <value>The default value to be used when mapping this field.</value>
  </data>
  <data name="MappingsObjectNameHelp" xml:space="preserve">
    <value>The name of the [[@Object]] you would like the output to go into.
    After the object is added to the variable list, you can click on the { } next to the objects name to see the full shape.</value>
  </data>
  <data name="MappingsObjectOutputHelp" xml:space="preserve">
    <value>Allows you to output the full response into an object (JSON representation).</value>
  </data>
  <data name="MappingsRecordsetNameHelp" xml:space="preserve">
    <value>If you would like the default variables in a recordset, put the recordset name in here.</value>
  </data>
  <data name="MenuDebugHelp" xml:space="preserve">
    <value>Debug your Service in either the Studio or the Browser.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/debugging/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="MenuDeployHelp" xml:space="preserve">
    <value>Move resources between multiple Warewolf Servers.&lt;br/&gt;	&lt;br/&gt;	Deploy is the safest and recommended way of moving resources between Warewolf Servers.</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>A quick link to the Knowledge Base and other helpful resources.</value>
  </data>
  <data name="MenuLockMenuHelp" xml:space="preserve">
    <value>Lock the Menu bar either open or closed, or Unlock to allow dynamic menu opening on mouse over.</value>
  </data>
  <data name="MenuNewDatabaseConnectorHelp" xml:space="preserve">
    <value>Connect to a database to execute stored procedures, functions and TSQL.</value>
  </data>
  <data name="MenuNewPluginConnectorHelp" xml:space="preserve">
    <value>Connect to dll's to execute any custom code.</value>
  </data>
  <data name="MenuNewServiceHelp" xml:space="preserve">
    <value>Create a new Warewolf Hosted Web Service. This flow based service is the start of all orchestration in Warewolf.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/getting-started/" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="MenuNewVersionHelp" xml:space="preserve">
    <value>A new version of Warewolf is available for download.</value>
  </data>
  <data name="MenuNewWebConnectorHelp" xml:space="preserve">
    <value>Connect to any webservice using REST or SOAP.</value>
  </data>
  <data name="MenuSaveTabHelp" xml:space="preserve">
    <value>Saves the active tab in the studio</value>
  </data>
  <data name="MenuSchedulerHelp" xml:space="preserve">
    <value>Schedule workflow executions</value>
  </data>
  <data name="MenuSettingsHelp" xml:space="preserve">
    <value>Edit or View system settings such as Security and Logging.</value>
  </data>
  <data name="MoveHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put the full path of the destination you are moving to here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="MoveHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To Move a file or folder, put the full path and file or folder name to move in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="MoveHelpForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.	Allowed:	If it exists already, force an overwrite</value>
  </data>
  <data name="MoveHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="MoveHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Move action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="MoveHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="NativeActivityHelpCallthiswebservice" xml:space="preserve">
    <value>If an error occurs you can execute a web service / Warewolf workflow to log the error that occurred.	E.g. http://ServerName:3142/Services/LogErrors?Severity=1&amp;Error=[[ErrorMsg]]	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="NativeActivityHelpEndtheworkflow" xml:space="preserve">
    <value>To end the workflow if an error has occurred at this point, make sure the checkbox is selected. 	If you have also called a web service / Warewolf workflow, that will finish executing first.	If the workflow is nested, the calling workflow will resume.</value>
  </data>
  <data name="NativeActivityHelpPuterrorinthisvariable" xml:space="preserve">
    <value>If an error occurs the error message will be placed into this variable as well the result variable.	If left empty the result will still be placed in the result variable.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="NewRabbitMQSourceHelp" xml:space="preserve">
    <value>New RabbitMQ Source</value>
  </data>
  <data name="PasswordAuthenticationHelp" xml:space="preserve">
    <value>Enter the password for the account you want to use for authenticating.</value>
  </data>
  <data name="PluginServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected DLL.&lt;br&gt;	&lt;br/&gt;	Change the connection string from, say, a development DLL to a live DLL.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledgebase.&lt;/a&gt;</value>
  </data>
  <data name="PluginServiceNewSourceHelp" xml:space="preserve">
    <value>To create a reference to a new dll, click New.</value>
  </data>
  <data name="PluginServiceRefreshHelp" xml:space="preserve">
    <value>Refresh the available actions.</value>
  </data>
  <data name="PluginServiceRefreshConstructorHelp" xml:space="preserve">
    <value>Refresh the available constructors.</value>
  </data>
  <data name="PluginServiceSelectActionHelp" xml:space="preserve">
    <value>Select the method in the DLL you want to execute. You can provide a namespace filter above if you want.</value>
  </data>
  <data name="PluginServiceSelectConstructorHelp" xml:space="preserve">
    <value>Select the constructor in the DLL you want to execute. You can provide a namespace filter above if you want.</value>
  </data>
  <data name="PluginServiceSelectNamespaceHelp" xml:space="preserve">
    <value>Select a namespace if it exists to filter the actions you can perform.</value>
  </data>
  <data name="PluginServiceSourcesHelp" xml:space="preserve">
    <value>Select the DLL you want to use from previously setup sources.</value>
  </data>
  <data name="PluginSourceClearSearchHelp" xml:space="preserve">
    <value>Clears the Search Filter</value>
  </data>
  <data name="PluginSourceDllFullNameButtonHelp" xml:space="preserve">
    <value>Select to get the full path to the DLL. e.g. &lt;b&gt;D:\My Project\Core.dll&lt;/b&gt;&lt;br/&gt;</value>
  </data>
  <data name="PluginSourceConfigFileHelp" xml:space="preserve">
    <value>The full path to the Config file.</value>
  </data>
  <data name="PluginSourceConfigFileButtonHelp" xml:space="preserve">
    <value>Select to get the full path to the Config file.</value>
  </data>
  <data name="PluginSourceGacAssemblyNameButtonHelp" xml:space="preserve">
    <value>Select to get the full GAC address e.g. &lt;b&gt;GAC:TaskScheduler, Version=6.3.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&lt;/b&gt;</value>
  </data>
  <data name="PluginSourceDllFullNameHelp" xml:space="preserve">
    <value>The full path to the DLL. e.g. &lt;b&gt;D:\My Project\Core.dll&lt;/b&gt;&lt;br/&gt;</value>
  </data>
  <data name="PluginSourceRefreshCommandHelp" xml:space="preserve">
    <value>Refresh the view based on the filter.&lt;br/&gt;	&lt;br/&gt;	Newly added resources should show after a refresh.</value>
  </data>
  <data name="PreviewInputHelpText" xml:space="preserve">
    <value>Preview (recordset field)	This is a variable from an input field. Use comma-separated values for each index e.g. [[Trip(*).Distance]] = 45, 32, 12, 5	Preview (scalar field - including indexed recordsets and ())	This is a variable from an input field. Put some test info in and click the Preview button to test your result.</value>
  </data>
  <data name="QuickVariableAppendHelpText" xml:space="preserve">
    <value>Append will add the variables onto the list of variables already in the input grid. The values of the last row will be repeated for all of these additional values.</value>
  </data>
  <data name="QuickVariablePrefixWithHelpText" xml:space="preserve">
    <value>To append something onto the front of the variables in your list, type it in here.	For recordsets, type  recordsetname(). Don't forget the "." after the "()"	You do not need to put the "[[" in.</value>
  </data>
  <data name="QuickVariableReplaceHelpText" xml:space="preserve">
    <value>Replace will replace the current list of variables with this list. The values of the first row will be repeated for all of these new values.</value>
  </data>
  <data name="QuickVariableSplitAndAtHelpText" xml:space="preserve">
    <value>Select the criteria to split the variables in the list. This will be the pattern used to repeat against the Variable List box.	Char will split on the characters you specify, like comma or | &lt;/.	Index will split on the numeric index from the previous split.	New Line will split on carriage return.	Space will split on blank space.	Tab splits on a tab character.</value>
  </data>
  <data name="QuickVariableSuffixWithHelpText" xml:space="preserve">
    <value>To append something onto the end of the variables in your list, type it in here.	You do not need to put the "]]" in.</value>
  </data>
  <data name="QuickVariableVariableListHelpText" xml:space="preserve">
    <value>Type or paste all the variables you want to use in here. You can paste in any format. If you are adding variables into a grid with a drop down or other input, the values from the last row will be repeated, so set them before adding these variables.</value>
  </data>
  <data name="RabbitMQHelpAcknowledge" xml:space="preserve">
    <value>Aknowledge will send back result from the consumer to tell 	RabbitMQ that a particular message has been received, 	processed and that RabbitMQ is free to delete it.&lt;br/&gt;</value>
  </data>
  <data name="RabbitMQHelpIsAutoDelete" xml:space="preserve">
    <value>If set, the queue is deleted when all consumers have 	finished using it. The last consumer can be cancelled either 	explicitly or because its channel is closed. If there was no 	consumer ever on the queue, it won't be deleted. Applications 	can explicitly delete auto-delete queues using the Delete method as normal.&lt;br/&gt;</value>
  </data>
  <data name="RabbitMQHelpIsDurable" xml:space="preserve">
    <value>When RabbitMQ source quits or crashes it will forget the queues.	Durable will prevent queues getting lost after the source is up again.&lt;br/&gt;</value>
  </data>
  <data name="RabbitMQHelpIsExclusive" xml:space="preserve">
    <value>Exclusive queues may only be accessed by the current connection, 	and are deleted when that connection closes. Passive declaration of an exclusive 	queue by other connections are not allowed.&lt;br/&gt;</value>
  </data>
  <data name="RabbitMQHelpMessage" xml:space="preserve">
    <value>This is the actual content you want to add in the Queue	When the Consumer consumes the message, this content will	be returned as the response.&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQHelpPrefetch" xml:space="preserve">
    <value>Provide number of messages that can be consumed concurrently.    	This will pre-fetch the given number of messages and block further traffic until you 	acknowledge something. This ensures that a maximum of the given number of unacknowledged messages 	are pre-fetched at one time.&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;Integer Value&lt;/li&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQHelpQueueName" xml:space="preserve">
    <value>Provide a name of the Queue you want to consume from. 	The Queue should already be in the RabbitMQ Source in your server.	Note: The Queue name is case sensitive.&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQHelpRequeue" xml:space="preserve">
    <value>Marking this as True will leave the	message you consumed in the queue.	Leaving it UnChecked will remove it from the Queue after it has bee consumed.&lt;br/&gt;</value>
  </data>
  <data name="RabbitMQHelpResponse" xml:space="preserve">
    <value>Only variables go in here.	This will be the response of what you have Consumed from your Queue&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;          	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;          	&lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQHelpResult" xml:space="preserve">
    <value>Returns Success or Failure depending on the success of the message publish.&lt;br /&gt;	&lt;br /&gt;	Allowed:	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQHelpTimeOut" xml:space="preserve">
    <value> The Queue might be empty when the 	Consumer makes the initial attempt to Consume the message.	Put the number of seconds you want the consumer to delay when attempting to 	consume messages from the queue.	After the specified time (in seconds) has elapsed, the  consumer will retire.&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;Interger Value&lt;/li&gt;            	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQSourceHelp" xml:space="preserve">
    <value>Select a preconfigured RabbitMQ source or add a new one.&lt;br /&gt;</value>
  </data>
  <data name="RabbitMQSourceHostHelp" xml:space="preserve">
    <value>The Host name of the server you want to use for publishing messages.</value>
  </data>
  <data name="RabbitMQSourcePasswordHelp" xml:space="preserve">
    <value>The Password for the RabbitMQ server.</value>
  </data>
  <data name="RabbitMQSourcePortHelp" xml:space="preserve">
    <value>The Port of the RabbitMQ server. Default value is 5672.</value>
  </data>
  <data name="RabbitMQSourceUserNameHelp" xml:space="preserve">
    <value>The User Name for the RabbitMQ server.</value>
  </data>
  <data name="RabbitMQSourceVirtualHostHelp" xml:space="preserve">
    <value>The Virtual Host of the RabbitMQ server. Default value is /.</value>
  </data>
  <data name="RandomHelpLength" xml:space="preserve">
    <value>Determines the character length to generate.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RandomHelpRangeFrom" xml:space="preserve">
    <value>To generate a random number put the lowest/smallest number you would like in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RandomHelpRangeTo" xml:space="preserve">
    <value>To generate a random number put the highest/largest number you would like in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RandomHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the randomly generated result.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RandomHelpType" xml:space="preserve">
    <value>The type of random information to generate.	Letters: Alphabetical letters only.	Numbers: Numbers only.	Letters and Numbers: A random combination of letters and numbers.	GUID: A randomly generated Globally Unique Identifier.</value>
  </data>
  <data name="ReadFileHelpFilename" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To read the content of a file, put the full path and file name in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFileHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFileHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the content of the file.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFileHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFolderHelpFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To read the content of a folder, put the full path in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFolderHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFolderHelpRead" xml:space="preserve">
    <value>Files will only return files.	Folders will only return folders.	Files and Folders will return everything.	Allowed:	What do you want to read?</value>
  </data>
  <data name="ReadFolderHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the content of the folder specified. Each item found will be returned as a separate result so this tool is best used with a recordset.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadFolderHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReadLocalHelpFolder" xml:space="preserve">
    <value>Enter local file or folder path in here.&lt;br/&gt;	Download to local Example: C:\MyFolder\Help.&lt;br/&gt;	Upload file to SharePoint Example: C:\MyFolder\Help\help.txt.&lt;br/&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RenameHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To rename a file or folder, put the full path and file or folder name in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RenameHelpForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.	Allowed:	If it exists already, force an overwrite</value>
  </data>
  <data name="RenameHelpNewName" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put the full path and new name of the resource here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RenameHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RenameHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Rename action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="RenameHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReplaceHelpFind" xml:space="preserve">
    <value>Put the information you are looking for in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReplaceHelpInFields" xml:space="preserve">
    <value>Only variables go in here.	To search and replace a string, put the variable containing the string to search in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReplaceHelpReplaceWith" xml:space="preserve">
    <value>Put the replacement information in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ReplaceHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the count of the number of replacements.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SchedulerDeleteHelpTextTrigger" xml:space="preserve">
    <value>Delete this scheduled task</value>
  </data>
  <data name="SchedulerSettingsDisabledHelpTextStatus" xml:space="preserve">
    <value>Disable this scheduled task</value>
  </data>
  <data name="SchedulerSettingsEnabledHelpTextStatus" xml:space="preserve">
    <value>Enable this scheduled task</value>
  </data>
  <data name="SchedulerSettingsHelpTextHistoryRecords" xml:space="preserve">
    <value>To prevent redundant data being kept the system will clean up old schedule results. To specify how many results to keep, put a whole number in here.</value>
  </data>
  <data name="SchedulerSettingsHelpTextName" xml:space="preserve">
    <value>The name of the schedule that will appear in the list of Schedules in the left hand column.	Renaming a Schedule will lose its History.</value>
  </data>
  <data name="SchedulerSettingsHelpTextPassword" xml:space="preserve">
    <value>Each workflow must be executed with the correct security context. The account details entered here will be passed to the server and execute the workflow as that user.</value>
  </data>
  <data name="SchedulerSettingsHelpTextRun" xml:space="preserve">
    <value>Check this box if you would like a missed trigger to execute as soon as possible.</value>
  </data>
  <data name="SchedulerSettingsHelpTextSettingsView" xml:space="preserve">
    <value>To schedule a workflow execution, setup the trigger you want to use  and the workflow you want to execute.	Warewolf leverages Windows Task Scheduler and the schedules can be viewed there as well.</value>
  </data>
  <data name="SchedulerSettingsHelpTextStatus" xml:space="preserve">
    <value>To change if the trigger is active or not, select Enabled or Disabled.</value>
  </data>
  <data name="SchedulerSettingsHelpTextTrigger" xml:space="preserve">
    <value>To run a workflow on a schedule select the Edit Trigger button.</value>
  </data>
  <data name="SchedulerSettingsHelpTextUsername" xml:space="preserve">
    <value>Each workflow must be executed with the correct security context. The account details entered here will be passed to the server and execute the workflow as that user.</value>
  </data>
  <data name="SchedulerSettingsHelpTextWorkFlow" xml:space="preserve">
    <value>To run a workflow on a schedule select the Trigger above and then click … to choose the workflow you want to execute.</value>
  </data>
  <data name="SchedulerStatusAltHelpTextTrigger" xml:space="preserve">
    <value>Enables or Disables the scheduled task. Disabled schedules will not execute when their trigger is valid.</value>
  </data>
  <data name="ScriptingHelpEscapeScript" xml:space="preserve">
    <value>Your variables might contain values like '\t' or '\n' etc which are Escape Sequences. Tick this Box if you want to ignore this or leave it unticked if you want to use them as Escape Sequences.</value>
  </data>
  <data name="ScriptingHelpIncludeFile" xml:space="preserve">
    <value>If you want to Point to an external file with code you want to run several times. Instead of writing the same script over and over again, create it and save it with a relevent extension (.js for JavaScript).</value>
  </data>
  <data name="ScriptingHelpLanguageType" xml:space="preserve">
    <value>What type of scripting language do you want to use?	Allowed:	na</value>
  </data>
  <data name="ScriptingHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the output of the script, if any.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ScriptingHelpScript" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To run a programming script, put the script you want to execute in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SelectAndApplyAliasHelpText" xml:space="preserve">
    <value>Specify an alias for the selected data.&lt;br/&gt;	This needs to conform to variable notation.&lt;br/&gt;	This will be the value that will be acted upon in the activity inserted below.&lt;br/&gt;	To ensure that the original values are updated ensure that the result of the activity is set to this value.&lt;br/&gt;	Allowed:	&lt;ol&gt;	&lt;li&gt;[[alias]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SelectAndApplyDataSourceHelpText" xml:space="preserve">
    <value>Only collections go in here.&lt;br/&gt;	You can use the (*) or () notation for record sets or object arrays.&lt;br/&gt;	This is the collection of items that will be iterated over.&lt;br /&gt;	&lt;br /&gt;	For example to iterate over all ages in the person recordset this field will contain [[person(*).age]].&lt;br/&gt;	Allowed:	&lt;ol&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;li&gt;[[@Object(*).Field]]&lt;/li&gt;	&lt;li&gt;[[@Object().Field]]&lt;/li&gt;	&lt;li&gt;[[@Object.InnerCollection().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SequenceHelpSequence" xml:space="preserve">
    <value>To execute a set of Activities in sequence put them in the order you want them executed.	To execute more than one item in a loop construct etc. put the activities in a sequence first and then put the sequence into the loop construct.	Error handling operates as a catch all for all items in the sequence.</value>
  </data>
  <data name="ServerAddressHelp" xml:space="preserve">
    <value>For network computers, type in the name of the computer on the network and select it from the drop down list.&lt;br/&gt;	&lt;br/&gt;	For remote servers, such as Hybrid cloud environments, Azure hosted servers etc., put the server URL in here.</value>
  </data>
  <data name="ServerProtocolHelp" xml:space="preserve">
    <value>By default, you can connect to other Warewolf Servers over HTTP or HTTPS.&lt;br/&gt;</value>
  </data>
  <data name="ServerSelectPortHelp" xml:space="preserve">
    <value>By default this port will be 3143 for HTTPS connections and 3142 for HTTP connections.&lt;br/&gt;	&lt;br/&gt;	Do not change this unless you know the ports on the remote machine have been altered.</value>
  </data>
  <data name="ServerSelectPublicHelp" xml:space="preserve">
    <value>Use the public account to authenticate on the remote server.&lt;br/&gt;	&lt;br/&gt;	If there are no resources on the remote server, there will be no Public authentication.</value>
  </data>
  <data name="ServerSelectUserHelp" xml:space="preserve">
    <value>Use a specific windows account to authenticate on the remote server.&lt;br/&gt;	&lt;br/&gt;	Use the domain if relevant e.g. DOMAIN\Username</value>
  </data>
  <data name="ServerSelectWindowsHelp" xml:space="preserve">
    <value>Uses the logged on windows account to authenticate on the remote server.</value>
  </data>
  <data name="ServerTestConnectionHelp" xml:space="preserve">
    <value>Test the connection to the remote Warewolf Server.	Make sure the relevant ports (3142, 3143 by default) are open on any firewalls between this server and the remote server.</value>
  </data>
  <data name="ServiceHelpInput" xml:space="preserve">
    <value>Insert the input data for this service. It will be mapped to the input field listed in the To Service column. If the input is a Recordset field then you can use (*) to pass all the recordset fields into the workflow service. e.g. [[my(*).recs]] -&gt; input().records	You can also put multiple fields into one field with other text much like the assign tool.	By default similar matches from the variable list are used where possible.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ServiceHelpOutput" xml:space="preserve">
    <value>Only variables go in here.	Insert the variable that you want the output of the workflow to be mapped into. By default similar matches from the variable list are used where possible.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ServiceHelpRunWorkflowAsync" xml:space="preserve">
    <value>Selecting this checkbox will cause the workflow to execute as "Fire and Forget". This will free up the parent workflow to continue without waiting for a response from the nested workflow.	Warning: Any data returned from this workflow will not be mapped back and will therefore not be available for use.</value>
  </data>
  <data name="ServiceTestCancelButtonHelp" xml:space="preserve">
    <value>Cancel the test response results. Cancelling will not use the results from the test execution to determine the actions outputs.</value>
  </data>
  <data name="ServiceTestDoneButtonHelp" xml:space="preserve">
    <value>Accept the test response results. This will use the results from the test execution to determine the actions outputs.</value>
  </data>
  <data name="ServiceTestDuplicateSelectedTestHelpText" xml:space="preserve">
    <value>Duplicates this test so you can quickly make similar tests. All fields will be copied as is.</value>
  </data>
  <data name="ServiceTestEnableRunSelectedTestHelpText" xml:space="preserve">
    <value>Enables or disables the test. A disabled test will be ignored when requested to run.
A test must be ignored/disabled before it can be deleted.</value>
  </data>
  <data name="ServiceTestErrorContainsTextHelpText" xml:space="preserve">
    <value>Assert that the error contains some particular text.
    This allows you to make sure the error you receive, with certain inputs to your service, is the correct error and not due to something else.</value>
  </data>
  <data name="ServiceTestErrorExpectedHelpText" xml:space="preserve">
    <value>The test expects an error. If this option is selected, ALL other asserts will be ignored.</value>
  </data>
  <data name="ServiceTestGenericHelpText" xml:space="preserve">
    <value>Use the Tests editor to setup tests that verify your service is working correctly.</value>
  </data>
  <data name="ServiceTestHelp" xml:space="preserve">
    <value>Test the execution of this resource.</value>
  </data>
  <data name="ServiceTestInputsValueHelpText" xml:space="preserve">
    <value>The input value for the service. This is the input to the service for the test you want to run.</value>
  </data>
  <data name="ServiceTestNameHelpText" xml:space="preserve">
    <value>The name of this test. Test names should be unique and indicate what is being tested. 
    The test is always associated with the service running it.</value>
  </data>
  <data name="ServiceTestNewTestHelpText" xml:space="preserve">
    <value>Creates a new test for this resource. You can create as many tests for this resource as you like.</value>
  </data>
  <data name="ServiceTestNoErrorExpectedHelpText" xml:space="preserve">
    <value>The test expects no error. If this option is selected, it will be aAsserted with all other asserts.</value>
  </data>
  <data name="ServiceTestOutputFromHelpText" xml:space="preserve">
    <value>The Value of the item you want to assert from.</value>
  </data>
  <data name="ServiceTestOutputToHelpText" xml:space="preserve">
    <value>The Value of the item you want to assert to.</value>
  </data>
  <data name="ServiceTestOutputValueHelpText" xml:space="preserve">
    <value>This is the final output of the service that will be asserted.</value>
  </data>
  <data name="ServiceTestOutputVariableHelpText" xml:space="preserve">
    <value>The final service output you want to make the assert on.</value>
  </data>
  <data name="ServiceTestPasswordHelpText" xml:space="preserve">
    <value>Enter the password for the account you want to use for authenticating.</value>
  </data>
  <data name="ServiceTestPublicHelpText" xml:space="preserve">
    <value>Use the public account to authenticate on the remote server.&lt;br/&gt;	&lt;br/&gt;	If there are no resources on the remote server, there will be no Public authentication.</value>
  </data>
  <data name="ServiceTestRunAllTestHelpText" xml:space="preserve">
    <value>Runs all tests that are marked as enabled</value>
  </data>
  <data name="ServiceTestRunSelectedTestHelpText" xml:space="preserve">
    <value>Run this test [F5]</value>
  </data>
  <data name="ServiceTestSelectedTestHelpText" xml:space="preserve">
    <value>Setup and edit this test.</value>
  </data>
  <data name="ServiceTestStepAssertFromHelpText" xml:space="preserve">
    <value>The Value of the item you want to assert from.</value>
  </data>
  <data name="ServiceTestStepAssertOpsHelpText" xml:space="preserve">
    <value>The type of Assert you want to make.</value>
  </data>
  <data name="ServiceTestStepAssertRadioButtonHelpText" xml:space="preserve">
    <value>Asserts the Result has a type of value at this step.</value>
  </data>
  <data name="ServiceTestStepAssertToHelpText" xml:space="preserve">
    <value>The Value of the item you want to assert.</value>
  </data>
  <data name="ServiceTestStepAssertValueHelpText" xml:space="preserve">
    <value>The Value of the item you want to assert.</value>
  </data>
  <data name="ServiceTestStepAssertVariableHelpText" xml:space="preserve">
    <value>The item you want to make the assert on.</value>
  </data>
  <data name="ServiceTestStepDeleteStepHelpText" xml:space="preserve">
    <value>Remove this step from the assert list. This step will not be asserted. To add it back, simply click on it in the workflow designer.</value>
  </data>
  <data name="ServiceTestStepMockRadioButtonHelpText" xml:space="preserve">
    <value>Mocked values will not execute and will set the value of a result at this step. 
    Use this when you do not want to execute a service such as a database call or another workflow.</value>
  </data>
  <data name="ServiceTestStepOptionsForValueHelpText" xml:space="preserve">
    <value>The Value of the item you want to assert.</value>
  </data>
  <data name="ServiceTestStopSelectedTestHelpText" xml:space="preserve">
    <value>Stop this test</value>
  </data>
  <data name="ServiceTestUserHelpText" xml:space="preserve">
    <value>Use a specific windows account to authenticate on the remote server.&lt;br/&gt;	&lt;br/&gt;	Use the domain if relevant e.g. DOMAIN\Username</value>
  </data>
  <data name="ServiceTestUserNameHelpText" xml:space="preserve">
    <value>The full username of the account you want to use to run this test.</value>
  </data>
  <data name="ServiceTestWindowsHelpText" xml:space="preserve">
    <value>Uses the logged on windows account to authenticate on the remote server.</value>
  </data>
  <data name="SettingsPerfCounterRemoveResourceHelpText" xml:space="preserve">
    <value>Removes the performance counters for this specific resource</value>
  </data>
  <data name="SettingsPerfCounterResourceBrowseHelpResource" xml:space="preserve">
    <value>Select a resource from the active server to set specific counters for.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpAvgExecTime" xml:space="preserve">
    <value>A counter for the average execution time of this specific resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpConReq" xml:space="preserve">
    <value>A counter for the number of concurrent requests of this specific resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpReqPerSec" xml:space="preserve">
    <value>A counter for the number of requests per second of this resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpTotErrors" xml:space="preserve">
    <value>A counter for the total number of errors of this resource.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpAvgExecTime" xml:space="preserve">
    <value>A counter for the average execution time of all the resources on the server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpConcurrentReq" xml:space="preserve">
    <value>A counter for the number of concurrent requests on the server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpNotAuthErrors" xml:space="preserve">
    <value>A counter for the authorization failures on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpReqPerSec" xml:space="preserve">
    <value>A counter for the number of requests per second on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpTotalErrors" xml:space="preserve">
    <value>A counter for the total number of errors on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpWfNotFound" xml:space="preserve">
    <value>A counter for the number of times a workflow was requested but did not exist on this server.</value>
  </data>
  <data name="SettingsSecurityResourceBrowseHelpResources" xml:space="preserve">
    <value>Resource picker</value>
  </data>
  <data name="SettingsSecurityResourceBrowseHelpWindowsGroup" xml:space="preserve">
    <value>Resource picker</value>
  </data>
  <data name="SettingsSecurityResourceHelpContribute" xml:space="preserve">
    <value>By Default this group will be able to Edit or Delete this resource. 	To do this they can also View and Execute.</value>
  </data>
  <data name="SettingsSecurityResourceHelpExecute" xml:space="preserve">
    <value>By Default this group will be able to call or execute this workflow.</value>
  </data>
  <data name="SettingsSecurityResourceHelpResource" xml:space="preserve">
    <value>To set specific permissions for a resource on this server, select the resource here.	Any permissions applied to this resource will OVERWRITE the server settings above.	By specifying a resource here, it will not inherit permissions from the server (above).</value>
  </data>
  <data name="SettingsSecurityResourceHelpView" xml:space="preserve">
    <value>By Default this group will be able to open and view this resource.	Typically this is used by Business Analysts to sign off work and participate in the development process.</value>
  </data>
  <data name="SettingsSecurityResourceHelpWindowsGroup" xml:space="preserve">
    <value>To set resource specific permissions, enter the Windows Group name or "Public" here followed by the system access for that group. 	Permissions are cumulative in nature e.g. If someone is a member of two groups and only one of those groups has Contribute permission, then that member WILL have Contribute permission.	Public is an internal Warewolf group that applies to everyone.</value>
  </data>
  <data name="SettingsSecurityServerBrowseHelpWindowsGroup" xml:space="preserve">
    <value>Opens the windows group picker for this computer. If this server is on another domain, you will need to either manually type the Group name in, or launch a studio from a PC that is on that domain to get access to the group picker.	Warewolf has a built in group for and called Public.</value>
  </data>
  <data name="SettingsSecurityServerHelpAdministrator" xml:space="preserve">
    <value>Administrators can amend security permissions and change server settings. 	The local machine Administrators are automatically given this permission.	Giving Public access to this permission is akin to turning security off and is not recommended.</value>
  </data>
  <data name="SettingsSecurityServerHelpContribute" xml:space="preserve">
    <value>By Default this group will be able to add new resources, edit resources and delete existing resources on this server. 	To do this they can also View and Execute.</value>
  </data>
  <data name="SettingsSecurityServerHelpDeployFrom" xml:space="preserve">
    <value>By Default this group will be able to deploy resources off this server.</value>
  </data>
  <data name="SettingsSecurityServerHelpDeployTo" xml:space="preserve">
    <value>By Default this group will be able to deploy resources onto this server.	Deploy may mean overwriting existing work and can be done without Contribute privileges.</value>
  </data>
  <data name="SettingsSecurityServerHelpExecute" xml:space="preserve">
    <value>By Default this group will be able to call or execute resources on this server.</value>
  </data>
  <data name="SettingsSecurityServerHelpView" xml:space="preserve">
    <value>By Default this group will be able to open and view resources on the server. 	Typically this is used by Business Analysts to sign off work and participate in the development process.</value>
  </data>
  <data name="SettingsSecurityServerHelpWindowsGroup" xml:space="preserve">
    <value>To set server wide permissions for security, enter the Windows Group name or "Public" here followed by the system access for that group. You can click on the ellipsis for help with identifying the correct windows group.	By Default these permissions will permeate all resources on the server, unless specified below in Resource Permissions.	Permissions are cumulative in nature e.g. If someone is a member of two groups and only one of those groups has Contribute permission, then that member WILL have Contribute permission. 	The Public group grants any and every user those permissions.</value>
  </data>
  <data name="SharepointDeleteHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the number of records deleted.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharePointDownloadHelpFolder" xml:space="preserve">
    <value>Enter SharePoint file download path &lt;br /&gt;	Example:&lt;br /&gt; 	SharedFolder/Help.txt&lt;br /&gt;	SharedFolder/HelpFolder/[[Scalar]].&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharepointEditServerHelp" xml:space="preserve">
    <value>Edit the connection properties of the selected SharePoint Server.</value>
  </data>
  <data name="SharePointHelpCopyFrom" xml:space="preserve">
    <value>Enter SharePoint file From path &lt;br /&gt;	Example:&lt;br /&gt; 	SharedFolder/Help.txt&lt;br /&gt;	SharedFolder/HelpFolder/[[Scalar]].&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharePointHelpCopyTo" xml:space="preserve">
    <value>Enter SharePoint file To path &lt;br /&gt;	Example:&lt;br /&gt; 	SharedFolder/Help.txt&lt;br /&gt;	SharedFolder/HelpFolder/[[Scalar]].&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharePointHelpDelete" xml:space="preserve">
    <value>Enter SharePoint file path &lt;br /&gt;	Example:&lt;br /&gt; 	SharedFolder/Help.txt&lt;br /&gt;	SharedFolder/HelpFolder/[[Scalar]].&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharepointHelpFieldToMatchOn" xml:space="preserve">
    <value>Select the field you want to match on.</value>
  </data>
  <data name="SharepointHelpList" xml:space="preserve">
    <value>Select a list to read data from.	If the list changed, click the refresh button.	Allowed:	Select a list to read data from.</value>
  </data>
  <data name="SharepointHelpServer" xml:space="preserve">
    <value>Select a preconfigured SharePoint server source or "New SharePoint Server Source..." to add a new one.</value>
  </data>
  <data name="SharepointInsertHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or Failure.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharePointReadFolderHelpFolder" xml:space="preserve">
    <value>Read SharePoint folders and files. Enter SharePoint folder or file path &lt;br /&gt;	Example:&lt;br /&gt; 	SharedFolder/HelpFolder/Help.&lt;br /&gt;	SharedFolder/HelpFolder/MyFile.txt&lt;br /&gt;	SharedFolder/HelpFolder/[[Scalar]]&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SharepointRefreshListHelp" xml:space="preserve">
    <value>Refreshes the information from the server.</value>
  </data>
  <data name="SharepointServiceSourceServerHelp" xml:space="preserve">
    <value>The full URL of the SharePoint server</value>
  </data>
  <data name="SharepointServiceSourceTestHelp" xml:space="preserve">
    <value>Test the connection to the SharePoint server</value>
  </data>
  <data name="SharePointUploadHelpFolder" xml:space="preserve">
    <value>Enter SharePoint folder upload location path &lt;br /&gt;	Example:&lt;br /&gt; 	SharedFolder/HelpFolder/Help&lt;br /&gt;	SharedFolder/HelpFolder/[[Scalar]]&lt;br /&gt;	&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SortHelpSortField" xml:space="preserve">
    <value>To Sort a recordset enter the field in the recordset you would like to sort on.	To sort on more than one field, perform the sort action for each field you would like to sort on, ending with the priority sort.	&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SortHelpSortOrderType" xml:space="preserve">
    <value>Select the order of the sorting.	Forward will go 1-9 then a-Z.	Backward will go Z-a then 9-1.</value>
  </data>
  <data name="SQLBulkInsertEditDatabaseHelp" xml:space="preserve">
    <value>Edit the selected database connection properties</value>
  </data>
  <data name="SQLBulkInsertHelpBatchSize" xml:space="preserve">
    <value>The number of rows you would like to insert at a time.	The default is 0 which will do everything in 1 batch.	If you specify 50, then 50 rows will be bulk inserted at a time.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Number   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SQLBulkInsertHelpCheckConstraints" xml:space="preserve">
    <value>Check constraints while data is being inserted. By default, constraints are not checked.</value>
  </data>
  <data name="SQLBulkInsertHelpDatabase" xml:space="preserve">
    <value>Select a preconfigured database source or "New Database Source..." to add a new one.</value>
  </data>
  <data name="SQLBulkInsertHelpFiretriggers" xml:space="preserve">
    <value>When specified, cause the server to fire the insert triggers for the rows being inserted into the database.</value>
  </data>
  <data name="SQLBulkInsertHelpInputData" xml:space="preserve">
    <value>To bulk insert data into a table, put the data to insert in here.	Using recordset (*) notation will put the entire recordset in and is the normal usage scenario for large data inserts to SQL.	A single Recordset will yield the best performance. Do not mix, scalars and/or different recordsets for optimum performance.	To quickly change the input data, press the Quick Variable Input button and amend the mappings as necessary.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SQLBulkInsertHelpKeepidentity" xml:space="preserve">
    <value>Preserve source identity values. When not specified, identity values are assigned by the destination.</value>
  </data>
  <data name="SQLBulkInsertHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or the record numbers with errors.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SQLBulkInsertHelpSkipblankrows" xml:space="preserve">
    <value>Blank records will not be added to the SQL table.</value>
  </data>
  <data name="SQLBulkInsertHelpTable" xml:space="preserve">
    <value>Select a table to perform the bulk insert into.	If the table schema has changed or recently added to the source, click the refresh button.</value>
  </data>
  <data name="SQLBulkInsertHelpTablelock" xml:space="preserve">
    <value>Obtain a bulk update lock for the duration of the bulk copy operation. When not specified, row locks are used.</value>
  </data>
  <data name="SqlBulkInsertHelpTimeout" xml:space="preserve">
    <value>The number of seconds you would like the operation to complete in.	All batches in total must complete within this time period.	The default is 0 which will be no time constraint.	If you specify 30, then 30 seconds will be allowed for the entire operation to complete before timing out.	Note, the timeout is purely for the actual SQL connection and not the preparation of the data to be inserted.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SqlBulkInsertHelpUseInternalTransaction" xml:space="preserve">
    <value>When specified, each batch of the bulk-copy operation will occur within a transaction.	Allowed:	When specified, each batch of the bulk-copy operation will occur within a transaction.</value>
  </data>
  <data name="SQLBulkInsertRefreshListHelp" xml:space="preserve">
    <value>Refresh the information from the server</value>
  </data>
  <data name="SystemInformationHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns the type of system information selected.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="SystemInformationHelpSysInfoType" xml:space="preserve">
    <value>Select the type of system information you would like to use.</value>
  </data>
  <data name="TestEmailAccountHelp" xml:space="preserve">
    <value>Test the email account is working</value>
  </data>
  <data name="TestsDeleteSelectedTestHelpText" xml:space="preserve">
    <value>Delete this test</value>
  </data>
  <data name="ToolboxViewFilterSearchHelp" xml:space="preserve">
    <value>Filters the content of the toolbox.</value>
  </data>
  <data name="TreatNullAsZeroHelp" xml:space="preserve">
    <value>If no records exist (NULL), use 0 (Zero) instead.
    No recordset exists will be treated as a recordset with no records.</value>
  </data>
  <data name="UniqueHelpInFields" xml:space="preserve">
    <value>To identify unique information in a recordset, put the comma separated fields that need to be unique in here. 	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UniqueHelpResults" xml:space="preserve">
    <value>Returns the unique combinations into the variables specified. If there are multiple fields being returned, there should be multiple Results fields specified. Use a comma to separate the variables.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UniqueHelpReturnFields" xml:space="preserve">
    <value>Which fields from the recordset would you like returned when a Unique combination is found? Use a comma separated list of the fields.	Where multiple rows are the same, the first one will be deemed Unique.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UnzipHelpArchivePassword" xml:space="preserve">
    <value>Specify the password needed to open the zip file here.	Leaving the Archive Password blank will result in no archive password being used to open the file.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UnzipHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put the full path of the destination you are unzipping to here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UnzipHelpForceoverwrite" xml:space="preserve">
    <value>If a file or folder already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="UnzipHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UnzipHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Unzip action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UnzipHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="UserAuthenticationHelp" xml:space="preserve">
    <value>Connect with a specific user account.</value>
  </data>
  <data name="UserNameAuthenticationHelp" xml:space="preserve">
    <value>The full username of the account you want to use to connect to this resource.</value>
  </data>
  <data name="WarewolfDefaultHelpDescription" xml:space="preserve">
    <value>&lt;h2&gt; Warewolf Help &lt;/h2&gt; 	For more information, follow the link below.	&lt;br/&gt;&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="WarewolfHelpURL" xml:space="preserve">
    <value>http://warewolf.io/knowledge-base/</value>
  </data>
  <data name="WcfServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection Endpoint properties of the selected Wcf Source&lt;br&gt;	&lt;br/&gt;	Change the Endpoint Url from, say, a development to a live environment.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledgebase.&lt;/a&gt;</value>
  </data>
  <data name="WcfServiceNewSourceHelp" xml:space="preserve">
    <value>To create a new WCF source, click New.</value>
  </data>
  <data name="WcfServiceSourcesHelp" xml:space="preserve">
    <value>Select the Wcf Source you want to use from previously setup sources.</value>
  </data>
  <data name="WcfSourceHostNameHelp" xml:space="preserve">
    <value>The Wcf service endpoint url to connect to your web service.	&lt;style type="text/css"&gt;#smtptable td{text-align:center;border:0px;}&lt;/style&gt;&lt;br/&gt;	e.g.&lt;br/&gt;	&lt;table border="1" id="smtptable"&gt;	&lt;tr align="center"&gt;&lt;th&gt;Auto Discover Url&lt;&gt;&lt;th/tr&gt;	&lt;tr&gt;&lt;td&gt;https://localhost:8085/LiveService/Method.svc&lt;/td&gt;&lt;/tr&gt; </value>
  </data>
  <data name="WebInputDefaultValueHelp" xml:space="preserve">
    <value>The test data you want to use to execute this action with.</value>
  </data>
  <data name="WebRequestHelpHeader" xml:space="preserve">
    <value>To supply additional header information in your get request, put the header info in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WebRequestHelpResult" xml:space="preserve">
    <value>Only a single variable goes in here.	Returns the response text of the web get request.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WebRequestHelpURL" xml:space="preserve">
    <value>Any data or variable can go in here.	To traverse and retrieve the raw response from a webpage, enter it in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WebServiceNewWebSourceHelp" xml:space="preserve">
    <value>Create a reusable connection to a web service.&lt;br/&gt;	&lt;br/&gt;	This allows you to create a general connection string and the create the actual web service from there so you do not need to update the core address in every service from this provider / source.</value>
  </data>
  <data name="WebServicePasteHelp" xml:space="preserve">
    <value>You can manually add the response body here.</value>
  </data>
  <data name="WebServicePasteInputHelp" xml:space="preserve">
    <value>Paste the XML, JSON or plain text response of the web service call here.&lt;br/&gt;	&lt;br/&gt;	If you do not know the response body exactly, rather execute the Test execution.</value>
  </data>
  <data name="WebServiceRequestBodyHelp" xml:space="preserve">
    <value>The request body.&lt;br/&gt;	&lt;br/&gt;	This is typically directly after the header text in the Request.</value>
  </data>
  <data name="WebServiceRequestHeadersTableHelp" xml:space="preserve">
    <value>Web Service Request Headers.&lt;br/&gt;	&lt;br/&gt;	You can use variables here in the value field like [[Header_ResponseType]]. These variable values will be requested when you drop the service on the workflow designer.</value>
  </data>
  <data name="WebServiceRequestUrlHelp" xml:space="preserve">
    <value>Web Service Request URL to execute.&lt;br/&gt;	&lt;br/&gt;	The un-editable part is determined by the Source you are using, so it's easy to change when moving environments, for example, going from development to testing, or live.</value>
  </data>
  <data name="WebServiceSelectedSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected Webservice.&lt;br&gt;	&lt;br/&gt;	Change the connection string from, say, a development service to a live service.&lt;br/&gt;	&lt;br/&gt;	&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledgebase.&lt;/a&gt;</value>
  </data>
  <data name="WebServiceSourceServerHelp" xml:space="preserve">
    <value>The base URL of the Webservice.&lt;br/&gt;	&lt;br/&gt;	This should be up to the part of the URL that contains the difference between your live and demo environments. e.g. https://myservices.mycompany.com/demo&lt;br/&gt;	&lt;br/&gt;	This will allow you to ship webservice connectors to live without having to change the base URL every time you do.</value>
  </data>
  <data name="WebServiceSourcesHelp" xml:space="preserve">
    <value>Provides a list of available saved web sources.&lt;br/&gt;	&lt;br/&gt;	If a Web Source does not exist under this list, then click the 'New' button to create a new Web Source.</value>
  </data>
  <data name="WebServiceTestCommandHelp" xml:space="preserve">
    <value>Test the Webservice to get response payload. &lt;br/&gt;	&lt;br/&gt;	This allows us to map response data back into the system for you.</value>
  </data>
  <data name="WindowsAuthenticationHelp" xml:space="preserve">
    <value>Uses the Windows Authentication protocols to authenticate the executing account. </value>
  </data>
  <data name="WriteFileHelpContents" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put the contents you want written to the file in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WriteFileHelpFilename" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To write content to a file, put the full path and file name in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WriteFileHelpMethod" xml:space="preserve">
    <value>Overwrite will replace the file contents with the new content.	Append Top puts the new content at the beginning of the file.	Append Bottom will add the new content to the end of the file.</value>
  </data>
  <data name="WriteFileHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WriteFileHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Write action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="WriteFileHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="XpathHelpResults" xml:space="preserve">
    <value>Only variables go in here.	Returns the result of the Xpath expression.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	Each Xpath expression returned will be added to the result recordset in a new record or comma separated list if a scalar variable is defined.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="XPathHelpXML" xml:space="preserve">
    <value>Any data or variable can go in here.	To traverse an XML document and return information from it, enter the raw XML in here.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="XPathHelpXPath" xml:space="preserve">
    <value>Xpath notation describing the route to the data in the XML input.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ZipHelpArchivePassword" xml:space="preserve">
    <value>Specify the password needed to open the zip file here.	Leaving the Archive Password blank will result in no password being required to open the file.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ZipHelpCompressionType" xml:space="preserve">
    <value>The system will try and match your zipping requirements as far as possible.	None creates the new file with the content and adds no compression - fastest.	Partial attempts some compression.	Normal will apply standard compression.	Max will compress the zipped file as much as possible - slowest.	Allowed:	na</value>
  </data>
  <data name="ZipHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.	Put the full path of the destination you are zipping to here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ZipHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.	To zip a file or folder, put the full path of what you want zipped in here.	You can use File System, URI, SFTP, FTP or FTPS format.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ZipHelpForceoverwrite" xml:space="preserve">
    <value>If a file already exists, you can force a new one to overwrite the old one.	Allowed:	If it exists already, force an overwrite</value>
  </data>
  <data name="ZipHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ZipHelpResult" xml:space="preserve">
    <value>Only variables go in here.	Returns Success or will be blank depending on the success of the Zip action.	You can use [[Scalar]] as well as [[Recordset().Fields]].	Using recordset () will add a new record and (*) will assign every record.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="ZipHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.	&lt;br /&gt;&lt;br /&gt;	Allowed:&lt;br /&gt;	Data   	&lt;ol&gt;	&lt;li&gt;[[Scalar]]&lt;/li&gt;	&lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;	&lt;li&gt;[[Recordset().Field]]&lt;/li&gt;	&lt;/ol&gt;</value>
  </data>
  <data name="DropboxReadFoldersHelp" xml:space="preserve">
    <value>Returns the folders that are in the given Dropbox folder, or all the folders in the folder and all the folders in the sub folders if Recursive is selected.</value>
  </data>
  <data name="DropboxReadFilesHelp" xml:space="preserve">
    <value>Returns the files that are in the given folder, or all the files in the folder and all the files in the sub folders if Recursive is selected.</value>
  </data>
  <data name="DropboxReadFilesFoldersHelp" xml:space="preserve">
    <value>Returns a list of everything in the Dropbox folder provided or everything including sub folders if Recursive is selected.</value>
  </data>
  <data name="DropBoxFileListRecursiveHelp" xml:space="preserve">
    <value>When selected, will recursively look up everything from the given path onwards - to a maximum of 2000 items. 	NOTE: Dropbox has a max return count of 2000.</value>
  </data>
  <data name="DropBoxFileListFileNameHelp" xml:space="preserve">
    <value>Returns the contents of the Dropbox folder you specify here.	This is the folder structure you want to list on Dropbox.	You can specify the type of information returned by selecting either Files (returns only files), Folders (Returns only folders) or Files and Folders for everything.</value>
  </data>
  <data name="DropBoxDownloadFileNameHelp" xml:space="preserve">
    <value>Any variable and/or data goes in here.	This is the name of the file that will be downloaded from Dropbox.	NOTE: The file path must use "/" to identify folders and not "\".</value>
  </data>
  <data name="CreateSftpPrivateKeyHelp" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To create a SFTP Key, put the full path and file or folder name here.</value>
  </data>
  <data name="Tool_Javascript" xml:space="preserve">
    <value>Use the Script tool to execute JavaScript code.</value>
  </data>
  <data name="Tool_WebMethod_Put" xml:space="preserve">
    <value>Use the HTTP Web PUT tool to execute a web PUT request. You can specify headers and other relevant data.</value>
  </data>
  <data name="Tool_WebMethod_Post" xml:space="preserve">
    <value>Use the HTTP Web POST tool to execute a web POST request. You can specify headers and other relevant data.</value>
  </data>
  <data name="Tool_WebMethod_Get" xml:space="preserve">
    <value>Use the HTTP Web GET tool to execute a web GET request. You can specify headers and other relevant data.</value>
  </data>
  <data name="Tool_WebMethod_Delete" xml:space="preserve">
    <value>Use the HTTP Web DELETE tool to execute a web DELETE request. You can specify headers and other relevant data.</value>
  </data>
  <data name="Tool_Utility_Xpath" xml:space="preserve">
    <value>Query XML data using XPath 2.0 syntax and then use the results in other parts of your workflow.</value>
  </data>
  <data name="Tool_Utility_Web_Request" xml:space="preserve">
    <value>Use the Web Request tool to execute a URL and return the server response.</value>
  </data>
  <data name="Tool_Utility_Sys_Info" xml:space="preserve">
    <value>Use the System Information tool to get local information specific to the machine that is running the workflow.</value>
  </data>
  <data name="Tool_Utility_Random" xml:space="preserve">
    <value>Use the Random tool to generate random numbers, letters, both or GUIDs.</value>
  </data>
  <data name="Tool_Utility_Rabbit_MQ_Publish" xml:space="preserve">
    <value>Use the Rabbit MQ Publish tool to publish messages to a Rabbit MQ queue. The queue will be created if it does not exist.</value>
  </data>
  <data name="Tool_Utility_Rabbit_MQ_Consume" xml:space="preserve">
    <value>Use the Rabbit MQ Consume tool to read messages off a Rabbit MQ server’s queue.</value>
  </data>
  <data name="Tool_Utility_Format_Number" xml:space="preserve">
    <value>Use the format number tool for rounding and showing decimals.</value>
  </data>
  <data name="Tool_Utility_Date_Time" xml:space="preserve">
    <value>Use the Date and Time tool to change a date’s format and add or subtract a piece of time.</value>
  </data>
  <data name="Tool_Utility_Date_Time_Diff" xml:space="preserve">
    <value>Use the Date and Time Difference tool to calculate the difference in time of two date times.</value>
  </data>
  <data name="Tool_Utility_Create_JSON" xml:space="preserve">
    <value>Use the Create JSON tool to create JSON data.</value>
  </data>
  <data name="Tool_Utility_Comment" xml:space="preserve">
    <value>Use the Comment tool to leave notes and information within your workflow.</value>
  </data>
  <data name="Tool_Utility_Calculate" xml:space="preserve">
    <value>Use the Calculate tool to apply Excel like functions and mathematical procedures.</value>
  </data>
  <data name="Tool_Utility_Aggregate_Calculate" xml:space="preserve">
    <value>To perform a calculation, put the calculation in here in BODMAS format. To use the aggregate functions, use the recordset (*) notation e.g. SUM([[Staff(*).Salaries]]) will perform one calculation and give one result that is the total of all the Salaries fields in the Staff() recordset.</value>
  </data>
  <data name="Tool_SharePoint_Upload_File" xml:space="preserve">
    <value>Use the SharePoint Upload File tool to send files to your SharePoint server. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Update_List_Item" xml:space="preserve">
    <value>Use the SharePoint Update List Item tool to update an entry on a SharePoint list. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Read_List_Item" xml:space="preserve">
    <value>Use the SharePoint Read List Item tool to Read the values off a SharePoint list. Also works with SharePoint online.</value>
  </data>
  <data name="Tool_SharePoint_Read_Folder" xml:space="preserve">
    <value>Use the SharePoint Read Folder tool to list the files in a SharePoint directory. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Move_File" xml:space="preserve">
    <value>Use the SharePoint Move File tool to move files on a SharePoint server. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Download_File" xml:space="preserve">
    <value>Use the SharePoint Download File tool to retreive a file from a SharePoint server. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Delete_List_Item" xml:space="preserve">
    <value>Use the SharePoint Delete List Item tool to delete an entry from a SharePoint list. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Delete_File" xml:space="preserve">
    <value>Use the SharePoint Delete File tool to remove a file from a SharePoint server. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Create_List_Item" xml:space="preserve">
    <value>Use the SharePoint Create List Item tool to add an entry to a SharePoint list. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_SharePoint_Copy_File" xml:space="preserve">
    <value>Use the SharePoint Copy File tool to copy a file from a  SharePoint server. Also works with SharePoint Online.</value>
  </data>
  <data name="Tool_Scripting_Script" xml:space="preserve">
    <value>Use the Script tool to execute JavaScript, Ruby or Python code.</value>
  </data>
  <data name="Tool_Scripting_CMD_Script" xml:space="preserve">
    <value>Use the CMD tool to execute command line commands like a batch file.</value>
  </data>
  <data name="Tool_Resources_WCF" xml:space="preserve">
    <value>Use the WCF tool, to execute any pre-existing WCF services you may have access to. If your service returns any data you will be able to map this data into Warewolf variables, to use later in your flow.</value>
  </data>
  <data name="Tool_Resources_Service" xml:space="preserve">
    <value>Use the Service tool to execute another Warewolf service. Or, drag and drop directly from the Explorer.</value>
  </data>
  <data name="Tool_Resources_Dot_net_DLL" xml:space="preserve">
    <value>Use the DotNet DLL tool to connect to, and execute any, DotNet DLL from inside your flow-based service.</value>
  </data>
  <data name="Tool_Resources_Com_DLL" xml:space="preserve">
    <value>Use the COM tool to connect to, and execute any, COM DLL from inside your flow-based service.</value>
  </data>
  <data name="Tool_Recordset_Unique_Records" xml:space="preserve">
    <value>Use the Unique Records tool to return all unique records in a recordset.</value>
  </data>
  <data name="Tool_Recordset_Sort" xml:space="preserve">
    <value>Use the Sort Records tool to order records either forwards or backwards.</value>
  </data>
  <data name="Tool_Recordset_Length" xml:space="preserve">
    <value>Use the Records Length tool to get the length of the recordset.</value>
  </data>
  <data name="Tool_Recordset_Find_Records" xml:space="preserve">
    <value>Use the Find Records tool to return indexes of records that match a given criteria.</value>
  </data>
  <data name="Tool_Recordset_Delete" xml:space="preserve">
    <value>Use the Delete Records tool to remove records from a recordset.</value>
  </data>
  <data name="Tool_Recordset_Count" xml:space="preserve">
    <value>Use the Count Records tool to return the number of records in a recordset.</value>
  </data>
  <data name="Tool_LoopConstruct_Select_and_Apply" xml:space="preserve">
    <value>Use the Select &amp; Apply tool to update Recordset and Object data without having to map the data out first. You can perform any number of updates or combinations of updates by using it in conjunction with the sequence tool.</value>
  </data>
  <data name="Tool_LoopConstruct_For_Each" xml:space="preserve">
    <value>Use the For Each tool to run something a few times. Very handy for processing recordset or specific records.</value>
  </data>
  <data name="Tool_Flow_Switch" xml:space="preserve">
    <value>Use the Switch tool when you need to take a different action depending on the value of a variable. Just drag another flow arm to add another possibility.</value>
  </data>
  <data name="Tool_Flow_Sequence" xml:space="preserve">
    <value>Use the sequence tool to group steps into a single step in a workflow.</value>
  </data>
  <data name="Tool_Flow_Decision" xml:space="preserve">
    <value>Use the Decision flow tool to check if something is True or False and execute different branches based on that decision.</value>
  </data>
  <data name="Tool_File_Zip" xml:space="preserve">
    <value>Use the Zip tool to compress a folder or a file into a Zip archive. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Write_File" xml:space="preserve">
    <value>Use the Write File tool to put the contents of a variable into a physical file on a disk. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Unzip" xml:space="preserve">
    <value>Use the Unzip tool to decompress a Zip file into a folder. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Rename" xml:space="preserve">
    <value>Use the Rename tool to rename a file or folder. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Read_Folder" xml:space="preserve">
    <value>Use the Read Folder tool to read the list of files in a folder into a variable. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Read_File" xml:space="preserve">
    <value>Use the Read File tool to put the contents of a file into a variable. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Move" xml:space="preserve">
    <value>Use the Move tool to move folders or files from one location to another. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Delete" xml:space="preserve">
    <value>Use the Delete tool to delete a file or a folder. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Create" xml:space="preserve">
    <value>Use the Create tool to create folders or files. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_File_Copy" xml:space="preserve">
    <value>Use the Copy tool to make a copy of a file or folder. (File System, UNC, FTP, FTPS, SFTP)</value>
  </data>
  <data name="Tool_Email_SMTP_Send" xml:space="preserve">
    <value>Use the SMTP send tool to send an email from a SMTP server e.g. Gmail</value>
  </data>
  <data name="Tool_Email_Exchange_Send" xml:space="preserve">
    <value>Use the exchange send tool to email from an Exchange email account.</value>
  </data>
  <data name="Tool_Dropbox_Upload" xml:space="preserve">
    <value>Use the Dropbox Upload tool to upload from your system to your Dropbox online account.</value>
  </data>
  <data name="Tool_Dropbox_List_Contents" xml:space="preserve">
    <value>Use the Dropbox List Contents tool to read the file, folder or file and folder information of a folder and or subfolders in your Dropbox online account.</value>
  </data>
  <data name="Tool_Dropbox_Download" xml:space="preserve">
    <value>Use the Dropbox Download tool to pull files and folders down from your Dropbox online account onto your system.</value>
  </data>
  <data name="Tool_Dropbox_Delete" xml:space="preserve">
    <value>Use the Dropbox Delete tool to remove files or folders from your Dropbox online account.</value>
  </data>
  <data name="Tool_Database_SQL_Server" xml:space="preserve">
    <value>Use the SQL tool to execute against any SQL Database. This tool will expose the stored procedures etc. that are already setup on the database. It allows you to map Warewolf data into, execute then map Warewolf data out of them.</value>
  </data>
  <data name="Tool_Database_SQL_Bulk_Insert" xml:space="preserve">
    <value>Use the Bulk Insert tool to move more than one record at a time into Microsoft SQL Server. This tool exposes the built-in functionality options and is highly performant when used exclusively with the Recordset data going in.</value>
  </data>
  <data name="Tool_Database_PostgreSQL" xml:space="preserve">
    <value>Use the PostgreSQL tool to execute against any PostgreSQL database. This tool will expose the stored procedures etc. that are already setup on the database and allow you to map Warewolf data into, execute and then map Warewolf data out of them.</value>
  </data>
  <data name="Tool_Database_Oracle" xml:space="preserve">
    <value>Use the Oracle tool to execute against any Oracle database. This tool will expose the stored procedures etc. that are already setup on the database and allow you to map Warewolf data into, execute and then map Warewolf data out of them.</value>
  </data>
  <data name="Tool_Database_ODBC" xml:space="preserve">
    <value>Use the ODBC tool to execute against any ODBC Data Source. This tool will execute your commands against the ODBC on your computer. It allows you to map Warewolf data into, execute then map Warewolf data out of them.</value>
  </data>
  <data name="Tool_Database_MySQL" xml:space="preserve">
    <value>Use the MySQL tool to execute against any MySQL Database. This tool will expose the stored procedures etc. that are already set up on the database. It allows you to map Warewolf data into, execute and then map the Warewolf data out of them.</value>
  </data>
  <data name="Tool_Data_Replace" xml:space="preserve">
    <value>Use the Replace tool to find and replace information in a variable / recordset. And return the count of how many were replaced.</value>
  </data>
  <data name="Tool_Data_Find_Index" xml:space="preserve">
    <value>Use the Find Index tool to find the numeric index of one or more occurrences of something in that variable.</value>
  </data>
  <data name="Tool_Data_Data_Split" xml:space="preserve">
    <value>Use the Data Split to break up a variable into multiple variables based on some character or index, a new line or a tab etc.</value>
  </data>
  <data name="Tool_Data_Data_Merge" xml:space="preserve">
    <value>Use the Data Merge to join recordset data together. Very handy for making flat files.</value>
  </data>
  <data name="Tool_Data_Case_Convert" xml:space="preserve">
    <value>Use the Case Conversion tool to convert or change the case of text.</value>
  </data>
  <data name="Tool_Data_Base_Convert" xml:space="preserve">
    <value>Use the Base Conversion tool to convert data From Text, Base64, Hex and Binary to Text, Base64, Hex and Binary.</value>
  </data>
  <data name="Tool_Data_Assign" xml:space="preserve">
    <value>Use the Assign tool to set the value of a variable.</value>
  </data>
  <data name="Tool_Data_Assign_Object" xml:space="preserve">
    <value>Use the Assign Object tool to manipulate Object data. You can use the Assign Object tool inside a Select &amp; Apply tool for more fine-grained control of the manipulation.</value>
  </data>
  <data name="Tool_Ruby" xml:space="preserve">
    <value>Use the Script tool to execute Ruby code.</value>
  </data>
  <data name="Tool_Python" xml:space="preserve">
    <value>Use the Script tool to execute Python code.</value>
  </data>
</root>