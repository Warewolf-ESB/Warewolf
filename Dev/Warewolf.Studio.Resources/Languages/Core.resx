<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LessThanServerVersion" xml:space="preserve">
    <value>less than 0.4.19.1</value>
  </data>
  <data name="CompareCurrentServerVersion" xml:space="preserve">
    <value>0.0.0.6</value>
  </data>
  <data name="About_Content" xml:space="preserve">
    <value>Studio: Version {0}
Server: Version {1}

Software development by: www.dev2.co.za
</value>
  </data>
  <data name="SendErrorReportUrl" xml:space="preserve">
    <value>https://warewolf.userecho.com/api/v2/forums/1/topics.json?access_token=Lc2neiss3Kwc5jBrMcX9nq9v2XfPlRyomaE4bW69</value>
  </data>
  <data name="About_Description_Header" xml:space="preserve">
    <value>About Server and Studio</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
  <data name="DeleteVersionMessage" xml:space="preserve">
    <value>"Are you sure you want to delete {0}?"</value>
  </data>
  <data name="DeleteVersionMessageHeader" xml:space="preserve">
    <value>Delete Version</value>
  </data>
  <data name="DidYouKnow" xml:space="preserve">
    <value>Did you know?</value>
  </data>
  <data name="GenericConfirmation" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="InputVariablesTip" xml:space="preserve">
    <value>You can pass variables into your workflow{0}by selecting the Input checkbox{0}in the Variables window.</value>
  </data>
  <data name="InvalidTextHeader" xml:space="preserve">
    <value>"Invalid text"</value>
  </data>
  <data name="InvalidTextMessage" xml:space="preserve">
    <value>"{0} is invalid. Warewolf only supports Latin characters"</value>
  </data>
  <data name="InvalidPermissionHeader" xml:space="preserve">
    <value>"Invalid text"</value>
  </data>
  <data name="InvalidPermissionMessage" xml:space="preserve">
    <value>"{0} is invalid. Warewolf only supports Latin characters"</value>
  </data>
  <data name="RenameConflictDescription" xml:space="preserve">
    <value>The following task has been renamed {0} -&gt; {1}. You will lose the history for the old task.{2} Would you like to save the new name?{2}-------------------------------------------------------------------" + "Yes - Save with the new name.{2}No - Save with the old name.{2}Cancel - Returns you to Scheduler.</value>
  </data>
  <data name="RenameConflictHeader" xml:space="preserve">
    <value>Rename conflict</value>
  </data>
  <data name="RollbackHeader" xml:space="preserve">
    <value>Make current version</value>
  </data>
  <data name="RollbackMessage" xml:space="preserve">
    <value>"{0} will become the current version.{1}Do you want to proceed ?"</value>
  </data>
  <data name="SaveErrorHeader" xml:space="preserve">
    <value>Saving Error</value>
  </data>
  <data name="SchedulerChangesHeader" xml:space="preserve">
    <value>Scheduler Task has changes</value>
  </data>
  <data name="ServerSourceNotConnected" xml:space="preserve">
    <value>Server is not connected</value>
  </data>
  <data name="ServerSourceNotConnectedSettingsDescription" xml:space="preserve">
    <value>You cannot change the settings for a server that is offline.</value>
  </data>
  <data name="ServerSourceUnreachableErrorHeader" xml:space="preserve">
    <value>Server is unreachable</value>
  </data>
  <data name="ServerSourceUnreachableHeaderMessage" xml:space="preserve">
    <value>Unable to reach {0}: Connection timed out.{1} Make sure the remote computer is powered on.{1}{1} Would you like to re-try? {1}</value>
  </data>
  <data name="SettingsChangedDescription" xml:space="preserve">
    <value>"Settings have not been saved.{0}Would you like to save the settings? {0}-------------------------------------------------------------------Yes - Save the settings.{0}No - Discard your changes.{0}Cancel - Returns you to settings.</value>
  </data>
  <data name="SettingsChangedHeader" xml:space="preserve">
    <value>Settings have changed</value>
  </data>
  <data name="ServerSourceDialogAddressLabel" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="AuthenticationTypeLabel" xml:space="preserve">
    <value>Authentication Type:</value>
  </data>
  <data name="PasswordLabel" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="TestConnectionLabel" xml:space="preserve">
    <value>Test Connection</value>
  </data>
  <data name="UserNameLabel" xml:space="preserve">
    <value>User Name:</value>
  </data>
  <data name="DefaultQueryLabel" xml:space="preserve">
    <value>Default Query:</value>
  </data>
  <data name="ServerNameLabel" xml:space="preserve">
    <value>Server Name:</value>
  </data>
  <data name="MenuDialogDatabaseLabel" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="MenuDialogDebugLabel" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="MenuDialogStopDebugLabel" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="MenuDialogDeployLabel" xml:space="preserve">
    <value>Deploy</value>
  </data>
  <data name="MenuDialogDLLLabel" xml:space="preserve">
    <value>DLL</value>
  </data>
  <data name="MenuDialogForumsLabel" xml:space="preserve">
    <value>Forums</value>
  </data>
  <data name="MenuDialogLockLabel" xml:space="preserve">
    <value>Lock Menu</value>
  </data>
  <data name="MenuDialogNewLabel" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="MenuDialogNewVersionLabel" xml:space="preserve">
    <value>New Version</value>
  </data>
  <data name="MenuDialogSaveLabel" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="MenuDialogSettingsLabel" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="MenuDialogSupportLabel" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MenuDialogTaskLabel" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="MenuDialogToursLabel" xml:space="preserve">
    <value>Tours</value>
  </data>
  <data name="MenuDialogUnLockLabel" xml:space="preserve">
    <value>Unlock Menu</value>
  </data>
  <data name="MenuDialogWebLabel" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="ManageOAuthTypeTooltip" xml:space="preserve">
    <value>Select the provider you want to use</value>
  </data>
  <data name="ManageOAuthTypesHelp" xml:space="preserve">
    <value>Select the provider you want to use for Authentication. The provider must be compatible with the tool you are using. Make sure you have setup the account on the external application correctly.</value>
  </data>
  <data name="ManageOAuthKeyTooltip" xml:space="preserve">
    <value>The application key provided by the app</value>
  </data>
  <data name="ManageOAuthKeyHelp" xml:space="preserve">
    <value>The app key provided by the application that is doing the authentication. You will need to log into that application and follow their instructions to generate this key.</value>
  </data>
  <data name="ManageOAuthAuthoriseTooltip" xml:space="preserve">
    <value>Validate the key with the provider</value>
  </data>
  <data name="ManageOAuthAuthoriseHelp" xml:space="preserve">
    <value>Warewolf needs to get Authorization from the external application to connect using your key and credentials. Make sure your application is setup correctly on the remote system before continuing with this step.&lt;br/&gt;
&lt;br/&gt;
Dropbox: &lt;a href="https://www.dropbox.com/developers/apps/create"&gt;Create your app in Dropbox here.&lt;/a&gt;&lt;br/&gt;
Make sure you have set the &lt;b&gt;Redirect URIs&lt;/b&gt; in your app to:
https://www.dropbox.com/1/oauth2/redirect_receiver/</value>
  </data>
  <data name="ConnectControlConnectionsToolTip" xml:space="preserve">
    <value>Select the Warewolf server you want to use or click New Remote Server...</value>
  </data>
  <data name="ConnectControlEditConnectionToolTip" xml:space="preserve">
    <value>Edit the selected server</value>
  </data>
  <data name="ConnectControlToggleConnectionToolTip" xml:space="preserve">
    <value>Connect / disconnect the selected server</value>
  </data>
  <data name="DebugToolTip" xml:space="preserve">
    <value>Run and debug your workflow service</value>
  </data>
  <data name="ExplorerItemEditToolTip" xml:space="preserve">
    <value>You have view permission on this item. Click to open</value>
  </data>
  <data name="ExplorerItemExecuteToolTip" xml:space="preserve">
    <value>You have execute permission on this item. Click to execute</value>
  </data>
  <data name="ExplorerRefreshToolTip" xml:space="preserve">
    <value>Refresh the connected resources</value>
  </data>
  <data name="ExplorerSearchToolTip" xml:space="preserve">
    <value>Filter the connected resources</value>
  </data>
  <data name="ExplorerClearSearchTooltip" xml:space="preserve">
    <value>Clear the filter on connected resources</value>
  </data>
  <data name="ToolboxRefreshToolTip" xml:space="preserve">
    <value>Refresh the toolbox</value>
  </data>
  <data name="ToolboxSearchToolTip" xml:space="preserve">
    <value>Search filter for your tools</value>
  </data>
  <data name="ToolboxClearSearchTooltip" xml:space="preserve">
    <value>Clear the filter box</value>
  </data>
  <data name="DebugOutputOptionsToolTip" xml:space="preserve">
    <value>Adjust the debug output</value>
  </data>
  <data name="ExpandCollapseAllToolTip" xml:space="preserve">
    <value>Expand or collapse all execution nodes.</value>
  </data>
  <data name="DebugOutputSearchToolTip" xml:space="preserve">
    <value>Filter the debug output information</value>
  </data>
  <data name="DebugOutputClearSearchTooltip" xml:space="preserve">
    <value>Clear the filter box</value>
  </data>
  <data name="ManageDbServiceSourcesTooltip" xml:space="preserve">
    <value>Select the database you want to use</value>
  </data>
  <data name="ManageExchangeServiceSourcesTooltip" xml:space="preserve">
    <value>Select the connection you want to use</value>
  </data>
  <data name="ManageDbServiceEditSourceTooltip" xml:space="preserve">
    <value>Edits the selected database source</value>
  </data>
  <data name="ManageExchangeServiceEditSourceTooltip" xml:space="preserve">
    <value>Edits the selected connection source</value>
  </data>
  <data name="ManageDbServiceNewSourceTooltip" xml:space="preserve">
    <value>Create a new connection to a database</value>
  </data>
  <data name="ManageExchangeServiceNewSourceTooltip" xml:space="preserve">
    <value>Create a new connection to an exchange server</value>
  </data>
  <data name="ManageDbServiceActionsTooltip" xml:space="preserve">
    <value>Select the procedure or function you want to perform on the database</value>
  </data>
  <data name="ManageOdbcServiceActionsTooltip" xml:space="preserve">
    <value>ManageOdbcServiceActionsTooltip</value>
  </data>
  <data name="ManageOdbcServiceActionsHelpText" xml:space="preserve">
    <value>ManageOdbcServiceActionsHelpText</value>
  </data>
  <data name="ManageDbServiceTestActionTooltip" xml:space="preserve">
    <value>Test the procedure or function</value>
  </data>
  <data name="ManageDbSourceServerTypeTooltip" xml:space="preserve">
    <value>Select the type of database you want to connect to</value>
  </data>
  <data name="ManageDbSourceServerNameTooltip" xml:space="preserve">
    <value>The name or URL of the server that hosts the database</value>
  </data>
  <data name="ManageDbSourceUserNameTooltip" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="ManageDbSourcePasswordTooltip" xml:space="preserve">
    <value>Password for the account</value>
  </data>
  <data name="ManageDbSourceDatabaseTooltip" xml:space="preserve">
    <value>Select the database you want to use</value>
  </data>
  <data name="ManageDbSourceTestTooltip" xml:space="preserve">
    <value>Test the connection to the database server</value>
  </data>
  <data name="ManageDbSourceCancelTestTooltip" xml:space="preserve">
    <value>Cancel the execution of the test</value>
  </data>
  <data name="ManagePluginServiceSourcesTooltip" xml:space="preserve">
    <value>Select the plugin you want to use</value>
  </data>
  <data name="ManagePluginServiceEditSourceTooltip" xml:space="preserve">
    <value>Edits the selected plugin source connection</value>
  </data>
  <data name="ManagePluginServiceNewSourceTooltip" xml:space="preserve">
    <value>Create a new connection to a plugin</value>
  </data>
  <data name="ManagePluginSourceFilterTooltip" xml:space="preserve">
    <value>Filter for the file you want or GAC entry</value>
  </data>
  <data name="ManagePluginSourceClearSearchTooltip" xml:space="preserve">
    <value>Clear the filter criteria</value>
  </data>
  <data name="ManagePluginSourceRefreshTooltip" xml:space="preserve">
    <value>Refresh the available files and GAC entries</value>
  </data>
  <data name="ManagePluginSourceAssemblyNameTooltip" xml:space="preserve">
    <value>The full path or GAC name of the DLL you want to use</value>
  </data>
  <data name="ManageWebServiceSourcesTooltip" xml:space="preserve">
    <value>Select the webservice host you want to use</value>
  </data>
  <data name="ManageWebServiceEditSourceTooltip" xml:space="preserve">
    <value>Edits the selected webservice host connection</value>
  </data>
  <data name="ManageWebServiceNewSourceTooltip" xml:space="preserve">
    <value>Create a new connection to a webservice</value>
  </data>
  <data name="ManageWebServiceRequestBodyTooltip" xml:space="preserve">
    <value>The body of the request</value>
  </data>
  <data name="ManageWebServicePasteTooltip" xml:space="preserve">
    <value>Paste a customized response instead</value>
  </data>
  <data name="ManageWebSourceHostNameTooltip" xml:space="preserve">
    <value>The base URL of the webservice</value>
  </data>
  <data name="ManageWebSourceUserNameTooltip" xml:space="preserve">
    <value>The name of the account</value>
  </data>
  <data name="ManageWebSourcePasswordTooltip" xml:space="preserve">
    <value>The account password</value>
  </data>
  <data name="ManageWebSourceDefaultQueryTooltip" xml:space="preserve">
    <value>Optional default query</value>
  </data>
  <data name="ManageWebSourceTestTooltip" xml:space="preserve">
    <value>Test the webservice source connection</value>
  </data>
  <data name="ManageWebSourceCancelTestTooltip" xml:space="preserve">
    <value>Cancel the test execution</value>
  </data>
  <data name="ManageWebSourceViewInBrowserTooltip" xml:space="preserve">
    <value>Open this URL in your default browser</value>
  </data>
  <data name="ManageEmailHostNameTooltip" xml:space="preserve">
    <value>Email Server Name</value>
  </data>
  <data name="ManageEmailUserNameTooltip" xml:space="preserve">
    <value>Email account name of the sender</value>
  </data>
  <data name="ManageEmailPasswordTooltip" xml:space="preserve">
    <value>Password of the account</value>
  </data>
  <data name="ManageEmailEnableSslYesTooltip" xml:space="preserve">
    <value>Does the server require SSL?</value>
  </data>
  <data name="ManageEmailEnableSslNoTooltip" xml:space="preserve">
    <value>Does the server require SSL?</value>
  </data>
  <data name="ManageEmailPortTooltip" xml:space="preserve">
    <value>Port used by the mail server</value>
  </data>
  <data name="ManageEmailTimeoutTooltip" xml:space="preserve">
    <value>Timeout in seconds when trying to send email</value>
  </data>
  <data name="ManageEmailFromTooltip" xml:space="preserve">
    <value>Email address of the sending account</value>
  </data>
  <data name="ManageEmailToTooltip" xml:space="preserve">
    <value>Email address to send the test email to</value>
  </data>
  <data name="ManageEmailSendTooltip" xml:space="preserve">
    <value>Send the test email</value>
  </data>
  <data name="ManageEmailAttachmentAddDriveTooltip" xml:space="preserve">
    <value>Select the files you want to attach</value>
  </data>
  <data name="ManageEmailAttachmentDriveNameTooltip" xml:space="preserve">
    <value>The full path of the files you would like to attach</value>
  </data>
  <data name="ManageEmailAttachmentCancelTooltip" xml:space="preserve">
    <value>Cancel changes and close window</value>
  </data>
  <data name="ManageEmailAttachmentAttachTooltip" xml:space="preserve">
    <value>Attach the selected files to the email</value>
  </data>
  <data name="ManageWebPasteResponseTooltip" xml:space="preserve">
    <value>Paste the full response in here</value>
  </data>
  <data name="ManageWebPasteSaveTooltip" xml:space="preserve">
    <value>Save this response definition</value>
  </data>
  <data name="ManageWebPasteCancelTooltip" xml:space="preserve">
    <value>Cancel this action</value>
  </data>
  <data name="SharepointSourceServerNameTooltip" xml:space="preserve">
    <value>SharePoint URL</value>
  </data>
  <data name="SharepointSourceUserNameTooltip" xml:space="preserve">
    <value>The username used to connect to SharePoint</value>
  </data>
  <data name="SharepointSourcePasswordTooltip" xml:space="preserve">
    <value>Password for the username used to connect to SharePoint</value>
  </data>
  <data name="SharepointSourceTestTooltip" xml:space="preserve">
    <value>Test the connection to the SharePoint server</value>
  </data>
  <data name="SharepointSourceCancelTestTooltip" xml:space="preserve">
    <value>Cancel the test connection to the SharePoint server</value>
  </data>
  <data name="DeploySelectDependenciesTooltip" xml:space="preserve">
    <value>Automatically select dependent resources. WARNING: Overwriting Sources on the destination is not recommended.</value>
  </data>
  <data name="DeployCommandTooltip" xml:space="preserve">
    <value>Click to Deploy to source server resources to the destination server.</value>
  </data>
  <data name="MenuDatabaseToolTip" xml:space="preserve">
    <value>Create a new database source</value>
  </data>
  <data name="MenuDeployToolTip" xml:space="preserve">
    <value>Move resources between Warewolf servers</value>
  </data>
  <data name="MenuDownloadToolTip" xml:space="preserve">
    <value>A new version of Warewolf is available for download</value>
  </data>
  <data name="MenuHelpToolTip" xml:space="preserve">
    <value>Knowledge Base</value>
  </data>
  <data name="MenuLockToolTip" xml:space="preserve">
    <value>Lock / unlock the menu</value>
  </data>
  <data name="MenuNewServiceToolTip" xml:space="preserve">
    <value>Create a new service</value>
  </data>
  <data name="MenuPluginToolTip" xml:space="preserve">
    <value>Create a new plugin source</value>
  </data>
  <data name="MenuSaveToolTip" xml:space="preserve">
    <value>Save this tab</value>
  </data>
  <data name="MenuSchedulerToolTip" xml:space="preserve">
    <value>Schedule a service to run</value>
  </data>
  <data name="MenuSettingsToolTip" xml:space="preserve">
    <value>Configure settings</value>
  </data>
  <data name="MenuWebServiceToolTip" xml:space="preserve">
    <value>Create a new web source</value>
  </data>
  <data name="ServerSourceNewHeaderLabel" xml:space="preserve">
    <value>New Server Source</value>
  </data>
  <data name="ServerSourceDialogAddressPortTip" xml:space="preserve">
    <value>Enter the port on the server</value>
  </data>
  <data name="ServerSourceDialogAddressToolTip" xml:space="preserve">
    <value>Enter the IP address, domain name or computer name of the server you want to connect to</value>
  </data>
  <data name="UserAuthenticationToolTip" xml:space="preserve">
    <value>Connect using a specific account</value>
  </data>
  <data name="PasswordToolTip" xml:space="preserve">
    <value>Enter the corresponding password</value>
  </data>
  <data name="ServerSourceDialogProtocolToolTip" xml:space="preserve">
    <value>Select the protocol you want to connect on</value>
  </data>
  <data name="ServerSourceDialogPublicToolTip" xml:space="preserve">
    <value>Connect using Public credentials only</value>
  </data>
  <data name="ServerSourceDialogsTestToolTip" xml:space="preserve">
    <value>Test the connection to the server using these credentials</value>
  </data>
  <data name="UserNameToolTip" xml:space="preserve">
    <value>Enter the user name you want to connect with</value>
  </data>
  <data name="WindowsAuthenticationToolTip" xml:space="preserve">
    <value>Connect using the logged on users credentials</value>
  </data>
  <data name="DatabaseSourceDatabaseLabel" xml:space="preserve">
    <value>Database:</value>
  </data>
  <data name="DatabaseSourceServerLabel" xml:space="preserve">
    <value>Server:</value>
  </data>
  <data name="DatabaseSourceServerNewHeaderLabel" xml:space="preserve">
    <value>New Database Source</value>
  </data>
  <data name="OAuthSourceNewHeaderLabel" xml:space="preserve">
    <value>New OAuth Source</value>
  </data>
  <data name="OAuthSourceRedirectUri" xml:space="preserve">
    <value>https://www.dropbox.com/1/oauth2/redirect_receiver/</value>
  </data>
  <data name="PluginSourceNewHeaderLabel" xml:space="preserve">
    <value>New Plugin Source</value>
  </data>
  <data name="DatabaseWebserviceLabel" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="WebserviceNewHeaderLabel" xml:space="preserve">
    <value>New Web Service Source</value>
  </data>
  <data name="SharePointServiceNewHeaderLabel" xml:space="preserve">
    <value>New SharePoint Service Source</value>
  </data>
  <data name="DatabaseSourceTypeLabel" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="CancelTest" xml:space="preserve">
    <value>Cancel Test</value>
  </data>
  <data name="DeploySelectDependenciesHelp" xml:space="preserve">
    <value>Automatically include everything that this resource would need to execute at the destination.&lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;Warning: &lt;b/&gt;Deploying Sources that are already on the destination Server, will overwrite their connection strings. </value>
  </data>
  <data name="DeployNewResourcesViewHelp" xml:space="preserve">
    <value>These are the new resources that will be found on the remote server after deploy.</value>
  </data>
  <data name="DeployOverridesCountViewHelp" xml:space="preserve">
    <value>These resources will be overwritten on the destination server.&lt;br/&gt;
&lt;br/&gt;
If the names are different, it is because the resource has been renamed. It will still be overwritten and then Source name will be used at the Destination.</value>
  </data>
  <data name="DeployCommandHelp" xml:space="preserve">
    <value>Deploy the selected Source files to the Destination Server.</value>
  </data>
  <data name="DatabaseSourceServerTypesHelp" xml:space="preserve">
    <value>These are the currently supported database engines.</value>
  </data>
  <data name="DatabaseSourceDatabasesHelp" xml:space="preserve">
    <value>The available databases on the Server.</value>
  </data>
  <data name="DatabaseSourceServerHelp" xml:space="preserve">
    <value>The Server/Computer Name on your network with the Database Engine.&lt;br/&gt;
&lt;br/&gt;
Alternatively, the URL for your online Server, such as Azure SQL.</value>
  </data>
  <data name="DatabaseSourceTestConnectionHelp" xml:space="preserve">
    <value>Test the connection to the Database. </value>
  </data>
  <data name="DatabaseSourceCancelHelp" xml:space="preserve">
    <value>Cancels the setup of this database source.</value>
  </data>
  <data name="DatabaseServiceSourceTypesHelp" xml:space="preserve">
    <value>The available database connections. To create a new connection, click New.</value>
  </data>
  <data name="ExchangeServiceSourceTypesHelp" xml:space="preserve">
    <value>The available exchange connections. To create a new connection, click New.</value>
  </data>
  <data name="DatabaseServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected Database.&lt;br&gt;
&lt;br/&gt;
Change the connection string from, say, a development database to a live database.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="ExchangeServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected connection.&lt;br&gt;
&lt;br/&gt;
Change the connection string from, say, a development database to a live database.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DatabaseServiceNewSourceHelp" xml:space="preserve">
    <value>Create a connection to a new database server.</value>
  </data>
  <data name="ExchangeServiceNewSourceHelp" xml:space="preserve">
    <value>Create a connection to a new exchange server.</value>
  </data>
  <data name="DatabaseServiceSelectActionHelp" xml:space="preserve">
    <value>The available database actions you can perform such as stored procedures or function calls.</value>
  </data>
  <data name="DatabaseServiceRefreshHelp" xml:space="preserve">
    <value>Refreshes the list of available actions on the database.</value>
  </data>
  <data name="ServiceTestActionTooltip" xml:space="preserve">
    <value>Test the procedure or function</value>
  </data>
  <data name="ServiceTestHelp" xml:space="preserve">
    <value>Test the execution of this resource.</value>
  </data>
  <data name="ServiceTestDoneButtonHelp" xml:space="preserve">
    <value>Accept the test response results. This will use the results from the test execution to determine the actions outputs.</value>
  </data>
  <data name="ServiceTestDoneButtonTooltip" xml:space="preserve">
    <value>Accept these results and continue</value>
  </data>
  <data name="ServiceTestCancelButtonTooltip" xml:space="preserve">
    <value>Cancel the test execution and return to mappings</value>
  </data>
  <data name="ServiceTestCancelButtonHelp" xml:space="preserve">
    <value>Cancel the test response results. Cancelling will not use the results from the test execution to determine the actions outputs.</value>
  </data>
  <data name="SharepointServiceSourceServerHelp" xml:space="preserve">
    <value>The full URL of the SharePoint server</value>
  </data>
  <data name="SharepointServiceSourceTestHelp" xml:space="preserve">
    <value>Test the connection to the SharePoint server</value>
  </data>
  <data name="MenuNewServiceHelp" xml:space="preserve">
    <value>Create a new Warewolf Hosted Service. This flow based service is that start of all orchestration in Warewolf.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/getting-started/" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="MenuSaveTabHelp" xml:space="preserve">
    <value>Saves the active tab in the studio</value>
  </data>
  <data name="MenuDeployHelp" xml:space="preserve">
    <value>Move resources between multiple Warewolf Servers.&lt;br/&gt;
&lt;br/&gt;
Deploy is the safest and recommended way of moving resources between Warewolf Servers.</value>
  </data>
  <data name="MenuNewDatabaseConnectorHelp" xml:space="preserve">
    <value>Connect to a database to execute stored procedures, functions and TSQL.</value>
  </data>
  <data name="MenuNewPluginConnectorHelp" xml:space="preserve">
    <value>Connect to dll's to execute any custom code.</value>
  </data>
  <data name="MenuNewWebConnectorHelp" xml:space="preserve">
    <value>Connect to any webservice using REST or SOAP.</value>
  </data>
  <data name="MenuSchedulerHelp" xml:space="preserve">
    <value>Schedule workflow executions</value>
  </data>
  <data name="MenuDebugHelp" xml:space="preserve">
    <value>Debug your Service in either the Studio or the Browser.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/debugging/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="MenuSettingsHelp" xml:space="preserve">
    <value>Edit or View system settings such as Security and Logging.</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>A quick link to the Knowledge Base and other helpful resources.</value>
  </data>
  <data name="MenuNewVersionHelp" xml:space="preserve">
    <value>A new version of Warewolf is available for download.</value>
  </data>
  <data name="MenuLockMenuHelp" xml:space="preserve">
    <value>Lock the Menu bar either open or closed, or Unlock to allow dynamic menu opening on mouse over.</value>
  </data>
  <data name="WebServiceSourceServerHelp" xml:space="preserve">
    <value>The base URL of the Webservice.&lt;br/&gt;
&lt;br/&gt;
This should be up to the part of the URL that contains the difference between your live and demo environments. e.g. https://myservices.mycompany.com/demo&lt;br/&gt;
&lt;br/&gt;
This will allow you to ship webservice connectors to live without having to change the base URL every time you do.</value>
  </data>
  <data name="WebServiceSourcesHelp" xml:space="preserve">
    <value>Provides a list of available saved web sources.&lt;br/&gt;
&lt;br/&gt;
If a Web Source does not exist under this list, then click the 'New' button to create a new Web Source.</value>
  </data>
  <data name="WebServiceSelectedSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected Webservice.&lt;br&gt;
&lt;br/&gt;
Change the connection string from, say, a development service to a live service.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledgebase.&lt;/a&gt;</value>
  </data>
  <data name="WebServiceNewWebSourceHelp" xml:space="preserve">
    <value>Create a reusable connection to a web service.&lt;br/&gt;
&lt;br/&gt;
This allows you to create a general connection string and the create the actual web service from there so you do not need to update the core address in every service from this provider / source.</value>
  </data>
  <data name="WebServiceRequestBodyHelp" xml:space="preserve">
    <value>The request body.&lt;br/&gt;
&lt;br/&gt;
This is typically directly after the header text in the Request.</value>
  </data>
  <data name="WebServiceRequestUrlHelp" xml:space="preserve">
    <value>Web Service Request URL to execute.&lt;br/&gt;
&lt;br/&gt;
The un-editable part is determined by the Source you are using, so it's easy to change when moving environments, for example, going from development to testing, or live.</value>
  </data>
  <data name="WebServiceTestCommandHelp" xml:space="preserve">
    <value>Test the Webservice to get response payload. &lt;br/&gt;
&lt;br/&gt;
This allows us to map response data back into the system for you.</value>
  </data>
  <data name="WebServicePasteHelp" xml:space="preserve">
    <value>You can manually add the response body here.</value>
  </data>
  <data name="WebServicePasteInputHelp" xml:space="preserve">
    <value>Paste the XML, JSON or plain text response of the web service call here.&lt;br/&gt;
&lt;br/&gt;
If you do not know the response body exactly, rather execute the Test execution.</value>
  </data>
  <data name="WebServicePasteSaveCommandHelp" xml:space="preserve">
    <value>Saves this as the mapping that will be used by Warewolf when executing.</value>
  </data>
  <data name="WebServicePasteCancelCommandHelp" xml:space="preserve">
    <value>Cancel your changes to the response body.</value>
  </data>
  <data name="PluginSourceClearSearchHelp" xml:space="preserve">
    <value>Clears the Search Filter</value>
  </data>
  <data name="PluginSourceRefreshCommandHelp" xml:space="preserve">
    <value>Refresh the view based on the filter.&lt;br/&gt;
&lt;br/&gt;
Newly added resources should show after a refresh.</value>
  </data>
  <data name="PluginSourceDllFullNameHelp" xml:space="preserve">
    <value>The full path to the DLL. e.g. &lt;b&gt;D:\My Project\Core.dll&lt;/b&gt;&lt;br/&gt;
or
The full GAC address e.g. &lt;b&gt;GAC:TaskScheduler, Version=6.3.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&lt;/b&gt;
</value>
  </data>
  <data name="PluginServiceSourcesHelp" xml:space="preserve">
    <value>Select the DLL you want to use from previously setup sources.</value>
  </data>
  <data name="PluginServiceEditSourceHelp" xml:space="preserve">
    <value>Change the connection string properties of the selected DLL.&lt;br&gt;
&lt;br/&gt;
Change the connection string from, say, a development DLL to a live DLL.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/data-connectors" target="_blank"&gt;Read more in the Knowledgebase.&lt;/a&gt;</value>
  </data>
  <data name="PluginServiceNewSourceHelp" xml:space="preserve">
    <value>To create a reference to a new dll, click New.</value>
  </data>
  <data name="PluginServiceSelectNamespaceToolTip" xml:space="preserve">
    <value>Select a namespace to help find the correct action.</value>
  </data>
  <data name="PluginServiceSelectNamespaceHelp" xml:space="preserve">
    <value>Select a namespace if it exists to filter the actions you can perform.</value>
  </data>
  <data name="PluginServiceSelectActionToolTip" xml:space="preserve">
    <value>Select method to execute.</value>
  </data>
  <data name="PluginServiceSelectActionHelp" xml:space="preserve">
    <value>Select the method in the DLL you want to execute. You can provide a namespace filter above if you want.</value>
  </data>
  <data name="PluginServiceRefreshHelp" xml:space="preserve">
    <value>Refresh the available actions.</value>
  </data>
  <data name="DropboxSourceNewHeaderLabel" xml:space="preserve">
    <value>New Dropbox Source</value>
  </data>
  <data name="EmailSourceNewHeaderLabel" xml:space="preserve">
    <value>New Email Source</value>
  </data>
  <data name="ExchangeSourceNewHeaderLabel" xml:space="preserve">
    <value>New Exchange Source</value>
  </data>
  <data name="HostNameLabel" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="AutoDiscoverLabel" xml:space="preserve">
    <value>AutoDiscover URL</value>
  </data>
  <data name="EmailSourceEnableSslLabel" xml:space="preserve">
    <value>Enable SSL</value>
  </data>
  <data name="PortLabel" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="EmailSourceTimeoutLabel" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="EmailSourceEmailFromLabel" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="EmailSourceEmailToLabel" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="EmailSourceHostNameHelp" xml:space="preserve">
    <value>The Host name of the server you want to use for sending emails.
&lt;style type="text/css"&gt;#smtptable td{text-align:center;border:0px;}&lt;/style&gt;&lt;br/&gt;
e.g.&lt;br/&gt;
&lt;table border="1" id="smtptable"&gt;
&lt;tr align="center"&gt;&lt;th&gt;Host&lt;/th&gt;&lt;th&gt;Require SSL&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;gmail&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;yahoo&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;zoho&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;465&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp-mail.&lt;b&gt;outlook&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;live&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="EmailSourceEnableSslHelp" xml:space="preserve">
    <value>Does the Host require a secure connection?
&lt;style type="text/css"&gt;#smtptable td{text-align:center;border:0px;}&lt;/style&gt;&lt;br/&gt;
e.g.&lt;br/&gt;
&lt;table border="1" id="smtptable"&gt;
&lt;tr align="center"&gt;&lt;th&gt;Host&lt;/th&gt;&lt;th&gt;Require SSL&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;gmail&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;yahoo&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;zoho&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;465&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp-mail.&lt;b&gt;outlook&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;live&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="EmailSourcePortHelp" xml:space="preserve">
    <value>&lt;style type="text/css"&gt;
#smtptable td
{
text-align:center;
border:0px;
}
&lt;/style&gt;
The Port of the email server.
&lt;br/&gt;
e.g.&lt;br/&gt;
&lt;table border="1" id="smtptable"&gt;
&lt;tr align="center"&gt;&lt;th&gt;Host&lt;/th&gt;&lt;th&gt;Require SSL&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;gmail&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;yahoo&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;zoho&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;465&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp-mail.&lt;b&gt;outlook&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;smtp.&lt;b&gt;live&lt;/b&gt;.com&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;587&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="EmailSourceTimeoutHelp" xml:space="preserve">
    <value>The time allowed for the operation to connect before throwing an error.</value>
  </data>
  <data name="EmailSourceEmailFromHelp" xml:space="preserve">
    <value>The email address that will be used to send the email from.&lt;br/&gt;
&lt;br/&gt;
This account needs to be a valid email address/account for the Host server.</value>
  </data>
  <data name="EmailSourceEmailToHelp" xml:space="preserve">
    <value>The email address you want to send the test message to.</value>
  </data>
  <data name="DbInputDefaultValueHelp" xml:space="preserve">
    <value>Put your test data in here then click Test. If possible this execution will automatically roll back.</value>
  </data>
  <data name="DbInsertToolTipColumn" xml:space="preserve">
    <value>This data is used for testing and not at run time.</value>
  </data>
  <data name="WebInputDefaultValueHelp" xml:space="preserve">
    <value>The test data you want to use to execute this action with.</value>
  </data>
  <data name="WebInsertToolTipColumn" xml:space="preserve">
    <value>Test data for the execution</value>
  </data>
  <data name="DotNetInputDefaultValueHelp" xml:space="preserve">
    <value>The data or variable that will be passed into the action at run time.</value>
  </data>
  <data name="DotNetInsertToolTipColumn" xml:space="preserve">
    <value>Hard coded values or variables.</value>
  </data>
  <data name="InputDefaultValueHelp" xml:space="preserve">
    <value>The variable or the value that you want passed into this action.</value>
  </data>
  <data name="InputDefaultValueToolTip" xml:space="preserve">
    <value>Hard coded values or variables.</value>
  </data>
  <data name="InputEmptyIsNullDefaultValueHelp" xml:space="preserve">
    <value>If the variable coming in has no value assigned to it, this will allow you to pass it in as NULL.</value>
  </data>
  <data name="InputEmptyIsNullToolTip" xml:space="preserve">
    <value>Use NULL when empty.</value>
  </data>
  <data name="InputGenerateOutputsDefaultHelp" xml:space="preserve">
    <value>To get the response data of this action, put some test data in. The transaction will be rolled back if possible.</value>
  </data>
  <data name="MappingsRecordsetNameHelp" xml:space="preserve">
    <value>If you would like the default variables in a recordset, put the recordset name in here.</value>
  </data>
  <data name="MappingsDefaultValueHelp" xml:space="preserve">
    <value>The default value to be used when mapping this field.</value>
  </data>
  <data name="DataListDeleteButtonHelp" xml:space="preserve">
    <value>When the variable is not used in the service at all, you can select Marks the variable as an input to the service. To pass this variable into the workflow, make this checkbox selected.&lt;br/&gt;
&lt;br/&gt;
This variable is not being used in the service and can safely be deleted.</value>
  </data>
  <data name="DataListSortButtonHelp" xml:space="preserve">
    <value>Sort the variable list alphabetically.</value>
  </data>
  <data name="DataListVariableInputTooltip" xml:space="preserve">
    <value>The variable name you want to declare, without the [[ ]] braces</value>
  </data>
  <data name="DataListVariableInputHelp" xml:space="preserve">
    <value>Input the variable you want to use in your service.&lt;br/&gt;
&lt;br/&gt;
If you use a variable on the design surface it will automatically appear here.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/the-variable-list/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DataListInputCheckBoxTooltip" xml:space="preserve">
    <value>Allows this variable to be passed into the service</value>
  </data>
  <data name="DataListInputCheckBoxHelp" xml:space="preserve">
    <value>Marks the variable as an input to the service. To pass this variable into the workflow, make this checkbox selected.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/the-variable-list/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="DataListOutputCheckBoxTooltip" xml:space="preserve">
    <value>Will return this variable as a response</value>
  </data>
  <data name="DataListOutputCheckBoxHelp" xml:space="preserve">
    <value>Marks the variable as an output of the service. To return this variable from the workflow service, make this checkbox selected.&lt;br/&gt;
&lt;br/&gt;
&lt;a href="http://warewolf.io/knowledge-base/warewolf-language/"  target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="ServerProtocolHelp" xml:space="preserve">
    <value>By default, you can connect to other Warewolf Servers over HTTP or HTTPS.&lt;br/&gt;</value>
  </data>
  <data name="ServerAddressHelp" xml:space="preserve">
    <value>For network computers, type in the name of the computer on the network and select it from the drop down list.&lt;br/&gt;
&lt;br/&gt;
For remote servers, such as Hybrid cloud environments, Azure hosted servers etc., put the server URL in here.</value>
  </data>
  <data name="ServerSelectWindowsHelp" xml:space="preserve">
    <value>Uses the logged on windows account to authenticate on the remote server.</value>
  </data>
  <data name="ServerSelectUserHelp" xml:space="preserve">
    <value>Use a specific windows account to authenticate on the remote server.&lt;br/&gt;
&lt;br/&gt;
Use the domain if relevant e.g. DOMAIN\Username</value>
  </data>
  <data name="ServerSelectPublicHelp" xml:space="preserve">
    <value>Use the public account to authenticate on the remote server.&lt;br/&gt;
&lt;br/&gt;
If there are no resources on the remote server, there will be no Public authentication.</value>
  </data>
  <data name="ServerSelectPortHelp" xml:space="preserve">
    <value>By default this port will be 3143 for HTTPS connections and 3142 for HTTP connections.&lt;br/&gt;
&lt;br/&gt;
Do not change this unless you know the ports on the remote machine have been altered.</value>
  </data>
  <data name="ServerTestConnectionHelp" xml:space="preserve">
    <value>Test the connection to the remote Warewolf Server.
Make sure the relevant ports (3142, 3143 by default) are open on any firewalls between this server and the remote server.</value>
  </data>
  <data name="PasswordAuthenticationHelp" xml:space="preserve">
    <value>Enter the password for the account you want to use for authenticating.</value>
  </data>
  <data name="UserAuthenticationHelp" xml:space="preserve">
    <value>Connect with a specific user account.</value>
  </data>
  <data name="UserNameAuthenticationHelp" xml:space="preserve">
    <value>The full username of the account you want to use to connect to this resource.</value>
  </data>
  <data name="WindowsAuthenticationHelp" xml:space="preserve">
    <value>Uses the Windows Authentication protocols to authenticate the executing account. </value>
  </data>
  <data name="ConnectControlViewSelectHelp" xml:space="preserve">
    <value>Select the Warewolf Server from the drop down list that you want to use. &lt;br/&gt;
&lt;br/&gt;
If you want to connect to a Warewolf Server that is not in the drop down list, then select  &lt;b&gt;New Remote Server…&lt;/b&gt;&lt;br/&gt;
&lt;br/&gt;
Servers with an active connection will show &lt;b&gt;(Connected)&lt;/b&gt; next to them.</value>
  </data>
  <data name="ConnectControlViewEditHelp" xml:space="preserve">
    <value>Change the connection properties of the selected Warewolf Server.&lt;br&gt;
&lt;br/&gt;
Allows you to change remote server URL, Port and Authentication.&lt;br&gt;
&lt;br/&gt;
&lt;b&gt;localhost&lt;/b&gt; cannot be edited in this way.</value>
  </data>
  <data name="ConnectControlViewToggleConnectionHelp" xml:space="preserve">
    <value>Disconnects or Connects to the selected remote Warewolf Server. &lt;br/&gt;
&lt;br/&gt;
Connected Servers will be Disconnected and vice versa. &lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;localhost&lt;/b&gt; cannot be disconnected and should always be connected. If it is not connected, try restarting the Warewolf Server service in Task Manager.</value>
  </data>
  <data name="ExplorerViewFilterSearchHelp" xml:space="preserve">
    <value>Search the connected servers by filtering based on this input.</value>
  </data>
  <data name="ExplorerViewRefreshHelp" xml:space="preserve">
    <value>Refresh the connected server(s) content.</value>
  </data>
  <data name="ToolboxViewFilterSearchHelp" xml:space="preserve">
    <value>Filters the content of the toolbox.</value>
  </data>
  <data name="ToolboxViewRefreshHelp" xml:space="preserve">
    <value>Refreshes the content of the toolbox.</value>
  </data>
  <data name="DebugOutputViewFilterSearchHelp" xml:space="preserve">
    <value>Filter the debug response information</value>
  </data>
  <data name="DebugOutputViewOptionsHelp" xml:space="preserve">
    <value>Change the debug items that reflect in the debug output.</value>
  </data>
  <data name="DebugOutputViewExpandAllHelp" xml:space="preserve">
    <value>Expand/Collapse all</value>
  </data>
  <data name="DatabaseServiceSourceNotFound" xml:space="preserve">
    <value>Source was not found. This service will not execute.</value>
  </data>
  <data name="DatabaseServiceSourceNotSelected" xml:space="preserve">
    <value>Source not selected. This service will not execute.</value>
  </data>
  <data name="DatabaseServiceProcedureNotSelected" xml:space="preserve">
    <value>Procedure not selected. This service will not execute.</value>
  </data>
  <data name="DatabaseServiceExecuteOnline" xml:space="preserve">
    <value>This service will only execute when the server is online.</value>
  </data>
  <data name="DatabaseServiceExecuteLoginPermission" xml:space="preserve">
    <value>This service will only execute when the login permissions issues have been resolved.</value>
  </data>
  <data name="DatabaseServiceExecuteViewPermission" xml:space="preserve">
    <value>You do not have permissions to View or Execute this resource.</value>
  </data>
  <data name="PluginServiceMethodNotSelected" xml:space="preserve">
    <value>Procedure not selected. This service will not execute.</value>
  </data>
  <data name="InputsHeader" xml:space="preserve">
    <value>Inputs</value>
  </data>
  <data name="OutputsLabel" xml:space="preserve">
    <value>Outputs</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="AnonymousAuthenticationToolTip" xml:space="preserve">
    <value>Connect using anonymous security credentials</value>
  </data>
  <data name="ViewInBrowserLabel" xml:space="preserve">
    <value>View Results In Browser</value>
  </data>
  <data name="DevUrl" xml:space="preserve">
    <value>http://dev2.co.za/</value>
  </data>
  <data name="WarewolfUrl" xml:space="preserve">
    <value>https://warewolf.io/</value>
  </data>
  <data name="ContributorsUrl" xml:space="preserve">
    <value>https://warewolf.io/contributors.php</value>
  </data>
  <data name="CommunityUrl" xml:space="preserve">
    <value>http://community.warewolf.io/</value>
  </data>
  <data name="ExpertHelpUrl" xml:space="preserve">
    <value>http://warewolf.io/knowledge-base/</value>
  </data>
  <data name="WarewolfCopyright" xml:space="preserve">
    <value>Copyright © 2016 Warewolf, All rights reserved.</value>
  </data>
  <data name="WarewolfHelpURL" xml:space="preserve">
    <value>http://warewolf.io/knowledge-base/</value>
  </data>
  <data name="WarewolfDefaultHelpDescription" xml:space="preserve">
    <value>&lt;h2&gt; Warewolf Help &lt;/h2&gt; 
    For more information, follow the link below.
    &lt;br/&gt;&lt;br/&gt;
    &lt;a href="http://warewolf.io/knowledge-base/" target="_blank"&gt;Read more in the Knowledge Base.&lt;/a&gt;</value>
  </data>
  <data name="StandardBodyParagraphClosing" xml:space="preserve">
    <value>&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="StandardStyling" xml:space="preserve">
    <value>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

&lt;head runat="server"&gt;
    &lt;style&gt;
        div {
            clear: both;
            margin: 0;
            font-size: 12px;
            font-family: 'Source Sans Pro';
        }

        h1 {
            font-size: 17px;
            font-family: 'Source Sans Pro';
            text-decoration: underline;
            align-content: center;
        }

        h2 {
            font-size: 16px;
            font-family: 'Source Sans Pro';
            text-decoration: underline;
            align-content: center;
        }

        h3 {
            font-size: 15px;
            font-family: 'Source Sans Pro';
            text-decoration: underline;
            align-content: center;
        }

        p {
            font-size: 12px;
            font-family: 'Source Sans Pro';
        }

        table {
            border-left: 1px solid GrayText;
            border-right: 1px solid GrayText;
            border-bottom: 1px solid GrayText;
            border-spacing: 1px;
        }

        table {
            width: 100%;
        }

        th {
            font-size: 13px;
            background: rgb(244, 244, 244);
            margin-left: 3px;
        }

        td {
            font-size: 12px;
            height: 25px;
            background: rgb(244, 244, 244);
            border: 1px solid GrayText;
            padding: 0;
            vertical-align: central;
            align-content: center;
        }

        ul {
            font-size: 12px;
            font-family: 'Source Sans Pro';
            list-style-type: circle;
        }

        ol {
            font-size: 12px;
            font-family: 'Source Sans Pro';
            list-style-type: square;
        }

        /* unvisited link */
        a:link {
            text-decoration: none;
            color: rgb(243,112,13);
        }

        /* visited link */
        a:visited {
            text-decoration: none;
            color: rgb(243,112,13);
        }

        /* mouse over link */
        a:hover {
            text-decoration: underline;
        }

        /* selected link */
        a:active {
            text-decoration: underline;
            color: rgb(243,112,13);
        }

        label {
            display: inline-block;
            cursor: pointer;
            position: relative;
            padding-left: 25px;
            margin-right: 15px;
            font-size: 13px;
        }

        input[type=radio] {
            display: none;
        }

        label:before {
            content: "";
            display: inline-block;
            width: 16px;
            height: 16px;
            margin-right: 10px;
            font-size: 12px;
            font-family: 'Source Sans Pro';
            position: absolute;
            left: 0;
            bottom: 1px;
            border: 1px solid GrayText;
            background-color: whitesmoke;
            box-shadow: inset 0px 2px 3px 0px rgba(0, 0, 0, .3), 0px 1px 0px 0px rgba(255, 255, 255, .8);
        }

        .radio label:before {
            border-radius: 8px;
        }

        input[type=radio]:checked + label:before {
            content: "\2022";
            border: 1px solid rgb(243,112,13);
            font-size: 30px;
            text-align: center;
            line-height: 18px;
        }

        input[type=checkbox] {
            display: none;
        }

        .checkbox label:before {
            border-radius: 3px;
        }

        input[type=checkbox] + label:hover:before,
        input[type=radio] + label:hover:before {
            border: 1px solid rgb(243,112,13);
        }

        input[type=checkbox]:checked + label:before {
            content: "\2713";
            text-shadow: 1px 1px 1px rgba(0, 0, 0, .2);
            font-size: 15px;
            color: rgb(43,39,38);
            border: 1px solid rgb(243,112,13);
            text-align: center;
            line-height: 15px;
        }
    &lt;/style&gt;
    &lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div&gt;</value>
  </data>
  <data name="WebServiceRequestHeadersTableHelp" xml:space="preserve">
    <value>Web Service Request Headers.&lt;br/&gt;
&lt;br/&gt;
You can use variables here in the value field like [[Header_ResponseType]]. These variable values will be requested when you drop the service on the workflow designer.</value>
  </data>
  <data name="AssignHelpVariable" xml:space="preserve">
    <value>Only variables go in here.
To assign a value to a variable, put the variable here.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="AssignHelpNewValue" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To assign a value to a variable, put the value in here.
If you put an = as the first character, it will turn into a calculation e.g. =[[qty]]*[[price]]

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]
[[Recordset(*).Field]]
[[Recordset().Field]]
= fx</value>
  </data>
  <data name="BaseConversionHelpBaseInput" xml:space="preserve">
    <value>Any variable and data goes in here.
To convert Text, Hex, Binary and Base64, put the data to be converted in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CalculateForAggregatesHelpFx" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To perform a calculation, put the calculation in here in BODMAS format.
To use the aggregate functions, use the recordset (*) notation e.g. SUM([[Staff(*).Salaries]]) will perform one calculation and give one result that is the total of all the Salaries fields in the Staff() recordset.
Aggregate functions are:
 &lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;sum()&lt;/td&gt;
    &lt;td&gt;average()&lt;/td&gt;
    &lt;td&gt;product()&lt;/td&gt;
    &lt;td&gt;count()&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;max()&lt;/td&gt;
    &lt;td&gt;median()&lt;/td&gt;
    &lt;td&gt;min()&lt;/td&gt;
    &lt;td&gt;var()&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;stdev()&lt;/td&gt;
    &lt;td&gt;concatenate()&lt;/td&gt;
    &lt;td&gt;choose()&lt;/td&gt;
    &lt;td&gt;irr()&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;counta()&lt;/td&gt;
    &lt;td&gt;subtotal()&lt;/td&gt;
    &lt;td&gt;avedev()&lt;/td&gt;
    &lt;td&gt;and()&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;or()&lt;/td&gt;
    &lt;td&gt;isnull()&lt;/td&gt;
    &lt;td&gt;istext()&lt;/td&gt;
    &lt;td&gt;npv()&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;   </value>
  </data>
  <data name="CalculateHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the formatted number.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CalculateForAggregatesHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the formatted number.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CaseConversionHelpConvertToCaseType" xml:space="preserve">
    <value>Select the type of conversion you would like to make.


Allowed:
na</value>
  </data>
  <data name="CaseConversionHelpTextInput" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To convert the case of some text, put the variable containing the text here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CMDLineHelpCMD" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To execute a command line action or actions, enter them in here. Acts like a batch file. Any user driven task will simply be ignored.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CMDLineHelpPrioritytype" xml:space="preserve">
    <value>The process priority for execution. Very helpful for long running processes that need/don’t need to be resource intensive.

Allowed:
na</value>
  </data>
  <data name="CMDLineHelpResult" xml:space="preserve">
    <value>Returns the output of the execution if any. Varies depending on what was executed.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CommentHelpComment" xml:space="preserve">
    <value>Comments do not execute and are place holders for future services or tools or simply to leave commentary inside the workflow.
You can connect comments into the process flow and they will simply be skipped during execution. However, they will appear in the debug output.

Allowed:
Notes and comments will not be executed at run time but will show up in the debug output.</value>
  </data>
  <data name="CopyHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are copying to here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CopyHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To copy a file or folder, put the full path and file or folder name here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CopyHelpForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.

Allowed:
If it exists already, force an overwrite</value>
  </data>
  <data name="CopyHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CopyHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Copy action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CopyHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CountHelpRecordset" xml:space="preserve">
    <value>To Count the number of records/indexes in a recordset, put the recordset name in here. E.g. [[Customer()]]

Allowed:
[[Recordset()]]</value>
  </data>
  <data name="CountHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns a number specifying how many records/indexes are in the recordset.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset() will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CreateHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To create a file or folder, put the full path and file or folder name here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CreateHelpForceOverWrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.

Allowed:
If it exists already, force an overwrite</value>
  </data>
  <data name="CreateHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CreateHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Create action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CreateHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CreateJSONHelpInput" xml:space="preserve">
    <value>To create JSON data, enter the Name and Data of the JSON variables. 
To create JSON Arrays use a single recordset field with a star for every record e.g. 
[[rec(*).name]] 
To create JSON Objects, use a comma separated list of recordset fields, or, just the recordset name to use the whole recordset. e.g. 
[[rec(*).surname]], [[rec(*).name]], [[rec(*).middle]] 
or simply 
[[rec(*)]]

Allowed:
Data
[[Scalar]]
[[Recordset(n).Field]]
[[Recordset(*)]]</value>
  </data>
  <data name="CreateJSONHelpName" xml:space="preserve">
    <value>The JSON variable name will default to the Warewolf variable name in the Data column. 
Array and Object names will default to the recordset name used. 
Object data names will be the field names of the recordset.

Allowed:
Data</value>
  </data>
  <data name="CreateJSONHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the inputs in JSON format.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataMergeHelpAlignType" xml:space="preserve">
    <value>For Index you can specify if your data is aligned to the right or left.
E.g. Text is normally left and numbers normally right.

Allowed:
na</value>
  </data>
  <data name="DataMergeHelpInput" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To join two or more pieces of data together list them in the order you would like them joined. If you use recordset (*) notation, the list will be repeated for every record.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataMergeHelpPadding" xml:space="preserve">
    <value>If Index is being used and there is extra space between the data supplied and the number of index characters, you can specify what makes up the padding e.g. 0 for numbers or blank space for text.


Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataMergeHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the merged string.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataMergeHelpUsing" xml:space="preserve">
    <value>For Index use the number of characters that this merge will use. It will either trim if too little, or pad if too much.
For Char put any characters or combination of characters you would like.
Not applicable to New Line or Tab

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataMergeHelpWithType" xml:space="preserve">
    <value>Select the type of merge you would like between each piece of merged data, if any.


Allowed:
na</value>
  </data>
  <data name="DataSplitHelpEscape" xml:space="preserve">
    <value>If there is an occurrence or an item being split on, that should not be split on, it will be preceded with this character. e.g., a comma separated file might have a comma in a name, so don’t split on it if it is preceded by / or some other characters.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataSplitHelpInclude" xml:space="preserve">
    <value>If you would like the data or item you are splitting on to be included in the result data, select this checkbox.

Allowed:
Include the information you are splitting on?</value>
  </data>
  <data name="DataSplitHelpProcessDirection" xml:space="preserve">
    <value>Default direction to process is forward or left to right (reading direction). Selecting Backwards will process from the end of the data (right) to the beginning (left).

Allowed:
Which direction would you like to process in?</value>
  </data>
  <data name="DataSplitHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the split data in the pattern as described by the results.
The variable pattern will be repeated until the end of the input data.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataSplitHelpSkipBlankRows" xml:space="preserve">
    <value>For file processing you can skip rows in the file that are blank. This saves you having to remove them afterwards.

Allowed:
Blank rows will be ignored</value>
  </data>
  <data name="DataSplitHelpString" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To split a value into one or more variables, put the value in here.
You can process entire file content or just trim the white space from a variable.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataSplitHelpUsing" xml:space="preserve">
    <value>For Index use the number of characters that this split will use. 
For Char put any characters or combination of characters you would like.
Not applicable to New Line, Tab or End

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DataSplitHelpWithType" xml:space="preserve">
    <value>Select where you would like to split the data.

Allowed:
na</value>
  </data>
  <data name="DateTimeDifferenceHelpDatetime1" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To find the difference in time between two date times, put the first date time in here. The format needs to be the same for the two.
Leaving this field blank will give you the system date time.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeDifferenceHelpDatetime2" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To find the difference in time between two date times, put the second date time in here. The format needs to be the same for the two.
Leaving this field blank will give you the system date time.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeDifferenceHelpInputFormat" xml:space="preserve">
    <value>Describe the format of the date times you are entering. e.g. 23-July 1978 would be described as dd-MM yyyy.
Leaving this field blank will assume the system date time format.
To escape text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an input format of 'Time is now' 24hr 'hours and' min 'minutes.' 

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]"</value>
  </data>
  <data name="DateTimeDifferenceHelpOutputType" xml:space="preserve">
    <value>Select the unit of time to output the difference in.

Allowed:
na</value>
  </data>
  <data name="DateTimeDifferenceHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the difference in time between the two date times.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeHelpAddtime" xml:space="preserve">
    <value>Put a positive or negative number here to add or subtract from the input date time.
Leave this field blank if you do not want to change the date time.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeHelpDatetime" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To format a date time, or to add/subtract from a date time, put it in here.
Leaving this field blank will give you the system date time.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeHelpInputformat" xml:space="preserve">
    <value>Describe the format of the date time you are entering. e.g. 23-July 1978 would be described as dd-MM yyyy.
Leaving this field blank will assume the system date time format.
To escape text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an input format of 'Time is now' 24hr 'hours and' min 'minutes.' 

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeHelpOutputformat" xml:space="preserve">
    <value>Describe the format you would like the date time to be returned in.
Leaving this field blank will assume the same as the Input Format.
To include text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an output format of 'Time is now' 24hr 'hours and' min 'minutes.' 

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the formatted and/or added/subtracted date time.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DateTimeHelpTimeType" xml:space="preserve">
    <value>Select the unit of time to add or subtract. This is ignored if the unit is blank or 0.

Allowed:
na</value>
  </data>
  <data name="DeleteHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To Delete a file or folder, put the full path and file or folder name to delete in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DeleteHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DeleteHelpRecords" xml:space="preserve">
    <value>* in Recordset will execute every index in the given recordset.

Allowed:
[[Recordset(n)]]   
[[Recordset(*)]]   
[[Recordset()]]</value>
  </data>
  <data name="DeleteHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or Failure depending on the success of the Delete action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="DeleteHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpAttachments" xml:space="preserve">
    <value>Enter the path to the attachments you want to send, separated by a semicolon ;

Allowed:
</value>
  </data>
  <data name="EmailHelpBcc" xml:space="preserve">
    <value>List the email addresses you want to blind carbon copy on the email you are sending, separated by a semicolon ;
If you are on a domain, you still need to provide the email address of the account you are sending to.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpBody" xml:space="preserve">
    <value>The main body of the email goes in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpCc" xml:space="preserve">
    <value>List the email addresses you want to carbon copy on the email you are sending, separated by a semicolon ;
If you are on a domain, you still need to provide the email address of the account you are sending to.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpFromAddress" xml:space="preserve">
    <value>Any data or variable can go in here.
To send an email, enter the email address of the account you want to send from.
If you are on a domain, you still need to provide the email address of the account you are sending from.
If you leave it blank, the account used to setup the Email Source will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpMailSource" xml:space="preserve">
    <value>Select a preconfigured email source or "New Email Source..." to add a new one.

Allowed:
Select a preconfigured email source or "New Email Source..." to add a new one.</value>
  </data>
  <data name="EmailHelpPassword" xml:space="preserve">
    <value>Enter the password, if there is one, for the account you are sending from.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpPriorityType" xml:space="preserve">
    <value>Select the message priority.

Allowed:
na</value>
  </data>
  <data name="EmailHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or Failure depending on the success of the send action.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpSubject" xml:space="preserve">
    <value>Enter the subject for your email.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="EmailHelpTo" xml:space="preserve">
    <value>List the email addresses you want to send to, separated by a semicolon ;
If you are on a domain, you still need to provide the email address of the account you are sending to.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindHelpLookForMatchType" xml:space="preserve">
    <value>Select the type of information you want to match on.

Allowed:
na</value>
  </data>
  <data name="FindHelpMatch" xml:space="preserve">
    <value>The criteria to match on

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindHelpRequireAllMatchesToBeTrue" xml:space="preserve">
    <value>Will only return rows that match all of the criteria if selected.

Allowed:
Should each criteria be met?</value>
  </data>
  <data name="FindHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the indexes of the successful matches.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.
If there are multiple results and a scalar is used, then each result will be separated with a comma.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindIndexHelpCharacters" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put  the index of the string you are looking for in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindIndexHelpDirectiontype" xml:space="preserve">
    <value>Select the direction to search in.

Allowed:
na</value>
  </data>
  <data name="FindIndexHelpIndexType" xml:space="preserve">
    <value>Select which index(s) you would like found.

Allowed:
na</value>
  </data>
  <data name="FindIndexHelpInField" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To find the character index(s) of a string inside another string, put the string to be searched here.

Allowed:
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindIndexHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the index(s) of the found string.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record. If you are finding All Occurrences and using a scalar, the results will be comma separated.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindRecordsFromHelpText" xml:space="preserve">
    <value>The value that the search will start at, this must be a number, date or time and must be the same type as the "To" type.</value>
  </data>
  <data name="FindRecordsToHelpText" xml:space="preserve">
    <value>The value that the search will end at, this must be a number, date or time and must be the same type as the "From" type.</value>
  </data>
  <data name="FindHelpFrom" xml:space="preserve">
    <value>The value that the search will start at, this must be a number, date or time and must be the same type as the "To" type.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindHelpInFields" xml:space="preserve">
    <value>To find the indexes/rows that match certain criteria, put the comma separated list of fields to search in here.

Allowed:
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FindHelpRequireAllFieldsToMatch" xml:space="preserve">
    <value>Will only return rows where each field specified meets the match criteria if selected.

Allowed:
Should all the fields match?</value>
  </data>
  <data name="FindHelpTo" xml:space="preserve">
    <value>The value that the search will end at, this must be a number, date or time and must be the same type as the "From" type.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ForEachHelpForEachType" xml:space="preserve">
    <value>Generally Replaces the * in the activity with the relevant index. e.g. If 1-3 is provided then [[Customer(*).ID]] will execute as [[Customer(1).ID]],
[[Customer(2).ID]],
[[Customer(3).ID]].
* in Range allows you to input a range of indexes.
* in CSV allows a specific set of indexes to be specified e.g. 1,5,7,9.
* in Recordset will execute every index in the given recordset.
* in Executes will execute the activity a given number of times and replace the * with the number of times it has executed e.g. 1,2,3... up to the number you specify.
No Subs. Execution WILL NOT substitute * with anything. The inner item(s) will execute given number of times in full.

Allowed:
na</value>
  </data>
  <data name="FormatNumberHelpDecimalsToShow" xml:space="preserve">
    <value>How many decimals should be returned as a factor of 10? e.g. 3 will show 0.000 and negative 3 (-3) will show 15000 as 15.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FormatNumberHelpNumber" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To format a number, put the number in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FormatNumberHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the formatted number.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="FormatNumberHelpRoundType" xml:space="preserve">
    <value>How would you like to round the number?
None: No rounding is done
Normal: 5,6,7,8,9 round up &amp; 1,2,3,4 round down
Up: 1-9 all round up
Down: 1-9 all round down

Allowed:
na</value>
  </data>
  <data name="FormatNumberHelpRoundValue" xml:space="preserve">
    <value>At what point in the number should the rounding be done as a factor of 10? e.g. 3 will round to 3 decimal places and negative 3 (-3) will round to the nearest thousand.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="LengthHelpRecordset" xml:space="preserve">
    <value>To get the length or max index in a recordset, put the recordset name in here. E.g. [[Customer()]]

Allowed:
[[Recordset()]]</value>
  </data>
  <data name="LengthHelpResult" xml:space="preserve">
    <value>Only variables go in here. Returns a number specifying the highest index / max index in the recordset.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="MoveHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are moving to here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="MoveHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To Move a file or folder, put the full path and file or folder name to move in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="MoveHelpForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.

Allowed:
If it exists already, force an overwrite</value>
  </data>
  <data name="MoveHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="MoveHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Move action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="MoveHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RandomHelpLength" xml:space="preserve">
    <value>Determines the character length to generate.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RandomHelpRangeFrom" xml:space="preserve">
    <value>To generate a random number put the lowest/smallest number you would like in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RandomHelpRangeTo" xml:space="preserve">
    <value>To generate a random number put the highest/largest number you would like in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RandomHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the randomly generated result.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RandomHelpType" xml:space="preserve">
    <value>The type of random information to generate.
Letters: Alphabetical letters only.
Numbers: Numbers only.
Letters and Numbers: A random combination of letters and numbers.
GUID: A randomly generated Globally Unique Identifier.

Allowed:
na</value>
  </data>
  <data name="ReadFileHelpFilename" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To read the content of a file, put the full path and file name in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFileHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFileHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the content of the file.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFileHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFolderHelpFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To read the content of a folder, put the full path in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFolderHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFolderHelpRead" xml:space="preserve">
    <value>Files will only return files.
Folders will only return folders.
Files and Folders will return everything.

Allowed:
What do you want to read?</value>
  </data>
  <data name="ReadFolderHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the content of the folder specified. Each item found will be returned as a separate result so this tool is best used with a recordset.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReadFolderHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RenameHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To rename a file or folder, put the full path and file or folder name in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RenameHelpForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.

Allowed:
If it exists already, force an overwrite</value>
  </data>
  <data name="RenameHelpNewName" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path and new name of the resource here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RenameHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RenameHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Rename action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="RenameHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReplaceHelpFind" xml:space="preserve">
    <value>Put the information you are looking for in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReplaceHelpInFields" xml:space="preserve">
    <value>Only variables go in here.
To search and replace a string, put the variable containing the string to search in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReplaceHelpReplaceWith" xml:space="preserve">
    <value>Put the replacement information in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ReplaceHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the count of the number of replacements.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ScriptingHelpLanguageType" xml:space="preserve">
    <value>What type of scripting language do you want to use?

Allowed:
na</value>
  </data>
  <data name="ScriptingHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the output of the script, if any.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ScriptingHelpScript" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To run a programming script, put the script you want to execute in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="SequenceHelpSequence" xml:space="preserve">
    <value>To execute a set of Activities in sequence put them in the order you want them executed.
To execute more than one item in a loop construct etc. put the activities in a sequence first and then put the sequence into the loop construct.
Error handling operates as a catch all for all items in the sequence.</value>
  </data>
  <data name="ServiceHelpInput" xml:space="preserve">
    <value>Insert the input data for this service. It will be mapped to the input field listed in the To Service column. If the input is a Recordset field then you can use (*) to pass all the recordset fields into the workflow service. e.g. [[my(*).recs]] -&gt; input().records
You can also put multiple fields into one field with other text much like the assign tool.
By default similar matches from the variable list are used where possible.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ServiceHelpOutput" xml:space="preserve">
    <value>Only variables go in here.
Insert the variable that you want the output of the workflow to be mapped into. By default similar matches from the variable list are used where possible.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ServiceHelpRunWorkflowAsync" xml:space="preserve">
    <value>Selecting this checkbox will cause the workflow to execute as "Fire and Forget". This will free up the parent workflow to continue without waiting for a response from the nested workflow.
Warning: Any data returned from this workflow will not be mapped back and will therefore not be available for use.

Allowed:
</value>
  </data>
  <data name="SharepointDeleteHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the number of records deleted.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="SharepointHelpFieldToMatchOn" xml:space="preserve">
    <value>Select the field you want to match on.

Allowed:
na</value>
  </data>
  <data name="SharepointHelpList" xml:space="preserve">
    <value>Select a list to read data from.
If the list changed, click the refresh button.

Allowed:
Select a list to read data from.</value>
  </data>
  <data name="SharepointHelpServer" xml:space="preserve">
    <value>Select a preconfigured SharePoint server source or "New SharePoint Server Source..." to add a new one.
</value>
  </data>
  <data name="SharepointInsertHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or Failure.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="SharepointEditServerHelp" xml:space="preserve">
    <value>Edit the connection properties of the selected SharePoint Server.</value>
  </data>
  <data name="SharepointRefreshListHelp" xml:space="preserve">
    <value>Refreshes the information from the server.</value>
  </data>
  <data name="SharepointToolTipToVariable" xml:space="preserve">
    <value>To read list item data into a variable, put the variable here.
    </value>
  </data>
  <data name="SortHelpSortField" xml:space="preserve">
    <value>To Sort a recordset enter the field in the recordset you would like to sort on.
To sort on more than one field, perform the sort action for each field you would like to sort on, ending with the priority sort.

Allowed:
[[Recordset().Field]]</value>
  </data>
  <data name="SortHelpSortOrderType" xml:space="preserve">
    <value>Select the order of the sorting.
Forward will go 1-9 then a-Z.
Backward will go Z-a then 9-1.

Allowed:
na</value>
  </data>
  <data name="SQLBulkInsertHelpBatchSize" xml:space="preserve">
    <value>The number of rows you would like to insert at a time.
The default is 0 which will do everything in 1 batch.
If you specify 50, then 50 rows will be bulk inserted at a time.

Allowed:
Number
[[Scalar]]   
[[Recordset(n).Field]]      
[[Recordset().Field]]</value>
  </data>
  <data name="SQLBulkInsertHelpCheckConstraints" xml:space="preserve">
    <value>Check constraints while data is being inserted. By default, constraints are not checked.

Allowed:
Check constraints while data is being inserted.</value>
  </data>
  <data name="SQLBulkInsertHelpDatabase" xml:space="preserve">
    <value>Select a preconfigured database source or "New Database Source..." to add a new one.

Allowed:
Select a preconfigured database source or "New Database Source..." to add a new one.</value>
  </data>
  <data name="SQLBulkInsertEditDatabaseHelp" xml:space="preserve">
    <value>Edit the selected database connection properties</value>
  </data>
  <data name="SQLBulkInsertRefreshListHelp" xml:space="preserve">
    <value>Refresh the information from the server</value>
  </data>
  <data name="SQLBulkInsertHelpFiretriggers" xml:space="preserve">
    <value>When specified, cause the server to fire the insert triggers for the rows being inserted into the database.

Allowed:
When specified, cause the server to fire the insert triggers for the rows being inserted into the database.</value>
  </data>
  <data name="SQLBulkInsertHelpInputData" xml:space="preserve">
    <value>To bulk insert data into a table, put the data to insert in here.
Using recordset (*) notation will put the entire recordset in and is the normal usage scenario for large data inserts to SQL.
A single Recordset will yield the best performance. Do not mix, scalars and/or different recordsets for optimum performance.
To quickly change the input data, press the Quick Variable Input button and amend the mappings as necessary.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="SQLBulkInsertHelpKeepidentity" xml:space="preserve">
    <value>Preserve source identity values. When not specified, identity values are assigned by the destination.

Allowed:
Preserve source identity values.</value>
  </data>
  <data name="SQLBulkInsertHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or the record numbers with errors.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="SQLBulkInsertHelpSkipblankrows" xml:space="preserve">
    <value>Blank records will not be added to the SQL table.

Allowed:
Blank rows will be ignored</value>
  </data>
  <data name="SQLBulkInsertHelpTable" xml:space="preserve">
    <value>Select a table to perform the bulk insert into.
If the table schema has changed or recently added to the source, click the refresh button.

Allowed:
Select a table to perform the bulk insert into.</value>
  </data>
  <data name="SQLBulkInsertHelpTablelock" xml:space="preserve">
    <value>Obtain a bulk update lock for the duration of the bulk copy operation. When not specified, row locks are used.

Allowed:
Obtain a bulk update lock for the duration of the bulk copy operation.</value>
  </data>
  <data name="SqlBulkInsertHelpTimeout" xml:space="preserve">
    <value>The number of seconds you would like the operation to complete in.
All batches in total must complete within this time period.
The default is 0 which will be no time constraint.
If you specify 30, then 30 seconds will be allowed for the entire operation to complete before timing out.
Note, the timeout is purely for the actual SQL connection and not the preparation of the data to be inserted.

Allowed:
Number
[[Scalar]]   
[[Recordset(n).Field]]      
[[Recordset().Field]]</value>
  </data>
  <data name="SqlBulkInsertHelpUseInternalTransaction" xml:space="preserve">
    <value>When specified, each batch of the bulk-copy operation will occur within a transaction.

Allowed:
When specified, each batch of the bulk-copy operation will occur within a transaction.</value>
  </data>
  <data name="SQLBulkInsertToolTipInputData" xml:space="preserve">
    <value>To bulk insert data into a table, put the data to insert in here.
Using recordset (*) notation will put the entire recordset in and is the normal usage scenario for large data inserts to SQL.
A single Recordset will yield the best performance. Do not mix, scalars and/or different recordsets for optimum performance.
To quickly change the input data, press the Quick Variable Input button and amend the mappings as necessary.</value>
  </data>
  <data name="SystemInformationHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the type of system information selected.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="SystemInformationHelpSysInfoType" xml:space="preserve">
    <value>Select the type of system information you would like to use.

Allowed:
na</value>
  </data>
  <data name="UniqueHelpInFields" xml:space="preserve">
    <value>To identify unique information in a recordset, put the comma separated fields that need to be unique in here. 

Allowed:
[[Recordset().Field]]</value>
  </data>
  <data name="UniqueHelpResults" xml:space="preserve">
    <value>Returns the unique combinations into the variables specified. If there are multiple fields being returned, there should be multiple Results fields specified. Use a comma to separate the variables.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="UniqueHelpReturnFields" xml:space="preserve">
    <value>Which fields from the recordset would you like returned when a Unique combination is found? Use a comma separated list of the fields.
Where multiple rows are the same, the first one will be deemed Unique.

Allowed:
[[Recordset().Field]]</value>
  </data>
  <data name="UnzipHelpArchivePassword" xml:space="preserve">
    <value>Specify the password needed to open the zip file here.
Leaving the Archive Password blank will result in no archive password being used to open the file.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="UnzipHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are unzipping to here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="UnzipHelpForceoverwrite" xml:space="preserve">
    <value>If a file or folder already exists, you can force a new one to overwrite the old one.

Allowed:
If it exists already, force an overwrite</value>
  </data>
  <data name="UnzipHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="UnzipHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Unzip action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="UnzipHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="UnzipToolTipZipname" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To unzip a file, put the full path and zip file name in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="WriteFileHelpContents" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the contents you want written to the file in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WriteFileHelpFilename" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To write content to a file, put the full path and file name in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WriteFileHelpMethod" xml:space="preserve">
    <value>Overwrite will replace the file contents with the new content.
Append Top puts the new content at the beginning of the file.
Append Bottom will add the new content to the end of the file.</value>
  </data>
  <data name="WriteFileHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WriteFileHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Write action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WriteFileHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="NativeActivityHelpCallthiswebservice" xml:space="preserve">
    <value>If an error occurs you can execute a web service / Warewolf workflow to log the error that occurred.
E.g. http://ServerName:3142/Services/LogErrors?Severity=1&amp;Error=[[ErrorMsg]]

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="NativeActivityHelpEndtheworkflow" xml:space="preserve">
    <value>To end the workflow if an error has occurred at this point, make sure the checkbox is selected. 
If you have also called a web service / Warewolf workflow, that will finish executing first.
If the workflow is nested, the calling workflow will resume.

Allowed:
Ends the executing workflow at this point</value>
  </data>
  <data name="NativeActivityHelpPuterrorinthisvariable" xml:space="preserve">
    <value>If an error occurs the error message will be placed into this variable as well the result variable.
If left empty the result will still be placed in the result variable.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WebRequestHelpHeader" xml:space="preserve">
    <value>To supply additional header information in your get request, put the header info in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WebRequestHelpResult" xml:space="preserve">
    <value>Only a single variable goes in here.
Returns the response text of the web get request.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WebRequestHelpURL" xml:space="preserve">
    <value>Any data or variable can go in here.
To traverse and retrieve the raw response from a webpage, enter it in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ConnectedLabel" xml:space="preserve">
    <value> (Connected)</value>
  </data>
  <data name="LocalhostLabel" xml:space="preserve">
    <value>localhost</value>
  </data>
  <data name="NewServerLabel" xml:space="preserve">
    <value>New Remote Server...</value>
  </data>
  <data name="EditEmailSourceHelp" xml:space="preserve">
    <value>Edit the email source that is selected.</value>
  </data>
  <data name="TestEmailAccountHelp" xml:space="preserve">
    <value>Test the email account is working</value>
  </data>
  <data name="ChooseAttachmentsHelp" xml:space="preserve">
    <value>File picker to help you locate the location of the items you want to attach</value>
  </data>
  <data name="EmailHelpBodyCheckbox" xml:space="preserve">
    <value>If the email is HTML, select this checkbox. If it is plain text, uncheck the box.</value>
  </data>
  <data name="EmailTooltipBodyCheckbox" xml:space="preserve">
    <value>Sets the body type to HTML (Checked) or plain text (Unchecked)</value>
  </data>
  <data name="LoggingViewServerEventLogOffTooltip" xml:space="preserve">
    <value>No logging</value>
  </data>
  <data name="LoggingViewServerEventLogOffHelpText" xml:space="preserve">
    <value>No Server logging is done to the Windows Event Log. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewServerEventLogFatalTooltip" xml:space="preserve">
    <value>Log Fatal events</value>
  </data>
  <data name="LoggingViewServerEventLogFatalHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Only Server fatal events are logged.</value>
  </data>
  <data name="LoggingViewServerEventLogErrorTooltip" xml:space="preserve">
    <value>Log Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerEventLogErrorHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to error details:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events</value>
  </data>
  <data name="LoggingViewServerEventLogWarnTooltip" xml:space="preserve">
    <value>Log Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerEventLogWarnHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to warning severity:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events</value>
  </data>
  <data name="LoggingViewServerEventLogInfoTooltip" xml:space="preserve">
    <value>Log Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerEventLogInfoHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Up to information detail:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events&lt;br /&gt;
Server Pulse Data</value>
  </data>
  <data name="LoggingViewServerEventLogDebugTooltip" xml:space="preserve">
    <value>Log Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerEventLogDebugHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Details up to System Activity:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events&lt;br /&gt;
Server Pulse Data&lt;br /&gt;
Server System Activity</value>
  </data>
  <data name="LoggingViewServerEventLogTraceTooltip" xml:space="preserve">
    <value>Log Trace, Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerEventLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to the Windows Event Log:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events&lt;br /&gt;
Server Pulse Data&lt;br /&gt;
Server System Activity&lt;br /&gt;
Server Detailed System information</value>
  </data>
  <data name="LoggingViewServerFileLogOffTooltip" xml:space="preserve">
    <value>No logging.</value>
  </data>
  <data name="LoggingViewServerFileLogOffHelpText" xml:space="preserve">
    <value>No Server logging is done to file. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewServerFileLogFatalTooltip" xml:space="preserve">
    <value>Log Fatal events.</value>
  </data>
  <data name="LoggingViewServerFileLogFatalHelpText" xml:space="preserve">
    <value>Logs to file: Only Server fatal events are logged.</value>
  </data>
  <data name="LoggingViewServerFileLogErrorTooltip" xml:space="preserve">
    <value>Log Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerFileLogErrorHelpText" xml:space="preserve">
    <value>Logs to file: Events up to error details:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events</value>
  </data>
  <data name="LoggingViewServerFileLogWarnTooltip" xml:space="preserve">
    <value>Log Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerFileLogWarnHelpText" xml:space="preserve">
    <value>Logs to file: Events up to warning severity:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events</value>
  </data>
  <data name="LoggingViewServerFileLogInfoTooltip" xml:space="preserve">
    <value>Log Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerFileLogInfoHelpText" xml:space="preserve">
    <value>Logs to file: Up to information detail:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events&lt;br /&gt;
Server Pulse Data</value>
  </data>
  <data name="LoggingViewServerFileLogDebugTooltip" xml:space="preserve">
    <value>Log Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerFileLogDebugHelpText" xml:space="preserve">
    <value>Logs to file: Details up to System Activity:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events&lt;br /&gt;
Server Pulse Data&lt;br /&gt;
Server System Activity</value>
  </data>
  <data name="LoggingViewServerFileLogTraceTooltip" xml:space="preserve">
    <value>Log Trace, Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewServerFileLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to file:&lt;br /&gt;
    Server Fatal Events&lt;br /&gt;
  Server Error Events&lt;br /&gt;
Server Warning Events&lt;br /&gt;
Server Pulse Data&lt;br /&gt;
Server System Activity&lt;br /&gt;
Server Detailed System information</value>
  </data>
  <data name="LoggingViewStudioEventLogOffTooltip" xml:space="preserve">
    <value>No logging</value>
  </data>
  <data name="LoggingViewStudioEventLogOffHelpText" xml:space="preserve">
    <value>No Studio logging is done to Windows Event Logger. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewStudioEventLogFatalTooltip" xml:space="preserve">
    <value>Log Fatal events</value>
  </data>
  <data name="LoggingViewStudioEventLogFatalHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Only Studio fatal events are logged.</value>
  </data>
  <data name="LoggingViewStudioEventLogErrorTooltip" xml:space="preserve">
    <value>Log Studio Error and Studio Fatal events.</value>
  </data>
  <data name="LoggingViewStudioEventLogErrorHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to error details:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events</value>
  </data>
  <data name="LoggingViewStudioEventLogWarnTooltip" xml:space="preserve">
    <value>Log Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioEventLogWarnHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Events up to warning severity:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events</value>
  </data>
  <data name="LoggingViewStudioEventLogInfoTooltip" xml:space="preserve">
    <value>Log Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioEventLogInfoHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Up to information detail:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events&lt;br /&gt;
Studio Pulse Data</value>
  </data>
  <data name="LoggingViewStudioEventLogDebugTooltip" xml:space="preserve">
    <value>Log Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioEventLogDebugHelpText" xml:space="preserve">
    <value>Logs to Windows Event Log: Details up to System Activity:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events&lt;br /&gt;
Studio Pulse Data&lt;br /&gt;
Studio System Activity</value>
  </data>
  <data name="LoggingViewStudioEventLogTraceTooltip" xml:space="preserve">
    <value>Log Trace, Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioEventLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to the Windows Event Log:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events&lt;br /&gt;
Studio Pulse Data&lt;br /&gt;
Studio System Activity&lt;br /&gt;
Studio Detailed System information</value>
  </data>
  <data name="LoggingViewStudioFileLogOffTooltip" xml:space="preserve">
    <value>No Studio logging.</value>
  </data>
  <data name="LoggingViewStudioFileLogOffHelpText" xml:space="preserve">
    <value>No Studio logging is done to file. Logging is highly efficient and will not have a noticeable impact on execution. It is recommended that you turn on logging.</value>
  </data>
  <data name="LoggingViewStudioFileLogFatalTooltip" xml:space="preserve">
    <value>Log Studio Fatal events.</value>
  </data>
  <data name="LoggingViewStudioFileLogFatalHelpText" xml:space="preserve">
    <value>Logs to file: Only Studio fatal events are logged.</value>
  </data>
  <data name="LoggingViewStudioFileLogErrorTooltip" xml:space="preserve">
    <value>Log Studio Error and Studio Fatal events.</value>
  </data>
  <data name="LoggingViewStudioFileLogErrorHelpText" xml:space="preserve">
    <value>Logs to file: Events up to error details:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events</value>
  </data>
  <data name="LoggingViewStudioFileLogWarnTooltip" xml:space="preserve">
    <value>Log Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioFileLogWarnHelpText" xml:space="preserve">
    <value>Logs to file: Events up to warning severity:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events</value>
  </data>
  <data name="LoggingViewStudioFileLogInfoTooltip" xml:space="preserve">
    <value>Log Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioFileLogInfoHelpText" xml:space="preserve">
    <value>Logs to file: Up to information detail:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events&lt;br /&gt;
Studio Pulse Data</value>
  </data>
  <data name="LoggingViewStudioFileLogDebugTooltip" xml:space="preserve">
    <value>Log Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioFileLogDebugHelpText" xml:space="preserve">
    <value>Logs to file: Details up to System Activity:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events&lt;br /&gt;
Studio Pulse Data&lt;br /&gt;
Studio System Activity</value>
  </data>
  <data name="LoggingViewStudioFileLogTraceTooltip" xml:space="preserve">
    <value>Log Trace, Debug, Info, Warning, Error and Fatal events.</value>
  </data>
  <data name="LoggingViewStudioFileLogTraceHelpText" xml:space="preserve">
    <value>Logs everything to file:&lt;br /&gt;
    Studio Fatal Events&lt;br /&gt;
  Studio Error Events&lt;br /&gt;
Studio Warning Events&lt;br /&gt;
Studio Pulse Data&lt;br /&gt;
Studio System Activity&lt;br /&gt;
Studio Detailed System information</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpAvgExecTime" xml:space="preserve">
    <value>A counter for the average execution time of this specific resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpConReq" xml:space="preserve">
    <value>A counter for the number of concurrent requests of this specific resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpReqPerSec" xml:space="preserve">
    <value>A counter for the number of requests per second of this resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceHelpTotErrors" xml:space="preserve">
    <value>A counter for the total number of errors of this resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceToolTipAvgExecTime" xml:space="preserve">
    <value>Average execution time of this resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceToolTipConReq" xml:space="preserve">
    <value>Number of concurrent requests of this resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceToolTipReqPerSec" xml:space="preserve">
    <value>Number of requests per second of this resource.</value>
  </data>
  <data name="SettingsPerfCounterResourceToolTipResource" xml:space="preserve">
    <value>Resource picker</value>
  </data>
  <data name="SettingsPerfCounterResourceBrowseHelpResource" xml:space="preserve">
    <value>Select a resource from the active server to set specific counters for.</value>
  </data>
  <data name="SettingsPerfCounterResourceToolTipTotErrors" xml:space="preserve">
    <value>Total number of errors of this resource.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpAvgExecTime" xml:space="preserve">
    <value>A counter for the average execution time of all the resources on the server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpConcurrentReq" xml:space="preserve">
    <value>A counter for the number of concurrent requests on the server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpNotAuthErrors" xml:space="preserve">
    <value>A counter for the authorization failures on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpReqPerSec" xml:space="preserve">
    <value>A counter for the number of requests per second on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpTotalErrors" xml:space="preserve">
    <value>A counter for the total number of errors on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerHelpWfNotFound" xml:space="preserve">
    <value>A counter for the number of times a workflow was requested but did not exist on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerToolTipAvgExecTime" xml:space="preserve">
    <value>Average execution time of all resources.</value>
  </data>
  <data name="SettingsPerfCounterServerToolTipConcurrentReq" xml:space="preserve">
    <value>Number of concurrent requests on the server.</value>
  </data>
  <data name="SettingsPerfCounterServerToolTipNotAuthErrors" xml:space="preserve">
    <value>Authorization failures on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerToolTipReqPerSec" xml:space="preserve">
    <value>Number of requests per second on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerTooltipTotalErrors" xml:space="preserve">
    <value>Total number of errors on this server.</value>
  </data>
  <data name="SettingsPerfCounterServerToolTipWfNotFound" xml:space="preserve">
    <value>Number of times a workflow was requested and it didn't exist.</value>
  </data>
  <data name="SettingsSecurityResourceHelpContribute" xml:space="preserve">
    <value>By Default this group will be able to Edit or Delete this resource. 
To do this they can also View and Execute.</value>
  </data>
  <data name="SettingsSecurityResourceHelpExecute" xml:space="preserve">
    <value>By Default this group will be able to call or execute this workflow.</value>
  </data>
  <data name="SettingsSecurityResourceHelpResource" xml:space="preserve">
    <value>To set specific permissions for a resource on this server, select the resource here.
Any permissions applied to this resource will OVERWRITE the server settings above.
By specifying a resource here, it will not inherit permissions from the server (above).</value>
  </data>
  <data name="SettingsSecurityResourceHelpView" xml:space="preserve">
    <value>By Default this group will be able to open and view this resource.
Typically this is used by Business Analysts to sign off work and participate in the development process.</value>
  </data>
  <data name="SettingsSecurityResourceHelpWindowsGroup" xml:space="preserve">
    <value>To set resource specific permissions, enter the Windows Group name or "Public" here followed by the system access for that group. 
Permissions are cumulative in nature e.g. If someone is a member of two groups and only one of those groups has Contribute permission, then that member WILL have Contribute permission.
Public is an internal Warewolf group that applies to everyone.</value>
  </data>
  <data name="SettingsSecurityResourceToolTipContribute" xml:space="preserve">
    <value>Edit and Delete this workflow</value>
  </data>
  <data name="SettingsSecurityResourceToolTipExecute" xml:space="preserve">
    <value>Run and Debug this workflow</value>
  </data>
  <data name="SettingsSecurityResourceToolTipResource" xml:space="preserve">
    <value>Click the Ellipsis to add a resource</value>
  </data>
  <data name="SettingsSecurityResourceToolTipView" xml:space="preserve">
    <value>Open and inspect this resource</value>
  </data>
  <data name="SettingsSecurityResourceToolTipWindowsGroup" xml:space="preserve">
    <value>Select Windows Group</value>
  </data>
  <data name="SettingsSecurityServerHelpAdministrator" xml:space="preserve">
    <value>Administrators can amend security permissions and change server settings. 
The local machine Administrators are automatically given this permission.
 Giving Public access to this permission is akin to turning security off and is not recommended.</value>
  </data>
  <data name="SettingsSecurityServerHelpContribute" xml:space="preserve">
    <value>By Default this group will be able to add new resources, edit resources and delete existing resources on this server. 
To do this they can also View and Execute.</value>
  </data>
  <data name="SettingsSecurityServerHelpDeployFrom" xml:space="preserve">
    <value>By Default this group will be able to deploy resources off this server.</value>
  </data>
  <data name="SettingsSecurityServerHelpDeployTo" xml:space="preserve">
    <value>By Default this group will be able to deploy resources onto this server.
Deploy may mean overwriting existing work and can be done without Contribute privileges.</value>
  </data>
  <data name="SettingsSecurityServerHelpExecute" xml:space="preserve">
    <value>By Default this group will be able to call or execute resources on this server.</value>
  </data>
  <data name="SettingsSecurityServerHelpView" xml:space="preserve">
    <value>By Default this group will be able to open and view resources on the server. 
Typically this is used by Business Analysts to sign off work and participate in the development process.</value>
  </data>
  <data name="SettingsSecurityServerHelpWindowsGroup" xml:space="preserve">
    <value>To set server wide permissions for security, enter the Windows Group name or "Public" here followed by the system access for that group. You can click on the ellipsis for help with identifying the correct windows group.
By Default these permissions will permeate all resources on the server, unless specified below in Resource Permissions.
Permissions are cumulative in nature e.g. If someone is a member of two groups and only one of those groups has Contribute permission, then that member WILL have Contribute permission. 
The Public group grants any and every user those permissions.</value>
  </data>
  <data name="SettingsSecurityServerToolTipAdministrator" xml:space="preserve">
    <value>Amend security and admin tasks</value>
  </data>
  <data name="SettingsSecurityServerToolTipContribute" xml:space="preserve">
    <value>Edit, Create and Delete workflows and services</value>
  </data>
  <data name="SettingsSecurityServerToolTipDeployFrom" xml:space="preserve">
    <value>Deploy resources off this server</value>
  </data>
  <data name="SettingsSecurityServerToolTipDeployTo" xml:space="preserve">
    <value>Deploy resources to this server</value>
  </data>
  <data name="SettingsSecurityServerToolTipExecute" xml:space="preserve">
    <value>Run and Debug workflows</value>
  </data>
  <data name="SettingsSecurityServerToolTipView" xml:space="preserve">
    <value>Open and inspect resources</value>
  </data>
  <data name="SettingsSecurityServerToolTipWindowsGroup" xml:space="preserve">
    <value>Select Windows Group</value>
  </data>
  <data name="SettingsSecurityServerBrowseHelpWindowsGroup" xml:space="preserve">
    <value>Opens the windows group picker for this computer. If this server is on another domain, you will need to either manually type the Group name in, or launch a studio from a PC that is on that domain to get access to the group picker.

Warewolf has a built in group for and called Public.</value>
  </data>
  <data name="WorkflowDesignerSecurityToolTipNone" xml:space="preserve">
    <value>You are not authorized to edit this resource</value>
  </data>
  <data name="SettingsPerfCounterRemoveResourceTooltip" xml:space="preserve">
    <value>Removes performance counters</value>
  </data>
  <data name="SettingsPerfCounterRemoveResourceHelpText" xml:space="preserve">
    <value>Removes the performance counters for this specific resource</value>
  </data>
  <data name="SettingsSecurityResourceBrowseHelpResources" xml:space="preserve">
    <value>Resource picker</value>
  </data>
  <data name="SettingsSecurityResourceBrowseHelpWindowsGroup" xml:space="preserve">
    <value>Resource picker</value>
  </data>
  <data name="AssignToolTipNewValue" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To assign a value to a variable, put the value in here.
If you put an = as the first character, it will turn into a calculation e.g. =[[qty]]*[[price]]</value>
  </data>
  <data name="QuickVariableAppendHelpText" xml:space="preserve">
    <value>Append will add the variables onto the list of variables already in the input grid. The values of the last row will be repeated for all of these additional values.</value>
  </data>
  <data name="QuickVariableAppendToolTip" xml:space="preserve">
    <value>Append to existing variables</value>
  </data>
  <data name="QuickVariablePrefixWithHelpText" xml:space="preserve">
    <value>To append something onto the front of the variables in your list, type it in here.
For recordsets, type  recordsetname(). Don't forget the "." after the "()"
You do not need to put the "[[" in.</value>
  </data>
  <data name="QuickVariablePrefixWithToolTip" xml:space="preserve">
    <value>Adds this to the front of the variables</value>
  </data>
  <data name="QuickVariableSplitAndAtHelpText" xml:space="preserve">
    <value>Select the criteria to split the variables in the list. This will be the pattern used to repeat against the Variable List box.
Char will split on the characters you specify, like comma or | &lt;/.
Index will split on the numeric index from the previous split.
New Line will split on carriage return.
Space will split on blank space.
Tab splits on a tab character.</value>
  </data>
  <data name="QuickVariableSplitAndAtToolTip" xml:space="preserve">
    <value>Criteria for splitting the above data</value>
  </data>
  <data name="QuickVariableSuffixWithHelpText" xml:space="preserve">
    <value>To append something onto the end of the variables in your list, type it in here.
You do not need to put the "]]" in.</value>
  </data>
  <data name="QuickVariableSuffixWithToolTip" xml:space="preserve">
    <value>Adds this to end of the variables</value>
  </data>
  <data name="QuickVariableVariableListHelpText" xml:space="preserve">
    <value>Type or paste all the variables you want to use in here. You can paste in any format. If you are adding variables into a grid with a drop down or other input, the values from the last row will be repeated, so set them before adding these variables.</value>
  </data>
  <data name="QuickVariableVariableListToolTip" xml:space="preserve">
    <value>The rough data with the variables in it</value>
  </data>
  <data name="QuickVariableReplaceHelpText" xml:space="preserve">
    <value>Replace will replace the current list of variables with this list. The values of the first row will be repeated for all of these new values.</value>
  </data>
  <data name="QuickVariableReplaceToolTip" xml:space="preserve">
    <value>Replaces existing variables in the tool</value>
  </data>
  <data name="PreviewInputHelpText" xml:space="preserve">
    <value>Preview (recordset field)
This is a variable from an input field. Use comma-separated values for each index e.g. [[Trip(*).Distance]] = 45, 32, 12, 5
 
Preview (scalar field - including indexed recordsets and ())
This is a variable from an input field. Put some test info in and click the Preview button to test your result.</value>
  </data>
  <data name="SharepointToolTipServer" xml:space="preserve">
    <value>Select a preconfigured SharePoint server source or "New SharePoint Server Source..." to add a new one.</value>
  </data>
  <data name="SharepointToolTipList" xml:space="preserve">
    <value>Select a list to read from.
If the list has changed or recently added to the source, click the refresh button.</value>
  </data>
  <data name="SharepointToolTipFieldToFilterOn" xml:space="preserve">
    <value>Select the field you want to match on.</value>
  </data>
  <data name="SqlBulkInsertToolTipBatchSize" xml:space="preserve">
    <value>The number of rows you would like to insert at a time.
The default is 0 which will do everything in 1 batch.
If you specify 50, then 50 rows will be bulk inserted at a time.</value>
  </data>
  <data name="SqlBulkInsertToolTipCheckConstraints" xml:space="preserve">
    <value>Check constraints while data is being inserted. By default, constraints are not checked.</value>
  </data>
  <data name="SqlBulkInsertToolTipDatabase" xml:space="preserve">
    <value>Select a preconfigured database source or "New Database Source..." to add a new one.</value>
  </data>
  <data name="SqlBulkInsertToolTipFireTriggers" xml:space="preserve">
    <value>When specified, cause the server to fire the insert triggers for the rows being inserted into the database.</value>
  </data>
  <data name="SqlBulkInsertToolTipInputColumn" xml:space="preserve">
    <value>To bulk insert data into a table, put the data to insert in here.
Using recordset (*) notation will put the entire recordset in and is the normal usage scenario for large data inserts to SQL.
A single Recordset will yield the best performance. Do not mix, scalars and/or different recordsets for optimum performance.
To quickly change the input data, press the Quick Variable Input button and amend the mappings as necessary.</value>
  </data>
  <data name="SqlBulkInsertToolTipKeepIdentity" xml:space="preserve">
    <value>Preserve source identity values. When not specified, identity values are assigned by the destination.</value>
  </data>
  <data name="SqlBulkInsertToolTipKeepTableLock" xml:space="preserve">
    <value>Obtain a bulk update lock for the duration of the bulk copy operation. When not specified, row locks are used.</value>
  </data>
  <data name="SqlBulkInsertToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or the record numbers with errors.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="SharepointDelteToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the number of items deleted.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="SharepointInsertToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or Failure.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="SqlBulkInsertToolTipTimeout" xml:space="preserve">
    <value>The number of seconds you would like the operation to complete in.
All batches in total must complete within this time period.
The default is 0 which will be no time constraint.
If you specify 30, then 30 seconds will be allowed for the entire operation to complete before timing out.
Note, the timeout is purely for the actual SQL connection and not the preparation of the data to be inserted.</value>
  </data>
  <data name="SqlBulkInsertToolTipUseInternalTransaction" xml:space="preserve">
    <value>When specified, each batch of the bulk-copy operation will occur within a transaction.</value>
  </data>
  <data name="BaseConversionHelpFromType" xml:space="preserve">
    <value>Select the type of data you are converting from.
e.g. If the data is Binary and you would like Text, then select Binary here.

Allowed:
na</value>
  </data>
  <data name="BaseConversionHelpToType" xml:space="preserve">
    <value>Select the type of data you are converting to.
e.g. If the data is Binary and you would like Text, then select Text here.

Allowed:
na</value>
  </data>
  <data name="BaseConversionToolTipBaseInput" xml:space="preserve">
    <value>Any variable and data goes in here.
To convert Text, Hex, Binary and Base64, put the data to be converted in here.</value>
  </data>
  <data name="CaseConversionToolTipTextInput" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To convert the case of some text, put the variable containing the text here.</value>
  </data>
  <data name="CopyToolTipDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are copying to here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="CopyToolTipFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To copy a file or folder, put the full path and file or folder name here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="CopyToolTipForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="CopyToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="CopyToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Copy action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="CopyToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="CreateSftpPrivateKey" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To create a SFTP Key, put the full path and file or folder name here.</value>
  </data>
  <data name="SftpPrivateKeyValue" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To create a SFTP Key, put the full path and file or folder name here.</value>
  </data>
  <data name="CreateToolTipFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To create a file or folder, put the full path and file or folder name here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="CreateToolTipForceOverWrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="CreateToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="CreateToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Create action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="CreateToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="DataMergeToolTipInput" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To join two or more pieces of data together list them in the order you would like them joined. If you use recordset (*) notation, the list will be repeated for every record.</value>
  </data>
  <data name="DataMergeToolTipPadding" xml:space="preserve">
    <value>If Index is being used and there is extra space between the data supplied and the number of index characters, you can specify what makes up the padding e.g. 0 for numbers or blank space for text.
</value>
  </data>
  <data name="DataMergeToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the merged string.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="DataMergeToolTipUsing" xml:space="preserve">
    <value>For Index use the number of characters that this merge will use. It will either trim if too little, or pad if too much.
For Char put any characters or combination of characters you would like.
Not applicable to New Line or Tab</value>
  </data>
  <data name="DataSplitToolTipEscape" xml:space="preserve">
    <value>If there is an occurrence or an item being split on, that should not be split on, it will be preceded with this character. e.g., a comma separated file might have a comma in a name, so don’t split on it if it is preceded by / or some other characters.</value>
  </data>
  <data name="DataSplitToolTipInclude" xml:space="preserve">
    <value>If you would like the data or item you are splitting on to be included in the result data, select this checkbox.</value>
  </data>
  <data name="DataSplitToolTipString" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To split a value into one or more variables, put the value in here.
You can process entire file content or just trim the white space from a variable.</value>
  </data>
  <data name="DataSplitToolTipUsing" xml:space="preserve">
    <value>For Index use the number of characters that this split will use. 
For Char put any characters or combination of characters you would like.
Not applicable to New Line, Tab or End</value>
  </data>
  <data name="FindIndexToolTipCharacters" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put  the index of the string you are looking for in here.</value>
  </data>
  <data name="FindIndexToolTipInField" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To find the character index(s) of a string inside another string, put the string to be searched here.</value>
  </data>
  <data name="FindIndexToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the index(s) of the found string.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record. If you are finding All Occurrences and using a scalar, the results will be comma separated.</value>
  </data>
  <data name="ReplaceToolTipFind" xml:space="preserve">
    <value>Put the information you are looking for in here.</value>
  </data>
  <data name="ReplaceToolTipReplaceWith" xml:space="preserve">
    <value>Put the replacement information in here.</value>
  </data>
  <data name="ReplaceToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the count of the number of replacements.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="CalculateForAggregatesToolTipFx" xml:space="preserve">
    <value>Excel like calculation</value>
  </data>
  <data name="DropBoxToolTipLocalSource" xml:space="preserve">
    <value>Any variable and/or data goes in here.
The file must be available on the local file system.</value>
  </data>
  <data name="DropBoxDownloadToolTipLocalDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
     This is the name of the file that will be read from Dropbox.
     NOTE: The file path must use "/" to identify folders and not "\".</value>
  </data>
  <data name="DropBoxDownloadFileName" xml:space="preserve">
    <value>Any variable and/or data goes in here.
     This is the name of the file that will be downloaded from Dropbox.
     NOTE: The file path must use "/" to identify folders and not "\".</value>
  </data>
  <data name="DropboxSourceToolTip" xml:space="preserve">
    <value>Select the Dropbox source that the file operation will be performed on.</value>
  </data>
  <data name="DropBoxToolTipEditSource" xml:space="preserve">
    <value>Edit the Dropbox connection properties.</value>
  </data>
  <data name="DropBoxToolTipNewSource" xml:space="preserve">
    <value>Create a New Dropbox connection.</value>
  </data>
  <data name="DropboxOperationToolTip" xml:space="preserve">
    <value>Select the operation that you wish to perform. Read from a file on Dropbox.</value>
  </data>
  <data name="DropboxResultHelpText" xml:space="preserve">
    <value>The result of the drop box operation will be assigned to this value</value>
  </data>
  <data name="DropBoxDeleteFileNameTooltip" xml:space="preserve">
    <value>The file or folder you want to delete on Dropbox</value>
  </data>
  <data name="DropBoxDeleteFileNameHelpText" xml:space="preserve">
    <value>Specify the Dropbox file or folder you would like to delete. This is the path from the root of the Dropbox account.</value>
  </data>
  <data name="DropBoxFileListFileNameToolTip" xml:space="preserve">
    <value>The folder on Dropbox to list</value>
  </data>
  <data name="DropBoxFileListFileName" xml:space="preserve">
    <value>Returns the contents of the Dropbox folder you specify here.
    This is the folder structure you want to list on Dropbox.
  You can specify the type of information returned by selecting either Files (returns only files), Folders (Returns only folders) or Files and Folders for everything.
</value>
  </data>
  <data name="DropboxReadFilesToolTip" xml:space="preserve">
    <value>Just get the files</value>
  </data>
  <data name="DropboxReadFiles" xml:space="preserve">
    <value>Returns the files that are in the given folder, or all the files in the folder and all the files in the sub folders if Recursive is selected.</value>
  </data>
  <data name="DropboxReadFoldersToolTip" xml:space="preserve">
    <value>Just get the folders</value>
  </data>
  <data name="DropboxReadFolders" xml:space="preserve">
    <value>Returns the folders that are in the given Dropbox folder, or all the folders in the folder and all the folders in the sub folders if Recursive is selected.</value>
  </data>
  <data name="DropboxReadFilesFoldersToolTip" xml:space="preserve">
    <value>Get the files and folders</value>
  </data>
  <data name="DropboxReadFilesFolders" xml:space="preserve">
    <value>Returns a list of everything in the Dropbox folder provided or everything including sub folders if Recursive is selected.</value>
  </data>
  <data name="DropBoxFileListRecursiveToolTip" xml:space="preserve">
    <value>Get the sub folders information as well.</value>
  </data>
  <data name="DropBoxFileListRecursive" xml:space="preserve">
    <value>When selected, will recursively look up everything from the given path onwards - to a maximum of 2000 items. 
    
    NOTE: Dropbox has a max return count of 2000.</value>
  </data>
  <data name="CalculateForAggregatesToolTipResult" xml:space="preserve">
    <value>Returns the calculation result.</value>
  </data>
  <data name="FormatNumberToolTipNumber" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To format a number, put the number in here.</value>
  </data>
  <data name="FormatNumberToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the formatted number.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="FormatNumberToolTipRoundvalue" xml:space="preserve">
    <value>At what point in the number should the rounding be done as a factor of 10? e.g. 3 will round to 3 decimal places and negative 3 (-3) will round to the nearest thousand.</value>
  </data>
  <data name="MoveToolTipDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are moving to here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="MoveToolTipFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To Move a file or folder, put the full path and file or folder name to move in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="MoveToolTipForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="MoveToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="MoveToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Move action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="MoveToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="DeleteToolTipFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To Delete a file or folder, put the full path and file or folder name to delete in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="DeleteToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="DeleteToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or Failure depending on the success of the Delete action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="DeleteToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="ReadFileToolTipFilename" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To upload a file, put the full path and file name in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="ReadFileToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="ReadFileToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the content of the file.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="ReadFileToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="WriteFileToolTipFilename" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To write content to a file, put the full path and file name in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="WriteFileToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="WriteFileToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Write action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="WriteFileToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="ReadFolderToolTipFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To read the content of a folder, put the full path in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="ReadFolderToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="ReadFolderToolTipRead" xml:space="preserve">
    <value>Files will only return files.
Folders will only return folders.
Files and Folders will return everything.</value>
  </data>
  <data name="ReadFolderToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the content of the folder specified. Each item found will be returned as a separate result so this tool is best used with a recordset.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="ReadFolderToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to perform this action. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="RenameToolTipFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To rename a file or folder, put the full path and file or folder name in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="RenameToolTipForceoverwrite" xml:space="preserve">
    <value>If the file or folder already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="RenameToolTipNewName" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path and new name of the resource here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="RenameToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="RenameToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Rename action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="RenameToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="UnzipToolTipDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are unzipping to here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="UnzipToolTipForceoverwrite" xml:space="preserve">
    <value>If a file or folder already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="UnzipToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="UnzipToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Unzip action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="UnzipToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="ZipHelpCompressionType" xml:space="preserve">
    <value>The system will try and match your zipping requirements as far as possible.
None creates the new file with the content and adds no compression - fastest.
Partial attempts some compression.
Normal will apply standard compression.
Max will compress the zipped file as much as possible - slowest.

Allowed:
na</value>
  </data>
  <data name="ZipHelpDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are zipping to here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ZipHelpFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To zip a file or folder, put the full path of what you want zipped in here.
You can use File System, URI, SFTP, FTP or FTPS format.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ZipHelpResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Zip action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ZipToolTipDestination" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the full path of the destination you are zipping to here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="ZipToolTipFileFolder" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To zip a file or folder, put the full path of what you want zipped in here.
You can use File System, URI, SFTP, FTP or FTPS format.</value>
  </data>
  <data name="ZipToolTipPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="ZipToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or will be blank depending on the success of the Zip action.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="ZipToolTipUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.</value>
  </data>
  <data name="CommentToolTipComment" xml:space="preserve">
    <value>Comments do not execute and are place holders for future services or tools or simply to leave commentary inside the workflow.
You can connect comments into the process flow and they will simply be skipped during execution. However, they will appear in the debug output.</value>
  </data>
  <data name="EmailToolTipBcc" xml:space="preserve">
    <value>List the email addresses you want to blind carbon copy on the email you are sending separated by a semicolon ;
If you are on a domain, you still need to provide the email address of the account you are sending to.</value>
  </data>
  <data name="EmailToolTipBody" xml:space="preserve">
    <value>The main body of the email goes in here.</value>
  </data>
  <data name="EmailToolTipCc" xml:space="preserve">
    <value>List the email addresses you want to carbon copy on the email you are sending separated by a semicolon ;
If you are on a domain, you still need to provide the email address of the account you are sending to.</value>
  </data>
  <data name="EmailToolTipFromAddress" xml:space="preserve">
    <value>Any data or variable can go in here.
To send an email, enter the email address of the account you want to send from.
If you are on a domain, you still need to provide the email address of the account you are sending from.
If you leave it blank, the account used to setup the Email Source will be used.</value>
  </data>
  <data name="EmailToolTipMailSource" xml:space="preserve">
    <value>Select a preconfigured email source or "New Email Source..." to add a new one.</value>
  </data>
  <data name="EmailToolTipPassword" xml:space="preserve">
    <value>Enter the password, if there is one, for the account you are sending from.</value>
  </data>
  <data name="EmailToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns Success or Failure depending on the success of the send action.</value>
  </data>
  <data name="EmailToolTipSubject" xml:space="preserve">
    <value>Enter the subject for your email.</value>
  </data>
  <data name="EmailToolTipTo" xml:space="preserve">
    <value>List the email addresses you want to send to separated by a semicolon ;
If you are on a domain, you still need to provide the email address of the account you are sending to.</value>
  </data>
  <data name="RandomToolTipLength" xml:space="preserve">
    <value>Determines the character length to generate.</value>
  </data>
  <data name="RandomToolTipRangeFrom" xml:space="preserve">
    <value>To generate a random number put the lowest/smallest number you would like in here.</value>
  </data>
  <data name="RandomToolTipRangeTo" xml:space="preserve">
    <value>To generate a random number put the highest/largest number you would like in here.</value>
  </data>
  <data name="RandomToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the randomly generated result.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="ScriptingToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the output of the script, if any.</value>
  </data>
  <data name="ScriptingToolTipScript" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To run a programming script, put the script you want to execute in here.</value>
  </data>
  <data name="XPathHelpXML" xml:space="preserve">
    <value>Any data or variable can go in here.
To traverse an XML document and return information from it, enter the raw XML in here.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="XPathHelpXPath" xml:space="preserve">
    <value>Xpath notation describing the route to the data in the XML input.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="XPathToolTipXML" xml:space="preserve">
    <value>Any data or variable can go in here.
To traverse an XML document and return information from it, enter the raw XML in here.</value>
  </data>
  <data name="XPathToolTipXPath" xml:space="preserve">
    <value>Xpath notation describing the route to the data in the XML input.</value>
  </data>
  <data name="UnzipToolTipArchivePassword" xml:space="preserve">
    <value>Specify the password needed to open the zip file here.
Leaving the Archive Password blank will result in no archive password being used to open the file.</value>
  </data>
  <data name="ZipHelpArchivePassword" xml:space="preserve">
    <value>Specify the password needed to open the zip file here.
Leaving the Archive Password blank will result in no password being required to open the file.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ZipHelpForceoverwrite" xml:space="preserve">
    <value>If a file already exists, you can force a new one to overwrite the old one.

Allowed:
If it exists already, force an overwrite</value>
  </data>
  <data name="ZipToolTipArchivePassword" xml:space="preserve">
    <value>Specify the password needed to open the zip file here.
Leaving the Archive Password blank will result in no password being required to open the file.</value>
  </data>
  <data name="ZipToolTipForceoverwrite" xml:space="preserve">
    <value>If a file already exists, you can force a new one to overwrite the old one.</value>
  </data>
  <data name="DataSplitToolTipProcessDirection" xml:space="preserve">
    <value>Default direction to process is forward or left to right (reading direction). Selecting Backwards will process from the end of the data (right) to the beginning (left).</value>
  </data>
  <data name="DataSplitToolTipSkipBlankRows" xml:space="preserve">
    <value>For file processing you can skip rows in the file that are blank. This saves you having to remove them afterwards.</value>
  </data>
  <data name="SchedulerSettingsHelpTextHistoryRecords" xml:space="preserve">
    <value>To prevent redundant data being kept the system will clean up old schedule results. To specify how many results to keep, put a whole number in here.</value>
  </data>
  <data name="SchedulerSettingsHelpTextName" xml:space="preserve">
    <value>The name of the schedule that will appear in the list of Schedules in the left hand column.
Renaming a Schedule will lose its History.</value>
  </data>
  <data name="SchedulerSettingsHelpTextPassword" xml:space="preserve">
    <value>Each workflow must be executed with the correct security context. The account details entered here will be passed to the server and execute the workflow as that user.</value>
  </data>
  <data name="SchedulerSettingsHelpTextRun" xml:space="preserve">
    <value>Check this box if you would like a missed trigger to execute as soon as possible.</value>
  </data>
  <data name="SchedulerSettingsHelpTextStatus" xml:space="preserve">
    <value>To change if the trigger is active or not, select Enabled or Disabled.</value>
  </data>
  <data name="SchedulerSettingsEnabledHelpTextStatus" xml:space="preserve">
    <value>Enable this scheduled task</value>
  </data>
  <data name="SchedulerSettingsDisabledHelpTextStatus" xml:space="preserve">
    <value>Disable this scheduled task</value>
  </data>
  <data name="SchedulerSettingsHelpTextTrigger" xml:space="preserve">
    <value>To run a workflow on a schedule select the Edit Trigger button.</value>
  </data>
  <data name="SchedulerStatusAltTooltipTrigger" xml:space="preserve">
    <value>Enable or Disable the schedule</value>
  </data>
  <data name="SchedulerStatusAltHelpTextTrigger" xml:space="preserve">
    <value>Enables or Disables the scheduled task. Disabled schedules will not execute when their trigger is valid.</value>
  </data>
  <data name="SchedulerDeleteTooltipTrigger" xml:space="preserve">
    <value>Delete this scheduled task</value>
  </data>
  <data name="SchedulerDeleteHelpTextTrigger" xml:space="preserve">
    <value>Delete this scheduled task</value>
  </data>
  <data name="SchedulerNewScheduleTooltipTrigger" xml:space="preserve">
    <value>Create a new scheduled task</value>
  </data>
  <data name="SchedulerSettingsHelpTextUsername" xml:space="preserve">
    <value>Each workflow must be executed with the correct security context. The account details entered here will be passed to the server and execute the workflow as that user.</value>
  </data>
  <data name="SchedulerSettingsHelpTextWorkFlow" xml:space="preserve">
    <value>To run a workflow on a schedule select the Trigger above and then click … to choose the workflow you want to execute.</value>
  </data>
  <data name="SchedulerSettingsToolTipHistoryRecords" xml:space="preserve">
    <value>How much History should the system keep?</value>
  </data>
  <data name="SchedulerSettingsToolTipName" xml:space="preserve">
    <value>What name do you want to give this Schedule?</value>
  </data>
  <data name="SchedulerSettingsToolTipPassword" xml:space="preserve">
    <value>Schedule will use this password for the above username</value>
  </data>
  <data name="SchedulerSettingsToolTipRun" xml:space="preserve">
    <value>Allows a missed trigger to be executed</value>
  </data>
  <data name="SchedulerSettingsToolTipUsername" xml:space="preserve">
    <value>Schedule should execute as this user</value>
  </data>
  <data name="SchedulerSettingsToolTipWorkFlow" xml:space="preserve">
    <value>Select a workflow to be triggered</value>
  </data>
  <data name="SchedulerSettingsHelpTextSettingsView" xml:space="preserve">
    <value>To schedule a workflow execution, setup the trigger you want to use  and the workflow you want to execute.
Warewolf leverages Windows Task Scheduler and the schedules can be viewed there as well.</value>
  </data>
  <data name="AssignToolTipVariable" xml:space="preserve">
    <value>Only variables go in here.
To assign a value to a variable, put the variable here.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="BaseConversionToolTipFromtype" xml:space="preserve">
    <value>Select the type of data you are converting from.
e.g. If the data is Binary and you would like Text, then select Binary here.</value>
  </data>
  <data name="BaseConversionToolTipTotype" xml:space="preserve">
    <value>Select the type of data you are converting to.
e.g. If the data is Binary and you would like Text, then select Text here.</value>
  </data>
  <data name="CaseConversionToolTipConvertToCasetype" xml:space="preserve">
    <value>Select the type of conversion you would like to make.
</value>
  </data>
  <data name="CMDLineToolTipCMD" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To execute a command line action or actions, enter them in here. Acts like a batch file. Any user driven task will simply be ignored.</value>
  </data>
  <data name="CMDLineToolTipPrioritytype" xml:space="preserve">
    <value>The process priority for execution. Very helpful for long running processes that need/don’t need to be resource intensive.</value>
  </data>
  <data name="CMDLineToolTipResult" xml:space="preserve">
    <value>Returns the output of the execution if any. Varies depending on what was executed.</value>
  </data>
  <data name="CountToolTipRecordset" xml:space="preserve">
    <value>To Count the number of records/indexes in a recordset, put the name in here.</value>
  </data>
  <data name="CountToolTipResult" xml:space="preserve">
    <value>Only variables go in here. 
Returns a number specifying how many records/indexes are in the recordset.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset() will add a new record and (*) will assign every record.</value>
  </data>
  <data name="CreateJSONToolTipInput" xml:space="preserve">
    <value>To create JSON data, enter the Name and Data of the JSON variables. 
To create JSON Arrays use a single recordset field with a star for every record e.g. 
[[rec(*).name]] 
To create JSON Objects, use a comma separated list of recordset fields, or, just the recordset name to use the whole recordset. e.g. 
[[rec(*).surname]], [[rec(*).name]], [[rec(*).middle]] 
or simply 
[[rec(*)]]</value>
  </data>
  <data name="CreateJSONToolTipName" xml:space="preserve">
    <value>The JSON variable name will default to the Warewolf variable name in the Data column. 
Array and Object names will default to the recordset name used. 
Object data names will be the field names of the recordset.</value>
  </data>
  <data name="CreateJSONToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the inputs in JSON format.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="DataMergeToolTipAlignType" xml:space="preserve">
    <value>For Index you can specify if your data is aligned to the right or left.
E.g. Text is normally left and numbers normally right.</value>
  </data>
  <data name="DataMergeToolTipWithtype" xml:space="preserve">
    <value>Select the type of merge you would like between each piece of merged data, if any.
</value>
  </data>
  <data name="DataSplitToolTipResults" xml:space="preserve">
    <value>Only variables go in here.
Returns the split data in the pattern as described by the results.
The variable pattern will be repeated until the end of the input data.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="DataSplitToolTipWithtype" xml:space="preserve">
    <value>Select where you would like to split the data.</value>
  </data>
  <data name="DateTimeToolTipAddtime" xml:space="preserve">
    <value>Put a positive or negative number here to add or subtract from the input date time.
Leave this field blank if you do not want to change the date time.</value>
  </data>
  <data name="DateTimeToolTipDatetime" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To format a date time, or to add/subtract from a date time, put it in here.
Leaving this field blank will give you the system date time.</value>
  </data>
  <data name="DateTimeToolTipInputformat" xml:space="preserve">
    <value>Describe the format of the date time you are entering. e.g. 23-July 1978 would be described as dd-MM yyyy.
Leaving this field blank will assume the system date time format.
To escape text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an input format of 'Time is now' 24hr 'hours and' min 'minutes.'</value>
  </data>
  <data name="DateTimeToolTipOutputformat" xml:space="preserve">
    <value>Describe the format you would like the date time to be returned in.
Leaving this field blank will assume the same as the Input Format.
To include text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an output format of 'Time is now' 24hr 'hours and' min 'minutes.'</value>
  </data>
  <data name="DateTimeToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the formatted and/or added/subtracted date time.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="DateTimeToolTipTimeType" xml:space="preserve">
    <value>Select the unit of time to add or subtract. This is ignored if the unit is blank or 0.</value>
  </data>
  <data name="DeleteToolTipRecords" xml:space="preserve">
    <value>* in Recordset will execute every index in the given recordset.</value>
  </data>
  <data name="EmailToolTipAttachments" xml:space="preserve">
    <value>Enter the path to the attachments you want to send separated by a semicolon ;</value>
  </data>
  <data name="EmailToolTipPriorityType" xml:space="preserve">
    <value>Select the message priority.</value>
  </data>
  <data name="FindIndexToolTipDirectionType" xml:space="preserve">
    <value>Select the direction to search in.</value>
  </data>
  <data name="FindIndexToolTipIndexType" xml:space="preserve">
    <value>Select which index(s) you would like found.</value>
  </data>
  <data name="FindToolTipInFields" xml:space="preserve">
    <value>To find the indexes/rows that match certain criteria, put the comma separated list of fields to search in here.</value>
  </data>
  <data name="FindToolTipLookForMatchType" xml:space="preserve">
    <value>Select the type of information you want to match on.</value>
  </data>
  <data name="FindToolTipMatch" xml:space="preserve">
    <value>Match data</value>
  </data>
  <data name="FindToolTipRequireAllFieldsToMatch" xml:space="preserve">
    <value>Will only return rows where each field specified meets the match criteria if selected.</value>
  </data>
  <data name="FindToolTipRequireAllMatchesToBeTrue" xml:space="preserve">
    <value>Will only return rows that match all of the criteria if selected.</value>
  </data>
  <data name="FindToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the indexes of the successful matches.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.
If there are multiple results and a scalar is used, then each result will be separated with a comma.</value>
  </data>
  <data name="ForEachToolTipForEachType" xml:space="preserve">
    <value>Generally Replaces the * in the activity with the relevant index. e.g. If 1-3 is provided then [[Customer(*).ID]] will execute as [[Customer(1).ID]],
[[Customer(2).ID]],
[[Customer(3).ID]].
* in Range allows you to input a range of indexes.
* in CSV allows a specific set of indexes to be specified e.g. 1,5,7,9.
* in Recordset will execute every index in the given recordset.
* in Executes will execute the activity a given number of times and replace the * with the number of times it has executed e.g. 1,2,3... up to the number you specify.
No Subs. Execution WILL NOT substitute * with anything. The inner item(s) will execute given number of times in full.</value>
  </data>
  <data name="FormatNumberToolTipDecimalsToShow" xml:space="preserve">
    <value>How many decimals should be returned as a factor of 10? e.g. 3 will show 0.000 and negative 3 (-3) will show 15000 as 15.</value>
  </data>
  <data name="FormatNumberToolTipRoundType" xml:space="preserve">
    <value>How would you like to round the number?
None: No rounding is done
Normal: 5,6,7,8,9 round up &amp; 1,2,3,4 round down
Up: 1-9 all round up
Down: 1-9 all round down</value>
  </data>
  <data name="LengthToolTipRecordset" xml:space="preserve">
    <value>To get the length or max index in a recordset, put the recordset name in here. E.g. [[Customer()]]</value>
  </data>
  <data name="LengthToolTipResult" xml:space="preserve">
    <value>Only variables go in here. Returns a number specifying the highest index / max index in the recordset.</value>
  </data>
  <data name="NativeActivityToolTipCallthiswebservice" xml:space="preserve">
    <value>If an error occurs you can execute a web service / Warewolf workflow to log the error that occurred.
E.g. http://ServerName:3142/Services/LogErrors?Severity=1&amp;Error=[[ErrorMsg]]</value>
  </data>
  <data name="NativeActivityToolTipEndtheworkflow" xml:space="preserve">
    <value>To end the workflow if an error has occurred at this point, make sure the checkbox is selected. 
If you have also called a web service / Warewolf workflow, that will finish executing first.
If the workflow is nested, the calling workflow will resume.</value>
  </data>
  <data name="NativeActivityToolTipPuterrorinthisvariable" xml:space="preserve">
    <value>If an error occurs the error message will be placed into this variable as well the result variable.
If left empty the result will still be placed in the result variable. This will cause the error to be handled</value>
  </data>
  <data name="RandomToolTipType" xml:space="preserve">
    <value>The type of random information to generate.
Letters: Alphabetical letters only.
Numbers: Numbers only.
Letters and Numbers: A random combination of letters and numbers.
GUID: A randomly generated Globally Unique Identifier.</value>
  </data>
  <data name="ReplaceToolTipInFields" xml:space="preserve">
    <value>Only variables go in here.
To search and replace a string, put the variable containing the string to search in here.</value>
  </data>
  <data name="ScriptingToolTipLanguageType" xml:space="preserve">
    <value>What type of scripting language do you want to use?</value>
  </data>
  <data name="SequenceTooltipSequence" xml:space="preserve">
    <value>To execute a set of Activities in sequence put them in the order you want them executed.
To execute more than one item in a loop construct etc. put the activities in a sequence first and then put the sequence into the loop construct.
Error handling operates as a catch all for all items in the sequence.</value>
  </data>
  <data name="SortToolTipSortField" xml:space="preserve">
    <value>To Sort a recordset enter the field in the recordset you would like to sort on.
To sort on more than one field, perform the sort action for each field you would like to sort on, ending with the priority sort.</value>
  </data>
  <data name="SortToolTipSortOrderType" xml:space="preserve">
    <value>Select the order of the sorting.
Forward will go 1-9 then a-Z.
Backward will go Z-a then 9-1.</value>
  </data>
  <data name="SQLBulkInsertToolTipSkipblankrows" xml:space="preserve">
    <value>Blank records will not be added to the SQL table.</value>
  </data>
  <data name="SQLBulkInsertToolTipTable" xml:space="preserve">
    <value>Select a table to perform the bulk insert into.
If the table schema has changed or recently added to the source, click the refresh button.</value>
  </data>
  <data name="SystemInformationToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the type of system information selected.</value>
  </data>
  <data name="SystemInformationToolTipSysInfoType" xml:space="preserve">
    <value>Select the type of system information you would like to use.</value>
  </data>
  <data name="UniqueToolTipInFields" xml:space="preserve">
    <value>To identify unique information in a recordset, put the comma separated fields that need to be unique in here.</value>
  </data>
  <data name="UniqueToolTipResults" xml:space="preserve">
    <value>Returns the unique combinations into the variables specified. If there are multiple fields being returned, there should be multiple Results fields specified. Use a comma to separate the variables.</value>
  </data>
  <data name="UniqueToolTipReturnFields" xml:space="preserve">
    <value>Which fields from the recordset would you like returned when a Unique combination is found? Use a comma separated list of the fields.
Where multiple rows are the same, the first one will be deemed Unique.</value>
  </data>
  <data name="WebRequestToolTipHeader" xml:space="preserve">
    <value>To supply additional header information in your get request, put the header info in here.</value>
  </data>
  <data name="WebRequestToolTipResult" xml:space="preserve">
    <value>Only a single variable goes in here.
Returns the response text of the web get request.</value>
  </data>
  <data name="WebRequestToolTipURL" xml:space="preserve">
    <value>Any data or variable can go in here.
To traverse and retrieve the raw response from a webpage, enter it in here.</value>
  </data>
  <data name="WriteFileToolTipContents" xml:space="preserve">
    <value>Any variable and/or data goes in here.
Put the contents you want written to the file in here.</value>
  </data>
  <data name="XpathHelpResults" xml:space="preserve">
    <value>Only variables go in here.
Returns the result of the Xpath expression.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.
Each Xpath expression returned will be added to the result recordset in a new record or comma separated list if a scalar variable is defined.

Allowed:
[[Scalar]]  
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="XpathToolTipResults" xml:space="preserve">
    <value>Only variables go in here.
Returns the result of the Xpath expression.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.
Each Xpath expression returned will be added to the result recordset in a new record or comma separated list if a scalar variable is defined.</value>
  </data>
  <data name="ZipToolTipCompressiontype" xml:space="preserve">
    <value>The system will try and match your zipping requirements as far as possible.
None creates the new file with the content and adds no compression - fastest.
Partial attempts some compression.
Normal will apply standard compression.
Max will compress the zipped file as much as possible - slowest.</value>
  </data>
  <data name="DateTimeDifferenceToolTipDatetime1" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To find the difference in time between two date times, put the first date time in here. The format needs to be the same for the two.
Leaving this field blank will give you the system date time.</value>
  </data>
  <data name="DateTimeDifferenceToolTipDatetime2" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To find the difference in time between two date times, put the second date time in here. The format needs to be the same for the two.
Leaving this field blank will give you the system date time.</value>
  </data>
  <data name="DateTimeDifferenceToolTipInputFormat" xml:space="preserve">
    <value>Describe the format of the date times you are entering. e.g. 23-July 1978 would be described as dd-MM yyyy.
Leaving this field blank will assume the system date time format.
To escape text or non-date information use 'around the text you want to escape'. e.g. Time is now 15 hours and 33 minutes. Would have an input format of 'Time is now' 24hr 'hours and' min 'minutes.'</value>
  </data>
  <data name="DateTimeDifferenceToolTipOutputType" xml:space="preserve">
    <value>Select the unit of time to output the difference in.</value>
  </data>
  <data name="DateTimeDifferenceToolTipResult" xml:space="preserve">
    <value>Only variables go in here.
Returns the difference in time between the two date times.
You can use [[Scalar]] as well as [[Recordset().Fields]].
Using recordset () will add a new record and (*) will assign every record.</value>
  </data>
  <data name="FindToolTipFrom" xml:space="preserve">
    <value>The value that the search will start at, this must be a number, date or time and must be the same type as the "To" type.</value>
  </data>
  <data name="FindToolTipTo" xml:space="preserve">
    <value>The value that the search will end at, this must be a number, date or time and must be the same type as the "From" type.</value>
  </data>
  <data name="ZipHelpPassword" xml:space="preserve">
    <value>For protected resources, specify the Password of an account with permission to access the destination. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="ZipHelpUsername" xml:space="preserve">
    <value>For protected resources, specify the Username of an account with permission to access the source. By default the account running Warewolf Server.exe service will be used.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="WebRequestToolTipTimeOut" xml:space="preserve">
    <value>The length of time to wait for a web request to complete before failing</value>
  </data>
  <data name="CalculateHelpFx" xml:space="preserve">
    <value>Any variable and/or data goes in here.
To perform a calculation, put the calculation in here in BODMAS format.
Using (*) notation for recordsets, will perform the calculation and give a result, for each record.
To use aggregate functions on the whole recordset e.g. to Sum all the [[Product(*).Price]] fields in a recordset, use the Aggregate Calculate tool.

Allowed:
Data   
[[Scalar]]   
[[Recordset(n).Field]]   
[[Recordset(*).Field]]   
[[Recordset().Field]]</value>
  </data>
  <data name="CalculateToolTipFx" xml:space="preserve">
    <value>Excel like calculation</value>
  </data>
  <data name="CalculateToolTipResult" xml:space="preserve">
    <value>Returns the calculation result.</value>
  </data>
  <data name="EditRabbitMQSourceHelp" xml:space="preserve">
    <value>Edit RabbitMQ Source</value>
  </data>
  <data name="NewRabbitMQSourceHelp" xml:space="preserve">
    <value>New RabbitMQ Source</value>
  </data>
  <data name="RabbitMQSourceHelp" xml:space="preserve">
    <value>Select a preconfigured RabbitMQ source or add a new one.&lt;br /&gt;
</value>
  </data>
  <data name="RabbitMQToolTipSource" xml:space="preserve">
    <value>Select a preconfigured RabbitMQ source or add a new one.&lt;br /&gt;
</value>
</data>
  <data name="RabbitMQHelpQueueName" xml:space="preserve">
    <value>Provide a meaningful name for the queue.&lt;br /&gt;
        &lt;br /&gt;

        Allowed:&lt;br /&gt;
        Data   
        &lt;ol&gt;
            &lt;li&gt;[[Scalar]]&lt;/li&gt;
            &lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;
            &lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;
            &lt;li&gt;[[Recordset().Field]]&lt;/li&gt;
        &lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQToolTipQueueName" xml:space="preserve">
    <value>Provide a meaningful name for the queue.</value>
  </data>
  <data name="RabbitMQHelpIsDurable" xml:space="preserve">
    <value>Make the queue durable.&lt;br/&gt;
        &lt;br /&gt;

        Allowed:&lt;br /&gt;
        Make the queue durable</value>
  </data>
  <data name="RabbitMQToolTipIsDurable" xml:space="preserve">
    <value>Make the queue durable.</value>
  </data>
  <data name="RabbitMQHelpIsExclusive" xml:space="preserve">
    <value>Make the queue exclusive.&lt;br/&gt;
        &lt;br /&gt;

        Allowed:&lt;br /&gt;
        Make the queue exclusive</value>
  </data>
  <data name="RabbitMQToolTipIsExclusive" xml:space="preserve">
    <value>Make the queue exclusive.</value>
  </data>
  <data name="RabbitMQHelpIsAutoDelete" xml:space="preserve">
    <value>Make the queue auto delete.&lt;br/&gt;
        &lt;br /&gt;

        Allowed:&lt;br /&gt;
        Make the queue auto delete</value>
  </data>
  <data name="RabbitMQToolTipIsAutoDelete" xml:space="preserve">
    <value>Make the queue auto delete.</value>
  </data>
  <data name="RabbitMQHelpMessage" xml:space="preserve">
    <value>The message goes in here.&lt;br /&gt;
        &lt;br /&gt;

        Allowed:&lt;br /&gt;
        Data   
        &lt;ol&gt;
            &lt;li&gt;[[Scalar]]&lt;/li&gt;
            &lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;
            &lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;
            &lt;li&gt;[[Recordset().Field]]&lt;/li&gt;
        &lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQToolTipMessage" xml:space="preserve">
    <value>The message goes in here.</value>
  </data>
  <data name="RabbitMQHelpResult" xml:space="preserve">
    <value>Only variables go in here.&lt;br /&gt;
        Returns Success or Failure depending on the success of the message publish.&lt;br /&gt;
        &lt;br /&gt;

        Allowed:
        &lt;ol&gt;
            &lt;li&gt;[[Scalar]]&lt;/li&gt;
            &lt;li&gt;[[Recordset(n).Field]]&lt;/li&gt;
            &lt;li&gt;[[Recordset(*).Field]]&lt;/li&gt;
            &lt;li&gt;[[Recordset().Field]]&lt;/li&gt;
        &lt;/ol&gt;</value>
  </data>
  <data name="RabbitMQToolTipResult" xml:space="preserve">
    <value>Only variables go in here.</value>
  </data>
  <data name="ManageRabbitMQHostTooltip" xml:space="preserve">
    <value>RabbitMQ server name</value>
  </data>
  <data name="ManageRabbitMQPortTooltip" xml:space="preserve">
    <value>Port used by the RabbitMQ server</value>
  </data>
  <data name="ManageRabbitMQUserNameTooltip" xml:space="preserve">
    <value>User name for the RabbitMQ server</value>
  </data>
  <data name="ManageRabbitMQPasswordTooltip" xml:space="preserve">
    <value>Password for the RabbitMQ server</value>
  </data>
  <data name="ManageRabbitMQVirtualHostTooltip" xml:space="preserve">
    <value>Virtual host for the RabbitMQ server</value>
  </data>
  <data name="VirtualHostLabel" xml:space="preserve">
    <value>Virtual Host</value>
  </data>
  <data name="ManagePublishTooltip" xml:space="preserve">
    <value>Publish the test message</value>
  </data>
  <data name="RabbitMQSourceNewHeaderLabel" xml:space="preserve">
    <value>New RabbitMQ Source</value>
  </data>
  <data name="RabbitMQSourceHostHelp" xml:space="preserve">
    <value>The Host name of the server you want to use for publishing messages.</value>
  </data>
  <data name="RabbitMQSourcePortHelp" xml:space="preserve">
    <value>The Port of the RabbitMQ server. Default value is 5672.</value>
  </data>
  <data name="RabbitMQSourceUserNameHelp" xml:space="preserve">
    <value>The User Name for the RabbitMQ server.</value>
  </data>
  <data name="RabbitMQSourcePasswordHelp" xml:space="preserve">
    <value>The Password for the RabbitMQ server.</value>
  </data>
  <data name="RabbitMQSourceVirtualHostHelp" xml:space="preserve">
    <value>The Virtual Host of the RabbitMQ server. Default value is /.</value>
  </data>
</root>