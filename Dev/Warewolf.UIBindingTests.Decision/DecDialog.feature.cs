// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Warewolf.UIBindingTests.Decision
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DecDialog")]
    [NUnit.Framework.CategoryAttribute("DecDialog")]
    public partial class DecDialogFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DecDialog.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DecDialog", "\tIn order to create a decision\r\n\tAs a Warewolf User\r\n\tI want to be shown the deci" +
                    "sion window setup", ProgrammingLanguage.CSharp, new string[] {
                        "DecDialog"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ensure Inputs are enabled on decision window load")]
        [NUnit.Framework.CategoryAttribute("DecDialog")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:InfragisticsWPF4.DataPresenter.v15.1.dll")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:InfragisticsWPF4.Controls.Editors.XamComboEditor.v15.1.dll")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:InfragisticsWPF4.Controls.Interactions.XamDialogWindow.v15." +
            "1.dll")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:InfragisticsWPF4.Controls.Editors.XamRichTextEditor.v15.1.d" +
            "ll")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:InfragisticsWPF4.DockManager.v15.1.dll")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:Warewolf.Studio.CustomControls.dll")]
        [NUnit.Framework.CategoryAttribute("MSTest:DeploymentItem:Dev2.CustomControls.dll")]
        [NUnit.Framework.TestCaseAttribute("1", "Visible, Visible, Visible", "[[a]]", "[[b]]", "12", "", "", "<", null)]
        [NUnit.Framework.TestCaseAttribute("2", "Visible, Visible", "[[a]]", "", "", "", "", "is Alphanumeric", null)]
        [NUnit.Framework.TestCaseAttribute("3", "Visible, Visible, Visible, Visible", "[[a]]", "[[b]]", "5", "[[c]]", "15", "Is Between", null)]
        public virtual void EnsureInputsAreEnabledOnDecisionWindowLoad(string no, string inputs, string variable, string variable2, string value2, string variable3, string value3, string matchType, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DecDialog",
                    "MSTest:DeploymentItem:InfragisticsWPF4.DataPresenter.v15.1.dll",
                    "MSTest:DeploymentItem:InfragisticsWPF4.Controls.Editors.XamComboEditor.v15.1.dll",
                    "MSTest:DeploymentItem:InfragisticsWPF4.Controls.Interactions.XamDialogWindow.v15." +
                        "1.dll",
                    "MSTest:DeploymentItem:InfragisticsWPF4.Controls.Editors.XamRichTextEditor.v15.1.d" +
                        "ll",
                    "MSTest:DeploymentItem:InfragisticsWPF4.DockManager.v15.1.dll",
                    "MSTest:DeploymentItem:Warewolf.Studio.CustomControls.dll",
                    "MSTest:DeploymentItem:Dev2.CustomControls.dll"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ensure Inputs are enabled on decision window load", @__tags);
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("I have a workflow New Workflow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.And("drop a Decision tool onto the design surface", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.Then("the Decision window is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
 testRunner.And(string.Format("\"{0}\" fields are \"Enabled\"", inputs), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And(string.Format("the decision match variables \"{0}\"and match \"{1}\" and to match\"{2}\"", variable, variable2, variable3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And(string.Format("MatchType  is \"{0}\"", matchType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then(string.Format("the inputs are \"{0}\"", inputs), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
