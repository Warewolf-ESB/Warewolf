<core:ActivityDesignerTemplate x:Class="Dev2.Activities.Designers2.WebServiceGet.Large"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:core="clr-namespace:Dev2.Activities.Designers2.Core"
                               xmlns:errors="clr-namespace:Dev2.Activities.Designers2.Core.Errors"
                               xmlns:webServiceGet="clr-namespace:Dev2.Activities.Designers2.WebServiceGet"
                               
                               xmlns:languages="clr-namespace:Warewolf.Studio.Resources.Languages;assembly=Warewolf.Studio.Resources"
                               xmlns:fa="http://schemas.fontawesome.io/icons/"
                               xmlns:customControls="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
                               xmlns:webServiceGet1="clr-namespace:Dev2.Activities.Designers2.Web_Service_Get"
                               xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                               xmlns:help="clr-namespace:Dev2.Activities.Designers2.Core.Help"
                               xmlns:xamGrid="clr-namespace:Warewolf.Studio.Views.XamGrid;assembly=Warewolf.Studio.Views"
                               xmlns:ig="http://schemas.infragistics.com/xaml"
                               xmlns:customControls1="clr-namespace:Warewolf.Studio.CustomControls;assembly=Warewolf.Studio.CustomControls"
                               MinWidth="350"
                               Width="350"
                               MinHeight="{Binding DesignMinHeight}"
                               Height="{Binding DesignHeight}"
                               MaxWidth="Infinity"
                               MaxHeight="{Binding DesignMaxHeight}"
                               mc:Ignorable="d"
                               d:DesignHeight="300"
                               d:DesignWidth="350"
                               d:DataContext="{d:DesignInstance webServiceGet1:WebServiceGetViewModel}">

    <core:ActivityDesignerTemplate.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Theme.xaml"/>
                <ResourceDictionary Source="../Core/CustomToolDesignerRegions.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </core:ActivityDesignerTemplate.Resources>

    <core:ActivityDesignerTemplate.RightButtons>
        <core:ActivityDesignerButton x:Name="DoneButton"
                                     Content="{Binding ButtonDisplayValue}"
                                     Margin="0,0,7,12"
                                     IsValidatedBefore="True"
                                     IsClosedAfter="True"
                                     Style="{StaticResource ActivityDesignerButtonStyle}" />
    </core:ActivityDesignerTemplate.RightButtons>

    <Grid x:Name="MainGrid" Margin="{StaticResource ElementBorder}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=InputsHasItems}" Value="True">
                                <Setter Property="RowDefinition.Height" Value="*"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=InputsHasItems}" Value="False">
                                <Setter Property="RowDefinition.Height" Value="Auto"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=OutputsHasItems}" Value="True">
                                <Setter Property="RowDefinition.Height" Value="*"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=OutputsHasItems}" Value="False">
                                <Setter Property="RowDefinition.Height" Value="Auto"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                 <Grid x:Name="SourcesGrid"  
                  Grid.Row="0" 
                  Visibility="{Binding Source.IsVisible, Converter={StaticResource BoolToVisibilityConverterPositive}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding LabelWidth}"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="SourceLabel" Text="Source" />
                <ComboBox x:Name="SourcesComboBox"
                          Grid.Column="1"
                          DisplayMemberPath="Name" 
                          Margin="{StaticResource ControlBorderRight}"
                          ToolTip="{x:Static languages:Core.ManageDbServiceSourcesTooltip}"
                          ItemsSource="{Binding Source.Sources}"
                          SelectedItem="{Binding Source.SelectedSource , Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <help:HelpSetter Text="{x:Static languages:Core.DatabaseServiceSourceTypesHelp}" DataContext="{Binding}" />
                    </i:Interaction.Behaviors>
                </ComboBox>
                <Button x:Name="SourceEditButton" 
                        Grid.Column="2"
                        Margin="{StaticResource ControlBorderRight}"
                        Content="..."
                        ToolTip="{x:Static languages:Core.ManageDbServiceEditSourceTooltip}"
                        Command="{Binding Path=Source.EditSourceCommand, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <help:HelpSetter Text="{x:Static languages:Core.DatabaseServiceEditSourceHelp}" DataContext="{Binding}" />
                    </i:Interaction.Behaviors>
                </Button>
                <Button x:Name="SourceNewButton" 
                        Grid.Column="3"
                        Content="{x:Static languages:Core.New}" 
                        Width="Auto"
                        Style="{StaticResource ButtonOrangeStyle}" 
                        ToolTip="{x:Static languages:Core.ManageDbServiceNewSourceTooltip}"
                        Command="{Binding Path= Source.NewSourceCommand, Mode=TwoWay}">
                    <i:Interaction.Behaviors>
                        <help:HelpSetter Text="{x:Static languages:Core.DatabaseServiceNewSourceHelp}" DataContext="{Binding}" />
                    </i:Interaction.Behaviors>
                </Button>
            </Grid>
        
                
                <Grid x:Name="NamespaceGrid" 
                      Grid.Row="1" 
                      Margin="{StaticResource ControlBorderTop}" 
                      IsEnabled="{Binding InputArea.IsVisible}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="NamespaceLabel" Text="Headers" />
                   <ScrollViewer 
                                      Grid.Column="1" 
                                      HorizontalScrollBarVisibility="Auto" 
                                      VerticalScrollBarVisibility="Auto"
                                      MaxHeight="110">
                            <Grid Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ScrollViewer}}, Path=ActualWidth}" MinWidth="400">
                                <xamGrid:XamGridEx x:Name="HeadersGrid" 
                                                   Style="{StaticResource XamGridStyle}"
                                                   ItemsSource="{Binding InputArea.Headers}" 
                                                   AutoGenerateColumns="False"
                                                   IsAlternateRowsEnabled="False"
                                                   ColumnLayoutHeaderVisibility="Never"
                                                   DeleteKeyAction="DeleteRowOfActiveCell"
                                                   ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                   ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                   ColumnWidth="*" >
                                    <ig:XamGrid.Columns>
                                        <customControls1:TextBoxColumn Key="Name" HeaderText="Name" MinimumWidth="100" Watermark="Header"/>
                                        <customControls1:TextBoxColumn Key="Value" HeaderText="Value" MinimumWidth="100" IsResizable="False" Watermark="Value"/>
                                    </ig:XamGrid.Columns>
                                    <ig:XamGrid.SortingSettings>
                                        <ig:SortingSettings AllowSorting="False" AllowMultipleColumnSorting="False" ShowSortIndicator="False"/>
                                    </ig:XamGrid.SortingSettings>
                                    <ig:XamGrid.EditingSettings>
                                        <ig:EditingSettings AllowEditing="Cell"
                                                            IsMouseActionEditingEnabled="SingleClick"
                                                            IsEnterKeyEditingEnabled="True" 
                                                            IsF2EditingEnabled="True" 
                                                            IsOnCellActiveEditingEnabled="False" />
                                    </ig:XamGrid.EditingSettings>
                                    <ig:XamGrid.ConditionalFormattingSettings>
                                        <ig:ConditionalFormattingSettings AllowConditionalFormatting="True"/>
                                    </ig:XamGrid.ConditionalFormattingSettings>
                                    <xamGrid:XamGridEx.ContextMenuSettings>
                                        <xamGrid:ContextMenuSettings AllowContextMenu="True">
                                            <xamGrid:ContextMenuSettings.ContextMenu>
                                                <ig:XamContextMenu >
                                                    <ig:XamMenuItem Header="Insert Row" Command="{Binding  Path= InputArea.AddRowCommand}">
                                                        <ig:XamMenuItem.Icon>
                                                            <Image Source="{x:Null}"/>
                                                        </ig:XamMenuItem.Icon>
                                                    </ig:XamMenuItem>
                                                    <ig:XamMenuItem Header="Delete Row"  Command="{Binding  Path=InputArea.RemoveRowCommand}">
                                                        <ig:XamMenuItem.Icon>
                                                            <Image Source="{x:Null}"/>
                                                        </ig:XamMenuItem.Icon>
                                                    </ig:XamMenuItem>
                                                </ig:XamContextMenu>
                                            </xamGrid:ContextMenuSettings.ContextMenu>
                                        </xamGrid:ContextMenuSettings>
                                    </xamGrid:XamGridEx.ContextMenuSettings>
                                    <i:Interaction.Behaviors>
                                        <help:HelpSetter Text="{x:Static languages:Core.WebServiceRequestHeadersTableHelp}" DataContext="{Binding}" />
                                    </i:Interaction.Behaviors>
                                </xamGrid:XamGridEx>
                            </Grid>
                        </ScrollViewer>
                    <Button x:Name="NamespaceRefreshButton" 
                            Grid.Column="2"
                            Command="{Binding Path=RefreshNamespaceCommand, Mode=TwoWay}"
                            Visibility="{Binding Path=IsNamespaceRefreshing, Converter={StaticResource BoolToVisibilityConverterNegative}}">
                        <Button.Content>
                            <fa:FontAwesome Icon="Refresh"/>
                        </Button.Content>
                    </Button>
                    <customControls:CircularProgressBar Margin="{StaticResource ControlBorderLeft}"
                                                        Grid.Column="2"
                                                        Width="25"
                                                        Height="25"
                                                        Visibility="{Binding Path=IsNamespaceRefreshing, Converter={StaticResource BoolToVis}}"/>
                </Grid>

                <Grid x:Name="ActionsGrid" 
                      Grid.Row="2" 
                      Margin="{StaticResource ControlBorderTop}" 
                      IsEnabled="{Binding ActionVisible}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=NamespaceLabel, Path=ActualWidth}"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="ActionLabel" Text="Method" Margin="{StaticResource ControlBorderRight}" />
                    <ComboBox x:Name="ActionsComboBox"
                              Grid.Column="1"
                              Margin="{StaticResource ControlBorderRight}"
                              ItemsSource="{Binding Methods}"
                              DisplayMemberPath="Method" 
                              IsEnabled="{Binding ActionVisible}"
                              ToolTip="{x:Static languages:Core.ManageDbServiceActionsTooltip}"
                              IsEditable="False"
                              SelectedItem="{Binding SelectedMethod}"/>
                    <Button x:Name="ActionRefreshButton" 
                            Grid.Column="2"
                            Command="{Binding Path=RefreshActionsCommand, Mode=TwoWay}"
                            Visibility="{Binding Path=IsRefreshing, Converter={StaticResource BoolToVisibilityConverterNegative}}">
                        <Button.Content>
                            <fa:FontAwesome Icon="Refresh"/>
                        </Button.Content>
                    </Button>
                    <customControls:CircularProgressBar Margin="{StaticResource ControlBorderLeft}"
                                                        Grid.Column="2"
                                                        Width="25"
                                                        Height="25"
                                                        Visibility="{Binding Path=IsRefreshing, Converter={StaticResource BoolToVis}}"/>
                </Grid>

            </Grid>
        </Grid>
        <Grid Grid.Row="1" 
              Height="{Binding ElementName=InputsControl, Path=Height}" 
              x:Name="InputsTemplate" 
              Visibility="{Binding InputsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <Control x:Name="InputsControl" Template="{StaticResource InputsGrid}"></Control>
        </Grid>
        <Grid Grid.Row="2" 
              Height="{Binding ElementName=InputsControl, Path=Height}" 
              x:Name="OutputsTemplate" 
              Visibility="{Binding TestComplete, Converter={StaticResource BoolToVisibilityConverter}}">
            <Control x:Name="OutputsControl" Template="{StaticResource OutputsGrid}"></Control>
        </Grid>
        <Grid x:Name="ErrorGrid" 
              Grid.Row="3"
              Margin="{StaticResource ControlBorderTop}" 
              Visibility="{Binding OnErrorVisible}">
            <errors:OnError />
        </Grid>
    </Grid>
</core:ActivityDesignerTemplate>
