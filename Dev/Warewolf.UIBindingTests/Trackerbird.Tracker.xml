<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trackerbird.Tracker</name>
    </assembly>
    <members>
        <member name="T:Trackerbird.Tracker.TBLicenseInfo">
            <summary>
            Used to hold the license type and statuses returned by TBApp.KeyCheck() and TBApp.KeyChanged()
            </summary>  
        </member>
        <member name="T:Trackerbird.Tracker.TBPrivacyMode">
            <summary>
            Use this to set the privacy mode for Trackerbird
            </summary>  
        </member>
        <member name="F:Trackerbird.Tracker.TBPrivacyMode.Off">
            <summary>
            Collects both architecture and usage data (default).
            </summary>
        </member>
        <member name="F:Trackerbird.Tracker.TBPrivacyMode.Low">
            <summary>
            Collect only architecture data but NOT usage data.
            </summary>
        </member>
        <member name="F:Trackerbird.Tracker.TBPrivacyMode.High">
            <summary>
            Does not collect any architecture or usage data.
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.TBPrivacyModeReturn">
            <summary>
            This is returned by GetPrivacyMode()
            </summary>  
        </member>
        <member name="F:Trackerbird.Tracker.TBPrivacyModeReturn.Off">
            <summary>
            Collects both architecture and usage data (default).
            </summary>
        </member>
        <member name="F:Trackerbird.Tracker.TBPrivacyModeReturn.Low">
            <summary>
            Collect only architecture data but NOT usage data.
            </summary>
        </member>
        <member name="F:Trackerbird.Tracker.TBPrivacyModeReturn.High">
            <summary>
            Does not collect any architecture or usage data.
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.TBConfig">
            <summary>
             Use this class to set values related to the tracked application and configure the Trackerbird SDK
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.CreateConfig(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Must be called to initalize the Trackerbird configuration data.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetFilePath(System.String)">
            <summary>
            Can be called before CreateConfig in order to set the location where the Trackerbird data files should be stored.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetProductEdition(System.String)">
            <summary>
            Used to set the edition of the application being tracked.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetProductLanguage(System.String)">
            <summary>
            Used to set the language of the application being tracked.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetProductVersion(System.String)">
            <summary>
            Used to set the version of the application being tracked.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetProductBuildNumber(System.String)">
            <summary>
            Used to set the build number of the application being tracked.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetPrivacyMode(Trackerbird.Tracker.TBPrivacyMode)">
            <summary>
            Use this to set the privacy mode. 
            </summary>
            <param name="privacyMode">Sets what data Trackerbird will collect from your end users.</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.GetPrivacyMode">
            <summary>
            Use this method to retrieve the current privacy mode being used by Trackerbird
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetCustomProperty(System.Int16,System.String)">
            <summary>
            Sets a custom property related to the application bein tracked.
            </summary>
            <param name="index">The index of the value to be stored</param>
            <param name="customValue">A String value which should be stored at the specified location</param>
            <returns></returns>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetDefaultProxyCredentials(System.String,System.String)">
            <summary>
            Set the proxy username and password that will be used by the SDK to authenticate with the default Windows proxy server defined in IE settings.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBConfig.SetProxy(System.String,System.String,System.String)">
            <summary>
            Sets the proxy to be used by the Trackerbird SDK to contact the Trackerbird servers. 
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.StartStatusEnum">
            <summary>
            Represents the status of the Trackerbird SDK
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.GenericReturn">
            <summary>
            Represents common return values that may be returned by various methods
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.MessageType">
            <summary>
            Represents the types of messages which can be retrieved
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.KeyType">
            <summary>
            Represents the type of the license key currently being used
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.ConnectionReturn">
            <summary>
            Returned by TBApp.ConnectionCheck() to represent the status of the connection to the Trackerbird server
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.VersionCheckReturn">
            <summary>
            Represents the status of the version of the application using Trackerbird 
            </summary>
        </member>
        <member name="T:Trackerbird.Tracker.TBApp">
            <summary>
             Use this class to track your applications
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.Start(System.Boolean,System.Boolean)">
            <summary>
            This signals that your application has started. This should be placed before calling any other Trackerbird method (Except SetProxy when using a proxy).
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.Sync(System.Boolean)">
            <summary>
            Attempts to sync all of the logs and information gathered from the machine to the server.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.Stop(System.Boolean)">
            <summary>
            This method should be called when your application is exiting. It will signal Trackerbird to log the event and to attempt to Sync with the Servers.
            After calling this Method, TBApp.Start must be called again to start using Trackerbird.
            </summary>       
            <param name="doSync">Set this parameter to false only in important scencarios where the SDK should exit instantaneously such as installations. For more information please refer to the documentation or contact Trackerbird Support.</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.Stop(System.Int32)">
            <param name="syncTimeout">Set this parameter to the desired sync timeout.</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.StartStatus">
            <summary>
            Returns the status of the Trackerbird SDK.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp._SessionStartX86(System.String)">
            <summary>
            Start a user session (multi-session mode only)
            </summary>      
            <param name="sessionID">A unique session ID to identify the user session</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.SessionStart(System.String)">
            <summary>
            Start a user session (multi-session mode only)
            </summary>      
            <param name="sessionID">A unique session ID to identify the user session</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.SessionStop(System.String)">
            <summary>
            End a user session (multi-session mode only)
            </summary>      
            <param name="sessionID">A unique session ID to identify the user session</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.StartAutoSync(System.Boolean)">
            <summary>
            This signals the start of autosynchronization with the server. After calling this method a sync will be done automatically every fixed period of time
            Call on TBApp.StopAutoSync() to stop the automatic synchronization.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.StopAutoSync">
            <summary>
            Used to stop the auto synchronization which can be started by calling on TBApp.StartAutoSync().
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.ExceptionTrack(System.String,System.String,System.Exception)">
            <summary>
            Tracks and logs exceptions from within your code.
            </summary>
            <param name="className">The class name from which the error originated. If the length of the string is greater than 50 it will be truncated.</param>
            <param name="methodName">The method name from which the error originated. If the length of the string is greater than 50 it will be truncated.</param>
            <param name="ex">The handled exception</param>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.ConnectionCheck(System.String)">
            <summary>
            Check if the SDK is able to connect to the internet in order to connect with Trackerbird Servers
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.VersionCheck(System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Checks if there is a newer version of your application available.
            </summary>
            <param name="internalNewVersion">The internal version number used by the application, set when a new version is available</param>
            <param name="userFriendlyNewVersion">The newer version which can be used to be displayed to users.</param>
            <returns>Returns VersionCheckReturn which will represent the status of the version</returns>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.KeyChanged(System.String)">
            <summary>
            Checks the status of a new key being given to your application.
            </summary>
            <param name="newKey">The new key attempting to be entered.</param>
            <returns>Returns an instance of a TBLicenseInfo object which contains all of the key information</returns>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.KeyCheck(System.String)">
            <summary>
            Checks the status of the key being used by your application with the server.
            </summary>
            <param name="licKey">The key being used</param>
            <returns>Returns an instance of a TBLicenseInfo object which contains all of the key information.</returns>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.SetLicense(System.Nullable{Trackerbird.Tracker.KeyType},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Used to set the license type and status flags in order to be logged and be made available on the Trackerbird reporting system.
            Any parameter may be set to null if that particular value is not used or should be left unchanged.
            </summary>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.MessageCheck(System.String@,Trackerbird.Tracker.MessageType@)">
            <summary>
            Checks with the Trackerbird Sever if there are any messages available to be recieved by your application. 
            This overload retrieves all message types and should be handled accordingly.
            </summary>
            <param name="message">Will be populated with the message retrieved from the server.</param>
            <param name="messageType">The type of the message which has been retrieved.</param>
            <returns>
            Returns an integer representing 
            the number of messages which are available on the server.
            </returns>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.MessageCheck(System.String@,Trackerbird.Tracker.MessageType)">
            <summary>
            Checks with the Trackerbird Sever if there are any messages available to be recieved by your application. 
            This overload will retrieve only specified message types..
            </summary>
            <param name="message">Will be populated with the message retrieved from the server.</param>
            <param name="messageTypeExpected">Set which message type should be retrieved by the server.</param>
            <returns>
            Returns an integer representing 
            the number of messages which are available on the server.
            </returns>
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.EventTrack(System.String,System.String,System.String)">
            <summary>
            Track events/features being used from within your application
            </summary>
            <param name="category">Optional (nullable) String by which to categorize your event. If the length of this string and the 'eventName' parameter is greater than 50 it will be truncated.</param>
            <param name="eventName">The name used to describe the event. This string cannot be longer than 40 characters. Also, if the length of this string and the 'category' parameter is greater than 50 it will be truncated.</param>
            <param name="sessionID">The user session ID. Used only in multi-session mode. Must be set to null in single-session mode.</param>        
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.EventTrackNum(System.String,System.String,System.Double,System.String)">
            <summary>
            Track events being along with a numeric custom value.
            </summary>
            <param name="category">Optional (nullable) String by which to categorize your event. If the length of this string and the 'eventName' parameter is greater than 50 it will be truncated.</param>
            <param name="eventName">The name used to describe the event. This string cannot be longer than 40 characters. Also, if the length of this string and the 'category' parameter is greater than 50 it will be truncated.</param>
            <param name="customValue">A numeric (double) value which is related to your event and you would like to store</param>
            <param name="sessionID">The user session ID. Used only in multi-session mode. Must be set to null in single-session mode.</param>        
        </member>
        <member name="M:Trackerbird.Tracker.TBApp.EventTrackTxt(System.String,System.String,System.String,System.String)">
            <summary>
            Track events being along with a String custom value.
            </summary>
            <param name="category">Optional (nullable) String by which to categorize your event. If the length of this string and the 'eventName' parameter is greater than 50 it will be truncated.</param>
            <param name="eventName">The name used to describe the event. This string cannot be longer than 40 characters. Also, if the length of this string and the 'category' parameter is greater than 50 it will be truncated.</param>
            <param name="customValue">A String value which is related to your event and you would like to store</param>
            <param name="sessionID">The user session ID. Used only in multi-session mode. Must be set to null in single-session mode.</param>        
        </member>
    </members>
</doc>
