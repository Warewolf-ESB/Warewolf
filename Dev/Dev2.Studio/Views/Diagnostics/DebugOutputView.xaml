<UserControl x:Class="Dev2.Studio.Views.Diagnostics.DebugOutputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"                     
             xmlns:b="clr-namespace:Dev2.Studio.AppResources.Behaviors"
             xmlns:diagnostics="clr-namespace:Dev2.Studio.Diagnostics"
             xmlns:localDiagnostics="clr-namespace:Dev2.Studio.ViewModels.Diagnostics"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:customControls="clr-namespace:Dev2.Studio.CustomControls"
             xmlns:converters="clr-namespace:Dev2.CustomControls.Converters;assembly=Dev2.CustomControls"
             xmlns:customControls1="clr-namespace:Warewolf.Studio.CustomControls;assembly=Warewolf.Studio.CustomControls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:core="clr-namespace:Warewolf.Studio.Core;assembly=Warewolf.Studio.Core"
             xmlns:languages="clr-namespace:Warewolf.Studio.Resources.Languages;assembly=Warewolf.Studio.Resources"
             xmlns:diagnostics2="clr-namespace:Dev2.Studio.Core;assembly=Dev2.Studio.Core"
             mc:Ignorable="d"
             Name="DebugOutput"
             d:DataContext="{d:DesignInstance localDiagnostics:DebugOutputViewModel}">
    <Grid Margin="{StaticResource ElementBorder}">
        <Grid.Resources>
            <converters:IsValidDateTimeConverter x:Key="IsValidDateTimeConverter" />

            <Style x:Key="VersionVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
            </Style>

            <Style x:Key="ServerVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                    <Setter Property="AutomationProperties.AutomationId" Value="UI_DebugShowType_AutoID" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowServer, ElementName=DebugOutput}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TypeVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowType, ElementName=DebugOutput}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StartTimeVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowTime, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.StartTime, Converter={StaticResource IsValidDateTimeConverter}}" Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeWorkflow}}" Value="Visible" />
                            <Condition Binding="{Binding Content.StateType, Converter={StaticResource EnumToVisibilityConverterStateTypeBefore}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EndTimeVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowTime, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.EndTime, Converter={StaticResource IsValidDateTimeConverter}}" Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeWorkflow}}" Value="Visible" />
                            <Condition Binding="{Binding Content.StateType, Converter={StaticResource EnumToVisibilityConverterStateTypeAfter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DurationVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowDuration, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeWorkflow}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowDuration, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeStep}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InputsVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowInputs, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.Inputs, Converter={StaticResource CountToVisibilityConverter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="OutputsVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowOutputs, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.Outputs, Converter={StaticResource CountToVisibilityConverter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AssertResultVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowAssertResult, ElementName=DebugOutput}" Value="True" />
                            <Condition Binding="{Binding Content.AssertResultList, Converter={StaticResource CountToVisibilityConverter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="OriginVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.Origin, Converter={StaticResource StringToVisibilityConverter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="UserVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.ExecutingUser, Converter={StaticResource StringToVisibilityConverter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StepsVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.NumberOfSteps, Converter={StaticResource IntToVisibilityConverter}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ErrorsVisibility">
                <Style.Setters>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ValidationErrorElement}" />
                    <Setter Property="FrameworkElement.Visibility" Value="Collapsed" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.HasError, Converter={StaticResource BoolToVisibilityConverterPositive}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ErrorBorderStyle" TargetType="Border">
                <Style.Setters>
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Width" Value="4" />
                    <Setter Property="Margin" Value="0,3,10,0" />
                    <Setter Property="CornerRadius" Value="2" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding HasError, Converter={StaticResource NullableBoolToBoolConverter}}" Value="true" />
                            <Condition Binding="{Binding Content.HasError}" Value="false" />
                            <Condition Binding="{Binding DataContext.HighlightError, ElementName=DebugOutput}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource ValidationErrorElement}" />
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="NoErrorBorderStyle" TargetType="Border">
                <Style.Setters>
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Width" Value="4" />
                    <Setter Property="Margin" Value="0,3,10,0" />
                    <Setter Property="CornerRadius" Value="2" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding HasNoError, Converter={StaticResource NullableBoolToBoolConverter}}" Value="true" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="Green" />
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MockBorderStyle" TargetType="Border">
                <Style.Setters>
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Width" Value="4" />
                    <Setter Property="Margin" Value="0,3,10,0" />
                    <Setter Property="CornerRadius" Value="2" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding MockSelected, Converter={StaticResource BoolToVisibilityConverterPositive}}" Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TextBlockDebugOutputServiceTestStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource FontSize-Normal}" />
                <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
                <Setter Property="Foreground" Value="Green" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="0,0,2,0" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <AdornedElementPlaceholder />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ValidationErrorElement}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="TextBlockDebugOutputServiceTestFailedStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource FontSize-Normal}" />
                <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
                <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="0,0,2,0" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <AdornedElementPlaceholder />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ValidationErrorElement}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Popup x:Name="OptionsPopup"
               PlacementTarget="{Binding ElementName=OptionsButton}"
               IsOpen="{Binding Path=ShowOptions}"
               Placement="Bottom"
               Focusable="False"
               StaysOpen="False"
               AutomationProperties.AutomationId="UI_DebugOutputOptionsPopup">
            <i:Interaction.Behaviors>
                <b:PopupBuildVisualTreeOnLoad />
            </i:Interaction.Behaviors>
            <Border Background="White"
                    BorderBrush="LightGray"
                    BorderThickness="1">
                <StackPanel>
                    <CheckBox IsChecked="{Binding ShowType}" Content="Type" AutomationProperties.AutomationId="UI_DebugOutputShowTypeOption_AutoID" />
                    <CheckBox IsChecked="{Binding ShowTime}" Content="Time" AutomationProperties.AutomationId="UI_DebugOutputShowTimeOption_AutoID" />
                    <CheckBox IsChecked="{Binding ShowDuration}" Content="Duration" AutomationProperties.AutomationId="UI_DebugOutputShowDuration_AutoID" />
                    <CheckBox IsChecked="{Binding ShowInputs}" Content="Inputs" AutomationProperties.AutomationId="UI_DebugOutputShowInputsOption_AutoID" />
                    <CheckBox IsChecked="{Binding ShowOutputs}" Content="Outputs" AutomationProperties.AutomationId="UI_DebugOutputShowOutputsOption_AutoID" />
                    <StackPanel Orientation="Horizontal" Margin="6,0,0,3">
                        <TextBox Width="20" Text="{Binding DepthMax, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource IntEnsureMinConverter}, ConverterParameter=0}" />
                        <TextBlock Text="Nesting Levels" Margin="{StaticResource ControlBorderLeft}" VerticalAlignment="Center" AutomationProperties.AutomationId="UI_DebugOutputNestingLevelTextBlock_AutoID" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <customControls1:SearchTextBox Grid.Row="0" 
                                           Grid.Column="0"
                                           x:Name="SearchTextBox" 
                                           Style="{StaticResource SearchTextboxStyle}"
                                           ClearSearchCommand="{Binding Path=ClearSearchTextCommand}"
                                           ClearSearchToolTip="{x:Static languages:Tooltips.DebugOutputClearSearchTooltip}"
                                           LabelText="Filter"
                                           HorizontalAlignment="Stretch"
                                           ToolTip="{x:Static languages:Tooltips.DebugOutputSearchToolTip}"
                                           Text="{Binding Path=SearchText, Delay=450, UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Behaviors>
                    <core:HelpSetter Text="{x:Static languages:HelpText.DebugOutputViewFilterSearchHelp}" DataContext="{Binding}" />
                </i:Interaction.Behaviors>
            </customControls1:SearchTextBox>

            <Button Grid.Column="1"
                    x:Name="OptionsButton"
                    Command="{Binding ShowOptionsCommand}"
                    Margin="3,0,0,-1"
                    ToolTip="{x:Static languages:Tooltips.DebugOutputOptionsToolTip}"
                    AutomationProperties.AutomationId="UI_DebugOutputOptionsButton_AutoID">
                <Button.Content>
                    <fa:FontAwesome Icon="Gear" FontSize="16"></fa:FontAwesome>
                </Button.Content>
                <i:Interaction.Behaviors>
                    <b:ButtonPopupWorkaroundBehavior IsInWorkaroundState="{Binding SkipOptionsCommandExecute, Mode=TwoWay}" />
                    <core:HelpSetter Text="{x:Static languages:HelpText.DebugOutputViewOptionsHelp}" DataContext="{Binding}" />
                </i:Interaction.Behaviors>
            </Button>

            <Button Grid.Column="2"
                    Content="{Binding ExpandAllMode, Converter={StaticResource BoolToPlusMinusConverter}}"
                    FontSize="24"
                    Command="{Binding ExpandAllCommand}"
                    Margin="3,0,0,-1"
                    ToolTip="{x:Static languages:Tooltips.ExpandCollapseAllToolTip}"
                    AutomationProperties.AutomationId="UI_DebugOutputExpandAllMode_AutoID" >
                <i:Interaction.Behaviors>
                    <core:HelpSetter Text="{x:Static languages:HelpText.DebugOutputViewExpandAllHelp}" DataContext="{Binding}" />
                </i:Interaction.Behaviors>
            </Button>
            <Button Grid.Column="3"
                    FontSize="24"
                    Command="{Binding AddNewTestCommand}"
                    Margin="3,0,0,-1"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="{Binding AddNewTestTooltip}"
                    AutomationProperties.AutomationId="UI_DebugOutputAddNewTestMode_AutoID" >
                <Button.Content>
                    <fa:FontAwesome FontSize="14"
                                FontWeight="Light"
                                Icon="Flask" />
                </Button.Content>
                <i:Interaction.Behaviors>
                    <core:HelpSetter Text="{x:Static languages:HelpText.DebugOutputViewAddNewTestHelp}" DataContext="{Binding}" />
                </i:Interaction.Behaviors>
            </Button>
        </Grid>

        <Border BorderBrush="LightGray"
                BorderThickness="0,2,0,0"
                Margin="{StaticResource ControlBorderTop}"
                Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" CanContentScroll="True">
                    <TreeView ScrollViewer.VerticalScrollBarVisibility="Disabled"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ItemsSource="{Binding RootItems, NotifyOnSourceUpdated=True}" 
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              BorderBrush="Transparent"
                              x:Name="DebugOutputTree">
                        <TreeView.InputBindings>
                            <KeyBinding Gesture="CTRL+A" Command="{Binding SelectAllCommand}" />
                        </TreeView.InputBindings>
                        <i:Interaction.Behaviors>
                            <b:TreeviewScrollToEndOnNewContent />
                        </i:Interaction.Behaviors>
                        <TreeView.Resources>
                            <Style TargetType="{x:Type TreeView}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="TreeView">
                                            <Border Name="Border"
                                                    BorderBrush="Transparent"
                                                    Background="Transparent"
                                                    CornerRadius="1"
                                                    BorderThickness="1">
                                                <ItemsPresenter />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <DataTemplate x:Key="DebugGroupLineItemTemplate">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Variable}" Foreground="{StaticResource DebugItemVariableBrush}" Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" 
                                                       AutomationProperties.AutomationId="UI_DebugOutputVariableTextBlock_AutoID" />
                                            <TextBlock Grid.Column="1" Text="{Binding Operator}" Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" 
                                                       AutomationProperties.AutomationId="UI_DebugOutputOperatorTextBlock_AutoID"/>
                                            <TextBlock Grid.Column="2" Margin="0,1,0,0" Text="{Binding Value}" Foreground="{StaticResource DebugItemValueBrush}" Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" 
                                                       AutomationProperties.AutomationId="UI_DebugOutputValueTextBlock_AutoID" />
                                        </Grid>
                                    </StackPanel>

                                    <Button x:Name="MoreLink"
                                            Focusable="False"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Left"
                                            Visibility="{Binding MoreLink, Converter={StaticResource StringToVisibilityConverter}}"
                                            cal:Message.Attach="OpenMoreLink($DataContext)"
                                            cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">
                                        <TextBlock Margin="0 -7" Padding="0,0,0,5">...</TextBlock>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="DebugLineItemTemplate">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="{Binding ElementName=VariableTextBlock, Path=ActualWidth}" />
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Label}" Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" 
                                                       AutomationProperties.AutomationId="UI_DebugOutputLabelTextBlock_AutoID" />
                                            <TextBlock Grid.Column="1" x:Name="VariableTextBlock" Text="{Binding Variable}" Foreground="{StaticResource DebugItemVariableBrush}" 
                                                       Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" AutomationProperties.AutomationId="UI_DebugOutputVariableTextBlock_AutoID" />
                                            <TextBlock Grid.Column="2" Text="{Binding Operator}" Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" 
                                                       AutomationProperties.AutomationId="UI_DebugOutputOperatorTextBlock_AutoID" />
                                            <TextBlock Grid.Column="3" Margin="0,1,0,0" Text="{Binding Value}" Foreground="{StaticResource DebugItemValueBrush}" 
                                                       Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" AutomationProperties.AutomationId="UI_DebugOutputValueTextBlock_AutoID" />
                                        </Grid>
                                    </StackPanel>
                                    <Button x:Name="MoreLink"
                                            Focusable="False"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Left"                                        
                                            Visibility="{Binding MoreLink, Converter={StaticResource StringToVisibilityConverter}}"
                                            cal:Message.Attach="OpenMoreLink($DataContext)"
                                            cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">
                                        <TextBlock Margin="0 -7" Padding="0,0,0,5">...</TextBlock>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="ServiceTestDebugLineItemTemplate">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Value}" Margin="0,2,0,0" 
                                                       AutomationProperties.AutomationId="UI_DebugOutputServiceTestValueTextBlock_AutoID" >
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDebugOutputServiceTestStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding TestStepHasError}" Value="False">
                                                                <Setter Property="Foreground" Value="Green"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding TestStepHasError}" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </StackPanel>
                                    <Button x:Name="MoreLink"
                                            Focusable="False"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Left"                                        
                                            Visibility="{Binding MoreLink, Converter={StaticResource StringToVisibilityConverter}}"
                                            cal:Message.Attach="OpenMoreLink($DataContext)"
                                            cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">
                                        <TextBlock Margin="0 -7" Padding="0,0,0,5">...</TextBlock>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="DebugLineGroupRowTemplate">
                                <ItemsControl ItemsSource="{Binding Value.LineItems}" ItemTemplate="{StaticResource DebugGroupLineItemTemplate}" Margin="9,0,0,0">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </DataTemplate>

                            <DataTemplate x:Key="DebugLineGroupTemplate">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding GroupLabel}" VerticalAlignment="Top" Style="{StaticResource TextBlockDebugOutputNoPaddingStyle}" />
                                    <Expander Header="{Binding GroupName}" Style="{StaticResource PlusMinusExpander}" AutomationProperties.AutomationId="UI_DefaultRecordSetIOTemplate_AutoID" >
                                        <Grid>
                                            <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                <ItemsControl ItemsSource="{Binding Rows}" ItemTemplate="{StaticResource DebugLineGroupRowTemplate}" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Expander>
                                </StackPanel>
                            </DataTemplate>

                            <diagnostics:DebugLineTemplateSelector x:Key="DebugLineTemplateSelector" 
                                                                   ItemTemplate="{StaticResource DebugLineItemTemplate}" 
                                                                   GroupTemplate="{StaticResource DebugLineGroupTemplate}" />

                            <diagnostics:DebugLineTemplateSelector x:Key="ServiceTestDebugLineTemplateSelector" 
                                                                   ItemTemplate="{StaticResource ServiceTestDebugLineItemTemplate}" 
                                                                   GroupTemplate="{StaticResource DebugLineGroupTemplate}" />

                            <DataTemplate x:Key="DebugLinesTemplate">
                                <Grid>
                                    <ItemsControl ItemsSource="{Binding LineItems}" Focusable="False" ItemTemplateSelector="{StaticResource DebugLineTemplateSelector}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" Focusable="False"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="ServiceTestDebugLinesTemplate">
                                <Grid>
                                    <ItemsControl ItemsSource="{Binding LineItems}" Focusable="False" ItemTemplateSelector="{StaticResource ServiceTestDebugLineTemplateSelector}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" Focusable="False"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>

                            <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type diagnostics2:DebugStringTreeViewItemViewModel}">
                                <TextBlock Text="{Binding Content}" HorizontalAlignment="Stretch" />
                            </HierarchicalDataTemplate>

                            <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type diagnostics2:DebugStateTreeViewItemViewModel}">
                                <Grid HorizontalAlignment="Stretch" KeyboardNavigation.DirectionalNavigation="Continue">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="10" Style="{StaticResource ErrorBorderStyle}" />
                                    <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="10" Style="{StaticResource NoErrorBorderStyle}" />
                                    <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="10" Style="{StaticResource MockBorderStyle}" />

                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Content.ActivityType, Converter={StaticResource EnumToStringConverter}}" Margin="-4,0,0,0"/>
                                    <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                                        <Button Content="{Binding Content.DisplayName}" 
                                                Command="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"
                                                CommandParameter="{Binding Content}" 
                                                Style="{StaticResource BlueHeadingStyle}" 
                                                HorizontalAlignment="Left"
                                                Margin="-4,0,0,0"
                                                Focusable="False"
                                                IsEnabled="{Binding Content.ActivityType, Converter={StaticResource EnumToBoolConverterActivityTypeWorkflow}}" />
                                    </StackPanel>

                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="Version :" Style="{StaticResource VersionVisibility}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Content.Version}" Style="{StaticResource VersionVisibility}" 
                                               AutomationProperties.AutomationId="UI_DebugOutputVersionTextBlock_AutoID" />

                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="Server :" Style="{StaticResource ServerVisibility}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Content.Server}" Style="{StaticResource ServerVisibility}" />

                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="Type :" Style="{StaticResource TypeVisibility}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding Content.Name}" Style="{StaticResource TypeVisibility}" 
                                               AutomationProperties.AutomationId="UI_DebugOutputTypeTextBlock_AutoID" />

                                    <TextBlock Grid.Row="4" Grid.Column="1" Text="Start Time :" Style="{StaticResource StartTimeVisibility}" />
                                    <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding Content.StartTime, Converter={StaticResource DateTimeToStringConverter}}" 
                                               Style="{StaticResource StartTimeVisibility}" AutomationProperties.AutomationId="UI_DebugOutputStartTimeTextBlock_AutoID" />

                                    <TextBlock Grid.Row="4" Grid.Column="1" Text="End Time :" Style="{StaticResource EndTimeVisibility}" />
                                    <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding Content.EndTime, Converter={StaticResource DateTimeToStringConverter}}" 
                                               Style="{StaticResource EndTimeVisibility}" AutomationProperties.AutomationId="UI_DebugOutputTimeTextBlock_AutoID" />

                                    <TextBlock Grid.Row="5" Grid.Column="1" Text="Duration :" Style="{StaticResource DurationVisibility}" />
                                    <TextBlock Grid.Row="5" Grid.Column="2" Text="{Binding Content.Duration, Converter={StaticResource TimeSpanToStringConverter}}" 
                                               Style="{StaticResource DurationVisibility}" AutomationProperties.AutomationId="UI_DebugOutputDurationTextBlock_AutoID" />

                                    <TextBlock Grid.Row="6" Grid.Column="1" Text="Inputs :" Style="{StaticResource InputsVisibility}" />
                                    <StackPanel Grid.Row="6" Grid.Column="2" Orientation="Horizontal" Grid.IsSharedSizeScope="True" Style="{StaticResource InputsVisibility}">
                                        <ItemsControl ItemsSource="{Binding Inputs}"
                                                      Focusable="False"
                                                      ItemTemplate="{StaticResource DebugLinesTemplate}"
                                                      AutomationProperties.AutomationId="UI_DebugOutputInputPanel_AutoId" />
                                    </StackPanel>

                                    <TextBlock Grid.Row="7" Grid.Column="1" Text="Outputs :" Style="{StaticResource OutputsVisibility}" />
                                    <StackPanel Grid.Row="7"
                                                Grid.Column="2"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Left"
                                                Grid.IsSharedSizeScope="True" 
                                                Style="{StaticResource OutputsVisibility}">
                                        <ItemsControl ItemsSource="{Binding Outputs}"
                                                      Focusable="False"
                                                      ItemTemplate="{StaticResource DebugLinesTemplate}"
                                                      AutomationProperties.AutomationId="UI_DebugOutputOutputPanel_AutoId" />
                                    </StackPanel>

                                    <TextBlock Grid.Row="8" Grid.Column="1" Text="{Binding TestDescription}" Style="{StaticResource AssertResultVisibility}" />
                                    <StackPanel Grid.Row="8"
                                                Grid.Column="2"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Left"
                                                Grid.IsSharedSizeScope="True" 
                                                Style="{StaticResource AssertResultVisibility}">
                                        <ItemsControl ItemsSource="{Binding AssertResultList}"
                                                      Focusable="False"
                                                      ItemTemplate="{StaticResource ServiceTestDebugLinesTemplate}"
                                                      AutomationProperties.AutomationId="UI_DebugOutputAssertResultPanel_AutoId" />
                                    </StackPanel>

                                    <TextBlock Grid.Row="9" Grid.Column="1" Text="Origin :" Style="{StaticResource OriginVisibility}"/>
                                    <TextBlock Grid.Row="9" Grid.Column="2" Text="{Binding Content.Origin}" Style="{StaticResource OriginVisibility}" />

                                    <TextBlock Grid.Row="10" Grid.Column="1" Text="User :" Style="{StaticResource UserVisibility}"/>
                                    <TextBlock Grid.Row="10" Grid.Column="2" Text="{Binding Content.ExecutingUser}" Style="{StaticResource UserVisibility}" />

                                    <TextBlock Grid.Row="11" Grid.Column="1" Text="Number of steps" Style="{StaticResource StepsVisibility}"/>
                                    <TextBlock Grid.Row="11" Grid.Column="2" Text="{Binding Content.NumberOfSteps}" Style="{StaticResource StepsVisibility}" />

                                    <TextBlock Grid.Row="12" Grid.Column="1" Text="Error :" Style="{StaticResource ErrorsVisibility}"/>
                                    <TextBlock Grid.Row="12" Grid.Column="2" Text="{Binding Content.ErrorMessage}" Style="{StaticResource ErrorsVisibility}" />

                                </Grid>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyleSelector>
                            <diagnostics:DebugStyleSelector DebugStateStyle="{StaticResource DebugStateStyle}" DebugStringStyle="{StaticResource DebugStringStyle}" />
                        </TreeView.ItemContainerStyleSelector>
                    </TreeView>
                </ScrollViewer>
                <customControls:Dev2StatusBar AutomationProperties.AutomationId="Dev2StatusBarAutomationID"  
                                              Grid.Row="1"
                                              Height="Auto"
                                              Width="Auto"
                                              VerticalContentAlignment="Center"
                                              StatusBarLabelText="{Binding ProcessingText}" 
                                              Visibility="{Binding ShowDebugStatus, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                              ProgressBarVisiblity="{Binding IsProcessing, Converter={StaticResource BoolToVisConverter}}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>
