<UserControl x:Class="Dev2.Studio.Views.Diagnostics.DebugOutputView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"                     
             xmlns:b="clr-namespace:Dev2.Studio.AppResources.Behaviors"
             xmlns:diagnostics="clr-namespace:Dev2.Studio.Diagnostics"
             xmlns:localDiagnostics="clr-namespace:Dev2.Studio.ViewModels.Diagnostics"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:customControls="clr-namespace:Dev2.Studio.CustomControls"
             xmlns:customControls2="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
             xmlns:converters="clr-namespace:Dev2.CustomControls.Converters;assembly=Dev2.CustomControls"
    xmlns:diagnostics2="clr-namespace:Dev2.ViewModels.Diagnostics"
    mc:Ignorable="d"
             Name="DebugOutput"
             d:DataContext="{d:DesignInstance localDiagnostics:DebugOutputViewModel}">
    <Grid>
        <Grid.Resources>
            <converters:IsValidDateTimeConverter x:Key="IsValidDateTimeConverter" />

            <Style x:Key="VersionVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>


            </Style>

            <Style x:Key="ServerVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                    <Setter Property="AutomationProperties.AutomationId"
                            Value="UI_DebugShowType_AutoID" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowServer, ElementName=DebugOutput}"
                                       Value="True" />                         
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TypeVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowType, ElementName=DebugOutput}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StartTimeVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowTime, ElementName=DebugOutput}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.StartTime, Converter={StaticResource IsValidDateTimeConverter}}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeWorkflow}}"
                                       Value="Visible" />
                            <Condition Binding="{Binding Content.StateType, Converter={StaticResource EnumToVisibilityConverterStateTypeBefore}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="EndTimeVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowTime, ElementName=DebugOutput}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.EndTime, Converter={StaticResource IsValidDateTimeConverter}}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeWorkflow}}"
                                       Value="Visible" />
                            <Condition Binding="{Binding Content.StateType, Converter={StaticResource EnumToVisibilityConverterStateTypeAfter}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DurationVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowDuratrion, ElementName=DebugOutput}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeWorkflow}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowDuratrion, ElementName=DebugOutput}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.ActivityType, Converter={StaticResource EnumToVisibilityConverterActivityTypeStep}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InputsVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowInputs, ElementName=DebugOutput}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.Inputs, Converter={StaticResource CountToVisibilityConverter}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="OutputsVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.ShowOutputs, ElementName=DebugOutput}"
                                       Value="True" />
                            <Condition Binding="{Binding Content.Outputs, Converter={StaticResource CountToVisibilityConverter}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="OriginVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.Origin, Converter={StaticResource StringToVisibilityConverter}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="UserVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.ExecutingUser, Converter={StaticResource StringToVisibilityConverter}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StepsVisibility">
                <Style.Setters>
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.NumberOfSteps, Converter={StaticResource IntToVisibilityConverter}}"
                                       Value="Visible" />
                       </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ErrorsVisibility">
                <Style.Setters>
                    <Setter Property="TextElement.Foreground"
                            Value="{StaticResource ValidationErrorElement}" />
                    <Setter Property="FrameworkElement.Visibility"
                            Value="Collapsed" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Content.HasError, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                       Value="Visible" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="FrameworkElement.Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ErrorBorderStyle"
                   TargetType="Border">
                <Style.Setters>
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                    <Setter Property="BorderThickness"
                            Value="0" />
                    <Setter Property="Background"
                            Value="White" />
                    <Setter Property="Width"
                            Value="4" />
                    <Setter Property="Margin"
                            Value="0,3,10,0" />
                    <Setter Property="CornerRadius"
                            Value="2" />
                </Style.Setters>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding HasError, Converter={StaticResource NullableBoolToBoolConverter}}"
                                       Value="true" />
                            <Condition Binding="{Binding Content.HasError}"
                                       Value="false" />
                            <Condition Binding="{Binding DataContext.HighlightError, ElementName=DebugOutput}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background"
                                    Value="{StaticResource ValidationErrorElement}" />
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Popup x:Name="OptionsPopup"
               PlacementTarget="{Binding ElementName=OptionsButton}"
               IsOpen="{Binding Path=ShowOptions}"
               Placement="Bottom"
               Focusable="False"
               StaysOpen="False"
               AutomationProperties.AutomationId="UI_DebugOutputOptionsPopup">
            <i:Interaction.Behaviors>
                <b:PopupBuildVisualTreeOnLoad />
            </i:Interaction.Behaviors>
            <Border Background="White"
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    Padding="2">
                <StackPanel>
                    <CheckBox IsChecked="{Binding ShowType}"
                              Content="Type"
                              AutomationProperties.AutomationId="UI_DebugOutputShowTypeOption_AutoID" />
                    <CheckBox IsChecked="{Binding ShowTime}"
                              Content="Time"
                              AutomationProperties.AutomationId="UI_DebugOutputShowTimeOption_AutoID" />
                    <CheckBox IsChecked="{Binding ShowDuratrion}"
                              Content="Duration"
                              AutomationProperties.AutomationId="UI_DebugOutputShowDuration_AutoID" />
                    <CheckBox IsChecked="{Binding ShowInputs}"
                              Content="Inputs"
                              AutomationProperties.AutomationId="UI_DebugOutputShowInputsOption_AutoID" />
                    <CheckBox IsChecked="{Binding ShowOutputs}"
                              Content="Outputs"
                              AutomationProperties.AutomationId="UI_DebugOutputShowOutputsOption_AutoID" />
                    <StackPanel Orientation="Horizontal">
                        <TextBox Width="20"
                                 Text="{Binding DepthMax, Mode=TwoWay, UpdateSourceTrigger=LostFocus, Converter={StaticResource IntEnsureMinConverter}, ConverterParameter=0}" />
                        <TextBlock Text="Nesting Levels"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center"
                                   AutomationProperties.AutomationId="UI_DebugOutputNestingLevelTextBlock_AutoID" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>

        <Grid Margin="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <customControls2:FilterTextBox Grid.Column="0"
                                           Width="Auto"
                                           Margin="0,0,-2,0"
                                           SearchText="{Binding Path=SearchText,Mode=TwoWay}" 
                                           HorizontalContentAlignment="Stretch"
                                           VerticalAlignment="Stretch" />

            <Button Grid.Column="1"
                    x:Name="OptionsButton"
                    Content="Options"
                    Command="{Binding ShowOptionsCommand}"
                    Margin="0,0,2,0"
                    AutomationProperties.AutomationId="UI_DebugOutputOptionsButton_AutoID">
                <i:Interaction.Behaviors>
                    <b:ButtonPopupWorkaroundBehavior IsInWorkaroundState="{Binding SkipOptionsCommandExecute, Mode=TwoWay}" />
                </i:Interaction.Behaviors>
            </Button>

            <Button Grid.Column="2"
                    Content="{Binding ExpandAllMode, Converter={StaticResource BoolToPlusMinusConverter}}"
                    Command="{Binding ExpandAllCommand}"
                    Margin="0,0,3,0"
                    Width="20"
                    AutomationProperties.AutomationId="UI_DebugOutputExpandAllMode_AutoID" />
        </Grid>
        
        <Border BorderBrush="LightGray"
                BorderThickness="0,2,0,0"
                Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TreeView Grid.Row="0" 
                      ItemsSource="{Binding RootItems, NotifyOnSourceUpdated=True}" 
                      VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingStackPanel.VirtualizationMode="Recycling"
                      BorderBrush="Transparent"
                      x:Name="DebugOutputTree">
                     <TreeView.InputBindings>
                        <KeyBinding Gesture="CTRL+A"
                                    Command="{Binding SelectAllCommand}" />                       
                    </TreeView.InputBindings>
                <i:Interaction.Behaviors>
                    <b:TreeviewScrollToEndOnNewContent />
                </i:Interaction.Behaviors>
                <TreeView.Resources>
                        <DataTemplate x:Key="DebugGroupLineItemTemplate">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Variable}" Padding="{Binding Variable, Converter={StaticResource PaddingThicknessConverter}}"
                                               Foreground="{StaticResource DebugItemVariableBrush}" />
                                    <TextBlock Text="{Binding Operator}" Padding="{Binding Operator, Converter={StaticResource PaddingThicknessConverter}}"/>
                                    <TextBlock Text="{Binding Value}" Padding="{Binding Value, Converter={StaticResource PaddingThicknessConverter}}"
                                               Foreground="{StaticResource DebugItemValueBrush}" />
                                </StackPanel>
                                <Button x:Name="MoreLink"
                                        Focusable="False"
                                        VerticalAlignment="Bottom"
                                        HorizontalAlignment="Left"
                                        Width="15"
                                        Visibility="{Binding MoreLink, Converter={StaticResource StringToVisibilityConverter}}"
                                        cal:Message.Attach="OpenMoreLink($DataContext)"
                                        cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">
                                    <TextBlock Margin="0 -7"
                                               Padding="0,0,0,5">...</TextBlock>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                        
                    <DataTemplate x:Key="DebugLineItemTemplate">
                        <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Top"
                                               Text="{Binding Label}" Padding="{Binding Label, Converter={StaticResource PaddingThicknessConverter}}" />
                                    <TextBlock VerticalAlignment="Top"
                                               Text="{Binding Variable}" Padding="{Binding Variable, Converter={StaticResource PaddingThicknessConverter}}"
                                               Foreground="{StaticResource DebugItemVariableBrush}" />
                                    <TextBlock Text="{Binding Operator}" Padding="{Binding Operator, Converter={StaticResource PaddingThicknessConverter}}"
                                               VerticalAlignment="Top" />
                                    <TextBlock Text="{Binding Value}" Padding="{Binding Value, Converter={StaticResource PaddingThicknessConverter}}"
                                               VerticalAlignment="Top"
                                               Foreground="{StaticResource DebugItemValueBrush}" />
                                </StackPanel>
                                <Button x:Name="MoreLink"
                                        Focusable="False"
                                        VerticalAlignment="Bottom"
                                        HorizontalAlignment="Left"
                                Width="15" 
                                Visibility="{Binding MoreLink, Converter={StaticResource StringToVisibilityConverter}}"
                                    cal:Message.Attach="OpenMoreLink($DataContext)"
                                    cal:Action.TargetWithoutContext="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}">
                                    <TextBlock Margin="0 -7"
                                               Padding="0,0,0,5">...</TextBlock>
                            </Button>
                        </StackPanel>
                    </DataTemplate>

                    <DataTemplate x:Key="DebugLineGroupRowTemplate">
                        <ItemsControl ItemsSource="{Binding Value.LineItems}" 
                                          ItemTemplate="{StaticResource DebugGroupLineItemTemplate}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </DataTemplate>

                    <DataTemplate x:Key="DebugLineGroupTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding GroupLabel}"
                                           VerticalAlignment="Top" />
                            <Expander Header="{Binding GroupName}" 
                                      AutomationProperties.AutomationId="UI_DefaultRecordSetIOTemplate_AutoID" 
                                          Style="{StaticResource PlusMinusExpander}" Margin="-3,-3,0,0">
                                    <Grid Margin="18,0,0,0">
                                        <ScrollViewer MaxHeight="200"
                                                      VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto">
                                        <ItemsControl ItemsSource="{Binding Rows}" 
                                                          ItemTemplate="{StaticResource DebugLineGroupRowTemplate}" />
                                    </ScrollViewer>
                                </Grid>
                            </Expander>
                        </StackPanel>
                    </DataTemplate>

                    <diagnostics:DebugLineTemplateSelector x:Key="DebugLineTemplateSelector" 
                                                           ItemTemplate="{StaticResource DebugLineItemTemplate}" 
                                                           GroupTemplate="{StaticResource DebugLineGroupTemplate}" />

                    <DataTemplate x:Key="DebugLinesTemplate">
                        <Grid>
                                <ItemsControl ItemsSource="{Binding LineItems}"
                                              Focusable="False"
                                              ItemTemplateSelector="{StaticResource DebugLineTemplateSelector}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"
                                                                    Focusable="False" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </DataTemplate>

                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" 
                                              DataType="{x:Type diagnostics2:DebugStringTreeViewItemViewModel}">
                            <TextBlock Grid.Row="0"
                                       Text="{Binding Content}"
                                       HorizontalAlignment="Stretch" />
                    </HierarchicalDataTemplate>                    

                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" 
                                              DataType="{x:Type diagnostics2:DebugStateTreeViewItemViewModel}">
                            <Grid HorizontalAlignment="Stretch"
                                  KeyboardNavigation.DirectionalNavigation="Continue">
                                <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                            </Grid.RowDefinitions>

                                <Border Grid.RowSpan="10"
                                        Style="{StaticResource ErrorBorderStyle}" />

                                <TextBlock Grid.Row="0"
                                           Grid.Column="1">
                            <Run Text="{Binding Content.ActivityType, Converter={StaticResource EnumToStringConverter}}" />
                            <Run Text=": " />
                            </TextBlock>
                                <StackPanel Grid.Row="0"
                                            Grid.Column="2"
                                            Orientation="Horizontal">
                                <Button Content="{Binding Content.DisplayName}" 
                                            Command="{Binding DataContext.OpenItemCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"
                                        CommandParameter="{Binding Content}" 
                                        Style="{StaticResource BlueHeadingStyle}" 
                                            HorizontalAlignment="Left"
                                            Focusable="False"
                                        IsEnabled="{Binding Content.ActivityType, Converter={StaticResource EnumToBoolConverterActivityTypeWorkflow}}" />

                            </StackPanel>

                                <TextBlock Grid.Row="1"
                                           Grid.Column="1"
                                           Style="{StaticResource VersionVisibility}">
                            <Run Text="Version" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="1"
                                           Grid.Column="2"
                                           Text="{Binding Content.Version}"
                                       Style="{StaticResource VersionVisibility}" 
                                       AutomationProperties.AutomationId="UI_DebugOutputVersionTextBlock_AutoId" />

                                <TextBlock Grid.Row="2"
                                           Grid.Column="1"
                                           Style="{StaticResource ServerVisibility}">
                            <Run Text="Server" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="2"
                                           Grid.Column="2"
                                           Text="{Binding Content.Server}"
                                       Style="{StaticResource ServerVisibility}" />

                                <TextBlock Grid.Row="3"
                                           Grid.Column="1"
                                           Style="{StaticResource TypeVisibility}">
                            <Run Text="Type" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="3"
                                           Grid.Column="2"
                                       Text="{Binding Content.Name}" 
                                       Style="{StaticResource TypeVisibility}" 
                                           AutomationProperties.AutomationId="UI_DebugOutputTypeTextBlock_AutoId" />

                                <TextBlock Grid.Row="4"
                                           Grid.Column="1"
                                           Style="{StaticResource StartTimeVisibility}">
                            <Run Text="Start Time" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="4"
                                           Grid.Column="2"
                                       Text="{Binding Content.StartTime, Converter={StaticResource DateTimeToStringConverter}}" 
                                       Style="{StaticResource StartTimeVisibility}" 
                                           AutomationProperties.AutomationId="UI_DebugOutputStartTimeTextBlock_AutoId" />

                                <TextBlock Grid.Row="4"
                                           Grid.Column="1"
                                           Style="{StaticResource EndTimeVisibility}">
                            <Run Text="End Time" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="4"
                                           Grid.Column="2"
                                       Text="{Binding Content.EndTime, Converter={StaticResource DateTimeToStringConverter}}" 
                                       Style="{StaticResource EndTimeVisibility}" 
                                       AutomationProperties.AutomationId="UI_DebugOutputTimeTextBlock_AutoId" />

                                <TextBlock Grid.Row="5"
                                           Grid.Column="1"
                                           Style="{StaticResource DurationVisibility}">
                            <Run Text="Duration" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="5"
                                           Grid.Column="2"
                                           Text="{Binding Content.Duration, Converter={StaticResource TimeSpanToStringConverter}}"
                                           Style="{StaticResource DurationVisibility}" />

                                <TextBlock Grid.Row="6"
                                           Grid.Column="1"
                                           Style="{StaticResource InputsVisibility}">
                            <Run Text="Inputs" />
                            <Run Text=": " />
                            </TextBlock>
                                <StackPanel Grid.Row="6"
                                            Grid.Column="2"
                                            Orientation="Horizontal"
                                            Grid.IsSharedSizeScope="True" 
                                            Style="{StaticResource InputsVisibility}">
                                    <ItemsControl ItemsSource="{Binding Inputs}"
                                                  Focusable="False"
                                                  ItemTemplate="{StaticResource DebugLinesTemplate}"
                                                  AutomationProperties.AutomationId="UI_DebugOutputInputPanel_AutoId" />
                            </StackPanel>

                                <TextBlock Grid.Row="7"
                                           Grid.Column="1"
                                           Style="{StaticResource OutputsVisibility}">
                            <Run Text="Outputs" />
                            <Run Text=": " />
                            </TextBlock>
                                <StackPanel Grid.Row="7"
                                            Grid.Column="2"
                                            Orientation="Horizontal"
                                            Grid.IsSharedSizeScope="True" 
                                            Style="{StaticResource OutputsVisibility}">
                                    <ItemsControl ItemsSource="{Binding Outputs}"
                                                  Focusable="False"
                                                  ItemTemplate="{StaticResource DebugLinesTemplate}"
                                                  AutomationProperties.AutomationId="UI_DebugOutputOutputPanel_AutoId" />
                            </StackPanel>

                                <TextBlock Grid.Row="8"
                                           Grid.Column="1"
                                           Style="{StaticResource OriginVisibility}">
                                    <Run Text="Origin" />
                                    <Run Text=": " />
                                </TextBlock>
                                <TextBlock Grid.Row="8"
                                           Grid.Column="2"
                                           Text="{Binding Content.Origin}"
                                       Style="{StaticResource OriginVisibility}" />

                                <TextBlock Grid.Row="9"
                                           Grid.Column="1"
                                           Style="{StaticResource UserVisibility}">
                                    <Run Text="User" />
                                    <Run Text=": " />
                                </TextBlock>
                                <TextBlock Grid.Row="9"
                                           Grid.Column="2"
                                           Text="{Binding Content.ExecutingUser}"
                                       Style="{StaticResource UserVisibility}" />

                                <TextBlock Grid.Row="10"
                                           Grid.Column="1"
                                           Style="{StaticResource StepsVisibility}">
                                    <Run Text="Number of steps" />
                                    <Run Text=": " />
                                </TextBlock>
                                <TextBlock Grid.Row="10"
                                           Grid.Column="2"
                                           Text="{Binding Content.NumberOfSteps}"
                                       Style="{StaticResource StepsVisibility}" />

                                <TextBlock Grid.Row="11"
                                           Grid.Column="1"
                                           Style="{StaticResource ErrorsVisibility}">
                            <Run Text="Error" />
                            <Run Text=": " />
                            </TextBlock>
                                <TextBlock Grid.Row="11"
                                           Grid.Column="2"
                                       Text="{Binding Content.ErrorMessage}" 
                                           Style="{StaticResource ErrorsVisibility}" />

                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <TreeView.ItemContainerStyleSelector>
                    <diagnostics:DebugStyleSelector DebugStateStyle="{StaticResource DebugStateStyle}" 
                                                        DebugStringStyle="{StaticResource DebugStringStyle}" />
                </TreeView.ItemContainerStyleSelector>
            </TreeView>
                <customControls:Dev2StatusBar AutomationProperties.AutomationId="Dev2StatusBarAutomationID"  
                                              Grid.Row="1"
                                              Height="Auto"
                                              Width="Auto"
                                              VerticalContentAlignment="Center"
                                              StatusBarLabelText="{Binding ProcessingText}" 
                                              Visibility="{Binding ShowDebugStatus, Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                              ProgressBarVisiblity="{Binding IsProcessing, Converter={StaticResource BoolToVisConverter}}" />         
            </Grid>
        </Border>        
    </Grid>
</UserControl>
