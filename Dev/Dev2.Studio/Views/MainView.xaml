<Window x:Class="Dev2.Studio.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:bdsviews="clr-namespace:Unlimited.Applications.BusinessDesignStudio.Views"
        xmlns:igDock="http://infragistics.com/DockManager"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Dev2.Studio.AppResources.Behaviors"
        xmlns:igExtensions="clr-namespace:Dev2.Studio.Dock"
        xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro"
        xmlns:dataList="clr-namespace:Dev2.Studio.Views.DataList"
        xmlns:explorer="clr-namespace:Dev2.Studio.Views.Explorer"
        xmlns:customControls="clr-namespace:Dev2.Studio.Core.CustomControls;assembly=Dev2.Studio.Core"
        xmlns:viewModels="clr-namespace:Dev2.Studio.ViewModels"
        xmlns:help="clr-namespace:Dev2.Help"
        WindowState="Maximized"
        Title="{Binding DisplayName}"
        Closing="MainView_OnClosing"
        Icon="pack://application:,,,/Warewolf Studio;component/Warewolf.ico"
        x:Name="MainViewWindow"
        Opacity="1"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel}">

    <!--WindowStyle="None"
		             ResizeMode="NoResize"-->

    <!--<WindowChrome.WindowChrome>
        <WindowChrome
            ResizeBorderThickness="6"
            CaptionHeight="43"
            CornerRadius="25,25,10,10"
            GlassFrameThickness="0">
        </WindowChrome>
    </WindowChrome.WindowChrome>-->

    <Window.Resources>
        <Storyboard x:Key="OnLoaded">
            <DoubleAnimation 
                Storyboard.TargetName="LayoutRoot"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                From="0.0" To="1.0" Duration="0:0:0.3" />
            <DoubleAnimation 
            Storyboard.TargetName="LayoutRoot"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"
            From="0.8" To="1" Duration="0:0:0.3" />
            <DoubleAnimation 
            Storyboard.TargetName="LayoutRoot"
            Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
            From="0.8" To="1" Duration="0:0:0.3" />
        </Storyboard>
        <ControlTemplate x:Key="InsigniaTemplate" TargetType="{x:Type Button}">
            <Grid x:Name="Grid" SnapsToDevicePixels="true">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverBorder">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DefaultBorder">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBorder">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DefaultBorder">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Grid">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="Focused">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusBorder">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ValidationStates"/>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="MouseOverBorder" 
                       Visibility="Collapsed"
                       Opacity="0.6"
                       Source="pack://application:,,,/Warewolf Studio;component/Images/WarewolfInsignia.png"/>
                <Image x:Name="PressedBorder" 
                       Visibility="Collapsed"
                       Opacity="1"
                       Source="pack://application:,,,/Warewolf Studio;component/Images/WarewolfInsignia.png"/>
                <Rectangle x:Name="FocusBorder" 
                                     Visibility="Collapsed"
									Margin="2" SnapsToDevicePixels="true" 
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
									StrokeThickness="1" StrokeDashArray="1 2"/>
                <Image x:Name="DefaultBorder" 
                       Visibility="Visible"
                       Opacity="1"
                       Source="pack://application:,,,/Warewolf Studio;component/Images/WarewolfInsignia.png"/>
            </Grid>
        </ControlTemplate>
        
        <Style x:Key="ButtonStyleRibbon" TargetType="{x:Type Button}">
            <!--<Setter Property="Width" Value="74"/>-->
            <Setter Property="Height" Value="55"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,1,1,-3"></Setter>
            <Setter Property="Background" Value="{StaticResource BrushTransparent}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Grid" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Grid">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates"/>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="MouseOverBorder" 
                                    Visibility="Collapsed"
                                    CornerRadius="2"
									BorderBrush="{StaticResource BrushMouseOverBorder}"	
									Background="{StaticResource BrushMouseOver}"					
									BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Border x:Name="PressedBorder"	
                                    Visibility="Collapsed"
                                    CornerRadius="2"
									BorderBrush="{StaticResource BrushSelectedBorder}"	
									Background="{StaticResource BrushSelected}"					
									BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Rectangle x:Name="FocusBorder" 
                                     Visibility="Collapsed"
                                    RadiusX="2" RadiusY="2"
									Margin="2" SnapsToDevicePixels="true" 
									Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
									StrokeThickness="1" StrokeDashArray="1 2"/>
                            <Border x:Name="DefaultBorder" 
                                    CornerRadius="2"
									BorderBrush="{TemplateBinding BorderBrush}" 
									Background="{TemplateBinding Background}" 
									BorderThickness="{TemplateBinding BorderThickness}"
									SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
									Margin="{TemplateBinding Padding}" 
									RecognizesAccessKey="True" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

       
        <Style x:Key="TextBlockStyleRibbon" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        
        <Style x:Key="ImageStyleRibbon" TargetType="{x:Type Image}">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        
        <LinearGradientBrush x:Key="BrushMainHeaderTitleBorder" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="{StaticResource Color_050}"/>
            <GradientStop Offset="0.05" Color="{StaticResource Color_050}"/>
            <GradientStop Offset="0.0500001" Color="{StaticResource Color_005}"/>
            <GradientStop Offset="0.9499999" Color="{StaticResource Color_005}"/>
            <GradientStop Offset="0.95" Color="{StaticResource Color_050}"/>
            <GradientStop Offset="1" Color="{StaticResource Color_050}"/>
        </LinearGradientBrush>
        
        <Style x:Key="BorderStyleRibbon" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1,0,0,0"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource BrushMainHeaderTitleBorder}"></Setter>
        </Style> 
        
        <Style x:Key="TextBlockStyleRibbonHeader" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyleRibbon}">
            <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,-2,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>       
        </Style>

        <Style x:Key="TextBlockStyleRibbonItemHeader" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>
      
    </Window.Resources>
    
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OnLoaded}"/>
        </EventTrigger>
    </Window.Triggers>
    
    <Window.InputBindings>
        <KeyBinding Command="{Binding ExitCommand}" Key="F4" Modifiers="Alt" />
        <KeyBinding Command="{Binding SettingsCommand}" Key="T" Modifiers="Alt" />
        <KeyBinding Command="{Binding SaveCommand}" Key="S" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding ActiveItem.RunCommand}" Key="R" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding DebugCommand}" Key="T" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding DebugCommand}" Key="F5" />       
        <KeyBinding Command="{Binding QuickDebugCommand}" Key="F6" />       
        <KeyBinding Command="{Binding QuickViewInBrowserCommand}" Key="F7" />       
        <KeyBinding Command="{Binding DeployAllCommand}" Key="D" Modifiers="Ctrl+Shift" />
        <KeyBinding Command="{Binding DeployCommand}" Key="D" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding NewResourceCommand}"  CommandParameter="DatabaseService" Key="D" Modifiers="Ctrl+Shift" />
        <KeyBinding Command="{Binding NewResourceCommand}"  CommandParameter="ResourceService" Key="P" Modifiers="Ctrl+Shift" />
        <KeyBinding Command="{Binding NewResourceCommand}"  CommandParameter="WebService" Key="W" Modifiers="Ctrl+Shift" />
        <KeyBinding Command="{Binding NewResourceCommand}" CommandParameter="Unknown" Key="N" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding NewResourceCommand}" CommandParameter="Workflow" Key="W" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding NewResourceCommand}" CommandParameter="Source" Key="C" Modifiers="Alt" />
        <KeyBinding Command="{Binding NewResourceCommand}" CommandParameter="Service" Key="N" Modifiers="Alt" />
        <KeyBinding Command="{Binding SchedulerCommand}" Key="S" Modifiers="Alt" />
    </Window.InputBindings>

    <Grid x:Name="LayoutRoot"
          Opacity="0"
          RenderTransformOrigin="0.5,0.5"
          cal:Bind.Model="{Binding .}">
        <Grid.RenderTransform>
            <TransformGroup>
                <ScaleTransform ScaleX="0.8"
                                ScaleY="0.8" />
                <SkewTransform />
                <RotateTransform />
                <TranslateTransform />
            </TransformGroup>
        </Grid.RenderTransform>

        <Grid AutomationProperties.AutomationId="MainWindow">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border BorderThickness="0,0,0,3"
                    BorderBrush="{StaticResource BrushAccentColor}">
                <Grid>
                 
                    <Ribbon SelectedIndex="1" Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}}" BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}}">
                       

                        <Ribbon.ApplicationMenu>
                            <RibbonApplicationMenu Visibility="Collapsed"/>
                        </Ribbon.ApplicationMenu>

                        <Ribbon.HelpPaneContent>
                            <Grid  Width="200">
                                <TextBox  Width="250"  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="QuickLaunch"/>

                                <TextBlock IsHitTestVisible="False" Text="Type to Quick Launch" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray" FontStyle="Italic">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=QuickLaunch}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                            
                        </Ribbon.HelpPaneContent>
                        
                        <RibbonTab Header="Home" KeyTip="H" >
                            <!-- Workflow -->
                            <RibbonGroup Header="Workflow">
                                <RibbonButton Command="{Binding NewResourceCommand}"
                                            CommandParameter="Workflow"
                                            Style="{DynamicResource ButtonStyleRibbon}"
                                            AutomationProperties.AutomationId="UI_RibbonHomeTabWorkflowBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource Workflow-32}"
                                                   ToolTip="New Workflow (Ctrl+W)"
                                                   />
                                        <Image Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="New" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding SaveCommand}"
                                            Style="{DynamicResource ButtonStyleRibbon}"
                                            AutomationProperties.AutomationId="UI_RibbonHomeTabSaveBtn_AutoID"
                                           >
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource Save-32}"
                                                   ToolTip="Save (Ctrl+S)"
                                                   />
                                        <Image
                                                   Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding SaveCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="Save" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding DeployCommand}"
                                                Style="{DynamicResource ButtonStyleRibbon}"
                                                AutomationProperties.AutomationId="UI_RibbonHomeTabDeployBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                       Source="{StaticResource Deploy-32}"
                                                       ToolTip="Deploy (Ctrl+D)"
                                                       />
                                        
                                        <TextBlock Text="Deploy" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>
                            </RibbonGroup>

                            <!--Data Connectors-->
                            <RibbonGroup Header="Services">
                                <RibbonButton Command="{Binding NewResourceCommand}"
                                            CommandParameter="DatabaseService"
                                            Style="{DynamicResource ButtonStyleRibbon}"
                                            AutomationProperties.AutomationId="UI_RibbonHomeTabDBServiceBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource DatabaseService-32}"
                                                   ToolTip="New Database Service (Ctrl+Shift+D)"
                                                   />
                                        <Image
                                                   Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="DB" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding NewResourceCommand}"
                                            CommandParameter="ResourceService"
                                            Style="{DynamicResource ButtonStyleRibbon}"
                                            AutomationProperties.AutomationId="UI_RibbonHomeTabPluginServiceBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource PluginService-32}"
                                                   ToolTip="New Plugin Service (Ctrl+Shift+P)"
                                                   />
                                        <Image
                                                   Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="DLL" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding NewResourceCommand}"
                                            CommandParameter="WebService"
                                            Style="{DynamicResource ButtonStyleRibbon}"
                                            AutomationProperties.AutomationId="UI_RibbonHomeTabWebServiceBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource WebService-32}"
                                                   ToolTip="New Web Service (Ctrl+Shift+W)"
                                                   />
                                        <Image
                                                   Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding NewResourceCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="Web" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>
                            </RibbonGroup>

                            <!--Execute-->
                            <RibbonGroup Header="Execute">
                                <RibbonButton Command="{Binding SchedulerCommand}"
                                            CommandParameter="Scheduler"
                                            Style="{DynamicResource ButtonStyleRibbon}"
                                            AutomationProperties.AutomationId="UI_RibbonHomeTabSchedulerBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource TaskScheduler-32}"
                                                   ToolTip="Scheduler"
                                                   />
                                        <Image Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding SchedulerCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="Task" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding DebugCommand}"
                                            AutomationProperties.AutomationId="UI_RibbonDebugBtn_AutoID"
                                            Style="{DynamicResource ButtonStyleRibbon}">
                                    <Grid>

                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{Binding ActiveItem.DebugOutputViewModel.DebugImage,Converter={StaticResource NullToDebugImageConverter},FallbackValue=pack://application:\,\,\,\/Warewolf\ Studio\;component/Images/ExecuteDebugStart-32.png}"
                                                   ToolTip="{Binding ActiveItem.DebugOutputViewModel.DebugText,Converter={StaticResource NullToDebugRibbonButtonTextConverter},FallbackValue=Debug}" />

                                        <Image
                                                   Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding DebugCommand.UnauthorizedVisibility}"/>
                                        <TextBlock Text="Debug" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>
                            </RibbonGroup>

                            <!--Settings-->
                            <RibbonGroup Header="Settings">
                                <RibbonButton Command="{Binding SettingsCommand}"
                                            Style="{DynamicResource ButtonStyleRibbon}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                            AutomationProperties.AutomationId="UI_RibbonHomeManageSecuritySettingsBtn_AutoID">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource Settings-32}"
                                                   ToolTip="Manage Settings" />
                                        <Image Style="{StaticResource AuthNoneIconRibbonStyle}"
                                                   Visibility="{Binding SettingsCommand.UnauthorizedVisibility}" />
                                        <TextBlock Text="Settings" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>
                            </RibbonGroup>

                            <!--Help-->
                            <RibbonGroup Header="Help">
                                <RibbonButton Command="{Binding ShowCommunityPageCommand}"
                                            Style="{DynamicResource ButtonStyleRibbon}">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource HelpCommunity-32}"
                                                   ToolTip="Help" />
                                        <TextBlock Text="Help" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding AddLanguageHelpPageCommand}"
                                            Style="{DynamicResource ButtonStyleRibbon}">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource HelpLanguage-32}"
                                                   ToolTip="Warewolf Syntax Help" />
                                        <TextBlock Text="Syntax" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>

                                <RibbonButton Command="{Binding DisplayAboutDialogueCommand}"
                                            Style="{DynamicResource ButtonStyleRibbon}">
                                    <Grid>
                                        <Image Style="{StaticResource ImageStyleRibbon}"
                                                   Source="{StaticResource HelpAbout-32}"
                                                   ToolTip="About" />
                                        <TextBlock Text="About" Style="{StaticResource TextBlockStyleRibbonItemHeader}"/>
                                    </Grid>
                                </RibbonButton>
                            </RibbonGroup>
                            <RibbonGroup>
                                <RibbonButton Command="{Binding ShowStartPageCommand}"
                                              Height="50"
                                              Width="50"
                                              Style="{DynamicResource ButtonStyleRibbon}"
                                              Template="{StaticResource InsigniaTemplate}">
                                </RibbonButton>
                            </RibbonGroup>
                            

                        </RibbonTab>
                     
                        
                    </Ribbon>
                    


                </Grid>
            </Border>

            <igDock:XamDockManager x:Name="dockManager"
                                   Grid.Row="1"
                                   AutomationProperties.AutomationId="UI_DocManager_AutoID">
                <i:Interaction.Behaviors>
                    <local:XamlDockManagerLayoutPersistenceBehavior UserInterfaceLayoutRepository="{Binding UserInterfaceLayoutRepository}"
                                                                    LayoutDataPropertyName="MainViewDockingData"
                                                                    LayoutName="Default" />
                </i:Interaction.Behaviors>

                <igDock:XamDockManager.Panes>
                    <igDock:SplitPane x:Name="DockBottom"
                                      igDock:XamDockManager.InitialLocation="DockedBottom"
                                      Height="200">
                        <igDock:TabGroupPane>
                            <igDock:ContentPane x:Name="OutputPane"
                                                Header="Output"
                                                AllowInDocumentHost="False"
                                                IsPinned="False"
                                                AllowClose="False">
                                <customControls:CachingContentHost cal:View.Model="{Binding ActiveItem.DebugOutputViewModel}" />
                            </igDock:ContentPane>

                        </igDock:TabGroupPane>
                    </igDock:SplitPane>

                    <igDock:SplitPane x:Name="DockLeft"
                                      igDock:XamDockManager.InitialLocation="DockedLeft"
                                      Width="300"
                                      >
                        <igDock:TabGroupPane AutomationProperties.AutomationId="UI_TabPane_Left_AutoID">
                            <igDock:ContentPane x:Name="Explorer"
                                                Header="Explorer"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                IsPinned="False"
                                                AutomationProperties.AutomationId="UI_ExplorerPane_AutoID">
                                <explorer:ExplorerView DataContext="{Binding ExplorerViewModel}" AutomationProperties.AutomationId="UI_ExplorerControl_AutoID"/>
                            </igDock:ContentPane>
                            <igDock:ContentPane x:Name="Toolbox"
                                                Header="Toolbox"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                IsPinned="False"
                                                AutomationProperties.AutomationId="UI_ToolboxPane_AutoID">
                                <bdsviews:ToolboxUserControl x:Name="Toolboxcontrol" IsEnabled="{Binding HasActiveConnection}"  AutomationProperties.AutomationId="UI_ToolboxControl_AutoID" />
                            </igDock:ContentPane>
                            <igDock:ContentPane x:Name="Variables"
                                                Header="Variables"
                                                AllowClose="False"
                                                AllowInDocumentHost="False"
                                                IsPinned="False">
                                <dataList:DataListView DataContext="{Binding ActiveItem.DataListViewModel}" />
                            </igDock:ContentPane>
                        </igDock:TabGroupPane>
                    </igDock:SplitPane>
                </igDock:XamDockManager.Panes>
                <igDock:DocumentContentHost x:Name="DocumentHost"
                                            AutomationProperties.AutomationId="UI_DocumentHost_AutoID">
                    <igDock:SplitPane x:Name="DockCentre"
                                      AutomationProperties.AutomationId="UI_SplitPane_AutoID">
                        <igDock:TabGroupPane x:Name="TabManager"
                                             AutomationProperties.AutomationId="UI_TabManager_AutoID">
                            <i:Interaction.Behaviors>
                                <local:TabGroupPaneBindingBehavior DocumentHost="{Binding ElementName=DocumentHost}"
                                                                   SelectedItem="{Binding DataContext.ActiveItem, ElementName=DocumentHost, Mode=TwoWay}" />
                            </i:Interaction.Behaviors>
                            <igExtensions:ContentPaneFactory.PaneFactory>
                                <igExtensions:ContentPaneFactory ItemsSource="{Binding Items}"
                                                                 TabHeaderPath="WorkSurfaceViewModel"
                                                                 ContentPath="WorkSurfaceViewModel">
                                    <igExtensions:ContentPaneFactory.ContainerStyle>
                                        <Style TargetType="{x:Type igDock:ContentPane}"
                                               BasedOn="{StaticResource {x:Type igDock:ContentPane}}">
                                            <Setter Property="TabHeaderTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Source="{Binding IconPath}"
                                                                   Height="16"
                                                                   Width="16"
                                                                   AutomationProperties.AutomationId="{Binding DisplayName}"
                                                                   Margin="4,4,4,2" />
                                                            <TextBlock Text="{Binding DisplayName}"
                                                                       VerticalAlignment="Center" />
                                                            <Image Style="{StaticResource AuthNoneIconStyle}"
                                                                   Visibility="{Binding CanSave, Converter={StaticResource BoolToVisibilityConverterNegative}}"
                                                                   ToolTip="{x:Static help:HelpTextResources.WorkflowDesignerSecurityToolTipNone}"
                                                                   Margin="5,0,0,0"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ContentControl cal:View.Model="{Binding .}" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="AllowDockingBottom"
                                                    Value="False" />
                                            <Setter Property="AllowDockingLeft"
                                                    Value="False" />
                                            <Setter Property="AllowDockingRight"
                                                    Value="False" />
                                            <Setter Property="AllowDockingTop"
                                                    Value="False" />
                                            <Setter Property="AutomationProperties.AutomationId"
                                                    Value="{Binding DisplayName}" />
                                            <Setter Property="SaveInLayout"
                                                    Value="false" />
                                        </Style>
                                    </igExtensions:ContentPaneFactory.ContainerStyle>
                                </igExtensions:ContentPaneFactory>
                            </igExtensions:ContentPaneFactory.PaneFactory>
                        </igDock:TabGroupPane>
                    </igDock:SplitPane>
                </igDock:DocumentContentHost>
            </igDock:XamDockManager>
        </Grid>
    </Grid>
</Window>