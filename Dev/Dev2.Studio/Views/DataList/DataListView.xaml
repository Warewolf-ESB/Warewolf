<UserControl x:Class="Dev2.Studio.Views.DataList.DataListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:behaviors="clr-namespace:Dev2.Studio.AppResources.Behaviors"
             xmlns:aprop="clr-namespace:Dev2.Studio.AppResources.AttachedProperties"
             xmlns:customControls="clr-namespace:Warewolf.Studio.CustomControls;assembly=Warewolf.Studio.CustomControls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:core="clr-namespace:Warewolf.Studio.Core;assembly=Warewolf.Studio.Core"
             xmlns:languages="clr-namespace:Warewolf.Studio.Resources.Languages;assembly=Warewolf.Studio.Resources"
             xmlns:dataList="clr-namespace:Dev2.Studio.Views.DataList"
             xmlns:dataPresenter="http://infragistics.com/DataPresenter"
             xmlns:dataList1="clr-namespace:Dev2.Studio.ViewModels.DataList;assembly=Dev2.Studio.Core"
             xmlns:dataList3="clr-namespace:Dev2.Studio.Core.Models.DataList;assembly=Dev2.Studio.Core"
             LostKeyboardFocus="UserControlLostKeyboardFocus"
             MouseEnter="DataListView_OnMouseEnter"
             KeyboardNavigation.DirectionalNavigation="Continue" KeyboardNavigation.TabNavigation="Cycle"
             x:Name="DataListViewControl"
             AutomationProperties.AutomationId="UI_DataListView_AutoID"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance dataList1:DataListViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Theme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Behaviors>
        <behaviors:UserControlFocusNextAndPreviousBehaviour />
    </i:Interaction.Behaviors>
    <Grid x:Name="MainGrid"
          LostKeyboardFocus="UIElement_OnLostKeyboardFocus" 
          MouseEnter="DataListView_OnMouseEnter"
          Margin="{StaticResource ElementBorder}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              Visibility="{Binding ViewSortDelete,Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <customControls:SearchTextBox Grid.Row="0" 
                                          Margin="{StaticResource ControlBorderRight}"
                                          Grid.Column="0"
                                          x:Name="SearchTextBox" 
                                          Style="{StaticResource SearchTextboxStyle}"
                                          ClearSearchCommand="{Binding Path=ClearSearchTextCommand}"
                                          ClearSearchToolTip="{x:Static languages:Core.ClearVariableListFilterTooltip}"
                                          LabelText="Filter"
                                          HorizontalAlignment="Stretch" 
                                          Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}">
            </customControls:SearchTextBox>
            <Button Grid.Column="1"
                    x:Name="DeleteButton"
                    Focusable="True"
                    FocusManager.FocusedElement="{Binding ElementName=VariableInput}"
                    AutomationProperties.AutomationId="UI_AddRemovebtn_AutoID"
                    Margin="{StaticResource ControlBorderRight}"
                    Command="{Binding FindUnusedAndMissingCommand}"
                    ToolTip="Removes all unused variables from the variable list">
                <fa:FontAwesome Icon="Trash" FontSize="15"></fa:FontAwesome>
                <i:Interaction.Behaviors>
                    <core:HelpSetter Text="{x:Static languages:Core.DataListDeleteButtonHelp}"
                                     DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                </i:Interaction.Behaviors>
            </Button>
            <Button Grid.Column="2"
                    x:Name="SortButton"
                    Focusable="True"
                    AutomationProperties.AutomationId="UI_Sortbtn_AutoID"
                    Command="{Binding SortCommand}"
                    ToolTip="Sorts the items alphabeticaly">
                <fa:FontAwesome Icon="Sort" FontSize="15"></fa:FontAwesome>
                <i:Interaction.Behaviors>
                    <core:HelpSetter Text="{x:Static languages:Core.DataListSortButtonHelp}"
                                     DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                </i:Interaction.Behaviors>
            </Button>
        </Grid>

        <Grid Grid.Row="1">
            <dataPresenter:XamTreeGrid AssigningFieldLayoutToItem="Xtg_OnAssigningFieldLayoutToItem" 
                                       x:Name="Xtg" 
                                       DataSource="{Binding Path=BaseCollection}" 
                                       Background="Transparent" 
                                       Loaded="Xtg_OnLoaded"
                                       DataContextChanged="OnDataContextChanged"
                                       Margin="{StaticResource ElementBorderTop}" 
                                       customControls:DataPresenterHelpers.FilterText="{Binding ElementName=SearchTextBox, Path=Text}">
                <dataPresenter:XamTreeGrid.FieldLayoutSettings>
                    <dataPresenter:FieldLayoutSettings AutoGenerateFields="False" RecordSelectorLocation="None" FilterAction="Hide" />
                </dataPresenter:XamTreeGrid.FieldLayoutSettings>
                <dataPresenter:XamTreeGrid.FieldSettings>
                    <dataPresenter:FieldSettings LabelClickAction="Nothing"/>
                </dataPresenter:XamTreeGrid.FieldSettings>
                <dataPresenter:XamTreeGrid.FieldLayouts >
                    <dataPresenter:FieldLayout Key="{x:Type dataList3:DataListHeaderItemModel}">
                        <dataPresenter:TemplateField Name="DisplayName" Label=" Display Name" Width="*" AllowEdit="True">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding .}" FontWeight="Bold" />
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TextField BindingType="Unbound" Name="Input" Label="Input" Width="60" AllowEdit="False"/>
                        <dataPresenter:TextField BindingType="Unbound" Name="Output" Label="Output" Width="60" AllowEdit="False"/>
                        <dataPresenter:Field Name="Children"></dataPresenter:Field>
                    </dataPresenter:FieldLayout>
                    <dataPresenter:FieldLayout Key="{x:Type dataList3:ScalarItemModel}" ParentFieldName="Children">
                        <dataPresenter:TemplateField Name="DisplayName" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" Width="*" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:ScalarItemModel}">
                                    <customControls:VariableTextBox LostFocus="NametxtFocusLost"
                                                                    Background="{StaticResource WareWolfWhiteBrush}"
                                                                    TextChanged="NametxtTextChanged"
                                                                    HorizontalAlignment="Stretch"
                                                                    MinWidth="75"
                                                                    Height="22"
                                                                    x:Name="VariableInput"
                                                                    AcceptsReturn="False"
                                                                    Focusable="True"
                                                                    IsTabStop="True" 
                                                                    ToolTip="{x:Static languages:Core.DataListVariableInputTooltip}"
                                                                    DeleteCommand="{Binding DataContext.DeleteCommand,ElementName=DataListViewControl}"
                                                                    AddNoteCommand="{Binding DataContext.AddNoteCommand,ElementName=DataListViewControl}"
                                                                    Text="{Binding Path=DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                    IsUsed="{Binding Path=IsUsed}"
                                                                    Margin="0,0,0,0" 
                                                                    aprop:FocusAttachedProperty.IsFocused="{Binding Path=IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    AutomationProperties.AutomationId="UI_NameTextBox_AutoID">
                                        <customControls:VariableTextBox.Style>
                                            <Style TargetType="customControls:VariableTextBox" BasedOn="{StaticResource VariableTextboxStyle}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource DataListItemName}" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Path=HasError, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                        <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsSelectionActive" Value="True">
                                                        <Setter Property="IsTabStop" Value="True"/>
                                                        <Setter Property="Focusable" Value="True"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </customControls:VariableTextBox.Style>
                                        <i:Interaction.Behaviors>
                                            <behaviors:TextboxSelectAllOnFocusBehavior />
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListVariableInputHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </customControls:VariableTextBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Input" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:ScalarItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Input}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              ToolTip="{x:Static languages:Core.DataListInputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsInputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListInputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Output" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:ScalarItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Output}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              ToolTip="{x:Static languages:Core.DataListOutputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsOutputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListOutputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                    </dataPresenter:FieldLayout>
                    <dataPresenter:FieldLayout Key="{x:Type dataList3:RecordSetItemModel}" ParentFieldName="Children">
                        <dataPresenter:TemplateField  Name="DisplayName" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" Width="*" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:RecordSetItemModel}">
                                    <customControls:VariableTextBox LostFocus="NametxtFocusLost"
                                                                    Background="{StaticResource WareWolfWhiteBrush}"
                                                                    TextChanged="NametxtTextChanged"
                                                                    HorizontalAlignment="Stretch"
                                                                    MinWidth="75"
                                                                    Height="22"
                                                                    x:Name="VariableInput"
                                                                    AcceptsReturn="False"
                                                                    Focusable="True"
                                                                    IsTabStop="True" 
                                                                    ToolTip="{x:Static languages:Core.DataListVariableInputTooltip}"
                                                                    DeleteCommand="{Binding DataContext.DeleteCommand,ElementName=DataListViewControl}"
                                                                    AddNoteCommand="{Binding DataContext.AddNoteCommand,ElementName=DataListViewControl}"
                                                                    Text="{Binding Path=DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                    IsUsed="{Binding Path=IsUsed}"
                                                                    Margin="0,1,0,0" 
                                                                    aprop:FocusAttachedProperty.IsFocused="{Binding Path=IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    AutomationProperties.AutomationId="UI_NameTextBox_AutoID">
                                        <customControls:VariableTextBox.Style>
                                            <Style TargetType="customControls:VariableTextBox" BasedOn="{StaticResource VariableTextboxStyle}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource DataListItemName}" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Path=HasError, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                        <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsSelectionActive" Value="True">
                                                        <Setter Property="IsTabStop" Value="True"/>
                                                        <Setter Property="Focusable" Value="True"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </customControls:VariableTextBox.Style>
                                        <i:Interaction.Behaviors>
                                            <behaviors:TextboxSelectAllOnFocusBehavior />
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListVariableInputHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </customControls:VariableTextBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Input" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:RecordSetItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Input}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              ToolTip="{x:Static languages:Core.DataListInputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsInputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListInputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Output" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:RecordSetItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Output}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              ToolTip="{x:Static languages:Core.DataListOutputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsOutputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListOutputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:Field Name="Children"></dataPresenter:Field>
                    </dataPresenter:FieldLayout>
                    <dataPresenter:FieldLayout Key="{x:Type dataList3:RecordSetFieldItemModel}" ParentFieldLayoutKey="{x:Type dataList3:RecordSetItemModel}">
                        <dataPresenter:TemplateField Name="DisplayName" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" Width="*" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:RecordSetFieldItemModel}">
                                    <customControls:VariableTextBox LostFocus="NametxtFocusLost"
                                                                    Background="{StaticResource WareWolfWhiteBrush}"
                                                                    TextChanged="NametxtTextChanged"
                                                                    HorizontalAlignment="Stretch"
                                                                    MinWidth="75"
                                                                    Height="22"
                                                                    x:Name="VariableInput"
                                                                    AcceptsReturn="False"
                                                                    Focusable="True"
                                                                    IsTabStop="True" 
                                                                    ToolTip="{x:Static languages:Core.DataListVariableInputTooltip}"
                                                                    DeleteCommand="{Binding DataContext.DeleteCommand,ElementName=DataListViewControl}"
                                                                    AddNoteCommand="{Binding DataContext.AddNoteCommand,ElementName=DataListViewControl}"
                                                                    Text="{Binding Path=DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                    IsUsed="{Binding Path=IsUsed}"
                                                                    Margin="0,1,0,0" 
                                                                    aprop:FocusAttachedProperty.IsFocused="{Binding Path=IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    AutomationProperties.AutomationId="UI_NameTextBox_AutoID">
                                        <customControls:VariableTextBox.Style>
                                            <Style TargetType="customControls:VariableTextBox" BasedOn="{StaticResource VariableTextboxStyle}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource DataListItemName}" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Path=HasError, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                        <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsSelectionActive" Value="True">
                                                        <Setter Property="IsTabStop" Value="True"/>
                                                        <Setter Property="Focusable" Value="True"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </customControls:VariableTextBox.Style>
                                        <i:Interaction.Behaviors>
                                            <behaviors:TextboxSelectAllOnFocusBehavior />
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListVariableInputHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </customControls:VariableTextBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Input" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:RecordSetFieldItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Input}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              ToolTip="{x:Static languages:Core.DataListInputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsInputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListInputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Output" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:RecordSetFieldItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Output}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              ToolTip="{x:Static languages:Core.DataListOutputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsOutputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListOutputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                    </dataPresenter:FieldLayout>
                    <dataPresenter:FieldLayout Key="{x:Type dataList3:ComplexObjectItemModel}">
                        <dataPresenter:TemplateField  Name="DisplayName" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" Width="*" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:ComplexObjectItemModel}">
                                    <StackPanel>
                                        <customControls:VariableTextBox LostFocus="NametxtFocusLost"
                                                                        Background="{StaticResource WareWolfWhiteBrush}"
                                                                        TextChanged="NametxtTextChanged"
                                                                        HorizontalAlignment="Stretch"
                                                                        MinWidth="75"
                                                                        Height="22"
                                                                        x:Name="VariableInput"
                                                                        AcceptsReturn="False"
                                                                        Focusable="True"
                                                                        IsTabStop="True" 
                                                                        Visibility="{Binding IsParentObject, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                        ToolTip="{x:Static languages:Core.DataListVariableInputTooltip}"
                                                                        DeleteCommand="{Binding DataContext.DeleteCommand,ElementName=DataListViewControl}"
                                                                        AddNoteCommand="{Binding DataContext.AddNoteCommand,ElementName=DataListViewControl}"
                                                                        ViewComplexObjectsCommand="{Binding DataContext.ViewComplexObjectsCommand,ElementName=DataListViewControl}"
                                                                        Text="{Binding Path=DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                        IsUsed="{Binding Path=IsUsed}"
                                                                        Margin="0,0,0,0" 
                                                                        
                                                                        AutomationProperties.AutomationId="UI_NameTextBox_AutoID">
                                            <customControls:VariableTextBox.Style>
                                                <Style TargetType="customControls:VariableTextBox" BasedOn="{StaticResource VariableComplexObjectsTextboxStyle}">
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Background" Value="{StaticResource DataListItemName}" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding Path=HasError, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                            <Setter Property="Foreground" Value="{StaticResource ValidationErrorElement}" />
                                                        </DataTrigger>
                                                        <Trigger Property="IsSelectionActive" Value="True">
                                                            <Setter Property="IsTabStop" Value="True"/>
                                                            <Setter Property="Focusable" Value="True"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </customControls:VariableTextBox.Style>
                                            <i:Interaction.Behaviors>
<!--                                                <behaviors:TextboxSelectAllOnFocusBehavior />-->
                                                <core:HelpSetter Text="{x:Static languages:Core.DataListVariableInputHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                            </i:Interaction.Behaviors>
                                        </customControls:VariableTextBox>
                                        <TextBlock Text="{Binding Path=DisplayName}" Visibility="{Binding IsParentObject, Converter={StaticResource BoolToVisibilityConverterNegative}}"></TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Input" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:ComplexObjectItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Input}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              Visibility="{Binding IsParentObject, Converter={StaticResource BoolToVisibilityConverter}}"
                                              ToolTip="{x:Static languages:Core.DataListInputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsInputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListInputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:TemplateField Name="Output" Width="60" AlternateBinding="{Binding .}" BindingType="UseAlternateBinding" AllowResize="False" AllowEdit="False" AllowRecordFiltering="False">
                            <dataPresenter:TemplateField.DisplayTemplate>
                                <DataTemplate DataType="{x:Type dataList3:ComplexObjectItemModel}">
                                    <CheckBox IsTabStop="True"
                                              HorizontalAlignment="Center"
                                              Margin="0,1,0,0"
                                              IsChecked="{Binding Output}"
                                              VerticalAlignment="Center"
                                              Focusable="True"
                                              Visibility="{Binding IsParentObject, Converter={StaticResource BoolToVisibilityConverter}}"
                                              ToolTip="{x:Static languages:Core.DataListOutputCheckBoxTooltip}"
                                              AutomationProperties.AutomationId="UI_IsOutputCheckbox_AutoID" >
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:Core.DataListOutputCheckBoxHelp}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=dataList:DataListView}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </DataTemplate>
                            </dataPresenter:TemplateField.DisplayTemplate>
                        </dataPresenter:TemplateField>
                        <dataPresenter:Field Name="Children"></dataPresenter:Field>
                    </dataPresenter:FieldLayout>
                </dataPresenter:XamTreeGrid.FieldLayouts>
                <dataPresenter:XamTreeGrid.ViewSettings>
                    <dataPresenter:TreeViewSettings TreeLineVisibility="Hidden" TreeLinePen="{StaticResource CustomPenBrush}" />
                </dataPresenter:XamTreeGrid.ViewSettings>

            </dataPresenter:XamTreeGrid>
        </Grid>

    </Grid>
</UserControl>
