<UserControl x:Class="Dev2.Studio.Views.DataList.DataListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Models="clr-namespace:Dev2.Studio.Core.Models.DataList;assembly=Dev2.Studio.Core"
             xmlns:behaviors="clr-namespace:Dev2.Studio.AppResources.Behaviors"
             xmlns:aprop="clr-namespace:Dev2.Studio.AppResources.AttachedProperties"            
             xmlns:customControls2="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
             LostKeyboardFocus="UserControlLostKeyboardFocus"
             AutomationProperties.AutomationId="UI_DataListView_AutoID">
    <i:Interaction.Behaviors>
        <behaviors:UserControlFocusNextAndPreviousBehaviour />
    </i:Interaction.Behaviors>
    <Grid LostKeyboardFocus="UIElement_OnLostKeyboardFocus">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <customControls2:FilterTextBox Grid.Column="0"
                                           SearchText="{Binding Path=SearchText,Mode=TwoWay}"
                                           Margin="0,-2,-2,-2"
                                           HorizontalContentAlignment="Stretch"
                                           VerticalAlignment="Stretch" />
            <Button Grid.Column="1"
                    AutomationProperties.AutomationId="UI_AddRemovebtn_AutoID"
                    Margin="0,0,2,0"
                    Command="{Binding FindUnusedAndMissingCommand}"
                    ToolTip="Removes all unused variables from the variable list">
                <Image Source="{StaticResource RemoveUnusedVariable-32}"
                       Height="15"
                       Width="15" />
            </Button>
            <Button Grid.Column="2"
                    AutomationProperties.AutomationId="UI_Sortbtn_AutoID"
                    Margin="0,0,2,0"
                    Command="{Binding SortCommand}"
                    ToolTip="Sorts the items alphabeticaly">
                <Image Source="{StaticResource ServiceSortRecords-32}"
                       Height="15"
                       Width="15" />
            </Button>
        </Grid>

        <Rectangle Grid.Row="1"
                   Height="1"
                   StrokeThickness="0"
                   Fill="{StaticResource ButtonBorderBrush}" />

        <TreeView Grid.Row="2"
                  AllowDrop="True"
                  KeyboardNavigation.TabNavigation="Cycle"
                  IsTabStop="False"
                  ItemsSource="{Binding Path=BaseCollection,Mode=TwoWay}"
                  HorizontalAlignment="Stretch"
                  Width="Auto"
                  Margin="0"
                  x:Name="ScalarExplorer"
                  BorderThickness="0"
                  HorizontalContentAlignment="Stretch"
                  Grid.IsSharedSizeScope="True"
                  AutomationProperties.AutomationId="UI_VariableTreeView_AutoID">
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type Models:DataListItemModel}"
                                          ItemsSource="{Binding Path=Children}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="38"
                                              SharedSizeGroup="B" />
                            <ColumnDefinition Width="38"
                                              SharedSizeGroup="C" />
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="A" />
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="NameTxt"
                                 Grid.Column="0"
                                 LostFocus="NametxtFocusLost"
                                 Background="{StaticResource LightForegroundBrush}"
                                 TextChanged="NametxtTextChanged"
                                 HorizontalAlignment="Stretch"
                                 MinWidth="75"
                                 aprop:FocusAttachedProperty.IsFocused="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IsSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ToolTip="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.ErrorMessage, UpdateSourceTrigger=PropertyChanged}"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IsEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 AutomationProperties.AutomationId="UI_NameTextBox_AutoID">
                            <TextBox.Style>
                                <Style TargetType="TextBox"
                                       BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Setter Property="Width"
                                            Value="Auto" />
                                    <Setter Property="Height"
                                            Value="20" />

                                    <Setter Property="HorizontalAlignment"
                                            Value="Stretch" />
                                    <Style.Triggers>
                                        <Trigger Property="Text"
                                                 Value="">
                                            <Setter Property="Background"
                                                    Value="{StaticResource DataListItemName}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.HasError, UpdateSourceTrigger=PropertyChanged}"
                                                     Value="true">
                                            <Setter Property="BorderBrush"
                                                    Value="{StaticResource ValidationErrorElement}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                            <i:Interaction.Behaviors>
                                <behaviors:TextboxSelectAllOnFocusBehavior />
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <CheckBox IsTabStop="False"
                                  Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  Margin="0,-1,0,-1"
                                  IsChecked="{Binding Input}"
                                  VerticalAlignment="Center"
                                  Checked="Inputcbx_OnChecked"
                                  Unchecked="Inputcbx_OnChecked"
                                  Visibility="{Binding IsUsed,Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                  AutomationProperties.AutomationId="UI_IsInputCheckbox_AutoID" />

                        <CheckBox IsTabStop="False"
                                  Grid.Column="2"
                                  HorizontalAlignment="Center"
                                  IsChecked="{Binding Output}"
                                  VerticalAlignment="Center"
                                  Margin="0,-1,0,-1"
                                  Checked="Outputcbx_OnChecked"
                                  Unchecked="Outputcbx_OnChecked"
                                  Visibility="{Binding IsUsed,Converter={StaticResource BoolToVisibilityConverterPositive}}"
                                  AutomationProperties.AutomationId="UI_IsOutputCheckbox_AutoID" />

                        <Button Grid.Column="1"
                                Grid.ColumnSpan="2"
                                Click="ButtonBase_OnClick"
                                HorizontalAlignment="Center"
                                MaxHeight="10"
                                Margin="0,-2,0,-2"
                                Visibility="{Binding IsUsed,Converter={StaticResource BoolToVisibilityConverterNegative}}"
                                Focusable="False">
                            <Image Source="{StaticResource RemoveUnusedVariable-32}"
                                   Width="11"
                                   Height="11" />
                            <Button.ToolTip>
                                <ToolTip ContentStringFormat="Remove [[{0}]] from the variable list">
                                    <Binding Path="DisplayName" />
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>

                        <TextBox x:Name="DescriptionTxt"
                                 IsTabStop="False"
                                 MinWidth="75"
                                 Grid.Column="3"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=DataContext.IsEditable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 AutomationProperties.AutomationId="UI_DescriptionTextBox_AutoID">
                            <TextBox.Style>
                                <Style TargetType="TextBox"
                                       BasedOn="{StaticResource {x:Type TextBox}}">
                                    <Setter Property="Height"
                                            Value="20" />
                                    <Style.Triggers>
                                        <Trigger Property="Text"
                                                 Value="">
                                            <Setter Property="Background"
                                                    Value="{StaticResource DataListItemDescription}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type Models:DataListHeaderItemModel}"
                                          ItemsSource="{Binding Path=Children}">
                    <StackPanel Background="{StaticResource BrushMouseOver}">
                        <Grid Height="24">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition SharedSizeGroup="B" />
                                <ColumnDefinition SharedSizeGroup="C" />
                                <ColumnDefinition SharedSizeGroup="A" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding DisplayName}"
                                           FontWeight="SemiBold"
                                           Margin="0,0,5,0"
                                           Foreground="Black" />
                                <TextBlock Grid.Column="0"
                                           Text="Name"
                                           FontWeight="SemiBold"
                                           Foreground="Black" />
                            </StackPanel>
                            <TextBlock Grid.Column="1"
                                       Text="Input"
                                       HorizontalAlignment="Center"
                                       FontWeight="SemiBold"
                                       Foreground="Black" />
                            <TextBlock Grid.Column="2"
                                       Text="Output"
                                       HorizontalAlignment="Center"
                                       FontWeight="SemiBold"
                                       Foreground="Black" />
                        </Grid>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}"
                       BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Setter Property="Focusable"
                            Value="False" />
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExpanded,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    <Setter Property="FontWeight"
                            Value="Normal" />
                    <Setter Property="HorizontalAlignment"
                            Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="Visibility"
                            Value="{Binding IsVisable, Converter={StaticResource BoolToVisConverter}}" />
                    <Setter Property="KeyboardNavigation.TabNavigation"
                            Value="Continue" />
                    <Setter Property="AutomationProperties.AutomationId"
                            Value="{Binding Path=DataContext.Name, RelativeSource={RelativeSource Self},Converter={StaticResource StringToAutomationIdConverter}}" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TreeViewItem}"
                                   BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="AutomationProperties.AutomationId"
                                        Value="{Binding Path=DataContext, RelativeSource={RelativeSource Self},Converter={StaticResource DataListItemModelToAutomationIdConverter}}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="FontWeight"
                                    Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="FontWeight"
                                    Value="UltraLight" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>
