<UserControl x:Class="Dev2.Settings.Scheduler.SchedulerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:scheduler="clr-namespace:Dev2.Settings.Scheduler"
             xmlns:attachedProperties="clr-namespace:Dev2.Activities.AttachedProperties;assembly=Dev2.Activities.Designers"
             xmlns:customControls="clr-namespace:Dev2.CustomControls;assembly=Dev2.CustomControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interfaces="clr-namespace:Dev2.Common.Interfaces.Scheduler.Interfaces;assembly=Dev2.Common.Interfaces"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:converters="clr-namespace:Dev2.AppResources.Converters;assembly=Dev2.Studio.Core"
             xmlns:core="clr-namespace:Warewolf.Studio.Core;assembly=Warewolf.Studio.Core"
             xmlns:languages="clr-namespace:Warewolf.Studio.Resources.Languages;assembly=Warewolf.Studio.Resources"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance scheduler:SchedulerViewModel}"
             AutomationProperties.AutomationId="UI_SchedulerView_AutoID">
    <UserControl.Resources>
        <converters:SimpleEnumToBoolConverter x:Key="EnumToBoolConverter"/>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding NewCommand}" Key="N" Modifiers="Ctrl" />
    </UserControl.InputBindings>
    <Grid Margin="{StaticResource ElementBorder}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="1">
                <TextBlock Width="300"
                           Foreground="{StaticResource ValidationErrorElement}"
                           TextWrapping="WrapWithOverflow"
                           Text="{Binding ConnectionError}"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Left"
                           Visibility="{Binding HasConnectionError, Converter={StaticResource BoolToVisibilityConverterPositive}}" />
                <Rectangle Fill="Gray" Opacity="0.2"
                           Visibility="{Binding SelectedTask.IsDirty,Converter={StaticResource BoolToVisibilityConverterPositive}}"/>
            </StackPanel>

        </Grid>

        <Border Grid.Row="1" BorderBrush="{StaticResource ListBoxItemSelectedBorderBrush}" BorderThickness="0,1,0,0" Margin="{StaticResource ElementBorderTop}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>

                <ListBox Grid.Column="0" 
                         Style="{StaticResource ListBoxStyle}" 
                         BorderThickness="1,0,1,1"
                         ItemsSource="{Binding TaskList}" 
                         SelectedItem="{Binding SelectedTask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         SelectionMode="Single" 
                         x:Name="Schedules">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding IsNewItem,Converter={StaticResource BoolToVisibilityConverterNegative}}"
                                      x:Name="ListBoxItemGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15*"/>
                                        <ColumnDefinition Width="70*"/>
                                        <ColumnDefinition Width="15*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <CheckBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" 
                                              HorizontalAlignment="Left" Style="{StaticResource CheckBoxRoundedStyle}" 
                                              Margin="-2,0,0,0"
                                              ToolTip="{x:Static languages:Tooltips.SchedulerStatusAltTooltipTrigger}"
                                              IsChecked="{Binding StatusAlt, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SchedulerStatusToCheckedConverter}}">
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerStatusAltHelpTextTrigger}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding NameForDisplay}" TextTrimming="CharacterEllipsis" MaxWidth="200" FontSize="12" Margin="0,0,0,-4" FontWeight="Bold" ></TextBlock>
                                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding NextRunDate}" FontSize="11" Margin="0,-4,0,0" ></TextBlock>
                                    <Button Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Right" 
                                            Command="{Binding ElementName=Schedules, Path=DataContext.DeleteCommand }" CommandParameter="{Binding .}" 
                                            IsEnabled="{Binding StatusAlt, Converter={StaticResource InverseScheduleStatusConverter}}"
                                            Style="{StaticResource ButtonSchedulerDeleteTransparentStyle}" >
                                        <Button.Content>
                                            <fa:FontAwesome Icon="Trash" FontSize="18"></fa:FontAwesome>
                                        </Button.Content>
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerDeleteHelpTextTrigger}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </Button>
                                </Grid>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding IsNewItem,Converter={StaticResource BoolToVisibilityConverterPositive}}" AutomationProperties.AutomationId="UI_NewSchedule_Grid_AutoID" >
                                    <Button Style="{StaticResource ButtonSchedulerTransparentStyle}" x:Name="New_Schedule"
                                            HorizontalAlignment="Stretch" 
                                            VerticalAlignment="Stretch" 
                                            Command="{Binding NewCommand}" 
                                            ToolTip="{x:Static languages:Tooltips.SchedulerNewScheduleTooltipTrigger}"
                                            AutomationProperties.AutomationId="UI_NewSchedule_AutoID">
                                        <Button.Content>
                                            <Grid>
                                                <Grid.ColumnDefinitions >
                                                    <ColumnDefinition Width="15*"/>
                                                    <ColumnDefinition Width="85*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <fa:FontAwesome Icon="Plus" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Center"></fa:FontAwesome>
                                                <TextBlock Grid.Column="1" Text="Schedule a new task" FontSize="14"></TextBlock>
                                            </Grid>
                                        </Button.Content>
                                    </Button>

                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <ContentControl Grid.Column="1" Visibility="{Binding SelectedTask, Converter={StaticResource NullToVisibilityConverterNullIsCollapsed}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Row="0" Grid.Column="0" Margin="{StaticResource ElementBorder}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Triggered at " FontWeight="Bold" />
                                <TextBlock Text="{Binding TriggerText}"
                                           Style="{StaticResource TextBlockOrangeHeaderStyle}"
                                           TextWrapping="WrapWithOverflow"
                                           FontWeight="Bold"
                                           MaxWidth="315"
                                           HorizontalAlignment="Left"
                                           Width="Auto">
                                </TextBlock>
                                <Button ToolTip="When should the workflow run?"
                                        Margin="{StaticResource ControlBorderLeft}"
                                        Command="{Binding EditTriggerCommand}"
                                        AutomationProperties.AutomationId="UI_EditTriggerButton_AutoID">
                                    <i:Interaction.Behaviors>
                                        <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextTrigger}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </i:Interaction.Behaviors>
                                    <Button.Content>
                                        <fa:FontAwesome Icon="Pencil" FontSize="14"></fa:FontAwesome>
                                    </Button.Content>
                                </Button>
                            </StackPanel>

                            <Grid Grid.Row="1" Margin="{StaticResource ControlBorderTop}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=UsernameTextBlock, Path=ActualWidth}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Name " Grid.Column="0" />
                                <TextBox VerticalAlignment="Center"
                                         AutomationProperties.AutomationId="UI_NameTextbox"
                                         HorizontalAlignment="Left"
                                         Grid.Column="1"
                                         ToolTip="{x:Static languages:Tooltips.SchedulerSettingsToolTipName}"
                                         Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                         Width="220">
                                    <i:Interaction.Behaviors>
                                        <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextName}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>

                            <Grid Grid.Row="2" Margin="{StaticResource ControlBorderTop}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=UsernameTextBlock, Path=ActualWidth}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Status "
                                       Grid.Column="0">
                                    <i:Interaction.Behaviors>
                                        <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextStatus}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </i:Interaction.Behaviors>
                                </TextBlock>
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <RadioButton AutomationProperties.AutomationId="UI_EnabledRadioButton"
                                                 Content="Enabled"
                                                 Margin="{StaticResource ControlBorderRight}"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 GroupName="Status"
                                                 ToolTip="{x:Static languages:HelpText.SchedulerSettingsEnabledHelpTextStatus}"
                                                 IsChecked="{Binding SelectedTask.Status,Mode=TwoWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToBoolConverter},ConverterParameter={x:Static interfaces:SchedulerStatus.Enabled}}">
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextStatus}"
                                                     DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </RadioButton>
                                    <RadioButton AutomationProperties.AutomationId="UI_DisabledRadioButton"
                                                 Content="Disabled"
                                                 Margin="{StaticResource ControlBorderLeft}"
                                                 HorizontalAlignment="Left"
                                                 VerticalAlignment="Center"
                                                 GroupName="Status"
                                                 ToolTip="{x:Static languages:HelpText.SchedulerSettingsDisabledHelpTextStatus}"
                                                 IsChecked="{Binding SelectedTask.Status,Mode=TwoWay,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource EnumToBoolConverter},ConverterParameter={x:Static interfaces:SchedulerStatus.Disabled}}">
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextStatus}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </RadioButton>
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Row="3" Margin="{StaticResource ControlBorderTop}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=UsernameTextBlock, Path=ActualWidth}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Workflow " Grid.Column="0" />
                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <TextBox Text="{Binding WorkflowName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource ReadOnlyTextBoxStyle}"
                                             ToolTip="{x:Static languages:Tooltips.SchedulerSettingsToolTipWorkFlow}"
                                             HorizontalAlignment="Left"
                                             AutomationProperties.AutomationId="UI_WorkflowNameTextBox_AutoID"
                                             Width="220"
                                             IsReadOnly="True">
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextWorkFlow}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <Button Content="..."
                                            Margin="{StaticResource ControlBorderLeft}"
                                            Style="{StaticResource ButtonStyle}"
                                            ToolTip="Select a workflow to be triggered"
                                            Command="{Binding AddWorkflowCommand}"
                                            AutomationProperties.AutomationId="UI_WorkflowSelectorButton_AutoID">
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextWorkFlow}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Row="4" Margin="{StaticResource ControlBorderTop}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding RunAsapIfScheduleMissed,Mode=TwoWay}"
                                              ToolTip="{x:Static languages:Tooltips.SchedulerSettingsToolTipRun}"
                                              VerticalAlignment="Center"
                                              Content="Run task as soon as possible after a scheduled start is missed"
                                          AutomationProperties.AutomationId="UI_RunAsapCheckBox">
                                        <i:Interaction.Behaviors>
                                            <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextRun}"
                                                             DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                        </i:Interaction.Behaviors>
                                    </CheckBox>
                                </StackPanel>
                            </Grid>

                            <Grid Grid.Row="5" Margin="{StaticResource ControlBorderTop}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Number of History records to load (0 = all) " />
                                <TextBox Width="46"
                                         Grid.Column="1"
                                         Margin="{StaticResource ControlBorderLeft}"
                                         HorizontalAlignment="Left"
                                         Text="{Binding NumberOfRecordsToKeep,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                         AutomationProperties.AutomationId="UI_NumOfHisTextBox"
                                         ToolTip="{x:Static languages:Tooltips.SchedulerSettingsToolTipHistoryRecords}"
                                         VerticalAlignment="Center">
                                    <i:Interaction.Behaviors>
                                        <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextHistoryRecords}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>

                            <StackPanel Grid.Row="6" Orientation="Horizontal" Margin="{StaticResource ControlBorderTop}">
                                <TextBlock Text="Run as the following user account " FontWeight="Bold"/>
                            </StackPanel>

                            <Grid Grid.Row="7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="Username " x:Name="UsernameTextBlock" Grid.Row="0" Grid.Column="0"/>
                                <TextBox Width="220"
                                         Grid.Row="0"
                                         Grid.Column="1"
                                         AutomationProperties.AutomationId="UI_UserNameTextBox"
                                         ToolTip="{x:Static languages:Tooltips.SchedulerSettingsToolTipUsername}"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Left"
                                         customControls:WatermarkTextBox.Watermark="domain\username"
                                         Text="{Binding AccountName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Behaviors>
                                        <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextUsername}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <TextBlock Text="Password " Margin="{StaticResource ControlBorderTop}" Grid.Row="1" Grid.Column="0"/>
                                <PasswordBox Width="220"
                                             Margin="{StaticResource ControlBorderTop}"
                                             AutomationProperties.AutomationId="UI_PasswordBox"
                                             Grid.Row="1"
                                             Grid.Column="1"
                                             HorizontalAlignment="Left"
                                             ToolTip="{x:Static languages:Tooltips.SchedulerSettingsToolTipPassword}"
                                             attachedProperties:PasswordBoxAssistant.BindPassword="true"
                                             attachedProperties:PasswordBoxAssistant.BoundPassword="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Behaviors>
                                        <core:HelpSetter Text="{x:Static languages:HelpText.SchedulerSettingsHelpTextPassword}"
                                                         DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </i:Interaction.Behaviors>
                                </PasswordBox>
                            </Grid>

                            <StackPanel Grid.Row="8" Margin="{StaticResource ControlBorderTop}">
                                <TextBlock Foreground="{StaticResource ValidationErrorElement}"
                                           Text="{Binding Error}"
                                           VerticalAlignment="Bottom"
                                           TextWrapping="WrapWithOverflow"
                                           HorizontalAlignment="Right"
                                           Visibility="{Binding HasErrors, Converter={StaticResource BoolToVisibilityConverterPositive}}" />
                            </StackPanel>

                        </Grid>

                        <Grid Grid.Row="1" Grid.Column="0" Margin="{StaticResource ElementBorderLeft}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <customControls:CircularProgressBar Grid.Column="0"
                                                                Height="150"
                                                                Width="150"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center"
                                                                Visibility="{Binding IsProgressBarVisible, Converter={StaticResource BoolToVisibilityConverterPositive}}" />
                            <DataGrid ItemsSource="{Binding History}"
                                      Grid.Column="0"
                                      EnableRowVirtualization="False"
                                      SelectedItem="{Binding SelectedHistory,Mode=TwoWay}"                              
                                      Style="{StaticResource SchedulerDataGridStyle}"
                                      VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Auto"
                                      RowHeight="22"
                                      Visibility="{Binding IsProgressBarVisible, Converter={StaticResource BoolToVisibilityConverterNegative}}">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Width="27"
                                                            MinWidth="27"
                                                            IsReadOnly="True"
                                                            Header="#"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         BorderThickness="0"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         Text="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource GridRowNumberConverter}, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="*"
                                                            MinWidth="80"
                                                            IsReadOnly="True"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            Header="Start Time"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         BorderThickness="0"
                                                         Text="{Binding TaskHistoryOutput.StartDate, Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource DateTimeFormatConverter}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="*"
                                                            MinWidth="70"
                                                            IsReadOnly="True"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            Header="Duration"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         BorderThickness="0"
                                                         Text="{Binding TaskHistoryOutput.Duration, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="*"
                                                            IsReadOnly="True"
                                                            MinWidth="80"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            Header="End Time"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         BorderThickness="0"
                                                         Text="{Binding TaskHistoryOutput.EndDate, Mode=OneWay,Converter={StaticResource DateTimeFormatConverter}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="*"
                                                            MinWidth="50"
                                                            IsReadOnly="True"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            Header="Status"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         BorderThickness="0"
                                                         Text="{Binding TaskHistoryOutput.Success, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="*"
                                                            MinWidth="70"
                                                            IsReadOnly="True"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            Header="Event id"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         BorderThickness="0"
                                                         Text="{Binding TaskHistoryOutput.EventId, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="*"
                                                            MinWidth="90"
                                                            HeaderStyle="{StaticResource SchedulerDataGridHeaderStyle}"
                                                            IsReadOnly="True"
                                                            Header="User Context"
                                                            d:DataContext="{d:DesignInstance interfaces:IResourceHistory}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox IsReadOnly="True"
                                                         Style="{StaticResource ReadOnlyTextBoxStyle}"
                                                         BorderThickness="0"
                                                         Text="{Binding UserName, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>

                    </Grid>
                </ContentControl>
            </Grid>
        </Border>
    </Grid>
</UserControl>
