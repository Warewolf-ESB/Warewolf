// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.DependencyGraph.DependencyGraphUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class DependencyGraphUIMap
    {
        
        #region Properties
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneMiddle mSplitPaneMiddle;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DependencyGraphTab DependencyGraphTab
        {
            get
            {
                if ((this.mDependencyGraphTab == null))
                {
                    this.mDependencyGraphTab = new DependencyGraphTab(this);
                }
                return this.mDependencyGraphTab;
            }
        }
        #endregion
        
        #region Fields
        private DependencyGraphTab mDependencyGraphTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DependencyGraphTab : WpfTabPage
    {
        
        public DependencyGraphTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.DependencyVisualization.DependencyVisualiserViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorksurfaceContext WorksurfaceContext
        {
            get
            {
                if ((this.mWorksurfaceContext == null))
                {
                    this.mWorksurfaceContext = new WorksurfaceContext(this);
                }
                return this.mWorksurfaceContext;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorksurfaceContext mWorksurfaceContext;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorksurfaceContext : WpfCustom
    {
        
        public WorksurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DependencyView DependencyView
        {
            get
            {
                if ((this.mDependencyView == null))
                {
                    this.mDependencyView = new DependencyView(this);
                }
                return this.mDependencyView;
            }
        }
        #endregion
        
        #region Fields
        private DependencyView mDependencyView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DependencyView : WpfCustom
    {
        
        public DependencyView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DependencyVisualiserView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_DependencyView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewer ScrollViewer
        {
            get
            {
                if ((this.mScrollViewer == null))
                {
                    this.mScrollViewer = new ScrollViewer(this);
                }
                return this.mScrollViewer;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewer mScrollViewer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewer : WpfPane
    {
        
        public ScrollViewer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "UI_TopScrollView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.Name] = "Refresh";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfRadioButton ShowwhatdependsonthisRadioButton
        {
            get
            {
                if ((this.mShowwhatdependsonthisRadioButton == null))
                {
                    this.mShowwhatdependsonthisRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mShowwhatdependsonthisRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "WfDependsOn";
                    this.mShowwhatdependsonthisRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowwhatdependsonthisRadioButton;
            }
        }
        
        public WpfRadioButton ShowwhatthisdependsonRadioButton
        {
            get
            {
                if ((this.mShowwhatthisdependsonRadioButton == null))
                {
                    this.mShowwhatthisdependsonRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mShowwhatthisdependsonRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "DependsOnWf";
                    this.mShowwhatthisdependsonRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowwhatthisdependsonRadioButton;
            }
        }
        
        public NestingLevelsText NestingLevelsText
        {
            get
            {
                if ((this.mNestingLevelsText == null))
                {
                    this.mNestingLevelsText = new NestingLevelsText(this);
                }
                return this.mNestingLevelsText;
            }
        }
        
        public Node1 Node1
        {
            get
            {
                if ((this.mNode1 == null))
                {
                    this.mNode1 = new Node1(this);
                }
                return this.mNode1;
            }
        }
        
        public Node2 Node2
        {
            get
            {
                if ((this.mNode2 == null))
                {
                    this.mNode2 = new Node2(this);
                }
                return this.mNode2;
            }
        }
        
        public Node3 Node3
        {
            get
            {
                if ((this.mNode3 == null))
                {
                    this.mNode3 = new Node3(this);
                }
                return this.mNode3;
            }
        }
        
        public Node4 Node4
        {
            get
            {
                if ((this.mNode4 == null))
                {
                    this.mNode4 = new Node4(this);
                }
                return this.mNode4;
            }
        }
        
        public Node5 Node5
        {
            get
            {
                if ((this.mNode5 == null))
                {
                    this.mNode5 = new Node5(this);
                }
                return this.mNode5;
            }
        }
        
        public NodesCustom NodesCustom
        {
            get
            {
                if ((this.mNodesCustom == null))
                {
                    this.mNodesCustom = new NodesCustom(this);
                }
                return this.mNodesCustom;
            }
        }
        
        public DotnetSourceNode DotnetSourceNode
        {
            get
            {
                if ((this.mDotnetSourceNode == null))
                {
                    this.mDotnetSourceNode = new DotnetSourceNode(this);
                }
                return this.mDotnetSourceNode;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mRefreshButton;
        
        private WpfRadioButton mShowwhatdependsonthisRadioButton;
        
        private WpfRadioButton mShowwhatthisdependsonRadioButton;
        
        private NestingLevelsText mNestingLevelsText;
        
        private Node1 mNode1;
        
        private Node2 mNode2;
        
        private Node3 mNode3;
        
        private Node4 mNode4;
        
        private Node5 mNode5;
        
        private NodesCustom mNodesCustom;
        
        private DotnetSourceNode mDotnetSourceNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NestingLevelsText : WpfText
    {
        
        public NestingLevelsText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Nesting Levels";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node1 : WpfCustom
    {
        
        public Node1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node2 : WpfCustom
    {
        
        public Node2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node3 : WpfCustom
    {
        
        public Node3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node4 : WpfCustom
    {
        
        public Node4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node5 : WpfCustom
    {
        
        public Node5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NodesCustom : WpfCustom
    {
        
        public NodesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfText DotnetWorkflowForTesText
        {
            get
            {
                if ((this.mDotnetWorkflowForTesText == null))
                {
                    this.mDotnetWorkflowForTesText = new WpfText(this);
                    #region Search Criteria
                    this.mDotnetWorkflowForTesText.SearchProperties[WpfText.PropertyNames.Name] = "DotnetWorkflowForTesting";
                    this.mDotnetWorkflowForTesText.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mDotnetWorkflowForTesText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDotnetWorkflowForTesText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DotnetSourceNode : WpfCustom
    {
        
        public DotnetSourceNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfText DotNetPluginSourceText
        {
            get
            {
                if ((this.mDotNetPluginSourceText == null))
                {
                    this.mDotNetPluginSourceText = new WpfText(this);
                    #region Search Criteria
                    this.mDotNetPluginSourceText.SearchProperties[WpfText.PropertyNames.Name] = "DotNetPluginSource";
                    this.mDotNetPluginSourceText.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mDotNetPluginSourceText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDotNetPluginSourceText;
        #endregion
    }
}
