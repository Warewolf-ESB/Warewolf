// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UI.Tests.Search.SearchUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class SearchUIMap
    {
        
        #region Properties
        public UISearchViewWindow UISearchViewWindow
        {
            get
            {
                if ((this.mUISearchViewWindow == null))
                {
                    this.mUISearchViewWindow = new UISearchViewWindow();
                }
                return this.mUISearchViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchViewWindow mUISearchViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchViewWindow : WpfWindow
    {
        
        public UISearchViewWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "SearchView";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SearchView");
            #endregion
        }
        
        #region Properties
        public SearchConnectControlCustom SearchConnectControlCustom
        {
            get
            {
                if ((this.mSearchConnectControlCustom == null))
                {
                    this.mSearchConnectControlCustom = new SearchConnectControlCustom(this);
                }
                return this.mSearchConnectControlCustom;
            }
        }
        
        public WpfCustom LocalhostConnected
        {
            get
            {
                if ((this.mLocalhostConnected == null))
                {
                    this.mLocalhostConnected = new WpfCustom(this);
                    #region Search Criteria
                    this.mLocalhostConnected.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
                    this.mLocalhostConnected.SearchProperties[WpfControl.PropertyNames.Name] = "localhost (Connected)";
                    this.mLocalhostConnected.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mLocalhostConnected;
            }
        }
        
        public WpfEdit SearchInputEdit
        {
            get
            {
                if ((this.mSearchInputEdit == null))
                {
                    this.mSearchInputEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchInputEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtSearchInput";
                    this.mSearchInputEdit.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mSearchInputEdit;
            }
        }
        
        public WpfButton SearchButton
        {
            get
            {
                if ((this.mSearchButton == null))
                {
                    this.mSearchButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSearchButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSearchInput";
                    this.mSearchButton.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mSearchButton;
            }
        }
        
        public SearchOptionsExpander SearchOptionsExpander
        {
            get
            {
                if ((this.mSearchOptionsExpander == null))
                {
                    this.mSearchOptionsExpander = new SearchOptionsExpander(this);
                }
                return this.mSearchOptionsExpander;
            }
        }
        
        public WpfCheckBox MatchcaseCheckBox
        {
            get
            {
                if ((this.mMatchcaseCheckBox == null))
                {
                    this.mMatchcaseCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mMatchcaseCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchMatchCase";
                    this.mMatchcaseCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mMatchcaseCheckBox;
            }
        }
        
        public WpfCheckBox MatchwholewordCheckBox
        {
            get
            {
                if ((this.mMatchwholewordCheckBox == null))
                {
                    this.mMatchwholewordCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mMatchwholewordCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchMatchWholeWord";
                    this.mMatchwholewordCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mMatchwholewordCheckBox;
            }
        }
        
        public WpfTable SearchResultsTable
        {
            get
            {
                if ((this.mSearchResultsTable == null))
                {
                    this.mSearchResultsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mSearchResultsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SearchResults";
                    this.mSearchResultsTable.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mSearchResultsTable;
            }
        }
        #endregion
        
        #region Fields
        private SearchConnectControlCustom mSearchConnectControlCustom;
        
        private WpfCustom mLocalhostConnected;
        
        private WpfEdit mSearchInputEdit;
        
        private WpfButton mSearchButton;
        
        private SearchOptionsExpander mSearchOptionsExpander;
        
        private WpfCheckBox mMatchcaseCheckBox;
        
        private WpfCheckBox mMatchwholewordCheckBox;
        
        private WpfTable mSearchResultsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SearchConnectControlCustom : WpfCustom
    {
        
        public SearchConnectControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SearchConnectControl";
            this.WindowTitles.Add("SearchView");
            #endregion
        }
        
        #region Properties
        public ServerComboBox ServerComboBox
        {
            get
            {
                if ((this.mServerComboBox == null))
                {
                    this.mServerComboBox = new ServerComboBox(this);
                }
                return this.mServerComboBox;
            }
        }
        
        public WpfButton NewServerButton
        {
            get
            {
                if ((this.mNewServerButton == null))
                {
                    this.mNewServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NewServerButton";
                    this.mNewServerButton.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mNewServerButton;
            }
        }
        #endregion
        
        #region Fields
        private ServerComboBox mServerComboBox;
        
        private WpfButton mNewServerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ServerComboBox : WpfCustom
    {
        
        public ServerComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TheServerComboBox";
            this.WindowTitles.Add("SearchView");
            #endregion
        }
        
        #region Properties
        public WpfButton ServersToggleButton
        {
            get
            {
                if ((this.mServersToggleButton == null))
                {
                    this.mServersToggleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mServersToggleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mServersToggleButton.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mServersToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mServersToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SearchOptionsExpander : WpfExpander
    {
        
        public SearchOptionsExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Search Options";
            this.WindowTitles.Add("SearchView");
            #endregion
        }
        
        #region Properties
        public SearchOptionsExpanderButton SearchOptionsExpanderButton
        {
            get
            {
                if ((this.mSearchOptionsExpanderButton == null))
                {
                    this.mSearchOptionsExpanderButton = new SearchOptionsExpanderButton(this);
                }
                return this.mSearchOptionsExpanderButton;
            }
        }
        
        public WpfCheckBox AllCheckBox
        {
            get
            {
                if ((this.mAllCheckBox == null))
                {
                    this.mAllCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAllCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchAll";
                    this.mAllCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mAllCheckBox;
            }
        }
        
        public WpfCheckBox ServiceCheckBox
        {
            get
            {
                if ((this.mServiceCheckBox == null))
                {
                    this.mServiceCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mServiceCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchWorkflowName";
                    this.mServiceCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mServiceCheckBox;
            }
        }
        
        public WpfCheckBox ObjectCheckBox
        {
            get
            {
                if ((this.mObjectCheckBox == null))
                {
                    this.mObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchObjectName";
                    this.mObjectCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mObjectCheckBox;
            }
        }
        
        public WpfCheckBox ToolTitleCheckBox
        {
            get
            {
                if ((this.mToolTitleCheckBox == null))
                {
                    this.mToolTitleCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mToolTitleCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchToolTitle";
                    this.mToolTitleCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mToolTitleCheckBox;
            }
        }
        
        public WpfCheckBox RecordsetCheckBox
        {
            get
            {
                if ((this.mRecordsetCheckBox == null))
                {
                    this.mRecordsetCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRecordsetCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchRecSetName";
                    this.mRecordsetCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mRecordsetCheckBox;
            }
        }
        
        public WpfCheckBox InputVariableCheckBox
        {
            get
            {
                if ((this.mInputVariableCheckBox == null))
                {
                    this.mInputVariableCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputVariableCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchInputVariable";
                    this.mInputVariableCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mInputVariableCheckBox;
            }
        }
        
        public WpfCheckBox OutputVariableCheckBox
        {
            get
            {
                if ((this.mOutputVariableCheckBox == null))
                {
                    this.mOutputVariableCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputVariableCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchOutputVariable";
                    this.mOutputVariableCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mOutputVariableCheckBox;
            }
        }
        
        public WpfCheckBox ScalarCheckBox
        {
            get
            {
                if ((this.mScalarCheckBox == null))
                {
                    this.mScalarCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mScalarCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchScalarName";
                    this.mScalarCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mScalarCheckBox;
            }
        }
        
        public WpfCheckBox TestNameCheckBox
        {
            get
            {
                if ((this.mTestNameCheckBox == null))
                {
                    this.mTestNameCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestNameCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "cbSearchTestName";
                    this.mTestNameCheckBox.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mTestNameCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private SearchOptionsExpanderButton mSearchOptionsExpanderButton;
        
        private WpfCheckBox mAllCheckBox;
        
        private WpfCheckBox mServiceCheckBox;
        
        private WpfCheckBox mObjectCheckBox;
        
        private WpfCheckBox mToolTitleCheckBox;
        
        private WpfCheckBox mRecordsetCheckBox;
        
        private WpfCheckBox mInputVariableCheckBox;
        
        private WpfCheckBox mOutputVariableCheckBox;
        
        private WpfCheckBox mScalarCheckBox;
        
        private WpfCheckBox mTestNameCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SearchOptionsExpanderButton : WpfButton
    {
        
        public SearchOptionsExpanderButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("SearchView");
            #endregion
        }
        
        #region Properties
        public WpfText UISearchOptionsText
        {
            get
            {
                if ((this.mUISearchOptionsText == null))
                {
                    this.mUISearchOptionsText = new WpfText(this);
                    #region Search Criteria
                    this.mUISearchOptionsText.SearchProperties[WpfText.PropertyNames.Name] = "Search Options";
                    this.mUISearchOptionsText.WindowTitles.Add("SearchView");
                    #endregion
                }
                return this.mUISearchOptionsText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUISearchOptionsText;
        #endregion
    }
}
