<!DOCTYPE html>
<html><head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta name="robots" content="noindex, nofollow">
  <meta name="googlebot" content="noindex, nofollow">
    <script type="text/javascript" src="a_data/knockout-3.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="knockout.bootstrap.glyphicon.tree.css">
      <link rel="stylesheet" type="text/css" href="a_data/bootstrap.css">
      <script type="text/javascript" src="a_data/knockout.js"></script>
      <script type="text/javascript" src="a_data/jquery-1.js"></script>
      <script type="text/javascript" src="a_data/bootstrap.js"></script>
                      <style type="text/css">
                        #nav-bar ul {
	                    list-style-type: none;
                    }
                    #nav-bar {
	                    padding-left: 0;
                    }
 
                    #nav-bar > ul {
	                    padding-left: 20px;
                    }
                    .tree-item {
	                    font-family: 'Glyphicons Halflings';
	                    -webkit-font-smoothing: antialiased;
	                    font-size: 75%;
                    }
 
                    .pointer-icon {
	                    cursor: pointer;
                    }
                      </style>

  <title></title>

<script type="text/javascript">//<![CDATA[
window.onload=function(){
ko.bindingHandlers.tooltip = {
    init: function(element, valueAccessor) {
        var local = ko.utils.unwrapObservable(valueAccessor()),
            options = {};

        ko.utils.extend(options, local);

        $(element).tooltip(options);

        ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
            $(element).tooltip("destroy");
        });
    }
};

var NodeModel = function(data) {
	
	var self = this;
	
	self.isExpanded = ko.observable(true);
	self.description = ko.observable();
	self.name = ko.observable();
	self.WorkspaceID = ko.observable();
	self.ID = ko.observable();
	self.DisconnectedID = ko.observable();
	self.ParentID = ko.observable();
	self.SourceResourceID = ko.observable();
	self.StateType = ko.observable();
	self.DisplayName = ko.observable();
	self.Name = ko.observable();
	self.Children = ko.observableArray([]);
 
	self.toggleVisibility = function() {
		self.isExpanded(!self.isExpanded());
	};
 
	ko.mapping.fromJS(data, self.mapOptions, self);
 
};
 
NodeModel.prototype.mapOptions = {
    Children: {
		create: function(args) {
			return new NodeModel(args.data);
		}
	}
};

var __sampleData = {
	navTree: {
	    Children: [
  {
      "$id": "1",
      "$type": "Dev2.Diagnostics.Debug.DebugState, Dev2.Diagnostics",
      "DisconnectedID": "e923dc07-c933-49fe-8152-f0f1c168cbed",
      "ID": "00000000-0000-0000-0000-000000000000",
      "ParentID": null,
      "SourceResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "ServerID": "51a58300-7e9d-4927-a57b-e5d700b11b55",
      "EnvironmentID": "00000000-0000-0000-0000-000000000000",
      "ClientID": "21752a07-b96d-4474-b6b6-1e921ef10bd2",
      "StateType": 32,
      "DisplayName": "Hello World",
      "HasError": false,
      "ErrorMessage": "",
      "Version": "",
      "Name": "Start",
      "ActivityType": 0,
      "Duration": "00:00:00",
      "DurationString": "PT0S",
      "StartTime": "2017-02-28T09:07:44.2280104+02:00",
      "EndTime": "2017-02-28T09:07:44.2280104+02:00",
      "Inputs": [
        {
            "$id": "2",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "3",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": null,
                  "Variable": "[[Name]]",
                  "Operator": "=",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        },
        {
            "$id": "4",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "5",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": "",
                  "Variable": "[[Message]]",
                  "Operator": "",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "Outputs": [],
      "AssertResultList": [],
      "Server": "localhost",
      "WorkspaceID": "540beccb-b4f5-4b34-bc37-aa24b26370e2",
      "OriginalInstanceID": "00000000-0000-0000-0000-000000000000",
      "OriginatingResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "IsSimulation": false,
      "Message": null,
      "NumberOfSteps": 0,
      "Origin": "Debug",
      "ExecutionOrigin": 2,
      "ExecutionOriginDescription": null,
      "ExecutingUser": null,
      "SessionID": "40b9420a-cb8c-4aac-bbe7-d9c80e4293ff",
      "WorkSurfaceMappingId": "00000000-0000-0000-0000-000000000000",
      "IsDurationVisible": false,
      "ActualType": null,
      "Children": []
  },
  {
      "$id": "6",
      "$type": "Dev2.Diagnostics.Debug.DebugState, Dev2.Diagnostics",
      "DisconnectedID": "2b52192d-b618-425c-85b2-9d62ad613bdd",
      "ID": "a03172cf-7f8f-417e-be86-8821d696ca40",
      "ParentID": null,
      "SourceResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "ServerID": "51a58300-7e9d-4927-a57b-e5d700b11b55",
      "EnvironmentID": "00000000-0000-0000-0000-000000000000",
      "ClientID": "21752a07-b96d-4474-b6b6-1e921ef10bd2",
      "StateType": 128,
      "DisplayName": "Decision",
      "HasError": false,
      "ErrorMessage": "",
      "Version": "",
      "Name": "Step",
      "ActivityType": 1,
      "Duration": "00:00:00.0004999",
      "DurationString": "PT0.0004999S",
      "StartTime": "2017-02-28T09:07:44.3525527+02:00",
      "EndTime": "2017-02-28T09:07:44.3530526+02:00",
      "Inputs": [
        {
            "$id": "7",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "8",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": null,
                  "Variable": "[[Name]]",
                  "Operator": "=",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        },
        {
            "$id": "9",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "10",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "Statement",
                  "Variable": null,
                  "Operator": "",
                  "Value": "If <> (Not Equal) \r\nTHEN Name Input\r\nELSE Blank Input",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        },
        {
            "$id": "11",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "12",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "Require all decisions to be true",
                  "Variable": null,
                  "Operator": "",
                  "Value": "YES",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "Outputs": [
        {
            "$id": "13",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "14",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "",
                  "Variable": null,
                  "Operator": "",
                  "Value": "Blank Input",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "AssertResultList": [],
      "Server": "localhost",
      "WorkspaceID": "540beccb-b4f5-4b34-bc37-aa24b26370e2",
      "OriginalInstanceID": "00000000-0000-0000-0000-000000000000",
      "OriginatingResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "IsSimulation": false,
      "Message": null,
      "NumberOfSteps": 0,
      "Origin": "",
      "ExecutionOrigin": 0,
      "ExecutionOriginDescription": null,
      "ExecutingUser": null,
      "SessionID": "40b9420a-cb8c-4aac-bbe7-d9c80e4293ff",
      "WorkSurfaceMappingId": "a03172cf-7f8f-417e-be86-8821d696ca40",
      "IsDurationVisible": true,
      "ActualType": "DsfDecision",
      "Children": []
  },
  {
      "$id": "15",
      "$type": "Dev2.Diagnostics.Debug.DebugState, Dev2.Diagnostics",
      "DisconnectedID": "12ba5313-b83a-4418-85f7-b8192c2d2fae",
      "ID": "bd557ca7-113b-4197-afc3-de5d086dfc69",
      "ParentID": null,
      "SourceResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "ServerID": "51a58300-7e9d-4927-a57b-e5d700b11b55",
      "EnvironmentID": "00000000-0000-0000-0000-000000000000",
      "ClientID": "21752a07-b96d-4474-b6b6-1e921ef10bd2",
      "StateType": 128,
      "DisplayName": "Assign a value to Name if blank (1)",
      "HasError": false,
      "ErrorMessage": "",
      "Version": "",
      "Name": "Step",
      "ActivityType": 1,
      "Duration": "00:00:00",
      "DurationString": "PT0S",
      "StartTime": "2017-02-28T09:07:44.3530526+02:00",
      "EndTime": "2017-02-28T09:07:44.3530526+02:00",
      "Inputs": [
        {
            "$id": "16",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "17",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "1",
                  "Variable": null,
                  "Operator": "",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              },
              {
                  "$id": "18",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": "Variable",
                  "Variable": "[[Name]]",
                  "Operator": "=",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              },
              {
                  "$id": "19",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": "New Value",
                  "Variable": null,
                  "Operator": "",
                  "Value": "World",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "Outputs": [
        {
            "$id": "20",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "21",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "1",
                  "Variable": null,
                  "Operator": "",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              },
              {
                  "$id": "22",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": null,
                  "Variable": "[[Name]]",
                  "Operator": "=",
                  "Value": "World",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "AssertResultList": [],
      "Server": "localhost",
      "WorkspaceID": "540beccb-b4f5-4b34-bc37-aa24b26370e2",
      "OriginalInstanceID": "00000000-0000-0000-0000-000000000000",
      "OriginatingResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "IsSimulation": false,
      "Message": null,
      "NumberOfSteps": 0,
      "Origin": "",
      "ExecutionOrigin": 0,
      "ExecutionOriginDescription": null,
      "ExecutingUser": null,
      "SessionID": "40b9420a-cb8c-4aac-bbe7-d9c80e4293ff",
      "WorkSurfaceMappingId": "bd557ca7-113b-4197-afc3-de5d086dfc69",
      "IsDurationVisible": true,
      "ActualType": "DsfMultiAssignActivity",
      "Children": []
  },
  {
      "$id": "23",
      "$type": "Dev2.Diagnostics.Debug.DebugState, Dev2.Diagnostics",
      "DisconnectedID": "5eaca83a-b366-48fd-81e8-648b49726a77",
      "ID": "670132e7-80d4-4e41-94af-ba4a71b28118",
      "ParentID": null,
      "SourceResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "ServerID": "51a58300-7e9d-4927-a57b-e5d700b11b55",
      "EnvironmentID": "00000000-0000-0000-0000-000000000000",
      "ClientID": "21752a07-b96d-4474-b6b6-1e921ef10bd2",
      "StateType": 128,
      "DisplayName": "Set the output variable (1)",
      "HasError": false,
      "ErrorMessage": "",
      "Version": "",
      "Name": "Step",
      "ActivityType": 1,
      "Duration": "00:00:00",
      "DurationString": "PT0S",
      "StartTime": "2017-02-28T09:07:44.4120832+02:00",
      "EndTime": "2017-02-28T09:07:44.4120832+02:00",
      "Inputs": [
        {
            "$id": "24",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "25",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "1",
                  "Variable": null,
                  "Operator": "",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              },
              {
                  "$id": "26",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": "Variable",
                  "Variable": "[[Message]]",
                  "Operator": "=",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              },
              {
                  "$id": "27",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": "New Value",
                  "Variable": "Hello [[Name]].",
                  "Operator": "=",
                  "Value": "Hello World.",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "Outputs": [
        {
            "$id": "28",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "29",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 2,
                  "Label": "1",
                  "Variable": null,
                  "Operator": "",
                  "Value": "",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              },
              {
                  "$id": "30",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": null,
                  "Variable": "[[Message]]",
                  "Operator": "=",
                  "Value": "Hello World.",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "AssertResultList": [],
      "Server": "localhost",
      "WorkspaceID": "540beccb-b4f5-4b34-bc37-aa24b26370e2",
      "OriginalInstanceID": "00000000-0000-0000-0000-000000000000",
      "OriginatingResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "IsSimulation": false,
      "Message": null,
      "NumberOfSteps": 0,
      "Origin": "",
      "ExecutionOrigin": 0,
      "ExecutionOriginDescription": null,
      "ExecutingUser": null,
      "SessionID": "40b9420a-cb8c-4aac-bbe7-d9c80e4293ff",
      "WorkSurfaceMappingId": "670132e7-80d4-4e41-94af-ba4a71b28118",
      "IsDurationVisible": true,
      "ActualType": "DsfMultiAssignActivity",
      "Children": []
  },
  {
      "$id": "31",
      "$type": "Dev2.Diagnostics.Debug.DebugState, Dev2.Diagnostics",
      "DisconnectedID": "c25d0b58-ee60-40ba-87c6-8219da10b775",
      "ID": "00000000-0000-0000-0000-000000000000",
      "ParentID": null,
      "SourceResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "ServerID": "51a58300-7e9d-4927-a57b-e5d700b11b55",
      "EnvironmentID": "00000000-0000-0000-0000-000000000000",
      "ClientID": "21752a07-b96d-4474-b6b6-1e921ef10bd2",
      "StateType": 64,
      "DisplayName": "Hello World",
      "HasError": false,
      "ErrorMessage": "",
      "Version": "",
      "Name": "End",
      "ActivityType": 0,
      "Duration": "736387.09:07:44.4125840",
      "DurationString": "P736387DT9H7M44.412584S",
      "StartTime": "0001-01-01T00:00:00",
      "EndTime": "2017-02-28T09:07:44.412584+02:00",
      "Inputs": [],
      "Outputs": [
        {
            "$id": "32",
            "$type": "Dev2.Diagnostics.DebugItem, Dev2.Diagnostics",
            "ResultsList": [
              {
                  "$id": "33",
                  "$type": "Dev2.Diagnostics.DebugItemResult, Dev2.Diagnostics",
                  "Type": 1,
                  "Label": null,
                  "Variable": "[[Message]]",
                  "Operator": "=",
                  "Value": "Hello World.",
                  "GroupName": null,
                  "GroupIndex": 0,
                  "MoreLink": null,
                  "HasError": false,
                  "TestStepHasError": false,
                  "MockSelected": false
              }
            ]
        }
      ],
      "AssertResultList": [],
      "Server": "localhost",
      "WorkspaceID": "540beccb-b4f5-4b34-bc37-aa24b26370e2",
      "OriginalInstanceID": "00000000-0000-0000-0000-000000000000",
      "OriginatingResourceID": "acb75027-ddeb-47d7-814e-a54c37247ec1",
      "IsSimulation": false,
      "Message": null,
      "NumberOfSteps": 0,
      "Origin": "",
      "ExecutionOrigin": 0,
      "ExecutionOriginDescription": null,
      "ExecutingUser": null,
      "SessionID": "40b9420a-cb8c-4aac-bbe7-d9c80e4293ff",
      "WorkSurfaceMappingId": "00000000-0000-0000-0000-000000000000",
      "IsDurationVisible": true,
      "ActualType": null,
      "Children": []
  }
	    ]
	}
};

var PageModel = function() {
		
	var self = this;
 
	self.treeData = ko.observable();
 
	self.loadData = function(data) {
		self.treeData(new NodeModel(data.navTree));
	};
}
 
var pageModel = new PageModel();
 
pageModel.loadData(__sampleData);
 
ko.applyBindings(pageModel);
}//]]> 

</script>

  
</head>

<body>
  <div id="nav-bar" data-bind="template: { name: 'tree-template', data: treeData }">
 
    <ul data-bind="foreach: Children">
        <li>
            <span data-bind="
                template: { name: 'node-name-template', data: $data },
                css: { 'pointer-icon': Children().length &gt; 0 },
                click: toggleVisibility" class="pointer-icon">
 
    <span class="tree-item glyphicon-minus-sign" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() &amp;&amp; Children().length &gt; 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() &amp;&amp; Children().length &gt; 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }" title="" data-original-title="test description!">Root 1</span>
 
</span>
            <div data-bind="template: { name: 'folder-template', data: $data }, visible: isExpanded">
 
    <ul data-bind="foreach: Children">
        <li>
 
            <div data-bind="template: { name: 'node-template', data: $data }">
 
    <span data-bind="
        template: { name: 'node-name-template', data: $data },
        css: { 'pointer-icon': Children().length &gt; 0 },
        click: toggleVisibility" class="">
 
    <span class="tree-item glyphicon glyphicon-stop" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() &amp;&amp; Children().length &gt; 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() &amp;&amp; Children().length &gt; 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }" title="" data-original-title="test description!">Child 1</span>
 
</span>
 
    <!-- ko if: Children().length !== 0 --><!-- /ko -->
 
</div>
 
        </li>
    
        <li>
 
            <div data-bind="template: { name: 'node-template', data: $data }">
 
    <span data-bind="
        template: { name: 'node-name-template', data: $data },
        css: { 'pointer-icon': Children().length &gt; 0 },
        click: toggleVisibility" class="pointer-icon">
 
    <span class="tree-item glyphicon-minus-sign" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() &amp;&amp; Children().length &gt; 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() &amp;&amp; Children().length &gt; 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }" title="" data-original-title="test description! asd">Child 2</span>
 
</span>
 
    <!-- ko if: Children().length !== 0 -->
 
        <div data-bind="template: { name: 'folder-template', data: $data }, visible: isExpanded" style="">
 
    <ul data-bind="foreach: Children">
        <li>
 
            <div data-bind="template: { name: 'node-template', data: $data }">
 
    <span data-bind="
        template: { name: 'node-name-template', data: $data },
        css: { 'pointer-icon': Children().length &gt; 0 },
        click: toggleVisibility" class="">
 
    <span class="tree-item glyphicon glyphicon-stop" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() &amp;&amp; Children().length &gt; 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() &amp;&amp; Children().length &gt; 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }" title="" data-original-title="test description!">Child Child 1</span>
 
</span>
 
    <!-- ko if: Children().length !== 0 --><!-- /ko -->
 
</div>
 
        </li>
    </ul>
 
</div>
 
    <!-- /ko -->
 
</div>
 
        </li>
    </ul>
 
</div>
        </li>
    
        <li>
            <span data-bind="
                template: { name: 'node-name-template', data: $data },
                css: { 'pointer-icon': Children().length &gt; 0 },
                click: toggleVisibility" class="">
 
    <span class="tree-item glyphicon glyphicon-stop" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() &amp;&amp; Children().length &gt; 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() &amp;&amp; Children().length &gt; 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }" title="" data-original-title="this is a longer description and it is still fabulous">Root 2</span>
 
</span>
            <div data-bind="template: { name: 'folder-template', data: $data }, visible: isExpanded">
 
    <ul data-bind="foreach: Children"></ul>
 
</div>
        </li>
    
        <li>
            <span data-bind="
                template: { name: 'node-name-template', data: $data },
                css: { 'pointer-icon': Children().length &gt; 0 },
                click: toggleVisibility" class="">
 
    <span class="tree-item glyphicon glyphicon-stop" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() &amp;&amp; Children().length &gt; 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() &amp;&amp; Children().length &gt; 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }" title="" data-original-title="">Root 3</span>
 
</span>
            <div data-bind="template: { name: 'folder-template', data: $data }, visible: isExpanded">
 
    <ul data-bind="foreach: Children"></ul>
 
</div>
        </li>
    </ul>
 
</div>


<script type="text/html" id="tree-template">
 
    <ul data-bind="foreach: Children">
        <li>
            <span data-bind="
                template: { name: 'node-name-template', data: $data },
                css: { 'pointer-icon': Children().length > 0 },
                click: toggleVisibility"></span>
            <div data-bind="template: { name: 'folder-template', data: $data }, visible: isExpanded"></div>
        </li>
    </ul>
 
</script>
 
<script type="text/html" id="folder-template">
 
    <ul data-bind="foreach: Children">
        <li>
 
            <div data-bind="template: { name: 'node-template', data: $data }"></div>
 
        </li>
    </ul>
 
</script>
 
<script type="text/html" id="node-template">
 
    <span data-bind="
        template: { name: 'node-name-template', data: $data },
        css: { 'pointer-icon': Children().length > 0 },
        click: toggleVisibility"></span>
 
    <!-- ko if: Children().length !== 0 -->
 
        <div data-bind="template: { name: 'folder-template', data: $data }, visible: isExpanded"></div>
 
    <!-- /ko -->
 
</script>
 
<script type="text/html" id="node-name-template">
 
    <span class="tree-item" data-bind="
    css: { 
        'glyphicon glyphicon-minus-sign': isExpanded() && Children().length > 0, 
        'glyphicon glyphicon-plus-sign': !isExpanded() && Children().length > 0,
        'glyphicon glyphicon-stop': Children().length === 0 
    }
    "></span>
 
    <span data-bind="
    text: name, 
    attr: { 'title': description }, 
    tooltip: { delay: { show: 500, hide: 10 } }"></span>
 
</script>
  
  <script>
  // tell the embed parent frame the height of the content
  if (window.parent && window.parent.parent){
    window.parent.parent.postMessage(["resultsFrame", {
      height: document.body.getBoundingClientRect().height,
      slug: "Ar88e"
    }], "*")
  }
</script>





</body></html>