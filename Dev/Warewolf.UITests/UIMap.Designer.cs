// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Open_UI_Map_Designer_To_Flowchart - Use 'Open_UI_Map_Designer_To_FlowchartParams' to pass parameters into this method.
        /// </summary>
        public void Open_UI_Map_Designer_To_Flowchart()
        {
            #region Variable Declarations
            WpfCustom flowchart = this.MainStudioWindow.DockManager.SplitPaneMiddle.TabManSplitPane.TabMan.WorkflowTab.WorkSurfaceContext.WorkflowDesignerView.DesignerView.ScrollViewerPane.ActivityTypeDesigner.WorkflowItemPresenter.Flowchart;
            #endregion

            // Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
            Assert.AreEqual(this.Open_UI_Map_Designer_To_FlowchartParams.FlowchartExists, flowchart.Exists, "Flowchart does not exist.");
        }
        
        #region Properties
        public virtual Open_UI_Map_Designer_To_FlowchartParams Open_UI_Map_Designer_To_FlowchartParams
        {
            get
            {
                if ((this.mOpen_UI_Map_Designer_To_FlowchartParams == null))
                {
                    this.mOpen_UI_Map_Designer_To_FlowchartParams = new Open_UI_Map_Designer_To_FlowchartParams();
                }
                return this.mOpen_UI_Map_Designer_To_FlowchartParams;
            }
        }
        
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        
        public MessageBoxWindow MessageBoxWindow
        {
            get
            {
                if ((this.mMessageBoxWindow == null))
                {
                    this.mMessageBoxWindow = new MessageBoxWindow();
                }
                return this.mMessageBoxWindow;
            }
        }
        
        public SaveDialogWindow SaveDialogWindow
        {
            get
            {
                if ((this.mSaveDialogWindow == null))
                {
                    this.mSaveDialogWindow = new SaveDialogWindow();
                }
                return this.mSaveDialogWindow;
            }
        }
        
        public SplashPageWindow SplashPageWindow
        {
            get
            {
                if ((this.mSplashPageWindow == null))
                {
                    this.mSplashPageWindow = new SplashPageWindow();
                }
                return this.mSplashPageWindow;
            }
        }
        
        public DecisionOrSwitchDialog DecisionOrSwitchDialog
        {
            get
            {
                if ((this.mDecisionOrSwitchDialog == null))
                {
                    this.mDecisionOrSwitchDialog = new DecisionOrSwitchDialog();
                }
                return this.mDecisionOrSwitchDialog;
            }
        }
        
        public SelectWindowsGroupDialog SelectWindowsGroupDialog
        {
            get
            {
                if ((this.mSelectWindowsGroupDialog == null))
                {
                    this.mSelectWindowsGroupDialog = new SelectWindowsGroupDialog();
                }
                return this.mSelectWindowsGroupDialog;
            }
        }
        
        public ServicePickerDialog ServicePickerDialog
        {
            get
            {
                if ((this.mServicePickerDialog == null))
                {
                    this.mServicePickerDialog = new ServicePickerDialog();
                }
                return this.mServicePickerDialog;
            }
        }
        
        public StartNodePopupWindow StartNodePopupWindow
        {
            get
            {
                if ((this.mStartNodePopupWindow == null))
                {
                    this.mStartNodePopupWindow = new StartNodePopupWindow();
                }
                return this.mStartNodePopupWindow;
            }
        }
        
        public ErrorWindow ErrorWindow
        {
            get
            {
                if ((this.mErrorWindow == null))
                {
                    this.mErrorWindow = new ErrorWindow();
                }
                return this.mErrorWindow;
            }
        }
        
        public CriticalErrorWindow CriticalErrorWindow
        {
            get
            {
                if ((this.mCriticalErrorWindow == null))
                {
                    this.mCriticalErrorWindow = new CriticalErrorWindow();
                }
                return this.mCriticalErrorWindow;
            }
        }
        
        public WebBrowserErrorWindow WebBrowserErrorWindow
        {
            get
            {
                if ((this.mWebBrowserErrorWindow == null))
                {
                    this.mWebBrowserErrorWindow = new WebBrowserErrorWindow();
                }
                return this.mWebBrowserErrorWindow;
            }
        }
        
        public UIWarewolfDEV2SANELEMTWindow UIWarewolfDEV2SANELEMTWindow
        {
            get
            {
                if ((this.mUIWarewolfDEV2SANELEMTWindow == null))
                {
                    this.mUIWarewolfDEV2SANELEMTWindow = new UIWarewolfDEV2SANELEMTWindow();
                }
                return this.mUIWarewolfDEV2SANELEMTWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_UI_Map_Designer_To_FlowchartParams mOpen_UI_Map_Designer_To_FlowchartParams;
        
        private MainStudioWindow mMainStudioWindow;
        
        private MessageBoxWindow mMessageBoxWindow;
        
        private SaveDialogWindow mSaveDialogWindow;
        
        private SplashPageWindow mSplashPageWindow;
        
        private DecisionOrSwitchDialog mDecisionOrSwitchDialog;
        
        private SelectWindowsGroupDialog mSelectWindowsGroupDialog;
        
        private ServicePickerDialog mServicePickerDialog;
        
        private StartNodePopupWindow mStartNodePopupWindow;
        
        private ErrorWindow mErrorWindow;
        
        private CriticalErrorWindow mCriticalErrorWindow;
        
        private WebBrowserErrorWindow mWebBrowserErrorWindow;
        
        private UIWarewolfDEV2SANELEMTWindow mUIWarewolfDEV2SANELEMTWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_UI_Map_Designer_To_Flowchart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_UI_Map_Designer_To_FlowchartParams
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
        /// </summary>
        public bool FlowchartExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabContextMenu TabContextMenu
        {
            get
            {
                if ((this.mTabContextMenu == null))
                {
                    this.mTabContextMenu = new TabContextMenu(this);
                }
                return this.mTabContextMenu;
            }
        }
        
        public ExplorerEnvironmentContextMenu ExplorerEnvironmentContextMenu
        {
            get
            {
                if ((this.mExplorerEnvironmentContextMenu == null))
                {
                    this.mExplorerEnvironmentContextMenu = new ExplorerEnvironmentContextMenu(this);
                }
                return this.mExplorerEnvironmentContextMenu;
            }
        }
        
        public ExplorerContextMenu ExplorerContextMenu
        {
            get
            {
                if ((this.mExplorerContextMenu == null))
                {
                    this.mExplorerContextMenu = new ExplorerContextMenu(this);
                }
                return this.mExplorerContextMenu;
            }
        }
        
        public DesignSurfaceContextMenu DesignSurfaceContextMenu
        {
            get
            {
                if ((this.mDesignSurfaceContextMenu == null))
                {
                    this.mDesignSurfaceContextMenu = new DesignSurfaceContextMenu(this);
                }
                return this.mDesignSurfaceContextMenu;
            }
        }
        
        public ExitFullScreenF11Text ExitFullScreenF11Text
        {
            get
            {
                if ((this.mExitFullScreenF11Text == null))
                {
                    this.mExitFullScreenF11Text = new ExitFullScreenF11Text(this);
                }
                return this.mExitFullScreenF11Text;
            }
        }
        
        public WpfButton LockStudioButton
        {
            get
            {
                if ((this.mLockStudioButton == null))
                {
                    this.mLockStudioButton = new WpfButton(this);
                    #region Search Criteria
                    this.mLockStudioButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_LOCK";
                    this.mLockStudioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLockStudioButton;
            }
        }
        
        public WpfButton MinimizeStudioButton
        {
            get
            {
                if ((this.mMinimizeStudioButton == null))
                {
                    this.mMinimizeStudioButton = new WpfButton(this);
                    #region Search Criteria
                    this.mMinimizeStudioButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_MINIMIZE";
                    this.mMinimizeStudioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMinimizeStudioButton;
            }
        }
        
        public WpfButton MaximizeRestoreStudioButton
        {
            get
            {
                if ((this.mMaximizeRestoreStudioButton == null))
                {
                    this.mMaximizeRestoreStudioButton = new WpfButton(this);
                    #region Search Criteria
                    this.mMaximizeRestoreStudioButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_SUPER_MAXIMIZE_RESTORE";
                    this.mMaximizeRestoreStudioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMaximizeRestoreStudioButton;
            }
        }
        
        public WpfButton MaximizeStudioButton
        {
            get
            {
                if ((this.mMaximizeStudioButton == null))
                {
                    this.mMaximizeStudioButton = new WpfButton(this);
                    #region Search Criteria
                    this.mMaximizeStudioButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_MAXIMIZE_RESTORE";
                    this.mMaximizeStudioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMaximizeStudioButton;
            }
        }
        
        public WpfButton CloseStudioButton
        {
            get
            {
                if ((this.mCloseStudioButton == null))
                {
                    this.mCloseStudioButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseStudioButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_CLOSE";
                    this.mCloseStudioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseStudioButton;
            }
        }
        
        public SideMenuBar SideMenuBar
        {
            get
            {
                if ((this.mSideMenuBar == null))
                {
                    this.mSideMenuBar = new SideMenuBar(this);
                }
                return this.mSideMenuBar;
            }
        }
        
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        
        public DebugInputDialog DebugInputDialog
        {
            get
            {
                if ((this.mDebugInputDialog == null))
                {
                    this.mDebugInputDialog = new DebugInputDialog(this);
                }
                return this.mDebugInputDialog;
            }
        }
        
        public ComboboxListItemAsNewRemoteServer ComboboxListItemAsNewRemoteServer
        {
            get
            {
                if ((this.mComboboxListItemAsNewRemoteServer == null))
                {
                    this.mComboboxListItemAsNewRemoteServer = new ComboboxListItemAsNewRemoteServer(this);
                }
                return this.mComboboxListItemAsNewRemoteServer;
            }
        }
        
        public WpfText ComboboxListItemAsTSTCIREMOTE
        {
            get
            {
                if ((this.mComboboxListItemAsTSTCIREMOTE == null))
                {
                    this.mComboboxListItemAsTSTCIREMOTE = new WpfText(this);
                    #region Search Criteria
                    this.mComboboxListItemAsTSTCIREMOTE.SearchProperties[WpfText.PropertyNames.Name] = "TSTCIREMOTE";
                    this.mComboboxListItemAsTSTCIREMOTE.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsTSTCIREMOTE;
            }
        }
        
        public WpfText ComboboxListItemAsTSTCIREMOTEConnected
        {
            get
            {
                if ((this.mComboboxListItemAsTSTCIREMOTEConnected == null))
                {
                    this.mComboboxListItemAsTSTCIREMOTEConnected = new WpfText(this);
                    #region Search Criteria
                    this.mComboboxListItemAsTSTCIREMOTEConnected.SearchProperties[WpfText.PropertyNames.Name] = "TSTCIREMOTE (Connected)";
                    this.mComboboxListItemAsTSTCIREMOTEConnected.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsTSTCIREMOTEConnected;
            }
        }
        
        public ComboboxListItemAsLocalhost ComboboxListItemAsLocalhost
        {
            get
            {
                if ((this.mComboboxListItemAsLocalhost == null))
                {
                    this.mComboboxListItemAsLocalhost = new ComboboxListItemAsLocalhost(this);
                }
                return this.mComboboxListItemAsLocalhost;
            }
        }
        
        public ComboboxListItemAsLocalhostConnected ComboboxListItemAsLocalhostConnected
        {
            get
            {
                if ((this.mComboboxListItemAsLocalhostConnected == null))
                {
                    this.mComboboxListItemAsLocalhostConnected = new ComboboxListItemAsLocalhostConnected(this);
                }
                return this.mComboboxListItemAsLocalhostConnected;
            }
        }
        
        public ComboboxListItemAsRemoteConnectionIntegrationConnected ComboboxListItemAsRemoteConnectionIntegrationConnected
        {
            get
            {
                if ((this.mComboboxListItemAsRemoteConnectionIntegrationConnected == null))
                {
                    this.mComboboxListItemAsRemoteConnectionIntegrationConnected = new ComboboxListItemAsRemoteConnectionIntegrationConnected(this);
                }
                return this.mComboboxListItemAsRemoteConnectionIntegrationConnected;
            }
        }
        
        public WpfCustom ComboboxListItemAsHttp
        {
            get
            {
                if ((this.mComboboxListItemAsHttp == null))
                {
                    this.mComboboxListItemAsHttp = new WpfCustom(this);
                    #region Search Criteria
                    this.mComboboxListItemAsHttp.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
                    this.mComboboxListItemAsHttp.SearchProperties[WpfControl.PropertyNames.Name] = "http";
                    this.mComboboxListItemAsHttp.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsHttp;
            }
        }
        
        public ComboboxListItemAsMicrosoftSQLServer ComboboxListItemAsMicrosoftSQLServer
        {
            get
            {
                if ((this.mComboboxListItemAsMicrosoftSQLServer == null))
                {
                    this.mComboboxListItemAsMicrosoftSQLServer = new ComboboxListItemAsMicrosoftSQLServer(this);
                }
                return this.mComboboxListItemAsMicrosoftSQLServer;
            }
        }
        
        public WpfCustom ComboboxListItemAsDev2TestingDB
        {
            get
            {
                if ((this.mComboboxListItemAsDev2TestingDB == null))
                {
                    this.mComboboxListItemAsDev2TestingDB = new WpfCustom(this);
                    #region Search Criteria
                    this.mComboboxListItemAsDev2TestingDB.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
                    this.mComboboxListItemAsDev2TestingDB.SearchProperties[WpfControl.PropertyNames.Name] = "Dev2TestingDB";
                    this.mComboboxListItemAsDev2TestingDB.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsDev2TestingDB;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem1
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem1 == null))
                {
                    this.mWebServerSourceComboboxListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem1.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem1.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mWebServerSourceComboboxListItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem1;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem10
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem10 == null))
                {
                    this.mWebServerSourceComboboxListItem10 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem10.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem10.SearchProperties[WpfListItem.PropertyNames.Instance] = "10";
                    this.mWebServerSourceComboboxListItem10.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem10;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem11
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem11 == null))
                {
                    this.mWebServerSourceComboboxListItem11 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem11.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem11.SearchProperties[WpfListItem.PropertyNames.Instance] = "11";
                    this.mWebServerSourceComboboxListItem11.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem11;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem2
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem2 == null))
                {
                    this.mWebServerSourceComboboxListItem2 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem2.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem2.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mWebServerSourceComboboxListItem2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem2;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem3
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem3 == null))
                {
                    this.mWebServerSourceComboboxListItem3 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem3.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem3.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mWebServerSourceComboboxListItem3.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem3;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem4
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem4 == null))
                {
                    this.mWebServerSourceComboboxListItem4 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem4.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem4.SearchProperties[WpfListItem.PropertyNames.Instance] = "4";
                    this.mWebServerSourceComboboxListItem4.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem4;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem5
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem5 == null))
                {
                    this.mWebServerSourceComboboxListItem5 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem5.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem5.SearchProperties[WpfListItem.PropertyNames.Instance] = "5";
                    this.mWebServerSourceComboboxListItem5.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem5;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem6
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem6 == null))
                {
                    this.mWebServerSourceComboboxListItem6 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem6.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem6.SearchProperties[WpfListItem.PropertyNames.Instance] = "6";
                    this.mWebServerSourceComboboxListItem6.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem6;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem7
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem7 == null))
                {
                    this.mWebServerSourceComboboxListItem7 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem7.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem7.SearchProperties[WpfListItem.PropertyNames.Instance] = "7";
                    this.mWebServerSourceComboboxListItem7.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem7;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem8
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem8 == null))
                {
                    this.mWebServerSourceComboboxListItem8 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem8.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem8.SearchProperties[WpfListItem.PropertyNames.Instance] = "8";
                    this.mWebServerSourceComboboxListItem8.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem8;
            }
        }
        
        public WpfListItem WebServerSourceComboboxListItem9
        {
            get
            {
                if ((this.mWebServerSourceComboboxListItem9 == null))
                {
                    this.mWebServerSourceComboboxListItem9 = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServerSourceComboboxListItem9.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mWebServerSourceComboboxListItem9.SearchProperties[WpfListItem.PropertyNames.Instance] = "9";
                    this.mWebServerSourceComboboxListItem9.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebServerSourceComboboxListItem9;
            }
        }
        
        public WpfCustom ComboboxListItemAsWarewolfStore
        {
            get
            {
                if ((this.mComboboxListItemAsWarewolfStore == null))
                {
                    this.mComboboxListItemAsWarewolfStore = new WpfCustom(this);
                    #region Search Criteria
                    this.mComboboxListItemAsWarewolfStore.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
                    this.mComboboxListItemAsWarewolfStore.SearchProperties[WpfControl.PropertyNames.Name] = "WarewolfStore";
                    this.mComboboxListItemAsWarewolfStore.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsWarewolfStore;
            }
        }
        
        public ComboboxListItemPostgreSqlDatabase ComboboxListItemPostgreSqlDatabase
        {
            get
            {
                if ((this.mComboboxListItemPostgreSqlDatabase == null))
                {
                    this.mComboboxListItemPostgreSqlDatabase = new ComboboxListItemPostgreSqlDatabase(this);
                }
                return this.mComboboxListItemPostgreSqlDatabase;
            }
        }
        
        public WpfCustom ComboboxListItemOracleDatabase
        {
            get
            {
                if ((this.mComboboxListItemOracleDatabase == null))
                {
                    this.mComboboxListItemOracleDatabase = new WpfCustom(this);
                    #region Search Criteria
                    this.mComboboxListItemOracleDatabase.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
                    this.mComboboxListItemOracleDatabase.SearchProperties[WpfControl.PropertyNames.Name] = "Oracle Database";
                    this.mComboboxListItemOracleDatabase.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemOracleDatabase;
            }
        }
        
        public ComboboxListItemODBCDatabase ComboboxListItemODBCDatabase
        {
            get
            {
                if ((this.mComboboxListItemODBCDatabase == null))
                {
                    this.mComboboxListItemODBCDatabase = new ComboboxListItemODBCDatabase(this);
                }
                return this.mComboboxListItemODBCDatabase;
            }
        }
        
        public ComboboxListItemMySqlDatabase ComboboxListItemMySqlDatabase
        {
            get
            {
                if ((this.mComboboxListItemMySqlDatabase == null))
                {
                    this.mComboboxListItemMySqlDatabase = new ComboboxListItemMySqlDatabase(this);
                }
                return this.mComboboxListItemMySqlDatabase;
            }
        }
        
        public WpfToggleButton ExpandAllToggleButton
        {
            get
            {
                if ((this.mExpandAllToggleButton == null))
                {
                    this.mExpandAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mExpandAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "expandAllButton";
                    this.mExpandAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandAllToggleButton;
            }
        }
        
        public WpfListItem ComboBoxListItemAsForEachInCSV
        {
            get
            {
                if ((this.mComboBoxListItemAsForEachInCSV == null))
                {
                    this.mComboBoxListItemAsForEachInCSV = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboBoxListItemAsForEachInCSV.SearchProperties[WpfListItem.PropertyNames.Name] = "* in CSV";
                    this.mComboBoxListItemAsForEachInCSV.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboBoxListItemAsForEachInCSV;
            }
        }
        
        public WpfListItem ComboBoxListItemAsForEachInRange
        {
            get
            {
                if ((this.mComboBoxListItemAsForEachInRange == null))
                {
                    this.mComboBoxListItemAsForEachInRange = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboBoxListItemAsForEachInRange.SearchProperties[WpfListItem.PropertyNames.Name] = "* in Range";
                    this.mComboBoxListItemAsForEachInRange.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboBoxListItemAsForEachInRange;
            }
        }
        
        public WpfListItem ComboBoxListItemAsForEachInRecordset
        {
            get
            {
                if ((this.mComboBoxListItemAsForEachInRecordset == null))
                {
                    this.mComboBoxListItemAsForEachInRecordset = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboBoxListItemAsForEachInRecordset.SearchProperties[WpfListItem.PropertyNames.Name] = "* in Recordset";
                    this.mComboBoxListItemAsForEachInRecordset.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboBoxListItemAsForEachInRecordset;
            }
        }
        
        public WpfListItem ComboBoxListItemAsForEachNoofExecutes
        {
            get
            {
                if ((this.mComboBoxListItemAsForEachNoofExecutes == null))
                {
                    this.mComboBoxListItemAsForEachNoofExecutes = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboBoxListItemAsForEachNoofExecutes.SearchProperties[WpfListItem.PropertyNames.Name] = "No. of Executes";
                    this.mComboBoxListItemAsForEachNoofExecutes.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboBoxListItemAsForEachNoofExecutes;
            }
        }
        
        public UnpinnedTab UnpinnedTab
        {
            get
            {
                if ((this.mUnpinnedTab == null))
                {
                    this.mUnpinnedTab = new UnpinnedTab(this);
                }
                return this.mUnpinnedTab;
            }
        }
        
        public UnpinnedTabContextMenu UnpinnedTabContextMenu
        {
            get
            {
                if ((this.mUnpinnedTabContextMenu == null))
                {
                    this.mUnpinnedTabContextMenu = new UnpinnedTabContextMenu(this);
                }
                return this.mUnpinnedTabContextMenu;
            }
        }
        
        public ComboboxListItemAsRemoteConnectionIntegration ComboboxListItemAsRemoteConnectionIntegration
        {
            get
            {
                if ((this.mComboboxListItemAsRemoteConnectionIntegration == null))
                {
                    this.mComboboxListItemAsRemoteConnectionIntegration = new ComboboxListItemAsRemoteConnectionIntegration(this);
                }
                return this.mComboboxListItemAsRemoteConnectionIntegration;
            }
        }
        #endregion
        
        #region Fields
        private TabContextMenu mTabContextMenu;
        
        private ExplorerEnvironmentContextMenu mExplorerEnvironmentContextMenu;
        
        private ExplorerContextMenu mExplorerContextMenu;
        
        private DesignSurfaceContextMenu mDesignSurfaceContextMenu;
        
        private ExitFullScreenF11Text mExitFullScreenF11Text;
        
        private WpfButton mLockStudioButton;
        
        private WpfButton mMinimizeStudioButton;
        
        private WpfButton mMaximizeRestoreStudioButton;
        
        private WpfButton mMaximizeStudioButton;
        
        private WpfButton mCloseStudioButton;
        
        private SideMenuBar mSideMenuBar;
        
        private DockManager mDockManager;
        
        private DebugInputDialog mDebugInputDialog;
        
        private ComboboxListItemAsNewRemoteServer mComboboxListItemAsNewRemoteServer;
        
        private WpfText mComboboxListItemAsTSTCIREMOTE;
        
        private WpfText mComboboxListItemAsTSTCIREMOTEConnected;
        
        private ComboboxListItemAsLocalhost mComboboxListItemAsLocalhost;
        
        private ComboboxListItemAsLocalhostConnected mComboboxListItemAsLocalhostConnected;
        
        private ComboboxListItemAsRemoteConnectionIntegrationConnected mComboboxListItemAsRemoteConnectionIntegrationConnected;
        
        private WpfCustom mComboboxListItemAsHttp;
        
        private ComboboxListItemAsMicrosoftSQLServer mComboboxListItemAsMicrosoftSQLServer;
        
        private WpfCustom mComboboxListItemAsDev2TestingDB;
        
        private WpfListItem mWebServerSourceComboboxListItem1;
        
        private WpfListItem mWebServerSourceComboboxListItem10;
        
        private WpfListItem mWebServerSourceComboboxListItem11;
        
        private WpfListItem mWebServerSourceComboboxListItem2;
        
        private WpfListItem mWebServerSourceComboboxListItem3;
        
        private WpfListItem mWebServerSourceComboboxListItem4;
        
        private WpfListItem mWebServerSourceComboboxListItem5;
        
        private WpfListItem mWebServerSourceComboboxListItem6;
        
        private WpfListItem mWebServerSourceComboboxListItem7;
        
        private WpfListItem mWebServerSourceComboboxListItem8;
        
        private WpfListItem mWebServerSourceComboboxListItem9;
        
        private WpfCustom mComboboxListItemAsWarewolfStore;
        
        private ComboboxListItemPostgreSqlDatabase mComboboxListItemPostgreSqlDatabase;
        
        private WpfCustom mComboboxListItemOracleDatabase;
        
        private ComboboxListItemODBCDatabase mComboboxListItemODBCDatabase;
        
        private ComboboxListItemMySqlDatabase mComboboxListItemMySqlDatabase;
        
        private WpfToggleButton mExpandAllToggleButton;
        
        private WpfListItem mComboBoxListItemAsForEachInCSV;
        
        private WpfListItem mComboBoxListItemAsForEachInRange;
        
        private WpfListItem mComboBoxListItemAsForEachInRecordset;
        
        private WpfListItem mComboBoxListItemAsForEachNoofExecutes;
        
        private UnpinnedTab mUnpinnedTab;
        
        private UnpinnedTabContextMenu mUnpinnedTabContextMenu;
        
        private ComboboxListItemAsRemoteConnectionIntegration mComboboxListItemAsRemoteConnectionIntegration;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabContextMenu : WpfMenu
    {
        
        public TabContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem Close
        {
            get
            {
                if ((this.mClose == null))
                {
                    this.mClose = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mClose.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Close";
                    this.mClose.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClose;
            }
        }
        
        public WpfMenuItem UICloseAllButThisMenuItem
        {
            get
            {
                if ((this.mUICloseAllButThisMenuItem == null))
                {
                    this.mUICloseAllButThisMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUICloseAllButThisMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Close All But This";
                    this.mUICloseAllButThisMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUICloseAllButThisMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mClose;
        
        private WpfMenuItem mUICloseAllButThisMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerEnvironmentContextMenu : WpfMenu
    {
        
        public ExplorerEnvironmentContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.AutomationId] = "ExplorerEnvironmentMenu";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem Open
        {
            get
            {
                if ((this.mOpen == null))
                {
                    this.mOpen = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mOpen.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Open";
                    this.mOpen.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpen;
            }
        }
        
        public WpfMenuItem NewWorkflow
        {
            get
            {
                if ((this.mNewWorkflow == null))
                {
                    this.mNewWorkflow = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewWorkflow.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewService";
                    this.mNewWorkflow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWorkflow;
            }
        }
        
        public WpfMenuItem NewServerSource
        {
            get
            {
                if ((this.mNewServerSource == null))
                {
                    this.mNewServerSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewServerSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewServerSource";
                    this.mNewServerSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewServerSource;
            }
        }
        
        public WpfMenuItem NewDatabaseSource
        {
            get
            {
                if ((this.mNewDatabaseSource == null))
                {
                    this.mNewDatabaseSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewDatabaseSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewDataBaseSource";
                    this.mNewDatabaseSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDatabaseSource;
            }
        }
        
        public WpfMenuItem NewWebServiceSource
        {
            get
            {
                if ((this.mNewWebServiceSource == null))
                {
                    this.mNewWebServiceSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewWebServiceSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewWebSource";
                    this.mNewWebServiceSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWebServiceSource;
            }
        }
        
        public WpfMenuItem NewPluginSource
        {
            get
            {
                if ((this.mNewPluginSource == null))
                {
                    this.mNewPluginSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewPluginSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewPluginSource";
                    this.mNewPluginSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewPluginSource;
            }
        }
        
        public WpfMenuItem NewEmailSource
        {
            get
            {
                if ((this.mNewEmailSource == null))
                {
                    this.mNewEmailSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewEmailSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewEmailSource";
                    this.mNewEmailSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewEmailSource;
            }
        }
        
        public WpfMenuItem NewDropboxSource
        {
            get
            {
                if ((this.mNewDropboxSource == null))
                {
                    this.mNewDropboxSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewDropboxSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewDropboxSource";
                    this.mNewDropboxSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDropboxSource;
            }
        }
        
        public WpfMenuItem NewSharepointSource
        {
            get
            {
                if ((this.mNewSharepointSource == null))
                {
                    this.mNewSharepointSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewSharepointSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewSharepointSource";
                    this.mNewSharepointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharepointSource;
            }
        }
        
        public WpfMenuItem NewFolder
        {
            get
            {
                if ((this.mNewFolder == null))
                {
                    this.mNewFolder = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewFolder.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewFolderFromItem";
                    this.mNewFolder.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewFolder;
            }
        }
        
        public WpfMenuItem Rename
        {
            get
            {
                if ((this.mRename == null))
                {
                    this.mRename = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mRename.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Rename";
                    this.mRename.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRename;
            }
        }
        
        public WpfMenuItem Delete
        {
            get
            {
                if ((this.mDelete == null))
                {
                    this.mDelete = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDelete.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Delete";
                    this.mDelete.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDelete;
            }
        }
        
        public WpfMenuItem Deploy
        {
            get
            {
                if ((this.mDeploy == null))
                {
                    this.mDeploy = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeploy.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Deploy";
                    this.mDeploy.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeploy;
            }
        }
        
        public WpfMenuItem ShowServerVersion
        {
            get
            {
                if ((this.mShowServerVersion == null))
                {
                    this.mShowServerVersion = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowServerVersion.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ServerVersion";
                    this.mShowServerVersion.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowServerVersion;
            }
        }
        
        public WpfMenuItem ShowDependencies
        {
            get
            {
                if ((this.mShowDependencies == null))
                {
                    this.mShowDependencies = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowDependencies.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Dependencies";
                    this.mShowDependencies.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowDependencies;
            }
        }
        
        public WpfMenuItem Duplicate
        {
            get
            {
                if ((this.mDuplicate == null))
                {
                    this.mDuplicate = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDuplicate.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Duplicate";
                    this.mDuplicate.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDuplicate;
            }
        }
        
        public WpfMenuItem ViewSwagger
        {
            get
            {
                if ((this.mViewSwagger == null))
                {
                    this.mViewSwagger = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mViewSwagger.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ViewSwagger";
                    this.mViewSwagger.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewSwagger;
            }
        }
        
        public WpfMenuItem ShowVersionHistory
        {
            get
            {
                if ((this.mShowVersionHistory == null))
                {
                    this.mShowVersionHistory = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowVersionHistory.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ShowHideVersions";
                    this.mShowVersionHistory.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowVersionHistory;
            }
        }
        
        public WpfMenuItem Tests
        {
            get
            {
                if ((this.mTests == null))
                {
                    this.mTests = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mTests.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Test";
                    this.mTests.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTests;
            }
        }
        
        public WpfMenuItem ViewApisJsonMenuItem
        {
            get
            {
                if ((this.mViewApisJsonMenuItem == null))
                {
                    this.mViewApisJsonMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mViewApisJsonMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ViewApisJson";
                    this.mViewApisJsonMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewApisJsonMenuItem;
            }
        }
        
        public WpfMenuItem NewExchangeSource
        {
            get
            {
                if ((this.mNewExchangeSource == null))
                {
                    this.mNewExchangeSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewExchangeSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewExchangeSource";
                    this.mNewExchangeSource.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mNewExchangeSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mOpen;
        
        private WpfMenuItem mNewWorkflow;
        
        private WpfMenuItem mNewServerSource;
        
        private WpfMenuItem mNewDatabaseSource;
        
        private WpfMenuItem mNewWebServiceSource;
        
        private WpfMenuItem mNewPluginSource;
        
        private WpfMenuItem mNewEmailSource;
        
        private WpfMenuItem mNewDropboxSource;
        
        private WpfMenuItem mNewSharepointSource;
        
        private WpfMenuItem mNewFolder;
        
        private WpfMenuItem mRename;
        
        private WpfMenuItem mDelete;
        
        private WpfMenuItem mDeploy;
        
        private WpfMenuItem mShowServerVersion;
        
        private WpfMenuItem mShowDependencies;
        
        private WpfMenuItem mDuplicate;
        
        private WpfMenuItem mViewSwagger;
        
        private WpfMenuItem mShowVersionHistory;
        
        private WpfMenuItem mTests;
        
        private WpfMenuItem mViewApisJsonMenuItem;
        
        private WpfMenuItem mNewExchangeSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerContextMenu : WpfMenu
    {
        
        public ExplorerContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem Open
        {
            get
            {
                if ((this.mOpen == null))
                {
                    this.mOpen = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mOpen.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Open";
                    this.mOpen.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpen;
            }
        }
        
        public WpfMenuItem NewWorkflow
        {
            get
            {
                if ((this.mNewWorkflow == null))
                {
                    this.mNewWorkflow = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewWorkflow.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewServiceItem";
                    this.mNewWorkflow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWorkflow;
            }
        }
        
        public WpfMenuItem NewFolder
        {
            get
            {
                if ((this.mNewFolder == null))
                {
                    this.mNewFolder = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewFolder.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewFolderFromItem";
                    this.mNewFolder.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewFolder;
            }
        }
        
        public WpfMenuItem Rename
        {
            get
            {
                if ((this.mRename == null))
                {
                    this.mRename = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mRename.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Rename";
                    this.mRename.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRename;
            }
        }
        
        public WpfMenuItem Delete
        {
            get
            {
                if ((this.mDelete == null))
                {
                    this.mDelete = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDelete.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Delete";
                    this.mDelete.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDelete;
            }
        }
        
        public WpfMenuItem Deploy
        {
            get
            {
                if ((this.mDeploy == null))
                {
                    this.mDeploy = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeploy.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DeployItem";
                    this.mDeploy.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeploy;
            }
        }
        
        public WpfMenuItem ShowServerVersion
        {
            get
            {
                if ((this.mShowServerVersion == null))
                {
                    this.mShowServerVersion = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowServerVersion.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ServerVersionItem";
                    this.mShowServerVersion.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowServerVersion;
            }
        }
        
        public WpfMenuItem ShowDependencies
        {
            get
            {
                if ((this.mShowDependencies == null))
                {
                    this.mShowDependencies = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowDependencies.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Dependencies";
                    this.mShowDependencies.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowDependencies;
            }
        }
        
        public WpfMenuItem Duplicate
        {
            get
            {
                if ((this.mDuplicate == null))
                {
                    this.mDuplicate = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDuplicate.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Duplicate";
                    this.mDuplicate.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDuplicate;
            }
        }
        
        public WpfMenuItem ViewSwagger
        {
            get
            {
                if ((this.mViewSwagger == null))
                {
                    this.mViewSwagger = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mViewSwagger.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ViewSwagger";
                    this.mViewSwagger.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewSwagger;
            }
        }
        
        public WpfMenuItem ShowVersionHistory
        {
            get
            {
                if ((this.mShowVersionHistory == null))
                {
                    this.mShowVersionHistory = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowVersionHistory.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ShowHideVersions";
                    this.mShowVersionHistory.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowVersionHistory;
            }
        }
        
        public WpfMenuItem Tests
        {
            get
            {
                if ((this.mTests == null))
                {
                    this.mTests = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mTests.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Test";
                    this.mTests.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTests;
            }
        }
        
        public WpfMenuItem ViewSwaggerMenuItem
        {
            get
            {
                if ((this.mViewSwaggerMenuItem == null))
                {
                    this.mViewSwaggerMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mViewSwaggerMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ViewSwagger";
                    this.mViewSwaggerMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewSwaggerMenuItem;
            }
        }
        
        public WpfMenuItem DebugBrowserMenuItem
        {
            get
            {
                if ((this.mDebugBrowserMenuItem == null))
                {
                    this.mDebugBrowserMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDebugBrowserMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DebugBrowser";
                    this.mDebugBrowserMenuItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mDebugBrowserMenuItem;
            }
        }
        
        public WpfMenuItem DebugInputsMenuItem
        {
            get
            {
                if ((this.mDebugInputsMenuItem == null))
                {
                    this.mDebugInputsMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDebugInputsMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DebugInputs";
                    this.mDebugInputsMenuItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mDebugInputsMenuItem;
            }
        }
        
        public WpfMenuItem DebugStudioMenuItem
        {
            get
            {
                if ((this.mDebugStudioMenuItem == null))
                {
                    this.mDebugStudioMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDebugStudioMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DebugStudio";
                    this.mDebugStudioMenuItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mDebugStudioMenuItem;
            }
        }
        
        public WpfMenuItem RunAllTestsMenuItem
        {
            get
            {
                if ((this.mRunAllTestsMenuItem == null))
                {
                    this.mRunAllTestsMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mRunAllTestsMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "RunAllTests";
                    this.mRunAllTestsMenuItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mRunAllTestsMenuItem;
            }
        }
        
        public WpfMenuItem NewFolderMenuItem
        {
            get
            {
                if ((this.mNewFolderMenuItem == null))
                {
                    this.mNewFolderMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewFolderMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewFolderFromItem";
                    this.mNewFolderMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewFolderMenuItem;
            }
        }
        
        public WpfMenuItem MakeCurrentVersionMenuItem
        {
            get
            {
                if ((this.mMakeCurrentVersionMenuItem == null))
                {
                    this.mMakeCurrentVersionMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mMakeCurrentVersionMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Rollback";
                    this.mMakeCurrentVersionMenuItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mMakeCurrentVersionMenuItem;
            }
        }
        
        public WpfMenuItem OpenVersionMenuItem
        {
            get
            {
                if ((this.mOpenVersionMenuItem == null))
                {
                    this.mOpenVersionMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mOpenVersionMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "OpenVersion";
                    this.mOpenVersionMenuItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mOpenVersionMenuItem;
            }
        }
        
        public WpfMenuItem ScheduleMenuItem
        {
            get
            {
                if ((this.mScheduleMenuItem == null))
                {
                    this.mScheduleMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mScheduleMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Schedule";
                    this.mScheduleMenuItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mScheduleMenuItem;
            }
        }
        
        public WpfMenuItem ViewApisJsonMenuItem
        {
            get
            {
                if ((this.mViewApisJsonMenuItem == null))
                {
                    this.mViewApisJsonMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mViewApisJsonMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ViewApisJsonItem";
                    this.mViewApisJsonMenuItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mViewApisJsonMenuItem;
            }
        }
        
        public SourcesMenuItem SourcesMenuItem
        {
            get
            {
                if ((this.mSourcesMenuItem == null))
                {
                    this.mSourcesMenuItem = new SourcesMenuItem(this);
                }
                return this.mSourcesMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mOpen;
        
        private WpfMenuItem mNewWorkflow;
        
        private WpfMenuItem mNewFolder;
        
        private WpfMenuItem mRename;
        
        private WpfMenuItem mDelete;
        
        private WpfMenuItem mDeploy;
        
        private WpfMenuItem mShowServerVersion;
        
        private WpfMenuItem mShowDependencies;
        
        private WpfMenuItem mDuplicate;
        
        private WpfMenuItem mViewSwagger;
        
        private WpfMenuItem mShowVersionHistory;
        
        private WpfMenuItem mTests;
        
        private WpfMenuItem mViewSwaggerMenuItem;
        
        private WpfMenuItem mDebugBrowserMenuItem;
        
        private WpfMenuItem mDebugInputsMenuItem;
        
        private WpfMenuItem mDebugStudioMenuItem;
        
        private WpfMenuItem mRunAllTestsMenuItem;
        
        private WpfMenuItem mNewFolderMenuItem;
        
        private WpfMenuItem mMakeCurrentVersionMenuItem;
        
        private WpfMenuItem mOpenVersionMenuItem;
        
        private WpfMenuItem mScheduleMenuItem;
        
        private WpfMenuItem mViewApisJsonMenuItem;
        
        private SourcesMenuItem mSourcesMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesMenuItem : WpfMenuItem
    {
        
        public SourcesMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Sources";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem NewDatabaseSource
        {
            get
            {
                if ((this.mNewDatabaseSource == null))
                {
                    this.mNewDatabaseSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewDatabaseSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewDataBaseSource";
                    this.mNewDatabaseSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewDatabaseSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDatabaseSource;
            }
        }
        
        public WpfMenuItem NewDropboxSource
        {
            get
            {
                if ((this.mNewDropboxSource == null))
                {
                    this.mNewDropboxSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewDropboxSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewDropboxSource";
                    this.mNewDropboxSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewDropboxSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDropboxSource;
            }
        }
        
        public WpfMenuItem NewEmailSource
        {
            get
            {
                if ((this.mNewEmailSource == null))
                {
                    this.mNewEmailSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewEmailSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewEmailSource";
                    this.mNewEmailSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewEmailSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewEmailSource;
            }
        }
        
        public WpfMenuItem NewDotnetPluginSource
        {
            get
            {
                if ((this.mNewDotnetPluginSource == null))
                {
                    this.mNewDotnetPluginSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewDotnetPluginSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewPluginSource";
                    this.mNewDotnetPluginSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewDotnetPluginSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDotnetPluginSource;
            }
        }
        
        public WpfMenuItem NewServerSource
        {
            get
            {
                if ((this.mNewServerSource == null))
                {
                    this.mNewServerSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewServerSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewServerSource";
                    this.mNewServerSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewServerSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewServerSource;
            }
        }
        
        public WpfMenuItem NewSharepointSource
        {
            get
            {
                if ((this.mNewSharepointSource == null))
                {
                    this.mNewSharepointSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewSharepointSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewSharepointSource";
                    this.mNewSharepointSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewSharepointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharepointSource;
            }
        }
        
        public WpfMenuItem NewWebServiceSource
        {
            get
            {
                if ((this.mNewWebServiceSource == null))
                {
                    this.mNewWebServiceSource = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewWebServiceSource.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewWebSource";
                    this.mNewWebServiceSource.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNewWebServiceSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWebServiceSource;
            }
        }
        
        public WpfMenuItem NewCOMPluginSourceMenuItem
        {
            get
            {
                if ((this.mNewCOMPluginSourceMenuItem == null))
                {
                    this.mNewCOMPluginSourceMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewCOMPluginSourceMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewComPluginSource";
                    this.mNewCOMPluginSourceMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mNewCOMPluginSourceMenuItem;
            }
        }
        
        public WpfMenuItem NewExchangeSourceMenuItem
        {
            get
            {
                if ((this.mNewExchangeSourceMenuItem == null))
                {
                    this.mNewExchangeSourceMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewExchangeSourceMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewExchangeSource";
                    this.mNewExchangeSourceMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mNewExchangeSourceMenuItem;
            }
        }
        
        public WpfMenuItem NewRabbitMQSourceMenuItem
        {
            get
            {
                if ((this.mNewRabbitMQSourceMenuItem == null))
                {
                    this.mNewRabbitMQSourceMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewRabbitMQSourceMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewRabbitMqSource";
                    this.mNewRabbitMQSourceMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mNewRabbitMQSourceMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mNewDatabaseSource;
        
        private WpfMenuItem mNewDropboxSource;
        
        private WpfMenuItem mNewEmailSource;
        
        private WpfMenuItem mNewDotnetPluginSource;
        
        private WpfMenuItem mNewServerSource;
        
        private WpfMenuItem mNewSharepointSource;
        
        private WpfMenuItem mNewWebServiceSource;
        
        private WpfMenuItem mNewCOMPluginSourceMenuItem;
        
        private WpfMenuItem mNewExchangeSourceMenuItem;
        
        private WpfMenuItem mNewRabbitMQSourceMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignSurfaceContextMenu : WpfMenu
    {
        
        public DesignSurfaceContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem Cut
        {
            get
            {
                if ((this.mCut == null))
                {
                    this.mCut = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mCut.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "CutMenuItem";
                    this.mCut.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCut;
            }
        }
        
        public WpfMenuItem Paste
        {
            get
            {
                if ((this.mPaste == null))
                {
                    this.mPaste = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mPaste.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "PasteMenuItem";
                    this.mPaste.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPaste;
            }
        }
        
        public WpfMenuItem Copy
        {
            get
            {
                if ((this.mCopy == null))
                {
                    this.mCopy = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mCopy.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "CopyMenuItem";
                    this.mCopy.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCopy;
            }
        }
        
        public WpfMenuItem Delete
        {
            get
            {
                if ((this.mDelete == null))
                {
                    this.mDelete = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDelete.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DeleteMenuItem";
                    this.mDelete.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDelete;
            }
        }
        
        public WpfMenuItem CopyasImage
        {
            get
            {
                if ((this.mCopyasImage == null))
                {
                    this.mCopyasImage = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mCopyasImage.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "CopyAsImageMenuItem";
                    this.mCopyasImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCopyasImage;
            }
        }
        
        public WpfMenuItem SaveasImage
        {
            get
            {
                if ((this.mSaveasImage == null))
                {
                    this.mSaveasImage = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mSaveasImage.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "SaveAsImageMenuItem";
                    this.mSaveasImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSaveasImage;
            }
        }
        
        public WpfMenuItem SetasStartNode
        {
            get
            {
                if ((this.mSetasStartNode == null))
                {
                    this.mSetasStartNode = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mSetasStartNode.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "SetAsStartNodeMenuItem";
                    this.mSetasStartNode.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSetasStartNode;
            }
        }
        
        public WpfMenuItem ShowLargeView
        {
            get
            {
                if ((this.mShowLargeView == null))
                {
                    this.mShowLargeView = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowLargeView.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "UI_ShowLargeViewMenuItem_AutoID";
                    this.mShowLargeView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowLargeView;
            }
        }
        
        public WpfMenuItem InsertRow
        {
            get
            {
                if ((this.mInsertRow == null))
                {
                    this.mInsertRow = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mInsertRow.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "UI_InsertRowMenuItem_AutoID";
                    this.mInsertRow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInsertRow;
            }
        }
        
        public WpfMenuItem DeleteRow
        {
            get
            {
                if ((this.mDeleteRow == null))
                {
                    this.mDeleteRow = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeleteRow.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "UI_DeleteRowMenuItem_AutoID";
                    this.mDeleteRow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteRow;
            }
        }
        
        public WpfMenuItem InsertRowMenuItem
        {
            get
            {
                if ((this.mInsertRowMenuItem == null))
                {
                    this.mInsertRowMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mInsertRowMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "UI_InsertRowMenuItem_AutoID";
                    this.mInsertRowMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInsertRowMenuItem;
            }
        }
        
        public WpfMenuItem DeleteRowMenuItem
        {
            get
            {
                if ((this.mDeleteRowMenuItem == null))
                {
                    this.mDeleteRowMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeleteRowMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "UI_DeleteRowMenuItem_AutoID";
                    this.mDeleteRowMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteRowMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mCut;
        
        private WpfMenuItem mPaste;
        
        private WpfMenuItem mCopy;
        
        private WpfMenuItem mDelete;
        
        private WpfMenuItem mCopyasImage;
        
        private WpfMenuItem mSaveasImage;
        
        private WpfMenuItem mSetasStartNode;
        
        private WpfMenuItem mShowLargeView;
        
        private WpfMenuItem mInsertRow;
        
        private WpfMenuItem mDeleteRow;
        
        private WpfMenuItem mInsertRowMenuItem;
        
        private WpfMenuItem mDeleteRowMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExitFullScreenF11Text : WpfText
    {
        
        public ExitFullScreenF11Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Exit Full Screen (F11)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ExitFullScreenF11Hyperlink
        {
            get
            {
                if ((this.mExitFullScreenF11Hyperlink == null))
                {
                    this.mExitFullScreenF11Hyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mExitFullScreenF11Hyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "Exit Full Screen (F11)";
                    this.mExitFullScreenF11Hyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExitFullScreenF11Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mExitFullScreenF11Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SideMenuBar : WpfCustom
    {
        
        public SideMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MenuView";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DatabaseSourceButton
        {
            get
            {
                if ((this.mDatabaseSourceButton == null))
                {
                    this.mDatabaseSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDatabaseSourceButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Create a new database source", PropertyExpressionOperator.Contains));
                    this.mDatabaseSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDatabaseSourceButton;
            }
        }
        
        public WpfButton PluginSourceButton
        {
            get
            {
                if ((this.mPluginSourceButton == null))
                {
                    this.mPluginSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPluginSourceButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Create a new plugin source", PropertyExpressionOperator.Contains));
                    this.mPluginSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPluginSourceButton;
            }
        }
        
        public WpfButton WebSourceButton
        {
            get
            {
                if ((this.mWebSourceButton == null))
                {
                    this.mWebSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mWebSourceButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Create a new web source", PropertyExpressionOperator.Contains));
                    this.mWebSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebSourceButton;
            }
        }
        
        public WpfButton NewVersionButton
        {
            get
            {
                if ((this.mNewVersionButton == null))
                {
                    this.mNewVersionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewVersionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "VersionButton";
                    this.mNewVersionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewVersionButton;
            }
        }
        
        public WpfButton ConfigureSettingsButton
        {
            get
            {
                if ((this.mConfigureSettingsButton == null))
                {
                    this.mConfigureSettingsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mConfigureSettingsButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Configure settings", PropertyExpressionOperator.Contains));
                    this.mConfigureSettingsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConfigureSettingsButton;
            }
        }
        
        public WpfButton RunAndDebugButton
        {
            get
            {
                if ((this.mRunAndDebugButton == null))
                {
                    this.mRunAndDebugButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunAndDebugButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run and debug your workflow service", PropertyExpressionOperator.Contains));
                    this.mRunAndDebugButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunAndDebugButton;
            }
        }
        
        public WpfButton SchedulerButton
        {
            get
            {
                if ((this.mSchedulerButton == null))
                {
                    this.mSchedulerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSchedulerButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Schedule a service to run", PropertyExpressionOperator.Contains));
                    this.mSchedulerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSchedulerButton;
            }
        }
        
        public WpfButton DeployButton
        {
            get
            {
                if ((this.mDeployButton == null))
                {
                    this.mDeployButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeployButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Move resources between Warewolf servers", PropertyExpressionOperator.Contains));
                    this.mDeployButton.WindowTitles.Add("Warewolf");
                    this.mDeployButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeployButton;
            }
        }
        
        public WpfButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSaveButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Save this tab", PropertyExpressionOperator.Contains));
                    this.mSaveButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        
        public NewWorkflowButton NewWorkflowButton
        {
            get
            {
                if ((this.mNewWorkflowButton == null))
                {
                    this.mNewWorkflowButton = new NewWorkflowButton(this);
                }
                return this.mNewWorkflowButton;
            }
        }
        
        public WpfButton NewWebServiceButton
        {
            get
            {
                if ((this.mNewWebServiceButton == null))
                {
                    this.mNewWebServiceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewWebServiceButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Create a new web service", PropertyExpressionOperator.Contains));
                    this.mNewWebServiceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWebServiceButton;
            }
        }
        
        public WpfButton KnowledgeBaseButton
        {
            get
            {
                if ((this.mKnowledgeBaseButton == null))
                {
                    this.mKnowledgeBaseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mKnowledgeBaseButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Knowledge Base", PropertyExpressionOperator.Contains));
                    this.mKnowledgeBaseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKnowledgeBaseButton;
            }
        }
        
        public WpfButton LockMenuButton
        {
            get
            {
                if ((this.mLockMenuButton == null))
                {
                    this.mLockMenuButton = new WpfButton(this);
                    #region Search Criteria
                    this.mLockMenuButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Lock / unlock the menu", PropertyExpressionOperator.Contains));
                    this.mLockMenuButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLockMenuButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDatabaseSourceButton;
        
        private WpfButton mPluginSourceButton;
        
        private WpfButton mWebSourceButton;
        
        private WpfButton mNewVersionButton;
        
        private WpfButton mConfigureSettingsButton;
        
        private WpfButton mRunAndDebugButton;
        
        private WpfButton mSchedulerButton;
        
        private WpfButton mDeployButton;
        
        private WpfButton mSaveButton;
        
        private NewWorkflowButton mNewWorkflowButton;
        
        private WpfButton mNewWebServiceButton;
        
        private WpfButton mKnowledgeBaseButton;
        
        private WpfButton mLockMenuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewWorkflowButton : WpfButton
    {
        
        public NewWorkflowButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Create a new service", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = " ";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneLeft SplitPaneLeft
        {
            get
            {
                if ((this.mSplitPaneLeft == null))
                {
                    this.mSplitPaneLeft = new SplitPaneLeft(this);
                }
                return this.mSplitPaneLeft;
            }
        }
        
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        
        public WpfButton NewWebServiceButton
        {
            get
            {
                if ((this.mNewWebServiceButton == null))
                {
                    this.mNewWebServiceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewWebServiceButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Create a new web service", PropertyExpressionOperator.Contains));
                    this.mNewWebServiceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWebServiceButton;
            }
        }
        
        public WpfButton KnowledgeBaseButton
        {
            get
            {
                if ((this.mKnowledgeBaseButton == null))
                {
                    this.mKnowledgeBaseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mKnowledgeBaseButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Knowledge Base", PropertyExpressionOperator.Contains));
                    this.mKnowledgeBaseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKnowledgeBaseButton;
            }
        }
        
        public WpfButton LockMenuButton
        {
            get
            {
                if ((this.mLockMenuButton == null))
                {
                    this.mLockMenuButton = new WpfButton(this);
                    #region Search Criteria
                    this.mLockMenuButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Lock / unlock the menu", PropertyExpressionOperator.Contains));
                    this.mLockMenuButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLockMenuButton;
            }
        }
        
        public WpfTabList UnpinnedTabAreaTop
        {
            get
            {
                if ((this.mUnpinnedTabAreaTop == null))
                {
                    this.mUnpinnedTabAreaTop = new WpfTabList(this);
                    #region Search Criteria
                    this.mUnpinnedTabAreaTop.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "PART_UnpinnedTabAreaTop";
                    this.mUnpinnedTabAreaTop.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnpinnedTabAreaTop;
            }
        }
        
        public WpfTabList UnpinnedTabAreaBottom
        {
            get
            {
                if ((this.mUnpinnedTabAreaBottom == null))
                {
                    this.mUnpinnedTabAreaBottom = new WpfTabList(this);
                    #region Search Criteria
                    this.mUnpinnedTabAreaBottom.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "PART_UnpinnedTabAreaBottom";
                    this.mUnpinnedTabAreaBottom.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnpinnedTabAreaBottom;
            }
        }
        
        public WpfTabList UnpinnedTabAreaLeft
        {
            get
            {
                if ((this.mUnpinnedTabAreaLeft == null))
                {
                    this.mUnpinnedTabAreaLeft = new WpfTabList(this);
                    #region Search Criteria
                    this.mUnpinnedTabAreaLeft.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "PART_UnpinnedTabAreaLeft";
                    this.mUnpinnedTabAreaLeft.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnpinnedTabAreaLeft;
            }
        }
        
        public WpfTabList UnpinnedTabAreaRight
        {
            get
            {
                if ((this.mUnpinnedTabAreaRight == null))
                {
                    this.mUnpinnedTabAreaRight = new WpfTabList(this);
                    #region Search Criteria
                    this.mUnpinnedTabAreaRight.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "PART_UnpinnedTabAreaRight";
                    this.mUnpinnedTabAreaRight.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnpinnedTabAreaRight;
            }
        }
        
        public TabManSplitPane1 TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane1(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneLeft mSplitPaneLeft;
        
        private SplitPaneMiddle mSplitPaneMiddle;
        
        private WpfButton mNewWebServiceButton;
        
        private WpfButton mKnowledgeBaseButton;
        
        private WpfButton mLockMenuButton;
        
        private WpfTabList mUnpinnedTabAreaTop;
        
        private WpfTabList mUnpinnedTabAreaBottom;
        
        private WpfTabList mUnpinnedTabAreaLeft;
        
        private WpfTabList mUnpinnedTabAreaRight;
        
        private TabManSplitPane1 mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneLeft : WpfCustom
    {
        
        public SplitPaneLeft(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Explorer Explorer
        {
            get
            {
                if ((this.mExplorer == null))
                {
                    this.mExplorer = new Explorer(this);
                }
                return this.mExplorer;
            }
        }
        
        public WpfControl ExplorerToolboxSplitter
        {
            get
            {
                if ((this.mExplorerToolboxSplitter == null))
                {
                    this.mExplorerToolboxSplitter = new WpfControl(this);
                    #region Search Criteria
                    this.mExplorerToolboxSplitter.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mExplorerToolboxSplitter.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mExplorerToolboxSplitter.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExplorerToolboxSplitter;
            }
        }
        
        public ToolBox ToolBox
        {
            get
            {
                if ((this.mToolBox == null))
                {
                    this.mToolBox = new ToolBox(this);
                }
                return this.mToolBox;
            }
        }
        
        public WpfControl ToolboxHelpSplitter
        {
            get
            {
                if ((this.mToolboxHelpSplitter == null))
                {
                    this.mToolboxHelpSplitter = new WpfControl(this);
                    #region Search Criteria
                    this.mToolboxHelpSplitter.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mToolboxHelpSplitter.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mToolboxHelpSplitter.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mToolboxHelpSplitter.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToolboxHelpSplitter;
            }
        }
        
        public Help Help
        {
            get
            {
                if ((this.mHelp == null))
                {
                    this.mHelp = new Help(this);
                }
                return this.mHelp;
            }
        }
        #endregion
        
        #region Fields
        private Explorer mExplorer;
        
        private WpfControl mExplorerToolboxSplitter;
        
        private ToolBox mToolBox;
        
        private WpfControl mToolboxHelpSplitter;
        
        private Help mHelp;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Explorer : WpfCustom
    {
        
        public Explorer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExplorerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_ExplorerControl_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ExplorerUnpinBtn
        {
            get
            {
                if ((this.mExplorerUnpinBtn == null))
                {
                    this.mExplorerUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mExplorerUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mExplorerUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExplorerUnpinBtn;
            }
        }
        
        public ConnectControl ConnectControl
        {
            get
            {
                if ((this.mConnectControl == null))
                {
                    this.mConnectControl = new ConnectControl(this);
                }
                return this.mConnectControl;
            }
        }
        
        public SearchTextBox SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new SearchTextBox(this);
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton ExplorerRefreshButton
        {
            get
            {
                if ((this.mExplorerRefreshButton == null))
                {
                    this.mExplorerRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExplorerRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExplorerRefreshButton;
            }
        }
        
        public ExplorerTree ExplorerTree
        {
            get
            {
                if ((this.mExplorerTree == null))
                {
                    this.mExplorerTree = new ExplorerTree(this);
                }
                return this.mExplorerTree;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mExplorerUnpinBtn;
        
        private ConnectControl mConnectControl;
        
        private SearchTextBox mSearchTextBox;
        
        private WpfButton mExplorerRefreshButton;
        
        private ExplorerTree mExplorerTree;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConnectControl : WpfCustom
    {
        
        public ConnectControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ConnectControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerComboBox ServerComboBox
        {
            get
            {
                if ((this.mServerComboBox == null))
                {
                    this.mServerComboBox = new ServerComboBox(this);
                }
                return this.mServerComboBox;
            }
        }
        
        public WpfButton EditServerButton
        {
            get
            {
                if ((this.mEditServerButton == null))
                {
                    this.mEditServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_ServerEditBtn_AutoID";
                    this.mEditServerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditServerButton;
            }
        }
        
        public WpfButton ConnectServerButton
        {
            get
            {
                if ((this.mConnectServerButton == null))
                {
                    this.mConnectServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mConnectServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_ConnectServerBtn_AutoID";
                    this.mConnectServerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectServerButton;
            }
        }
        #endregion
        
        #region Fields
        private ServerComboBox mServerComboBox;
        
        private WpfButton mEditServerButton;
        
        private WpfButton mConnectServerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerComboBox : WpfCustom
    {
        
        public ServerComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TheServerComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToggleButton
        {
            get
            {
                if ((this.mToggleButton == null))
                {
                    this.mToggleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mToggleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToggleButton;
            }
        }
        
        public WpfEdit TextBox
        {
            get
            {
                if ((this.mTextBox == null))
                {
                    this.mTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TextBoxPresenter";
                    this.mTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextBox;
            }
        }
        
        public WpfText SelectedItemAsRemoteConnectionIntegration
        {
            get
            {
                if ((this.mSelectedItemAsRemoteConnectionIntegration == null))
                {
                    this.mSelectedItemAsRemoteConnectionIntegration = new WpfText(this);
                    #region Search Criteria
                    this.mSelectedItemAsRemoteConnectionIntegration.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration";
                    this.mSelectedItemAsRemoteConnectionIntegration.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectedItemAsRemoteConnectionIntegration;
            }
        }
        
        public WpfText SelectedItemAsRemoteConnectionIntegrationConnected
        {
            get
            {
                if ((this.mSelectedItemAsRemoteConnectionIntegrationConnected == null))
                {
                    this.mSelectedItemAsRemoteConnectionIntegrationConnected = new WpfText(this);
                    #region Search Criteria
                    this.mSelectedItemAsRemoteConnectionIntegrationConnected.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration (Connected)";
                    this.mSelectedItemAsRemoteConnectionIntegrationConnected.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectedItemAsRemoteConnectionIntegrationConnected;
            }
        }
        
        public WpfText SelectedItemAsLocalhost
        {
            get
            {
                if ((this.mSelectedItemAsLocalhost == null))
                {
                    this.mSelectedItemAsLocalhost = new WpfText(this);
                    #region Search Criteria
                    this.mSelectedItemAsLocalhost.SearchProperties[WpfText.PropertyNames.Name] = "localhost";
                    this.mSelectedItemAsLocalhost.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectedItemAsLocalhost;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToggleButton;
        
        private WpfEdit mTextBox;
        
        private WpfText mSelectedItemAsRemoteConnectionIntegration;
        
        private WpfText mSelectedItemAsRemoteConnectionIntegrationConnected;
        
        private WpfText mSelectedItemAsLocalhost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextBox : WpfEdit
    {
        
        public SearchTextBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfButton ClearFilterButton
        {
            get
            {
                if ((this.mClearFilterButton == null))
                {
                    this.mClearFilterButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearFilterButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearFilterButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearFilterButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mFilterText;
        
        private WpfButton mClearFilterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerTree : WpfTree
    {
        
        public ExplorerTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public localhost localhost
        {
            get
            {
                if ((this.mlocalhost == null))
                {
                    this.mlocalhost = new localhost(this);
                }
                return this.mlocalhost;
            }
        }
        
        public FirstRemoteServer FirstRemoteServer
        {
            get
            {
                if ((this.mFirstRemoteServer == null))
                {
                    this.mFirstRemoteServer = new FirstRemoteServer(this);
                }
                return this.mFirstRemoteServer;
            }
        }
        #endregion
        
        #region Fields
        private localhost mlocalhost;
        
        private FirstRemoteServer mFirstRemoteServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class localhost : WpfTreeItem
    {
        
        public localhost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public Checkbox Checkbox
        {
            get
            {
                if ((this.mCheckbox == null))
                {
                    this.mCheckbox = new Checkbox(this);
                }
                return this.mCheckbox;
            }
        }
        
        public FirstItem FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem(this);
                }
                return this.mFirstItem;
            }
        }
        
        public SecondItem SecondItem
        {
            get
            {
                if ((this.mSecondItem == null))
                {
                    this.mSecondItem = new SecondItem(this);
                }
                return this.mSecondItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        
        private Checkbox mCheckbox;
        
        private FirstItem mFirstItem;
        
        private SecondItem mSecondItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Checkbox : WpfCheckBox
    {
        
        public Checkbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Checkbox";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton IconButton
        {
            get
            {
                if ((this.mIconButton == null))
                {
                    this.mIconButton = new WpfButton(this);
                    #region Search Criteria
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mIconButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIconButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mIconButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem : WpfTreeItem
    {
        
        public FirstItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public FirstSubItem FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem(this);
                }
                return this.mFirstSubItem;
            }
        }
        
        public SecondSubItem1 SecondSubItem
        {
            get
            {
                if ((this.mSecondSubItem == null))
                {
                    this.mSecondSubItem = new SecondSubItem1(this);
                }
                return this.mSecondSubItem;
            }
        }
        
        public ThirdSubItem1 ThirdSubItem
        {
            get
            {
                if ((this.mThirdSubItem == null))
                {
                    this.mThirdSubItem = new ThirdSubItem1(this);
                }
                return this.mThirdSubItem;
            }
        }
        
        public WpfCheckBox ExpansionToggleButton
        {
            get
            {
                if ((this.mExpansionToggleButton == null))
                {
                    this.mExpansionToggleButton = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExpansionToggleButton.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ExpansionIndicator";
                    this.mExpansionToggleButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpansionToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpansionToggleButton;
            }
        }
        
        public WpfText FolderCount
        {
            get
            {
                if ((this.mFolderCount == null))
                {
                    this.mFolderCount = new WpfText(this);
                    #region Search Criteria
                    this.mFolderCount.SearchProperties[WpfText.PropertyNames.Name] = "( 277 )";
                    this.mFolderCount.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFolderCount.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mFolderCount;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage mResourceImageImage;
        
        private WpfButton mExecuteIcon;
        
        private WpfEdit mItemEdit;
        
        private FirstSubItem mFirstSubItem;
        
        private SecondSubItem1 mSecondSubItem;
        
        private ThirdSubItem1 mThirdSubItem;
        
        private WpfCheckBox mExpansionToggleButton;
        
        private WpfText mFolderCount;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage : WpfImage
    {
        
        public ResourceImageImage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem : WpfTreeItem
    {
        
        public FirstSubItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage1 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage1(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        
        public FirstItem1 FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem1(this);
                }
                return this.mFirstItem;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage1 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        
        private FirstItem1 mFirstItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage1 : WpfImage
    {
        
        public ResourceImageImage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem1 : WpfTreeItem
    {
        
        public FirstItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage2 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage2(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        
        public FirstSubItem1 FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem1(this);
                }
                return this.mFirstSubItem;
            }
        }
        
        public SecondSubItem SecondSubItem
        {
            get
            {
                if ((this.mSecondSubItem == null))
                {
                    this.mSecondSubItem = new SecondSubItem(this);
                }
                return this.mSecondSubItem;
            }
        }
        
        public ThirdSubItem ThirdSubItem
        {
            get
            {
                if ((this.mThirdSubItem == null))
                {
                    this.mThirdSubItem = new ThirdSubItem(this);
                }
                return this.mThirdSubItem;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage2 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        
        private FirstSubItem1 mFirstSubItem;
        
        private SecondSubItem mSecondSubItem;
        
        private ThirdSubItem mThirdSubItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage2 : WpfImage
    {
        
        public ResourceImageImage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem1 : WpfTreeItem
    {
        
        public FirstSubItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage3 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage3(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage3 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage3 : WpfImage
    {
        
        public ResourceImageImage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecondSubItem : WpfTreeItem
    {
        
        public SecondSubItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage4 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage4(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage4 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage4 : WpfImage
    {
        
        public ResourceImageImage4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ThirdSubItem : WpfTreeItem
    {
        
        public ThirdSubItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage5 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage5(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage5 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage5 : WpfImage
    {
        
        public ResourceImageImage5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecondSubItem1 : WpfTreeItem
    {
        
        public SecondSubItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage6 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage6(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage6 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage6 : WpfImage
    {
        
        public ResourceImageImage6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ThirdSubItem1 : WpfTreeItem
    {
        
        public ThirdSubItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage7 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage7(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage7 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage7 : WpfImage
    {
        
        public ResourceImageImage7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecondItem : WpfTreeItem
    {
        
        public SecondItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FirstSubItem2 FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem2(this);
                }
                return this.mFirstSubItem;
            }
        }
        #endregion
        
        #region Fields
        private FirstSubItem2 mFirstSubItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem2 : WpfTreeItem
    {
        
        public FirstSubItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage8 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage8(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage8 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage8 : WpfImage
    {
        
        public ResourceImageImage8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstRemoteServer : WpfTreeItem
    {
        
        public FirstRemoteServer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public Checkbox1 Checkbox
        {
            get
            {
                if ((this.mCheckbox == null))
                {
                    this.mCheckbox = new Checkbox1(this);
                }
                return this.mCheckbox;
            }
        }
        
        public FirstItem2 FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem2(this);
                }
                return this.mFirstItem;
            }
        }
        
        public WpfTreeItem SecondItem
        {
            get
            {
                if ((this.mSecondItem == null))
                {
                    this.mSecondItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mSecondItem.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mSecondItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSecondItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        
        private Checkbox1 mCheckbox;
        
        private FirstItem2 mFirstItem;
        
        private WpfTreeItem mSecondItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Checkbox1 : WpfCheckBox
    {
        
        public Checkbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Checkbox";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton IconButton
        {
            get
            {
                if ((this.mIconButton == null))
                {
                    this.mIconButton = new WpfButton(this);
                    #region Search Criteria
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mIconButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIconButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mIconButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem2 : WpfTreeItem
    {
        
        public FirstItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mExecuteIcon;
        
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToolBox : WpfCustom
    {
        
        public ToolBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ToolboxView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_ToolboxControl_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToolUnpinBtn
        {
            get
            {
                if ((this.mToolUnpinBtn == null))
                {
                    this.mToolUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mToolUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mToolUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToolUnpinBtn;
            }
        }
        
        public SearchTextBox1 SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new SearchTextBox1(this);
                }
                return this.mSearchTextBox;
            }
        }
        
        public ToolListBox ToolListBox
        {
            get
            {
                if ((this.mToolListBox == null))
                {
                    this.mToolListBox = new ToolListBox(this);
                }
                return this.mToolListBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToolUnpinBtn;
        
        private SearchTextBox1 mSearchTextBox;
        
        private ToolListBox mToolListBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextBox1 : WpfEdit
    {
        
        public SearchTextBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ClearFilterButton
        {
            get
            {
                if ((this.mClearFilterButton == null))
                {
                    this.mClearFilterButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearFilterButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearFilterButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearFilterButton;
            }
        }
        
        public WpfText FloatingText
        {
            get
            {
                if ((this.mFloatingText == null))
                {
                    this.mFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mFloatingText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mClearFilterButton;
        
        private WpfText mFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToolListBox : WpfList
    {
        
        public ToolListBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "ToolListBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FlowTools FlowTools
        {
            get
            {
                if ((this.mFlowTools == null))
                {
                    this.mFlowTools = new FlowTools(this);
                }
                return this.mFlowTools;
            }
        }
        
        public DataTools DataTools
        {
            get
            {
                if ((this.mDataTools == null))
                {
                    this.mDataTools = new DataTools(this);
                }
                return this.mDataTools;
            }
        }
        
        public Database Database
        {
            get
            {
                if ((this.mDatabase == null))
                {
                    this.mDatabase = new Database(this);
                }
                return this.mDatabase;
            }
        }
        
        public Email Email
        {
            get
            {
                if ((this.mEmail == null))
                {
                    this.mEmail = new Email(this);
                }
                return this.mEmail;
            }
        }
        
        public FileAndFTP FileAndFTP
        {
            get
            {
                if ((this.mFileAndFTP == null))
                {
                    this.mFileAndFTP = new FileAndFTP(this);
                }
                return this.mFileAndFTP;
            }
        }
        
        public HTTPWebMethods HTTPWebMethods
        {
            get
            {
                if ((this.mHTTPWebMethods == null))
                {
                    this.mHTTPWebMethods = new HTTPWebMethods(this);
                }
                return this.mHTTPWebMethods;
            }
        }
        
        public LoopTools LoopTools
        {
            get
            {
                if ((this.mLoopTools == null))
                {
                    this.mLoopTools = new LoopTools(this);
                }
                return this.mLoopTools;
            }
        }
        
        public RecordsetTools RecordsetTools
        {
            get
            {
                if ((this.mRecordsetTools == null))
                {
                    this.mRecordsetTools = new RecordsetTools(this);
                }
                return this.mRecordsetTools;
            }
        }
        
        public ResourceTools ResourceTools
        {
            get
            {
                if ((this.mResourceTools == null))
                {
                    this.mResourceTools = new ResourceTools(this);
                }
                return this.mResourceTools;
            }
        }
        
        public ScriptingTools ScriptingTools
        {
            get
            {
                if ((this.mScriptingTools == null))
                {
                    this.mScriptingTools = new ScriptingTools(this);
                }
                return this.mScriptingTools;
            }
        }
        
        public SharepointTools SharepointTools
        {
            get
            {
                if ((this.mSharepointTools == null))
                {
                    this.mSharepointTools = new SharepointTools(this);
                }
                return this.mSharepointTools;
            }
        }
        
        public StorageDropbox StorageDropbox
        {
            get
            {
                if ((this.mStorageDropbox == null))
                {
                    this.mStorageDropbox = new StorageDropbox(this);
                }
                return this.mStorageDropbox;
            }
        }
        
        public UtilityTools UtilityTools
        {
            get
            {
                if ((this.mUtilityTools == null))
                {
                    this.mUtilityTools = new UtilityTools(this);
                }
                return this.mUtilityTools;
            }
        }
        #endregion
        
        #region Fields
        private FlowTools mFlowTools;
        
        private DataTools mDataTools;
        
        private Database mDatabase;
        
        private Email mEmail;
        
        private FileAndFTP mFileAndFTP;
        
        private HTTPWebMethods mHTTPWebMethods;
        
        private LoopTools mLoopTools;
        
        private RecordsetTools mRecordsetTools;
        
        private ResourceTools mResourceTools;
        
        private ScriptingTools mScriptingTools;
        
        private SharepointTools mSharepointTools;
        
        private StorageDropbox mStorageDropbox;
        
        private UtilityTools mUtilityTools;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FlowTools : WpfGroup
    {
        
        public FlowTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Control Flow";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Decision Decision
        {
            get
            {
                if ((this.mDecision == null))
                {
                    this.mDecision = new Decision(this);
                }
                return this.mDecision;
            }
        }
        
        public Switch Switch
        {
            get
            {
                if ((this.mSwitch == null))
                {
                    this.mSwitch = new Switch(this);
                }
                return this.mSwitch;
            }
        }
        
        public Sequence Sequence
        {
            get
            {
                if ((this.mSequence == null))
                {
                    this.mSequence = new Sequence(this);
                }
                return this.mSequence;
            }
        }
        #endregion
        
        #region Fields
        private Decision mDecision;
        
        private Switch mSwitch;
        
        private Sequence mSequence;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Decision : WpfListItem
    {
        
        public Decision(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Decision";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DecisionImage
        {
            get
            {
                if ((this.mDecisionImage == null))
                {
                    this.mDecisionImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDecisionImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Decision";
                    this.mDecisionImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDecisionImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDecisionImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Switch : WpfListItem
    {
        
        public Switch(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Switch";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SwitchImage
        {
            get
            {
                if ((this.mSwitchImage == null))
                {
                    this.mSwitchImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSwitchImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Switch";
                    this.mSwitchImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSwitchImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSwitchImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Sequence : WpfListItem
    {
        
        public Sequence(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Sequence";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SequenceImage
        {
            get
            {
                if ((this.mSequenceImage == null))
                {
                    this.mSequenceImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSequenceImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Sequence";
                    this.mSequenceImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSequenceImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSequenceImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataTools : WpfGroup
    {
        
        public DataTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Data";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignObject AssignObject
        {
            get
            {
                if ((this.mAssignObject == null))
                {
                    this.mAssignObject = new AssignObject(this);
                }
                return this.mAssignObject;
            }
        }
        
        public MultiAssign MultiAssign
        {
            get
            {
                if ((this.mMultiAssign == null))
                {
                    this.mMultiAssign = new MultiAssign(this);
                }
                return this.mMultiAssign;
            }
        }
        
        public DataMerge DataMerge
        {
            get
            {
                if ((this.mDataMerge == null))
                {
                    this.mDataMerge = new DataMerge(this);
                }
                return this.mDataMerge;
            }
        }
        
        public BaseConvert BaseConvert
        {
            get
            {
                if ((this.mBaseConvert == null))
                {
                    this.mBaseConvert = new BaseConvert(this);
                }
                return this.mBaseConvert;
            }
        }
        
        public CaseConvert CaseConvert
        {
            get
            {
                if ((this.mCaseConvert == null))
                {
                    this.mCaseConvert = new CaseConvert(this);
                }
                return this.mCaseConvert;
            }
        }
        
        public DataSplit DataSplit
        {
            get
            {
                if ((this.mDataSplit == null))
                {
                    this.mDataSplit = new DataSplit(this);
                }
                return this.mDataSplit;
            }
        }
        
        public FindIndex FindIndex
        {
            get
            {
                if ((this.mFindIndex == null))
                {
                    this.mFindIndex = new FindIndex(this);
                }
                return this.mFindIndex;
            }
        }
        
        public Replace Replace
        {
            get
            {
                if ((this.mReplace == null))
                {
                    this.mReplace = new Replace(this);
                }
                return this.mReplace;
            }
        }
        #endregion
        
        #region Fields
        private AssignObject mAssignObject;
        
        private MultiAssign mMultiAssign;
        
        private DataMerge mDataMerge;
        
        private BaseConvert mBaseConvert;
        
        private CaseConvert mCaseConvert;
        
        private DataSplit mDataSplit;
        
        private FindIndex mFindIndex;
        
        private Replace mReplace;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignObject : WpfListItem
    {
        
        public AssignObject(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Assign Object";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage AssignImage
        {
            get
            {
                if ((this.mAssignImage == null))
                {
                    this.mAssignImage = new WpfImage(this);
                    #region Search Criteria
                    this.mAssignImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Assign";
                    this.mAssignImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssignImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mAssignImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MultiAssign : WpfListItem
    {
        
        public MultiAssign(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Assign";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage AssignImage
        {
            get
            {
                if ((this.mAssignImage == null))
                {
                    this.mAssignImage = new WpfImage(this);
                    #region Search Criteria
                    this.mAssignImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Assign";
                    this.mAssignImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssignImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mAssignImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataMerge : WpfListItem
    {
        
        public DataMerge(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Data Merge";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DataMergeImage
        {
            get
            {
                if ((this.mDataMergeImage == null))
                {
                    this.mDataMergeImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDataMergeImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Data Merge";
                    this.mDataMergeImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataMergeImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDataMergeImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BaseConvert : WpfListItem
    {
        
        public BaseConvert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Base Convert";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage BaseConvertImage
        {
            get
            {
                if ((this.mBaseConvertImage == null))
                {
                    this.mBaseConvertImage = new WpfImage(this);
                    #region Search Criteria
                    this.mBaseConvertImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Base Convert";
                    this.mBaseConvertImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBaseConvertImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mBaseConvertImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CaseConvert : WpfListItem
    {
        
        public CaseConvert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Case Convert";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CaseConvertImage
        {
            get
            {
                if ((this.mCaseConvertImage == null))
                {
                    this.mCaseConvertImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCaseConvertImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Case Convert";
                    this.mCaseConvertImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCaseConvertImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCaseConvertImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataSplit : WpfListItem
    {
        
        public DataSplit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Data Split";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DataSplitImage
        {
            get
            {
                if ((this.mDataSplitImage == null))
                {
                    this.mDataSplitImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDataSplitImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Data Split";
                    this.mDataSplitImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataSplitImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDataSplitImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindIndex : WpfListItem
    {
        
        public FindIndex(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Find Index";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage FindIndexImage
        {
            get
            {
                if ((this.mFindIndexImage == null))
                {
                    this.mFindIndexImage = new WpfImage(this);
                    #region Search Criteria
                    this.mFindIndexImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Find Index";
                    this.mFindIndexImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFindIndexImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mFindIndexImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Replace : WpfListItem
    {
        
        public Replace(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Replace";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ReplaceImage
        {
            get
            {
                if ((this.mReplaceImage == null))
                {
                    this.mReplaceImage = new WpfImage(this);
                    #region Search Criteria
                    this.mReplaceImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Replace";
                    this.mReplaceImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mReplaceImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Database : WpfGroup
    {
        
        public Database(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Database";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Postgre
        {
            get
            {
                if ((this.mPostgre == null))
                {
                    this.mPostgre = new WpfListItem(this);
                    #region Search Criteria
                    this.mPostgre.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
                    this.mPostgre.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "PostgreSQL";
                    this.mPostgre.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPostgre;
            }
        }
        
        public WpfListItem Oracle
        {
            get
            {
                if ((this.mOracle == null))
                {
                    this.mOracle = new WpfListItem(this);
                    #region Search Criteria
                    this.mOracle.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
                    this.mOracle.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Oracle";
                    this.mOracle.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOracle;
            }
        }
        
        public WpfListItem ODBC
        {
            get
            {
                if ((this.mODBC == null))
                {
                    this.mODBC = new WpfListItem(this);
                    #region Search Criteria
                    this.mODBC.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
                    this.mODBC.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "ODBC";
                    this.mODBC.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mODBC;
            }
        }
        
        public MySQL MySQL
        {
            get
            {
                if ((this.mMySQL == null))
                {
                    this.mMySQL = new MySQL(this);
                }
                return this.mMySQL;
            }
        }
        
        public SQLBulkInsert SQLBulkInsert
        {
            get
            {
                if ((this.mSQLBulkInsert == null))
                {
                    this.mSQLBulkInsert = new SQLBulkInsert(this);
                }
                return this.mSQLBulkInsert;
            }
        }
        
        public SQLServer SQLServer
        {
            get
            {
                if ((this.mSQLServer == null))
                {
                    this.mSQLServer = new SQLServer(this);
                }
                return this.mSQLServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mPostgre;
        
        private WpfListItem mOracle;
        
        private WpfListItem mODBC;
        
        private MySQL mMySQL;
        
        private SQLBulkInsert mSQLBulkInsert;
        
        private SQLServer mSQLServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MySQL : WpfListItem
    {
        
        public MySQL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "MySQL";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage MySQLImage
        {
            get
            {
                if ((this.mMySQLImage == null))
                {
                    this.mMySQLImage = new WpfImage(this);
                    #region Search Criteria
                    this.mMySQLImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "MySQL";
                    this.mMySQLImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMySQLImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mMySQLImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SQLBulkInsert : WpfListItem
    {
        
        public SQLBulkInsert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SQL Bulk Insert";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SQLBulkInsertImage
        {
            get
            {
                if ((this.mSQLBulkInsertImage == null))
                {
                    this.mSQLBulkInsertImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSQLBulkInsertImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "SQL Bulk Insert";
                    this.mSQLBulkInsertImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSQLBulkInsertImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSQLBulkInsertImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SQLServer : WpfListItem
    {
        
        public SQLServer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SQL Server";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SQLServerImage
        {
            get
            {
                if ((this.mSQLServerImage == null))
                {
                    this.mSQLServerImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSQLServerImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "SQL Server";
                    this.mSQLServerImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSQLServerImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSQLServerImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Email : WpfGroup
    {
        
        public Email(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Email";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SMTPSend SMTPSend
        {
            get
            {
                if ((this.mSMTPSend == null))
                {
                    this.mSMTPSend = new SMTPSend(this);
                }
                return this.mSMTPSend;
            }
        }
        
        public ExchangeSend ExchangeSend
        {
            get
            {
                if ((this.mExchangeSend == null))
                {
                    this.mExchangeSend = new ExchangeSend(this);
                }
                return this.mExchangeSend;
            }
        }
        #endregion
        
        #region Fields
        private SMTPSend mSMTPSend;
        
        private ExchangeSend mExchangeSend;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SMTPSend : WpfListItem
    {
        
        public SMTPSend(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "SMTP Send";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SMTPSendImage
        {
            get
            {
                if ((this.mSMTPSendImage == null))
                {
                    this.mSMTPSendImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSMTPSendImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "SMTP Send";
                    this.mSMTPSendImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSMTPSendImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSMTPSendImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExchangeSend : WpfListItem
    {
        
        public ExchangeSend(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Exchange Send";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ExchangeSendImage
        {
            get
            {
                if ((this.mExchangeSendImage == null))
                {
                    this.mExchangeSendImage = new WpfImage(this);
                    #region Search Criteria
                    this.mExchangeSendImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Exchange Send";
                    this.mExchangeSendImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExchangeSendImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mExchangeSendImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileAndFTP : WpfGroup
    {
        
        public FileAndFTP(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "File, FTP, FTPS & SFTP";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Create Create
        {
            get
            {
                if ((this.mCreate == null))
                {
                    this.mCreate = new Create(this);
                }
                return this.mCreate;
            }
        }
        
        public Copy Copy
        {
            get
            {
                if ((this.mCopy == null))
                {
                    this.mCopy = new Copy(this);
                }
                return this.mCopy;
            }
        }
        
        public Delete Delete
        {
            get
            {
                if ((this.mDelete == null))
                {
                    this.mDelete = new Delete(this);
                }
                return this.mDelete;
            }
        }
        
        public Move Move
        {
            get
            {
                if ((this.mMove == null))
                {
                    this.mMove = new Move(this);
                }
                return this.mMove;
            }
        }
        
        public ReadFolder ReadFolder
        {
            get
            {
                if ((this.mReadFolder == null))
                {
                    this.mReadFolder = new ReadFolder(this);
                }
                return this.mReadFolder;
            }
        }
        
        public ReadFile ReadFile
        {
            get
            {
                if ((this.mReadFile == null))
                {
                    this.mReadFile = new ReadFile(this);
                }
                return this.mReadFile;
            }
        }
        
        public WriteFile WriteFile
        {
            get
            {
                if ((this.mWriteFile == null))
                {
                    this.mWriteFile = new WriteFile(this);
                }
                return this.mWriteFile;
            }
        }
        
        public Rename Rename
        {
            get
            {
                if ((this.mRename == null))
                {
                    this.mRename = new Rename(this);
                }
                return this.mRename;
            }
        }
        
        public UnZip UnZip
        {
            get
            {
                if ((this.mUnZip == null))
                {
                    this.mUnZip = new UnZip(this);
                }
                return this.mUnZip;
            }
        }
        
        public Zip Zip
        {
            get
            {
                if ((this.mZip == null))
                {
                    this.mZip = new Zip(this);
                }
                return this.mZip;
            }
        }
        #endregion
        
        #region Fields
        private Create mCreate;
        
        private Copy mCopy;
        
        private Delete mDelete;
        
        private Move mMove;
        
        private ReadFolder mReadFolder;
        
        private ReadFile mReadFile;
        
        private WriteFile mWriteFile;
        
        private Rename mRename;
        
        private UnZip mUnZip;
        
        private Zip mZip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Create : WpfListItem
    {
        
        public Create(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Create";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CreateImage
        {
            get
            {
                if ((this.mCreateImage == null))
                {
                    this.mCreateImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCreateImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Create";
                    this.mCreateImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCreateImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Copy : WpfListItem
    {
        
        public Copy(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Copy";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CopyImage
        {
            get
            {
                if ((this.mCopyImage == null))
                {
                    this.mCopyImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCopyImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Copy";
                    this.mCopyImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCopyImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCopyImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Delete : WpfListItem
    {
        
        public Delete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Delete";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DeleteImage
        {
            get
            {
                if ((this.mDeleteImage == null))
                {
                    this.mDeleteImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Delete";
                    this.mDeleteImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Move : WpfListItem
    {
        
        public Move(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Move";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage MoveImage
        {
            get
            {
                if ((this.mMoveImage == null))
                {
                    this.mMoveImage = new WpfImage(this);
                    #region Search Criteria
                    this.mMoveImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Move";
                    this.mMoveImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMoveImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mMoveImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReadFolder : WpfListItem
    {
        
        public ReadFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Read Folder";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ReadFolderImage
        {
            get
            {
                if ((this.mReadFolderImage == null))
                {
                    this.mReadFolderImage = new WpfImage(this);
                    #region Search Criteria
                    this.mReadFolderImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Read Folder";
                    this.mReadFolderImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReadFolderImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mReadFolderImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReadFile : WpfListItem
    {
        
        public ReadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Read File";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ReadFileImage
        {
            get
            {
                if ((this.mReadFileImage == null))
                {
                    this.mReadFileImage = new WpfImage(this);
                    #region Search Criteria
                    this.mReadFileImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Read File";
                    this.mReadFileImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReadFileImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mReadFileImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WriteFile : WpfListItem
    {
        
        public WriteFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Write File";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage WriteFileImage
        {
            get
            {
                if ((this.mWriteFileImage == null))
                {
                    this.mWriteFileImage = new WpfImage(this);
                    #region Search Criteria
                    this.mWriteFileImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Write File";
                    this.mWriteFileImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWriteFileImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mWriteFileImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Rename : WpfListItem
    {
        
        public Rename(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Rename";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage RenameImage
        {
            get
            {
                if ((this.mRenameImage == null))
                {
                    this.mRenameImage = new WpfImage(this);
                    #region Search Criteria
                    this.mRenameImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Rename";
                    this.mRenameImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRenameImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mRenameImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZip : WpfListItem
    {
        
        public UnZip(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "UnZip";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UnZipImage
        {
            get
            {
                if ((this.mUnZipImage == null))
                {
                    this.mUnZipImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUnZipImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "UnZip";
                    this.mUnZipImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnZipImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUnZipImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Zip : WpfListItem
    {
        
        public Zip(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Zip";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ZipImage
        {
            get
            {
                if ((this.mZipImage == null))
                {
                    this.mZipImage = new WpfImage(this);
                    #region Search Criteria
                    this.mZipImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Zip";
                    this.mZipImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mZipImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mZipImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HTTPWebMethods : WpfGroup
    {
        
        public HTTPWebMethods(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "HTTP Web Methods";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DELETE1 DELETE
        {
            get
            {
                if ((this.mDELETE == null))
                {
                    this.mDELETE = new DELETE1(this);
                }
                return this.mDELETE;
            }
        }
        
        public GET GET
        {
            get
            {
                if ((this.mGET == null))
                {
                    this.mGET = new GET(this);
                }
                return this.mGET;
            }
        }
        
        public POST POST
        {
            get
            {
                if ((this.mPOST == null))
                {
                    this.mPOST = new POST(this);
                }
                return this.mPOST;
            }
        }
        
        public PUT PUT
        {
            get
            {
                if ((this.mPUT == null))
                {
                    this.mPUT = new PUT(this);
                }
                return this.mPUT;
            }
        }
        #endregion
        
        #region Fields
        private DELETE1 mDELETE;
        
        private GET mGET;
        
        private POST mPOST;
        
        private PUT mPUT;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DELETE1 : WpfListItem
    {
        
        public DELETE1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "DELETE";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DELETEImage
        {
            get
            {
                if ((this.mDELETEImage == null))
                {
                    this.mDELETEImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDELETEImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DELETE";
                    this.mDELETEImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDELETEImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDELETEImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GET : WpfListItem
    {
        
        public GET(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "GET";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage GETImage
        {
            get
            {
                if ((this.mGETImage == null))
                {
                    this.mGETImage = new WpfImage(this);
                    #region Search Criteria
                    this.mGETImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "GET";
                    this.mGETImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGETImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mGETImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class POST : WpfListItem
    {
        
        public POST(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "POST";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage POSTImage
        {
            get
            {
                if ((this.mPOSTImage == null))
                {
                    this.mPOSTImage = new WpfImage(this);
                    #region Search Criteria
                    this.mPOSTImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "POST";
                    this.mPOSTImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPOSTImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mPOSTImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PUT : WpfListItem
    {
        
        public PUT(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "PUT";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage PUTImage
        {
            get
            {
                if ((this.mPUTImage == null))
                {
                    this.mPUTImage = new WpfImage(this);
                    #region Search Criteria
                    this.mPUTImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "PUT";
                    this.mPUTImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPUTImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mPUTImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoopTools : WpfGroup
    {
        
        public LoopTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Loop Constructs";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ForEach ForEach
        {
            get
            {
                if ((this.mForEach == null))
                {
                    this.mForEach = new ForEach(this);
                }
                return this.mForEach;
            }
        }
        
        public Selectandapply Selectandapply
        {
            get
            {
                if ((this.mSelectandapply == null))
                {
                    this.mSelectandapply = new Selectandapply(this);
                }
                return this.mSelectandapply;
            }
        }
        #endregion
        
        #region Fields
        private ForEach mForEach;
        
        private Selectandapply mSelectandapply;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForEach : WpfListItem
    {
        
        public ForEach(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "ForEach";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ForEachImage
        {
            get
            {
                if ((this.mForEachImage == null))
                {
                    this.mForEachImage = new WpfImage(this);
                    #region Search Criteria
                    this.mForEachImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ForEach";
                    this.mForEachImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mForEachImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mForEachImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Selectandapply : WpfListItem
    {
        
        public Selectandapply(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Select and apply";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ButtonImageText ButtonImageText
        {
            get
            {
                if ((this.mButtonImageText == null))
                {
                    this.mButtonImageText = new ButtonImageText(this);
                }
                return this.mButtonImageText;
            }
        }
        #endregion
        
        #region Fields
        private ButtonImageText mButtonImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ButtonImageText : WpfText
    {
        
        public ButtonImageText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Select and apply";
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetTools : WpfGroup
    {
        
        public RecordsetTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Recordset";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Length Length
        {
            get
            {
                if ((this.mLength == null))
                {
                    this.mLength = new Length(this);
                }
                return this.mLength;
            }
        }
        
        public FindRecords FindRecords
        {
            get
            {
                if ((this.mFindRecords == null))
                {
                    this.mFindRecords = new FindRecords(this);
                }
                return this.mFindRecords;
            }
        }
        
        public Delete2 Delete
        {
            get
            {
                if ((this.mDelete == null))
                {
                    this.mDelete = new Delete2(this);
                }
                return this.mDelete;
            }
        }
        
        public Sort Sort
        {
            get
            {
                if ((this.mSort == null))
                {
                    this.mSort = new Sort(this);
                }
                return this.mSort;
            }
        }
        
        public Count Count
        {
            get
            {
                if ((this.mCount == null))
                {
                    this.mCount = new Count(this);
                }
                return this.mCount;
            }
        }
        
        public UniqueRecords UniqueRecords
        {
            get
            {
                if ((this.mUniqueRecords == null))
                {
                    this.mUniqueRecords = new UniqueRecords(this);
                }
                return this.mUniqueRecords;
            }
        }
        #endregion
        
        #region Fields
        private Length mLength;
        
        private FindRecords mFindRecords;
        
        private Delete2 mDelete;
        
        private Sort mSort;
        
        private Count mCount;
        
        private UniqueRecords mUniqueRecords;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Length : WpfListItem
    {
        
        public Length(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Length";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage LengthImage
        {
            get
            {
                if ((this.mLengthImage == null))
                {
                    this.mLengthImage = new WpfImage(this);
                    #region Search Criteria
                    this.mLengthImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Length";
                    this.mLengthImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLengthImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mLengthImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindRecords : WpfListItem
    {
        
        public FindRecords(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Find Records";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage FindRecordsImage
        {
            get
            {
                if ((this.mFindRecordsImage == null))
                {
                    this.mFindRecordsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mFindRecordsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Find Records";
                    this.mFindRecordsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFindRecordsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mFindRecordsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Delete2 : WpfListItem
    {
        
        public Delete2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Delete";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DeleteImage
        {
            get
            {
                if ((this.mDeleteImage == null))
                {
                    this.mDeleteImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Delete";
                    this.mDeleteImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Sort : WpfListItem
    {
        
        public Sort(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Sort";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SortImage
        {
            get
            {
                if ((this.mSortImage == null))
                {
                    this.mSortImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSortImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Sort";
                    this.mSortImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSortImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSortImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Count : WpfListItem
    {
        
        public Count(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Count";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CountImage
        {
            get
            {
                if ((this.mCountImage == null))
                {
                    this.mCountImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCountImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Count";
                    this.mCountImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCountImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCountImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UniqueRecords : WpfListItem
    {
        
        public UniqueRecords(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Unique Records";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UniqueRecordsImage
        {
            get
            {
                if ((this.mUniqueRecordsImage == null))
                {
                    this.mUniqueRecordsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUniqueRecordsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Unique Records";
                    this.mUniqueRecordsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUniqueRecordsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUniqueRecordsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceTools : WpfGroup
    {
        
        public ResourceTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Resources";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Service Service
        {
            get
            {
                if ((this.mService == null))
                {
                    this.mService = new Service(this);
                }
                return this.mService;
            }
        }
        
        public ComDLL ComDLL
        {
            get
            {
                if ((this.mComDLL == null))
                {
                    this.mComDLL = new ComDLL(this);
                }
                return this.mComDLL;
            }
        }
        
        public DotNetDLL DotNetDLL
        {
            get
            {
                if ((this.mDotNetDLL == null))
                {
                    this.mDotNetDLL = new DotNetDLL(this);
                }
                return this.mDotNetDLL;
            }
        }
        
        public WCF WCF
        {
            get
            {
                if ((this.mWCF == null))
                {
                    this.mWCF = new WCF(this);
                }
                return this.mWCF;
            }
        }
        #endregion
        
        #region Fields
        private Service mService;
        
        private ComDLL mComDLL;
        
        private DotNetDLL mDotNetDLL;
        
        private WCF mWCF;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Service : WpfListItem
    {
        
        public Service(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ServiceImage
        {
            get
            {
                if ((this.mServiceImage == null))
                {
                    this.mServiceImage = new WpfImage(this);
                    #region Search Criteria
                    this.mServiceImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Service";
                    this.mServiceImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mServiceImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mServiceImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComDLL : WpfListItem
    {
        
        public ComDLL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Com DLL";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ComDLLImage
        {
            get
            {
                if ((this.mComDLLImage == null))
                {
                    this.mComDLLImage = new WpfImage(this);
                    #region Search Criteria
                    this.mComDLLImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Com DLL";
                    this.mComDLLImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComDLLImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mComDLLImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DotNetDLL : WpfListItem
    {
        
        public DotNetDLL(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "DotNet DLL";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DotNetDLLImage
        {
            get
            {
                if ((this.mDotNetDLLImage == null))
                {
                    this.mDotNetDLLImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDotNetDLLImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DotNet DLL";
                    this.mDotNetDLLImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDotNetDLLImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDotNetDLLImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WCF : WpfListItem
    {
        
        public WCF(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "WCF";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage WCFImage
        {
            get
            {
                if ((this.mWCFImage == null))
                {
                    this.mWCFImage = new WpfImage(this);
                    #region Search Criteria
                    this.mWCFImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "WCF";
                    this.mWCFImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWCFImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mWCFImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptingTools : WpfGroup
    {
        
        public ScriptingTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Scripting";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public CMDScript CMDScript
        {
            get
            {
                if ((this.mCMDScript == null))
                {
                    this.mCMDScript = new CMDScript(this);
                }
                return this.mCMDScript;
            }
        }
        
        public Script Script
        {
            get
            {
                if ((this.mScript == null))
                {
                    this.mScript = new Script(this);
                }
                return this.mScript;
            }
        }
        
        public JavaScript JavaScript
        {
            get
            {
                if ((this.mJavaScript == null))
                {
                    this.mJavaScript = new JavaScript(this);
                }
                return this.mJavaScript;
            }
        }
        
        public Python Python
        {
            get
            {
                if ((this.mPython == null))
                {
                    this.mPython = new Python(this);
                }
                return this.mPython;
            }
        }
        
        public Ruby Ruby
        {
            get
            {
                if ((this.mRuby == null))
                {
                    this.mRuby = new Ruby(this);
                }
                return this.mRuby;
            }
        }
        #endregion
        
        #region Fields
        private CMDScript mCMDScript;
        
        private Script mScript;
        
        private JavaScript mJavaScript;
        
        private Python mPython;
        
        private Ruby mRuby;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CMDScript : WpfListItem
    {
        
        public CMDScript(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "CMD Script";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CMDScriptImage
        {
            get
            {
                if ((this.mCMDScriptImage == null))
                {
                    this.mCMDScriptImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCMDScriptImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "CMD Script";
                    this.mCMDScriptImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCMDScriptImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCMDScriptImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Script : WpfListItem
    {
        
        public Script(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Script";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ScriptImage
        {
            get
            {
                if ((this.mScriptImage == null))
                {
                    this.mScriptImage = new WpfImage(this);
                    #region Search Criteria
                    this.mScriptImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Script";
                    this.mScriptImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mScriptImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mScriptImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class JavaScript : WpfListItem
    {
        
        public JavaScript(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "JavaScript";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIToolButtonImageText UIToolButtonImageText
        {
            get
            {
                if ((this.mUIToolButtonImageText == null))
                {
                    this.mUIToolButtonImageText = new UIToolButtonImageText(this);
                }
                return this.mUIToolButtonImageText;
            }
        }
        #endregion
        
        #region Fields
        private UIToolButtonImageText mUIToolButtonImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIToolButtonImageText : WpfText
    {
        
        public UIToolButtonImageText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UIJavaScriptImage
        {
            get
            {
                if ((this.mUIJavaScriptImage == null))
                {
                    this.mUIJavaScriptImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIJavaScriptImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "JavaScript";
                    this.mUIJavaScriptImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIJavaScriptImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUIJavaScriptImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Python : WpfListItem
    {
        
        public Python(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Python";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIToolButtonImageText1 UIToolButtonImageText
        {
            get
            {
                if ((this.mUIToolButtonImageText == null))
                {
                    this.mUIToolButtonImageText = new UIToolButtonImageText1(this);
                }
                return this.mUIToolButtonImageText;
            }
        }
        #endregion
        
        #region Fields
        private UIToolButtonImageText1 mUIToolButtonImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIToolButtonImageText1 : WpfText
    {
        
        public UIToolButtonImageText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UIPythonImage
        {
            get
            {
                if ((this.mUIPythonImage == null))
                {
                    this.mUIPythonImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIPythonImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Python";
                    this.mUIPythonImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIPythonImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUIPythonImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Ruby : WpfListItem
    {
        
        public Ruby(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Ruby";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIToolButtonImageText2 UIToolButtonImageText
        {
            get
            {
                if ((this.mUIToolButtonImageText == null))
                {
                    this.mUIToolButtonImageText = new UIToolButtonImageText2(this);
                }
                return this.mUIToolButtonImageText;
            }
        }
        #endregion
        
        #region Fields
        private UIToolButtonImageText2 mUIToolButtonImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIToolButtonImageText2 : WpfText
    {
        
        public UIToolButtonImageText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UIRubyImage
        {
            get
            {
                if ((this.mUIRubyImage == null))
                {
                    this.mUIRubyImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIRubyImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Ruby";
                    this.mUIRubyImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIRubyImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUIRubyImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointTools : WpfGroup
    {
        
        public SharepointTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Sharepoint";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem MoveFile
        {
            get
            {
                if ((this.mMoveFile == null))
                {
                    this.mMoveFile = new WpfListItem(this);
                    #region Search Criteria
                    this.mMoveFile.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Move File";
                    this.mMoveFile.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMoveFile;
            }
        }
        
        public WpfListItem CopyFile
        {
            get
            {
                if ((this.mCopyFile == null))
                {
                    this.mCopyFile = new WpfListItem(this);
                    #region Search Criteria
                    this.mCopyFile.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Copy File";
                    this.mCopyFile.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCopyFile;
            }
        }
        
        public WpfListItem UploadFile
        {
            get
            {
                if ((this.mUploadFile == null))
                {
                    this.mUploadFile = new WpfListItem(this);
                    #region Search Criteria
                    this.mUploadFile.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Upload File";
                    this.mUploadFile.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUploadFile;
            }
        }
        
        public CreateListItems CreateListItems
        {
            get
            {
                if ((this.mCreateListItems == null))
                {
                    this.mCreateListItems = new CreateListItems(this);
                }
                return this.mCreateListItems;
            }
        }
        
        public DeleteListItems DeleteListItems
        {
            get
            {
                if ((this.mDeleteListItems == null))
                {
                    this.mDeleteListItems = new DeleteListItems(this);
                }
                return this.mDeleteListItems;
            }
        }
        
        public ReadListItems ReadListItems
        {
            get
            {
                if ((this.mReadListItems == null))
                {
                    this.mReadListItems = new ReadListItems(this);
                }
                return this.mReadListItems;
            }
        }
        
        public UpdateListItems UpdateListItems
        {
            get
            {
                if ((this.mUpdateListItems == null))
                {
                    this.mUpdateListItems = new UpdateListItems(this);
                }
                return this.mUpdateListItems;
            }
        }
        
        public DownloadFile DownloadFile
        {
            get
            {
                if ((this.mDownloadFile == null))
                {
                    this.mDownloadFile = new DownloadFile(this);
                }
                return this.mDownloadFile;
            }
        }
        
        public DeleteFile DeleteFile
        {
            get
            {
                if ((this.mDeleteFile == null))
                {
                    this.mDeleteFile = new DeleteFile(this);
                }
                return this.mDeleteFile;
            }
        }
        
        public ReadFolder1 ReadFolder
        {
            get
            {
                if ((this.mReadFolder == null))
                {
                    this.mReadFolder = new ReadFolder1(this);
                }
                return this.mReadFolder;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mMoveFile;
        
        private WpfListItem mCopyFile;
        
        private WpfListItem mUploadFile;
        
        private CreateListItems mCreateListItems;
        
        private DeleteListItems mDeleteListItems;
        
        private ReadListItems mReadListItems;
        
        private UpdateListItems mUpdateListItems;
        
        private DownloadFile mDownloadFile;
        
        private DeleteFile mDeleteFile;
        
        private ReadFolder1 mReadFolder;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateListItems : WpfListItem
    {
        
        public CreateListItems(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Create List Item(s)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CreateListItemsImage
        {
            get
            {
                if ((this.mCreateListItemsImage == null))
                {
                    this.mCreateListItemsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCreateListItemsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Create List Item(s)";
                    this.mCreateListItemsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateListItemsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCreateListItemsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteListItems : WpfListItem
    {
        
        public DeleteListItems(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Delete List Item(s)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DeleteListItemsImage
        {
            get
            {
                if ((this.mDeleteListItemsImage == null))
                {
                    this.mDeleteListItemsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteListItemsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Delete List Item(s)";
                    this.mDeleteListItemsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteListItemsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDeleteListItemsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReadListItems : WpfListItem
    {
        
        public ReadListItems(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Read List Item(s)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ReadListItemsImage
        {
            get
            {
                if ((this.mReadListItemsImage == null))
                {
                    this.mReadListItemsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mReadListItemsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Read List Item(s)";
                    this.mReadListItemsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReadListItemsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mReadListItemsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UpdateListItems : WpfListItem
    {
        
        public UpdateListItems(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Update List Item(s)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UpdateListItemsImage
        {
            get
            {
                if ((this.mUpdateListItemsImage == null))
                {
                    this.mUpdateListItemsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUpdateListItemsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Update List Item(s)";
                    this.mUpdateListItemsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUpdateListItemsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUpdateListItemsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DownloadFile : WpfListItem
    {
        
        public DownloadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Download File";
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ImageText ImageText
        {
            get
            {
                if ((this.mImageText == null))
                {
                    this.mImageText = new ImageText(this);
                }
                return this.mImageText;
            }
        }
        #endregion
        
        #region Fields
        private ImageText mImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ImageText : WpfText
    {
        
        public ImageText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Download File";
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteFile : WpfListItem
    {
        
        public DeleteFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Delete File";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ImageText1 ImageText
        {
            get
            {
                if ((this.mImageText == null))
                {
                    this.mImageText = new ImageText1(this);
                }
                return this.mImageText;
            }
        }
        #endregion
        
        #region Fields
        private ImageText1 mImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ImageText1 : WpfText
    {
        
        public ImageText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Delete File";
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReadFolder1 : WpfListItem
    {
        
        public ReadFolder1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Read Folder";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ImageText2 ImageText
        {
            get
            {
                if ((this.mImageText == null))
                {
                    this.mImageText = new ImageText2(this);
                }
                return this.mImageText;
            }
        }
        #endregion
        
        #region Fields
        private ImageText2 mImageText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ImageText2 : WpfText
    {
        
        public ImageText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ToolButtonImage";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Read Folder";
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StorageDropbox : WpfGroup
    {
        
        public StorageDropbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Storage: Dropbox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Download Download
        {
            get
            {
                if ((this.mDownload == null))
                {
                    this.mDownload = new Download(this);
                }
                return this.mDownload;
            }
        }
        
        public Upload Upload
        {
            get
            {
                if ((this.mUpload == null))
                {
                    this.mUpload = new Upload(this);
                }
                return this.mUpload;
            }
        }
        
        public ListContents ListContents
        {
            get
            {
                if ((this.mListContents == null))
                {
                    this.mListContents = new ListContents(this);
                }
                return this.mListContents;
            }
        }
        
        public Delete3 Delete
        {
            get
            {
                if ((this.mDelete == null))
                {
                    this.mDelete = new Delete3(this);
                }
                return this.mDelete;
            }
        }
        #endregion
        
        #region Fields
        private Download mDownload;
        
        private Upload mUpload;
        
        private ListContents mListContents;
        
        private Delete3 mDelete;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Download : WpfListItem
    {
        
        public Download(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Download";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DownloadImage
        {
            get
            {
                if ((this.mDownloadImage == null))
                {
                    this.mDownloadImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDownloadImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Download";
                    this.mDownloadImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDownloadImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDownloadImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Upload : WpfListItem
    {
        
        public Upload(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Upload";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage UploadImage
        {
            get
            {
                if ((this.mUploadImage == null))
                {
                    this.mUploadImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUploadImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Upload";
                    this.mUploadImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUploadImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUploadImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ListContents : WpfListItem
    {
        
        public ListContents(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "List Contents";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage ListContentsImage
        {
            get
            {
                if ((this.mListContentsImage == null))
                {
                    this.mListContentsImage = new WpfImage(this);
                    #region Search Criteria
                    this.mListContentsImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "List Contents";
                    this.mListContentsImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListContentsImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mListContentsImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Delete3 : WpfListItem
    {
        
        public Delete3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Delete";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DeleteImage
        {
            get
            {
                if ((this.mDeleteImage == null))
                {
                    this.mDeleteImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Delete";
                    this.mDeleteImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDeleteImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UtilityTools : WpfGroup
    {
        
        public UtilityTools(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Utility";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AggregateCalculate AggregateCalculate
        {
            get
            {
                if ((this.mAggregateCalculate == null))
                {
                    this.mAggregateCalculate = new AggregateCalculate(this);
                }
                return this.mAggregateCalculate;
            }
        }
        
        public WpfListItem RabbitMQConsume
        {
            get
            {
                if ((this.mRabbitMQConsume == null))
                {
                    this.mRabbitMQConsume = new WpfListItem(this);
                    #region Search Criteria
                    this.mRabbitMQConsume.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "RabbitMQ Consume";
                    this.mRabbitMQConsume.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRabbitMQConsume;
            }
        }
        
        public WpfListItem RabbitMQPublish
        {
            get
            {
                if ((this.mRabbitMQPublish == null))
                {
                    this.mRabbitMQPublish = new WpfListItem(this);
                    #region Search Criteria
                    this.mRabbitMQPublish.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "RabbitMQ Publish";
                    this.mRabbitMQPublish.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRabbitMQPublish;
            }
        }
        
        public Comment Comment
        {
            get
            {
                if ((this.mComment == null))
                {
                    this.mComment = new Comment(this);
                }
                return this.mComment;
            }
        }
        
        public CreateJSON CreateJSON
        {
            get
            {
                if ((this.mCreateJSON == null))
                {
                    this.mCreateJSON = new CreateJSON(this);
                }
                return this.mCreateJSON;
            }
        }
        
        public Calculate Calculate
        {
            get
            {
                if ((this.mCalculate == null))
                {
                    this.mCalculate = new Calculate(this);
                }
                return this.mCalculate;
            }
        }
        
        public DateTime DateTime
        {
            get
            {
                if ((this.mDateTime == null))
                {
                    this.mDateTime = new DateTime(this);
                }
                return this.mDateTime;
            }
        }
        
        public DateTimeDifference DateTimeDifference
        {
            get
            {
                if ((this.mDateTimeDifference == null))
                {
                    this.mDateTimeDifference = new DateTimeDifference(this);
                }
                return this.mDateTimeDifference;
            }
        }
        
        public SysInfo SysInfo
        {
            get
            {
                if ((this.mSysInfo == null))
                {
                    this.mSysInfo = new SysInfo(this);
                }
                return this.mSysInfo;
            }
        }
        
        public FormatNumber FormatNumber
        {
            get
            {
                if ((this.mFormatNumber == null))
                {
                    this.mFormatNumber = new FormatNumber(this);
                }
                return this.mFormatNumber;
            }
        }
        
        public Random Random
        {
            get
            {
                if ((this.mRandom == null))
                {
                    this.mRandom = new Random(this);
                }
                return this.mRandom;
            }
        }
        
        public Email1 Email
        {
            get
            {
                if ((this.mEmail == null))
                {
                    this.mEmail = new Email1(this);
                }
                return this.mEmail;
            }
        }
        
        public WebRequest WebRequest
        {
            get
            {
                if ((this.mWebRequest == null))
                {
                    this.mWebRequest = new WebRequest(this);
                }
                return this.mWebRequest;
            }
        }
        
        public XPath XPath
        {
            get
            {
                if ((this.mXPath == null))
                {
                    this.mXPath = new XPath(this);
                }
                return this.mXPath;
            }
        }
        #endregion
        
        #region Fields
        private AggregateCalculate mAggregateCalculate;
        
        private WpfListItem mRabbitMQConsume;
        
        private WpfListItem mRabbitMQPublish;
        
        private Comment mComment;
        
        private CreateJSON mCreateJSON;
        
        private Calculate mCalculate;
        
        private DateTime mDateTime;
        
        private DateTimeDifference mDateTimeDifference;
        
        private SysInfo mSysInfo;
        
        private FormatNumber mFormatNumber;
        
        private Random mRandom;
        
        private Email1 mEmail;
        
        private WebRequest mWebRequest;
        
        private XPath mXPath;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AggregateCalculate : WpfListItem
    {
        
        public AggregateCalculate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Aggregate Calculate";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage AggregateCalculateImage
        {
            get
            {
                if ((this.mAggregateCalculateImage == null))
                {
                    this.mAggregateCalculateImage = new WpfImage(this);
                    #region Search Criteria
                    this.mAggregateCalculateImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Aggregate Calculate";
                    this.mAggregateCalculateImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAggregateCalculateImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mAggregateCalculateImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Comment : WpfListItem
    {
        
        public Comment(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Comment";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CommentImage
        {
            get
            {
                if ((this.mCommentImage == null))
                {
                    this.mCommentImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCommentImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Comment";
                    this.mCommentImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCommentImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCommentImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateJSON : WpfListItem
    {
        
        public CreateJSON(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Create JSON";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CreateJSONImage
        {
            get
            {
                if ((this.mCreateJSONImage == null))
                {
                    this.mCreateJSONImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCreateJSONImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Create JSON";
                    this.mCreateJSONImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateJSONImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCreateJSONImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Calculate : WpfListItem
    {
        
        public Calculate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Calculate";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage CalculateImage
        {
            get
            {
                if ((this.mCalculateImage == null))
                {
                    this.mCalculateImage = new WpfImage(this);
                    #region Search Criteria
                    this.mCalculateImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Calculate";
                    this.mCalculateImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCalculateImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mCalculateImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DateTime : WpfListItem
    {
        
        public DateTime(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Date Time";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DateTimeImage
        {
            get
            {
                if ((this.mDateTimeImage == null))
                {
                    this.mDateTimeImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDateTimeImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Date Time";
                    this.mDateTimeImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDateTimeImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDateTimeImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DateTimeDifference : WpfListItem
    {
        
        public DateTimeDifference(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Date Time Diff";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage DateTimeDifferenceImage
        {
            get
            {
                if ((this.mDateTimeDifferenceImage == null))
                {
                    this.mDateTimeDifferenceImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDateTimeDifferenceImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Date Time Diff";
                    this.mDateTimeDifferenceImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDateTimeDifferenceImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mDateTimeDifferenceImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SysInfo : WpfListItem
    {
        
        public SysInfo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Sys Info";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SysInfoImage
        {
            get
            {
                if ((this.mSysInfoImage == null))
                {
                    this.mSysInfoImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSysInfoImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Sys Info";
                    this.mSysInfoImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSysInfoImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSysInfoImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FormatNumber : WpfListItem
    {
        
        public FormatNumber(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Format Number";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage FormatNumberImage
        {
            get
            {
                if ((this.mFormatNumberImage == null))
                {
                    this.mFormatNumberImage = new WpfImage(this);
                    #region Search Criteria
                    this.mFormatNumberImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Format Number";
                    this.mFormatNumberImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFormatNumberImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mFormatNumberImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Random : WpfListItem
    {
        
        public Random(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Random";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage RandomImage
        {
            get
            {
                if ((this.mRandomImage == null))
                {
                    this.mRandomImage = new WpfImage(this);
                    #region Search Criteria
                    this.mRandomImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Random";
                    this.mRandomImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRandomImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mRandomImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Email1 : WpfListItem
    {
        
        public Email1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Email";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage EmailImage
        {
            get
            {
                if ((this.mEmailImage == null))
                {
                    this.mEmailImage = new WpfImage(this);
                    #region Search Criteria
                    this.mEmailImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Email";
                    this.mEmailImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEmailImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mEmailImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebRequest : WpfListItem
    {
        
        public WebRequest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "Web Request";
            #endregion
        }
        
        #region Properties
        public WpfImage WebRequestImage
        {
            get
            {
                if ((this.mWebRequestImage == null))
                {
                    this.mWebRequestImage = new WpfImage(this);
                    #region Search Criteria
                    this.mWebRequestImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "Web Request";
                    this.mWebRequestImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWebRequestImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mWebRequestImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XPath : WpfListItem
    {
        
        public XPath(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ToolBox.ToolDescriptorViewModel";
            this.SearchProperties[WpfListItem.PropertyNames.AutomationId] = "XPath";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage XPathImage
        {
            get
            {
                if ((this.mXPathImage == null))
                {
                    this.mXPathImage = new WpfImage(this);
                    #region Search Criteria
                    this.mXPathImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "XPath";
                    this.mXPathImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mXPathImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mXPathImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Help : WpfCustom
    {
        
        public Help(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Help";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DocumentorUnpinBtn
        {
            get
            {
                if ((this.mDocumentorUnpinBtn == null))
                {
                    this.mDocumentorUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mDocumentorUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mDocumentorUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDocumentorUnpinBtn;
            }
        }
        
        public WpfControl HelpWindow
        {
            get
            {
                if ((this.mHelpWindow == null))
                {
                    this.mHelpWindow = new WpfControl(this);
                    #region Search Criteria
                    this.mHelpWindow.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mHelpWindow.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mHelpWindow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHelpWindow;
            }
        }
        
        public WpfCustom HelpTextEditor
        {
            get
            {
                if ((this.mHelpTextEditor == null))
                {
                    this.mHelpTextEditor = new WpfCustom(this);
                    #region Search Criteria
                    this.mHelpTextEditor.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamRichTextEditor";
                    this.mHelpTextEditor.SearchProperties[WpfControl.PropertyNames.AutomationId] = "XamRichTextEditor";
                    this.mHelpTextEditor.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHelpTextEditor;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDocumentorUnpinBtn;
        
        private WpfControl mHelpWindow;
        
        private WpfCustom mHelpTextEditor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        
        public WpfControl ToolboxHelpSplitter
        {
            get
            {
                if ((this.mToolboxHelpSplitter == null))
                {
                    this.mToolboxHelpSplitter = new WpfControl(this);
                    #region Search Criteria
                    this.mToolboxHelpSplitter.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mToolboxHelpSplitter.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mToolboxHelpSplitter.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mToolboxHelpSplitter.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToolboxHelpSplitter;
            }
        }
        
        public Help1 Help
        {
            get
            {
                if ((this.mHelp == null))
                {
                    this.mHelp = new Help1(this);
                }
                return this.mHelp;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        
        private WpfControl mToolboxHelpSplitter;
        
        private Help1 mHelp;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public StartPage StartPage
        {
            get
            {
                if ((this.mStartPage == null))
                {
                    this.mStartPage = new StartPage(this);
                }
                return this.mStartPage;
            }
        }
        
        public WorkflowTab WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab(this);
                }
                return this.mWorkflowTab;
            }
        }
        
        public DBSourceWizardTab DBSourceWizardTab
        {
            get
            {
                if ((this.mDBSourceWizardTab == null))
                {
                    this.mDBSourceWizardTab = new DBSourceWizardTab(this);
                }
                return this.mDBSourceWizardTab;
            }
        }
        
        public FilesMenu FilesMenu
        {
            get
            {
                if ((this.mFilesMenu == null))
                {
                    this.mFilesMenu = new FilesMenu(this);
                }
                return this.mFilesMenu;
            }
        }
        
        public WpfButton NavigatorButton
        {
            get
            {
                if ((this.mNavigatorButton == null))
                {
                    this.mNavigatorButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNavigatorButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "showNavigatorButton";
                    this.mNavigatorButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNavigatorButton;
            }
        }
        
        public DependencyGraphTab DependencyGraphTab
        {
            get
            {
                if ((this.mDependencyGraphTab == null))
                {
                    this.mDependencyGraphTab = new DependencyGraphTab(this);
                }
                return this.mDependencyGraphTab;
            }
        }
        
        public DotNetPluginSourceWizardTab DotNetPluginSourceWizardTab
        {
            get
            {
                if ((this.mDotNetPluginSourceWizardTab == null))
                {
                    this.mDotNetPluginSourceWizardTab = new DotNetPluginSourceWizardTab(this);
                }
                return this.mDotNetPluginSourceWizardTab;
            }
        }
        
        public WebSourceWizardTab WebSourceWizardTab
        {
            get
            {
                if ((this.mWebSourceWizardTab == null))
                {
                    this.mWebSourceWizardTab = new WebSourceWizardTab(this);
                }
                return this.mWebSourceWizardTab;
            }
        }
        
        public TestsTabPage TestsTabPage
        {
            get
            {
                if ((this.mTestsTabPage == null))
                {
                    this.mTestsTabPage = new TestsTabPage(this);
                }
                return this.mTestsTabPage;
            }
        }
        
        public SchedulerTab SchedulerTab
        {
            get
            {
                if ((this.mSchedulerTab == null))
                {
                    this.mSchedulerTab = new SchedulerTab(this);
                }
                return this.mSchedulerTab;
            }
        }
        
        public SharepointServerSourceTab SharepointServerSourceTab
        {
            get
            {
                if ((this.mSharepointServerSourceTab == null))
                {
                    this.mSharepointServerSourceTab = new SharepointServerSourceTab(this);
                }
                return this.mSharepointServerSourceTab;
            }
        }
        
        public WpfTabPage HelpTab
        {
            get
            {
                if ((this.mHelpTab == null))
                {
                    this.mHelpTab = new WpfTabPage(this);
                    #region Search Criteria
                    this.mHelpTab.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Help.HelpViewModel";
                    this.mHelpTab.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHelpTab;
            }
        }
        
        public DeployTab DeployTab
        {
            get
            {
                if ((this.mDeployTab == null))
                {
                    this.mDeployTab = new DeployTab(this);
                }
                return this.mDeployTab;
            }
        }
        
        public ServerSourceWizardTab ServerSourceWizardTab
        {
            get
            {
                if ((this.mServerSourceWizardTab == null))
                {
                    this.mServerSourceWizardTab = new ServerSourceWizardTab(this);
                }
                return this.mServerSourceWizardTab;
            }
        }
        
        public SettingsTab SettingsTab
        {
            get
            {
                if ((this.mSettingsTab == null))
                {
                    this.mSettingsTab = new SettingsTab(this);
                }
                return this.mSettingsTab;
            }
        }
        
        public RabbitMqSourceTabPage RabbitMqSourceTabPage
        {
            get
            {
                if ((this.mRabbitMqSourceTabPage == null))
                {
                    this.mRabbitMqSourceTabPage = new RabbitMqSourceTabPage(this);
                }
                return this.mRabbitMqSourceTabPage;
            }
        }
        
        public EmailSourceTabPage EmailSourceTabPage
        {
            get
            {
                if ((this.mEmailSourceTabPage == null))
                {
                    this.mEmailSourceTabPage = new EmailSourceTabPage(this);
                }
                return this.mEmailSourceTabPage;
            }
        }
        
        public ExchangeSourceTabPage ExchangeSourceTabPage
        {
            get
            {
                if ((this.mExchangeSourceTabPage == null))
                {
                    this.mExchangeSourceTabPage = new ExchangeSourceTabPage(this);
                }
                return this.mExchangeSourceTabPage;
            }
        }
        #endregion
        
        #region Fields
        private StartPage mStartPage;
        
        private WorkflowTab mWorkflowTab;
        
        private DBSourceWizardTab mDBSourceWizardTab;
        
        private FilesMenu mFilesMenu;
        
        private WpfButton mNavigatorButton;
        
        private DependencyGraphTab mDependencyGraphTab;
        
        private DotNetPluginSourceWizardTab mDotNetPluginSourceWizardTab;
        
        private WebSourceWizardTab mWebSourceWizardTab;
        
        private TestsTabPage mTestsTabPage;
        
        private SchedulerTab mSchedulerTab;
        
        private SharepointServerSourceTab mSharepointServerSourceTab;
        
        private WpfTabPage mHelpTab;
        
        private DeployTab mDeployTab;
        
        private ServerSourceWizardTab mServerSourceWizardTab;
        
        private SettingsTab mSettingsTab;
        
        private RabbitMqSourceTabPage mRabbitMqSourceTabPage;
        
        private EmailSourceTabPage mEmailSourceTabPage;
        
        private ExchangeSourceTabPage mExchangeSourceTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StartPage : WpfTabPage
    {
        
        public StartPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Settings.SettingsViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorksurfaceContext WorksurfaceContext
        {
            get
            {
                if ((this.mWorksurfaceContext == null))
                {
                    this.mWorksurfaceContext = new WorksurfaceContext(this);
                }
                return this.mWorksurfaceContext;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorksurfaceContext mWorksurfaceContext;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorksurfaceContext : WpfCustom
    {
        
        public WorksurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SettingsView SettingsView
        {
            get
            {
                if ((this.mSettingsView == null))
                {
                    this.mSettingsView = new SettingsView(this);
                }
                return this.mSettingsView;
            }
        }
        #endregion
        
        #region Fields
        private SettingsView mSettingsView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SettingsView : WpfCustom
    {
        
        public SettingsView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SettingsView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SettingsView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabList TabList
        {
            get
            {
                if ((this.mTabList == null))
                {
                    this.mTabList = new TabList(this);
                }
                return this.mTabList;
            }
        }
        #endregion
        
        #region Fields
        private TabList mTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabList : WpfTabList
    {
        
        public TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SecurityTab SecurityTab
        {
            get
            {
                if ((this.mSecurityTab == null))
                {
                    this.mSecurityTab = new SecurityTab(this);
                }
                return this.mSecurityTab;
            }
        }
        
        public LoggingTab LoggingTab
        {
            get
            {
                if ((this.mLoggingTab == null))
                {
                    this.mLoggingTab = new LoggingTab(this);
                }
                return this.mLoggingTab;
            }
        }
        
        public PerfomanceCounterTab PerfomanceCounterTab
        {
            get
            {
                if ((this.mPerfomanceCounterTab == null))
                {
                    this.mPerfomanceCounterTab = new PerfomanceCounterTab(this);
                }
                return this.mPerfomanceCounterTab;
            }
        }
        #endregion
        
        #region Fields
        private SecurityTab mSecurityTab;
        
        private LoggingTab mLoggingTab;
        
        private PerfomanceCounterTab mPerfomanceCounterTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecurityTab : WpfTabPage
    {
        
        public SecurityTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SecurityWindow SecurityWindow
        {
            get
            {
                if ((this.mSecurityWindow == null))
                {
                    this.mSecurityWindow = new SecurityWindow(this);
                }
                return this.mSecurityWindow;
            }
        }
        
        public WpfText SECURITY
        {
            get
            {
                if ((this.mSECURITY == null))
                {
                    this.mSECURITY = new WpfText(this);
                    #region Search Criteria
                    this.mSECURITY.SearchProperties[WpfText.PropertyNames.Name] = "SECURITY";
                    this.mSECURITY.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSECURITY;
            }
        }
        #endregion
        
        #region Fields
        private SecurityWindow mSecurityWindow;
        
        private WpfText mSECURITY;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecurityWindow : WpfCustom
    {
        
        public SecurityWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SecurityView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SecurityViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerPermissions ServerPermissions
        {
            get
            {
                if ((this.mServerPermissions == null))
                {
                    this.mServerPermissions = new ServerPermissions(this);
                }
                return this.mServerPermissions;
            }
        }
        
        public ResourcePermissions ResourcePermissions
        {
            get
            {
                if ((this.mResourcePermissions == null))
                {
                    this.mResourcePermissions = new ResourcePermissions(this);
                }
                return this.mResourcePermissions;
            }
        }
        #endregion
        
        #region Fields
        private ServerPermissions mServerPermissions;
        
        private ResourcePermissions mResourcePermissions;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPermissions : WpfTable
    {
        
        public ServerPermissions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ServerPermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WarewolfAdminROW WarewolfAdminROW
        {
            get
            {
                if ((this.mWarewolfAdminROW == null))
                {
                    this.mWarewolfAdminROW = new WarewolfAdminROW(this);
                }
                return this.mWarewolfAdminROW;
            }
        }
        
        public PublicROW PublicROW
        {
            get
            {
                if ((this.mPublicROW == null))
                {
                    this.mPublicROW = new PublicROW(this);
                }
                return this.mPublicROW;
            }
        }
        #endregion
        
        #region Fields
        private WarewolfAdminROW mWarewolfAdminROW;
        
        private PublicROW mPublicROW;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WarewolfAdminROW : WpfPane
    {
        
        public WarewolfAdminROW(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "0";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DeleteCell DeleteCell
        {
            get
            {
                if ((this.mDeleteCell == null))
                {
                    this.mDeleteCell = new DeleteCell(this);
                }
                return this.mDeleteCell;
            }
        }
        
        public DeployToCell DeployToCell
        {
            get
            {
                if ((this.mDeployToCell == null))
                {
                    this.mDeployToCell = new DeployToCell(this);
                }
                return this.mDeployToCell;
            }
        }
        
        public DeployFromCell DeployFromCell
        {
            get
            {
                if ((this.mDeployFromCell == null))
                {
                    this.mDeployFromCell = new DeployFromCell(this);
                }
                return this.mDeployFromCell;
            }
        }
        
        public AdministratorCell AdministratorCell
        {
            get
            {
                if ((this.mAdministratorCell == null))
                {
                    this.mAdministratorCell = new AdministratorCell(this);
                }
                return this.mAdministratorCell;
            }
        }
        
        public ViewCell ViewCell
        {
            get
            {
                if ((this.mViewCell == null))
                {
                    this.mViewCell = new ViewCell(this);
                }
                return this.mViewCell;
            }
        }
        
        public ExecuteCell ExecuteCell
        {
            get
            {
                if ((this.mExecuteCell == null))
                {
                    this.mExecuteCell = new ExecuteCell(this);
                }
                return this.mExecuteCell;
            }
        }
        
        public ContributeCell ContributeCell
        {
            get
            {
                if ((this.mContributeCell == null))
                {
                    this.mContributeCell = new ContributeCell(this);
                }
                return this.mContributeCell;
            }
        }
        #endregion
        
        #region Fields
        private DeleteCell mDeleteCell;
        
        private DeployToCell mDeployToCell;
        
        private DeployFromCell mDeployFromCell;
        
        private AdministratorCell mAdministratorCell;
        
        private ViewCell mViewCell;
        
        private ExecuteCell mExecuteCell;
        
        private ContributeCell mContributeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteCell : WpfCell
    {
        
        public DeleteCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "Dev2.Runtime.Configuration.ViewModels.Base.RelayCommand";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_AddRemovebtn_AutoID";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployToCell : WpfCell
    {
        
        public DeployToCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox DeployToCheckBox
        {
            get
            {
                if ((this.mDeployToCheckBox == null))
                {
                    this.mDeployToCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mDeployToCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_DeployToPermissionCheckBox_AutoID";
                    this.mDeployToCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Instance] = "1";
                    this.mDeployToCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeployToCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mDeployToCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployFromCell : WpfCell
    {
        
        public DeployFromCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox DeployFromCheckBox
        {
            get
            {
                if ((this.mDeployFromCheckBox == null))
                {
                    this.mDeployFromCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mDeployFromCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_DeployFromPermissionCheckBox_AutoID";
                    this.mDeployFromCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeployFromCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mDeployFromCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AdministratorCell : WpfCell
    {
        
        public AdministratorCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox AdministratorCheckBox
        {
            get
            {
                if ((this.mAdministratorCheckBox == null))
                {
                    this.mAdministratorCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAdministratorCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_AdministratorPermissionCheckBox_AutoID";
                    this.mAdministratorCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAdministratorCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mAdministratorCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ViewCell : WpfCell
    {
        
        public ViewCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ViewCheckBox
        {
            get
            {
                if ((this.mViewCheckBox == null))
                {
                    this.mViewCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_ViewPermissionCheckBox_AutoID";
                    this.mViewCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mViewCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteCell : WpfCell
    {
        
        public ExecuteCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ExecuteCheckBox
        {
            get
            {
                if ((this.mExecuteCheckBox == null))
                {
                    this.mExecuteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExecuteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_ExecutePermissionCheckBox_AutoID";
                    this.mExecuteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mExecuteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContributeCell : WpfCell
    {
        
        public ContributeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ContributeCheckBox
        {
            get
            {
                if ((this.mContributeCheckBox == null))
                {
                    this.mContributeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mContributeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_ContributePermissionCheckBox_AutoID";
                    this.mContributeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mContributeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mContributeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PublicROW : WpfPane
    {
        
        public PublicROW(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Public_DeployToCell Public_DeployToCell
        {
            get
            {
                if ((this.mPublic_DeployToCell == null))
                {
                    this.mPublic_DeployToCell = new Public_DeployToCell(this);
                }
                return this.mPublic_DeployToCell;
            }
        }
        
        public Public_DeployFromCell Public_DeployFromCell
        {
            get
            {
                if ((this.mPublic_DeployFromCell == null))
                {
                    this.mPublic_DeployFromCell = new Public_DeployFromCell(this);
                }
                return this.mPublic_DeployFromCell;
            }
        }
        
        public Public_AdministratorCell Public_AdministratorCell
        {
            get
            {
                if ((this.mPublic_AdministratorCell == null))
                {
                    this.mPublic_AdministratorCell = new Public_AdministratorCell(this);
                }
                return this.mPublic_AdministratorCell;
            }
        }
        
        public Public_ViewCell Public_ViewCell
        {
            get
            {
                if ((this.mPublic_ViewCell == null))
                {
                    this.mPublic_ViewCell = new Public_ViewCell(this);
                }
                return this.mPublic_ViewCell;
            }
        }
        
        public Public_ExecuteCell Public_ExecuteCell
        {
            get
            {
                if ((this.mPublic_ExecuteCell == null))
                {
                    this.mPublic_ExecuteCell = new Public_ExecuteCell(this);
                }
                return this.mPublic_ExecuteCell;
            }
        }
        
        public Public_ContributeCell Public_ContributeCell
        {
            get
            {
                if ((this.mPublic_ContributeCell == null))
                {
                    this.mPublic_ContributeCell = new Public_ContributeCell(this);
                }
                return this.mPublic_ContributeCell;
            }
        }
        
        public WindowsGroup WindowsGroup
        {
            get
            {
                if ((this.mWindowsGroup == null))
                {
                    this.mWindowsGroup = new WindowsGroup(this);
                }
                return this.mWindowsGroup;
            }
        }
        #endregion
        
        #region Fields
        private Public_DeployToCell mPublic_DeployToCell;
        
        private Public_DeployFromCell mPublic_DeployFromCell;
        
        private Public_AdministratorCell mPublic_AdministratorCell;
        
        private Public_ViewCell mPublic_ViewCell;
        
        private Public_ExecuteCell mPublic_ExecuteCell;
        
        private Public_ContributeCell mPublic_ContributeCell;
        
        private WindowsGroup mWindowsGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_DeployToCell : WpfCell
    {
        
        public Public_DeployToCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_DeployToCheckBox
        {
            get
            {
                if ((this.mPublic_DeployToCheckBox == null))
                {
                    this.mPublic_DeployToCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_DeployToCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_DeployToPermissionCheckBox_AutoID";
                    this.mPublic_DeployToCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_DeployToCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_DeployToCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_DeployFromCell : WpfCell
    {
        
        public Public_DeployFromCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_DeployFromCheckBox
        {
            get
            {
                if ((this.mPublic_DeployFromCheckBox == null))
                {
                    this.mPublic_DeployFromCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_DeployFromCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_DeployFromPermissionCheckBox_AutoID";
                    this.mPublic_DeployFromCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_DeployFromCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_DeployFromCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_AdministratorCell : WpfCell
    {
        
        public Public_AdministratorCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_AdministratorCheckBox
        {
            get
            {
                if ((this.mPublic_AdministratorCheckBox == null))
                {
                    this.mPublic_AdministratorCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_AdministratorCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_AdministratorPermissionCheckBox_AutoID";
                    this.mPublic_AdministratorCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_AdministratorCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_AdministratorCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_ViewCell : WpfCell
    {
        
        public Public_ViewCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_ViewCheckBox
        {
            get
            {
                if ((this.mPublic_ViewCheckBox == null))
                {
                    this.mPublic_ViewCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_ViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_ViewPermissionCheckBox_AutoID";
                    this.mPublic_ViewCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_ViewCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_ViewCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_ExecuteCell : WpfCell
    {
        
        public Public_ExecuteCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_ExecuteCheckBox
        {
            get
            {
                if ((this.mPublic_ExecuteCheckBox == null))
                {
                    this.mPublic_ExecuteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_ExecuteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_ExecutePermissionCheckBox_AutoID";
                    this.mPublic_ExecuteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_ExecuteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_ExecuteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_ContributeCell : WpfCell
    {
        
        public Public_ContributeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_ContributeCheckBox
        {
            get
            {
                if ((this.mPublic_ContributeCheckBox == null))
                {
                    this.mPublic_ContributeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_ContributeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_ContributePermissionCheckBox_AutoID";
                    this.mPublic_ContributeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_ContributeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_ContributeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WindowsGroup : WpfCell
    {
        
        public WindowsGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "Public";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton Select_GroupButton
        {
            get
            {
                if ((this.mSelect_GroupButton == null))
                {
                    this.mSelect_GroupButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSelect_GroupButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Public_AddWindowsGroupButton_AutoID";
                    this.mSelect_GroupButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelect_GroupButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mSelect_GroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourcePermissions : WpfTable
    {
        
        public ResourcePermissions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ResourcePermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row1(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row1 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1 : WpfPane
    {
        
        public Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceCell ResourceCell
        {
            get
            {
                if ((this.mResourceCell == null))
                {
                    this.mResourceCell = new ResourceCell(this);
                }
                return this.mResourceCell;
            }
        }
        
        public WindowsGroupCell WindowsGroupCell
        {
            get
            {
                if ((this.mWindowsGroupCell == null))
                {
                    this.mWindowsGroupCell = new WindowsGroupCell(this);
                }
                return this.mWindowsGroupCell;
            }
        }
        
        public ViewCell1 ViewCell
        {
            get
            {
                if ((this.mViewCell == null))
                {
                    this.mViewCell = new ViewCell1(this);
                }
                return this.mViewCell;
            }
        }
        
        public ExecuteCell1 ExecuteCell
        {
            get
            {
                if ((this.mExecuteCell == null))
                {
                    this.mExecuteCell = new ExecuteCell1(this);
                }
                return this.mExecuteCell;
            }
        }
        
        public ContributeCell1 ContributeCell
        {
            get
            {
                if ((this.mContributeCell == null))
                {
                    this.mContributeCell = new ContributeCell1(this);
                }
                return this.mContributeCell;
            }
        }
        
        public DeleteCell1 DeleteCell
        {
            get
            {
                if ((this.mDeleteCell == null))
                {
                    this.mDeleteCell = new DeleteCell1(this);
                }
                return this.mDeleteCell;
            }
        }
        #endregion
        
        #region Fields
        private ResourceCell mResourceCell;
        
        private WindowsGroupCell mWindowsGroupCell;
        
        private ViewCell1 mViewCell;
        
        private ExecuteCell1 mExecuteCell;
        
        private ContributeCell1 mContributeCell;
        
        private DeleteCell1 mDeleteCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceCell : WpfCell
    {
        
        public ResourceCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText AddResourceText
        {
            get
            {
                if ((this.mAddResourceText == null))
                {
                    this.mAddResourceText = new WpfText(this);
                    #region Search Criteria
                    this.mAddResourceText.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mAddResourceText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddResourceText;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__AddResourceButton_AutoID";
                    this.mItemButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mAddResourceText;
        
        private WpfButton mItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WindowsGroupCell : WpfCell
    {
        
        public WindowsGroupCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton AddWindowsGroupsButton
        {
            get
            {
                if ((this.mAddWindowsGroupsButton == null))
                {
                    this.mAddWindowsGroupsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAddWindowsGroupsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__AddWindowsGroupsButton_AutoID";
                    this.mAddWindowsGroupsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddWindowsGroupsButton;
            }
        }
        
        public WpfEdit AddWindowsGroupsEdit
        {
            get
            {
                if ((this.mAddWindowsGroupsEdit == null))
                {
                    this.mAddWindowsGroupsEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mAddWindowsGroupsEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__AddWindowsGroupsTextBox_AutoID";
                    this.mAddWindowsGroupsEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddWindowsGroupsEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mAddWindowsGroupsButton;
        
        private WpfEdit mAddWindowsGroupsEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ViewCell1 : WpfCell
    {
        
        public ViewCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ViewCheckBox
        {
            get
            {
                if ((this.mViewCheckBox == null))
                {
                    this.mViewCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Instance] = "1";
                    this.mViewCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mViewCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteCell1 : WpfCell
    {
        
        public ExecuteCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ExecuteCheckBox
        {
            get
            {
                if ((this.mExecuteCheckBox == null))
                {
                    this.mExecuteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExecuteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Instance] = "1";
                    this.mExecuteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mExecuteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContributeCell1 : WpfCell
    {
        
        public ContributeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ContributeCheckBox
        {
            get
            {
                if ((this.mContributeCheckBox == null))
                {
                    this.mContributeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mContributeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Instance] = "1";
                    this.mContributeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mContributeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mContributeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteCell1 : WpfCell
    {
        
        public DeleteCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.Instance] = "1";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoggingTab : WpfTabPage
    {
        
        public LoggingTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LogSettingsViewConte LogSettingsViewConte
        {
            get
            {
                if ((this.mLogSettingsViewConte == null))
                {
                    this.mLogSettingsViewConte = new LogSettingsViewConte(this);
                }
                return this.mLogSettingsViewConte;
            }
        }
        #endregion
        
        #region Fields
        private LogSettingsViewConte mLogSettingsViewConte;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LogSettingsViewConte : WpfCustom
    {
        
        public LogSettingsViewConte(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.LoggingView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LogSettingsViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public StudioLogs StudioLogs
        {
            get
            {
                if ((this.mStudioLogs == null))
                {
                    this.mStudioLogs = new StudioLogs(this);
                }
                return this.mStudioLogs;
            }
        }
        
        public ServerLogs ServerLogs
        {
            get
            {
                if ((this.mServerLogs == null))
                {
                    this.mServerLogs = new ServerLogs(this);
                }
                return this.mServerLogs;
            }
        }
        #endregion
        
        #region Fields
        private StudioLogs mStudioLogs;
        
        private ServerLogs mServerLogs;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StudioLogs : WpfPane
    {
        
        public StudioLogs(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public StudioLogFile StudioLogFile
        {
            get
            {
                if ((this.mStudioLogFile == null))
                {
                    this.mStudioLogFile = new StudioLogFile(this);
                }
                return this.mStudioLogFile;
            }
        }
        #endregion
        
        #region Fields
        private StudioLogFile mStudioLogFile;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StudioLogFile : WpfText
    {
        
        public StudioLogFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "   ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ItemHyperlink
        {
            get
            {
                if ((this.mItemHyperlink == null))
                {
                    this.mItemHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mItemHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Instance] = "1";
                    this.mItemHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerLogs : WpfPane
    {
        
        public ServerLogs(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerLogFile ServerLogFile
        {
            get
            {
                if ((this.mServerLogFile == null))
                {
                    this.mServerLogFile = new ServerLogFile(this);
                }
                return this.mServerLogFile;
            }
        }
        #endregion
        
        #region Fields
        private ServerLogFile mServerLogFile;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerLogFile : WpfText
    {
        
        public ServerLogFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "   ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ItemHyperlink
        {
            get
            {
                if ((this.mItemHyperlink == null))
                {
                    this.mItemHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mItemHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Instance] = "1";
                    this.mItemHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PerfomanceCounterTab : WpfTabPage
    {
        
        public PerfomanceCounterTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PerfmonViewContent PerfmonViewContent
        {
            get
            {
                if ((this.mPerfmonViewContent == null))
                {
                    this.mPerfmonViewContent = new PerfmonViewContent(this);
                }
                return this.mPerfmonViewContent;
            }
        }
        #endregion
        
        #region Fields
        private PerfmonViewContent mPerfmonViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PerfmonViewContent : WpfCustom
    {
        
        public PerfmonViewContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PerfCounterView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PerfmonViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceTable ResourceTable
        {
            get
            {
                if ((this.mResourceTable == null))
                {
                    this.mResourceTable = new ResourceTable(this);
                }
                return this.mResourceTable;
            }
        }
        
        public ServerTable ServerTable
        {
            get
            {
                if ((this.mServerTable == null))
                {
                    this.mServerTable = new ServerTable(this);
                }
                return this.mServerTable;
            }
        }
        
        public ResetCounter ResetCounter
        {
            get
            {
                if ((this.mResetCounter == null))
                {
                    this.mResetCounter = new ResetCounter(this);
                }
                return this.mResetCounter;
            }
        }
        #endregion
        
        #region Fields
        private ResourceTable mResourceTable;
        
        private ServerTable mServerTable;
        
        private ResetCounter mResetCounter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceTable : WpfTable
    {
        
        public ResourceTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ResourcePermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row11 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row11(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row11 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row11 : WpfPane
    {
        
        public Row11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "0";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TotalErrors TotalErrors
        {
            get
            {
                if ((this.mTotalErrors == null))
                {
                    this.mTotalErrors = new TotalErrors(this);
                }
                return this.mTotalErrors;
            }
        }
        
        public ResourceCell1 ResourceCell
        {
            get
            {
                if ((this.mResourceCell == null))
                {
                    this.mResourceCell = new ResourceCell1(this);
                }
                return this.mResourceCell;
            }
        }
        
        public RequestPerSecond RequestPerSecond
        {
            get
            {
                if ((this.mRequestPerSecond == null))
                {
                    this.mRequestPerSecond = new RequestPerSecond(this);
                }
                return this.mRequestPerSecond;
            }
        }
        
        public DeleteCell2 DeleteCell
        {
            get
            {
                if ((this.mDeleteCell == null))
                {
                    this.mDeleteCell = new DeleteCell2(this);
                }
                return this.mDeleteCell;
            }
        }
        
        public ConcurrentRequest ConcurrentRequest
        {
            get
            {
                if ((this.mConcurrentRequest == null))
                {
                    this.mConcurrentRequest = new ConcurrentRequest(this);
                }
                return this.mConcurrentRequest;
            }
        }
        
        public AverageExecTime AverageExecTime
        {
            get
            {
                if ((this.mAverageExecTime == null))
                {
                    this.mAverageExecTime = new AverageExecTime(this);
                }
                return this.mAverageExecTime;
            }
        }
        #endregion
        
        #region Fields
        private TotalErrors mTotalErrors;
        
        private ResourceCell1 mResourceCell;
        
        private RequestPerSecond mRequestPerSecond;
        
        private DeleteCell2 mDeleteCell;
        
        private ConcurrentRequest mConcurrentRequest;
        
        private AverageExecTime mAverageExecTime;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TotalErrors : WpfCell
    {
        
        public TotalErrors(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TotalErrorsCheckbox
        {
            get
            {
                if ((this.mTotalErrorsCheckbox == null))
                {
                    this.mTotalErrorsCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTotalErrorsCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTotalErrorsCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTotalErrorsCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceCell1 : WpfCell
    {
        
        public ResourceCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText ResourceTextBox
        {
            get
            {
                if ((this.mResourceTextBox == null))
                {
                    this.mResourceTextBox = new WpfText(this);
                    #region Search Criteria
                    this.mResourceTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceTextBox;
            }
        }
        
        public WpfButton ResourceButton
        {
            get
            {
                if ((this.mResourceButton == null))
                {
                    this.mResourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mResourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mResourceTextBox;
        
        private WpfButton mResourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RequestPerSecond : WpfCell
    {
        
        public RequestPerSecond(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox RequestPerSecondCheckbox
        {
            get
            {
                if ((this.mRequestPerSecondCheckbox == null))
                {
                    this.mRequestPerSecondCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequestPerSecondCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestPerSecondCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mRequestPerSecondCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteCell2 : WpfCell
    {
        
        public DeleteCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConcurrentRequest : WpfCell
    {
        
        public ConcurrentRequest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ConcurrentRequestCheckbox
        {
            get
            {
                if ((this.mConcurrentRequestCheckbox == null))
                {
                    this.mConcurrentRequestCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mConcurrentRequestCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConcurrentRequestCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mConcurrentRequestCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AverageExecTime : WpfCell
    {
        
        public AverageExecTime(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox AverageExecTimeCheckbox
        {
            get
            {
                if ((this.mAverageExecTimeCheckbox == null))
                {
                    this.mAverageExecTimeCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAverageExecTimeCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAverageExecTimeCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mAverageExecTimeCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerTable : WpfTable
    {
        
        public ServerTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ServerPermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AverageExecCounter AverageExecCounter
        {
            get
            {
                if ((this.mAverageExecCounter == null))
                {
                    this.mAverageExecCounter = new AverageExecCounter(this);
                }
                return this.mAverageExecCounter;
            }
        }
        
        public ConcurrRequest ConcurrRequest
        {
            get
            {
                if ((this.mConcurrRequest == null))
                {
                    this.mConcurrRequest = new ConcurrRequest(this);
                }
                return this.mConcurrRequest;
            }
        }
        
        public RequestPerSeccond RequestPerSeccond
        {
            get
            {
                if ((this.mRequestPerSeccond == null))
                {
                    this.mRequestPerSeccond = new RequestPerSeccond(this);
                }
                return this.mRequestPerSeccond;
            }
        }
        
        public TotalErrors1 TotalErrors
        {
            get
            {
                if ((this.mTotalErrors == null))
                {
                    this.mTotalErrors = new TotalErrors1(this);
                }
                return this.mTotalErrors;
            }
        }
        
        public WorkflowsNotFound WorkflowsNotFound
        {
            get
            {
                if ((this.mWorkflowsNotFound == null))
                {
                    this.mWorkflowsNotFound = new WorkflowsNotFound(this);
                }
                return this.mWorkflowsNotFound;
            }
        }
        
        public NotAuthorisedErrors NotAuthorisedErrors
        {
            get
            {
                if ((this.mNotAuthorisedErrors == null))
                {
                    this.mNotAuthorisedErrors = new NotAuthorisedErrors(this);
                }
                return this.mNotAuthorisedErrors;
            }
        }
        #endregion
        
        #region Fields
        private AverageExecCounter mAverageExecCounter;
        
        private ConcurrRequest mConcurrRequest;
        
        private RequestPerSeccond mRequestPerSeccond;
        
        private TotalErrors1 mTotalErrors;
        
        private WorkflowsNotFound mWorkflowsNotFound;
        
        private NotAuthorisedErrors mNotAuthorisedErrors;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AverageExecCounter : WpfCell
    {
        
        public AverageExecCounter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox AverageExecCounterCheckBox
        {
            get
            {
                if ((this.mAverageExecCounterCheckBox == null))
                {
                    this.mAverageExecCounterCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAverageExecCounterCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_New_DeployToPermissionCheckBox_AutoID";
                    this.mAverageExecCounterCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAverageExecCounterCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mAverageExecCounterCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConcurrRequest : WpfCell
    {
        
        public ConcurrRequest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ConcurrRequestCheckBox
        {
            get
            {
                if ((this.mConcurrRequestCheckBox == null))
                {
                    this.mConcurrRequestCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mConcurrRequestCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConcurrRequestCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mConcurrRequestCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RequestPerSeccond : WpfCell
    {
        
        public RequestPerSeccond(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox RequestPerSeccondCheckBox
        {
            get
            {
                if ((this.mRequestPerSeccondCheckBox == null))
                {
                    this.mRequestPerSeccondCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequestPerSeccondCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestPerSeccondCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mRequestPerSeccondCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TotalErrors1 : WpfCell
    {
        
        public TotalErrors1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TotalErrorsCheckBox
        {
            get
            {
                if ((this.mTotalErrorsCheckBox == null))
                {
                    this.mTotalErrorsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTotalErrorsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTotalErrorsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTotalErrorsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowsNotFound : WpfCell
    {
        
        public WorkflowsNotFound(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox WorkflowsNotFoundCheckBox
        {
            get
            {
                if ((this.mWorkflowsNotFoundCheckBox == null))
                {
                    this.mWorkflowsNotFoundCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mWorkflowsNotFoundCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflowsNotFoundCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mWorkflowsNotFoundCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NotAuthorisedErrors : WpfCell
    {
        
        public NotAuthorisedErrors(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox NotAuthorisedErrorsCheckBox
        {
            get
            {
                if ((this.mNotAuthorisedErrorsCheckBox == null))
                {
                    this.mNotAuthorisedErrorsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNotAuthorisedErrorsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNotAuthorisedErrorsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mNotAuthorisedErrorsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResetCounter : WpfText
    {
        
        public ResetCounter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "   ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ItemHyperlink
        {
            get
            {
                if ((this.mItemHyperlink == null))
                {
                    this.mItemHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mItemHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Instance] = "1";
                    this.mItemHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab : WpfTabPage
    {
        
        public WorkflowTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        
        public WorkSurfaceContext1 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext1(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfText Workflow1ciremoteText
        {
            get
            {
                if ((this.mWorkflow1ciremoteText == null))
                {
                    this.mWorkflow1ciremoteText = new WpfText(this);
                    #region Search Criteria
                    this.mWorkflow1ciremoteText.SearchProperties[WpfText.PropertyNames.Name] = "workflow1";
                    this.mWorkflow1ciremoteText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflow1ciremoteText;
            }
        }
        
        public ContentPane ContentPane
        {
            get
            {
                if ((this.mContentPane == null))
                {
                    this.mContentPane = new ContentPane(this);
                }
                return this.mContentPane;
            }
        }
        
        public WpfText TabDescription
        {
            get
            {
                if ((this.mTabDescription == null))
                {
                    this.mTabDescription = new WpfText(this);
                    #region Search Criteria
                    this.mTabDescription.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mTabDescription;
            }
        }
        
        public WpfText UIUnsaved1Text
        {
            get
            {
                if ((this.mUIUnsaved1Text == null))
                {
                    this.mUIUnsaved1Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved1Text.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 1";
                    this.mUIUnsaved1Text.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUIUnsaved1Text;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCloseButton;
        
        private WorkSurfaceContext1 mWorkSurfaceContext;
        
        private WpfText mWorkflow1ciremoteText;
        
        private ContentPane mContentPane;
        
        private WpfText mTabDescription;
        
        private WpfText mUIUnsaved1Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext1 : WpfCustom
    {
        
        public WorkSurfaceContext1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        
        public TopScrollViewerPane TopScrollViewerPane
        {
            get
            {
                if ((this.mTopScrollViewerPane == null))
                {
                    this.mTopScrollViewerPane = new TopScrollViewerPane(this);
                }
                return this.mTopScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView mWorkflowDesignerView;
        
        private TopScrollViewerPane mTopScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView : WpfCustom
    {
        
        public WorkflowDesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView : WpfCustom
    {
        
        public DesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfToggleButton ExpandAllToggleButton
        {
            get
            {
                if ((this.mExpandAllToggleButton == null))
                {
                    this.mExpandAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mExpandAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "expandAllButton";
                    this.mExpandAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandAllToggleButton;
            }
        }
        
        public WpfToggleButton CollapseAllToggleButton
        {
            get
            {
                if ((this.mCollapseAllToggleButton == null))
                {
                    this.mCollapseAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mCollapseAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "collapseAllButton";
                    this.mCollapseAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCollapseAllToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane mScrollViewerPane;
        
        private WpfToggleButton mExpandAllToggleButton;
        
        private WpfToggleButton mCollapseAllToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane : WpfPane
    {
        
        public ScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner : WpfCustom
    {
        
        public ActivityTypeDesigner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter : WpfCustom
    {
        
        public WorkflowItemPresenter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart : WpfCustom
    {
        
        public Flowchart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RabbitMQPublish RabbitMQPublish
        {
            get
            {
                if ((this.mRabbitMQPublish == null))
                {
                    this.mRabbitMQPublish = new RabbitMQPublish(this);
                }
                return this.mRabbitMQPublish;
            }
        }
        
        public RabbitMQConsume RabbitMQConsume
        {
            get
            {
                if ((this.mRabbitMQConsume == null))
                {
                    this.mRabbitMQConsume = new RabbitMQConsume(this);
                }
                return this.mRabbitMQConsume;
            }
        }
        
        public WebPut WebPut
        {
            get
            {
                if ((this.mWebPut == null))
                {
                    this.mWebPut = new WebPut(this);
                }
                return this.mWebPut;
            }
        }
        
        public WebDelete WebDelete
        {
            get
            {
                if ((this.mWebDelete == null))
                {
                    this.mWebDelete = new WebDelete(this);
                }
                return this.mWebDelete;
            }
        }
        
        public AssignObject1 AssignObject
        {
            get
            {
                if ((this.mAssignObject == null))
                {
                    this.mAssignObject = new AssignObject1(this);
                }
                return this.mAssignObject;
            }
        }
        
        public WebRequest1 WebRequest
        {
            get
            {
                if ((this.mWebRequest == null))
                {
                    this.mWebRequest = new WebRequest1(this);
                }
                return this.mWebRequest;
            }
        }
        
        public DotNetDll1 DotNetDll
        {
            get
            {
                if ((this.mDotNetDll == null))
                {
                    this.mDotNetDll = new DotNetDll1(this);
                }
                return this.mDotNetDll;
            }
        }
        
        public DataMerge1 DataMerge
        {
            get
            {
                if ((this.mDataMerge == null))
                {
                    this.mDataMerge = new DataMerge1(this);
                }
                return this.mDataMerge;
            }
        }
        
        public DataSplit1 DataSplit
        {
            get
            {
                if ((this.mDataSplit == null))
                {
                    this.mDataSplit = new DataSplit1(this);
                }
                return this.mDataSplit;
            }
        }
        
        public MySqlDatabase MySqlDatabase
        {
            get
            {
                if ((this.mMySqlDatabase == null))
                {
                    this.mMySqlDatabase = new MySqlDatabase(this);
                }
                return this.mMySqlDatabase;
            }
        }
        
        public SqlServerDatabase SqlServerDatabase
        {
            get
            {
                if ((this.mSqlServerDatabase == null))
                {
                    this.mSqlServerDatabase = new SqlServerDatabase(this);
                }
                return this.mSqlServerDatabase;
            }
        }
        
        public ODBCDatabaseActivCustom ODBCDatabaseActivCustom
        {
            get
            {
                if ((this.mODBCDatabaseActivCustom == null))
                {
                    this.mODBCDatabaseActivCustom = new ODBCDatabaseActivCustom(this);
                }
                return this.mODBCDatabaseActivCustom;
            }
        }
        
        public OracleDatabaseActCustom OracleDatabaseActCustom
        {
            get
            {
                if ((this.mOracleDatabaseActCustom == null))
                {
                    this.mOracleDatabaseActCustom = new OracleDatabaseActCustom(this);
                }
                return this.mOracleDatabaseActCustom;
            }
        }
        
        public PostgreSqlActivitCustom PostgreSqlActivitCustom
        {
            get
            {
                if ((this.mPostgreSqlActivitCustom == null))
                {
                    this.mPostgreSqlActivitCustom = new PostgreSqlActivitCustom(this);
                }
                return this.mPostgreSqlActivitCustom;
            }
        }
        
        public BaseConvert1 BaseConvert
        {
            get
            {
                if ((this.mBaseConvert == null))
                {
                    this.mBaseConvert = new BaseConvert1(this);
                }
                return this.mBaseConvert;
            }
        }
        
        public CaseConvert1 CaseConvert
        {
            get
            {
                if ((this.mCaseConvert == null))
                {
                    this.mCaseConvert = new CaseConvert1(this);
                }
                return this.mCaseConvert;
            }
        }
        
        public WpfCustom SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new WpfCustom(this);
                    #region Search Criteria
                    this.mSubWorkflow.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mSubWorkflow.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "workflow", PropertyExpressionOperator.Contains));
                    this.mSubWorkflow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSubWorkflow;
            }
        }
        
        public ForEach1 ForEach
        {
            get
            {
                if ((this.mForEach == null))
                {
                    this.mForEach = new ForEach1(this);
                }
                return this.mForEach;
            }
        }
        
        public Length1 Length
        {
            get
            {
                if ((this.mLength == null))
                {
                    this.mLength = new Length1(this);
                }
                return this.mLength;
            }
        }
        
        public FindRecordsIndex FindRecordsIndex
        {
            get
            {
                if ((this.mFindRecordsIndex == null))
                {
                    this.mFindRecordsIndex = new FindRecordsIndex(this);
                }
                return this.mFindRecordsIndex;
            }
        }
        
        public DeleteRecord DeleteRecord
        {
            get
            {
                if ((this.mDeleteRecord == null))
                {
                    this.mDeleteRecord = new DeleteRecord(this);
                }
                return this.mDeleteRecord;
            }
        }
        
        public SortRecords SortRecords
        {
            get
            {
                if ((this.mSortRecords == null))
                {
                    this.mSortRecords = new SortRecords(this);
                }
                return this.mSortRecords;
            }
        }
        
        public CountRecordset CountRecordset
        {
            get
            {
                if ((this.mCountRecordset == null))
                {
                    this.mCountRecordset = new CountRecordset(this);
                }
                return this.mCountRecordset;
            }
        }
        
        public SqlBulkInsert1 SqlBulkInsert
        {
            get
            {
                if ((this.mSqlBulkInsert == null))
                {
                    this.mSqlBulkInsert = new SqlBulkInsert1(this);
                }
                return this.mSqlBulkInsert;
            }
        }
        
        public Unique Unique
        {
            get
            {
                if ((this.mUnique == null))
                {
                    this.mUnique = new Unique(this);
                }
                return this.mUnique;
            }
        }
        
        public CreateJson1 CreateJson
        {
            get
            {
                if ((this.mCreateJson == null))
                {
                    this.mCreateJson = new CreateJson1(this);
                }
                return this.mCreateJson;
            }
        }
        
        public ExecuteCommandLine ExecuteCommandLine
        {
            get
            {
                if ((this.mExecuteCommandLine == null))
                {
                    this.mExecuteCommandLine = new ExecuteCommandLine(this);
                }
                return this.mExecuteCommandLine;
            }
        }
        
        public SharepointMoveFile SharepointMoveFile
        {
            get
            {
                if ((this.mSharepointMoveFile == null))
                {
                    this.mSharepointMoveFile = new SharepointMoveFile(this);
                }
                return this.mSharepointMoveFile;
            }
        }
        
        public SharepointCreateListItem SharepointCreateListItem
        {
            get
            {
                if ((this.mSharepointCreateListItem == null))
                {
                    this.mSharepointCreateListItem = new SharepointCreateListItem(this);
                }
                return this.mSharepointCreateListItem;
            }
        }
        
        public SharepointCopyFile SharepointCopyFile
        {
            get
            {
                if ((this.mSharepointCopyFile == null))
                {
                    this.mSharepointCopyFile = new SharepointCopyFile(this);
                }
                return this.mSharepointCopyFile;
            }
        }
        
        public SharepointDeleteFile SharepointDeleteFile
        {
            get
            {
                if ((this.mSharepointDeleteFile == null))
                {
                    this.mSharepointDeleteFile = new SharepointDeleteFile(this);
                }
                return this.mSharepointDeleteFile;
            }
        }
        
        public SharepointReadListItem SharepointReadListItem
        {
            get
            {
                if ((this.mSharepointReadListItem == null))
                {
                    this.mSharepointReadListItem = new SharepointReadListItem(this);
                }
                return this.mSharepointReadListItem;
            }
        }
        
        public SharepointUpdate SharepointUpdate
        {
            get
            {
                if ((this.mSharepointUpdate == null))
                {
                    this.mSharepointUpdate = new SharepointUpdate(this);
                }
                return this.mSharepointUpdate;
            }
        }
        
        public SharepointUploadFile SharepointUploadFile
        {
            get
            {
                if ((this.mSharepointUploadFile == null))
                {
                    this.mSharepointUploadFile = new SharepointUploadFile(this);
                }
                return this.mSharepointUploadFile;
            }
        }
        
        public SharepointDownloadFile SharepointDownloadFile
        {
            get
            {
                if ((this.mSharepointDownloadFile == null))
                {
                    this.mSharepointDownloadFile = new SharepointDownloadFile(this);
                }
                return this.mSharepointDownloadFile;
            }
        }
        
        public SharepointDeleteListItem SharepointDeleteListItem
        {
            get
            {
                if ((this.mSharepointDeleteListItem == null))
                {
                    this.mSharepointDeleteListItem = new SharepointDeleteListItem(this);
                }
                return this.mSharepointDeleteListItem;
            }
        }
        
        public SharepointReadFolder SharepointReadFolder
        {
            get
            {
                if ((this.mSharepointReadFolder == null))
                {
                    this.mSharepointReadFolder = new SharepointReadFolder(this);
                }
                return this.mSharepointReadFolder;
            }
        }
        
        public Calculate1 Calculate
        {
            get
            {
                if ((this.mCalculate == null))
                {
                    this.mCalculate = new Calculate1(this);
                }
                return this.mCalculate;
            }
        }
        
        public AggregateCalculat AggregateCalculat
        {
            get
            {
                if ((this.mAggregateCalculat == null))
                {
                    this.mAggregateCalculat = new AggregateCalculat(this);
                }
                return this.mAggregateCalculat;
            }
        }
        
        public DateTime1 DateTime
        {
            get
            {
                if ((this.mDateTime == null))
                {
                    this.mDateTime = new DateTime1(this);
                }
                return this.mDateTime;
            }
        }
        
        public DateTimeDifference1 DateTimeDifference
        {
            get
            {
                if ((this.mDateTimeDifference == null))
                {
                    this.mDateTimeDifference = new DateTimeDifference1(this);
                }
                return this.mDateTimeDifference;
            }
        }
        
        public GatherSystemInfo GatherSystemInfo
        {
            get
            {
                if ((this.mGatherSystemInfo == null))
                {
                    this.mGatherSystemInfo = new GatherSystemInfo(this);
                }
                return this.mGatherSystemInfo;
            }
        }
        
        public FormatNumber1 FormatNumber
        {
            get
            {
                if ((this.mFormatNumber == null))
                {
                    this.mFormatNumber = new FormatNumber1(this);
                }
                return this.mFormatNumber;
            }
        }
        
        public Random1 Random
        {
            get
            {
                if ((this.mRandom == null))
                {
                    this.mRandom = new Random1(this);
                }
                return this.mRandom;
            }
        }
        
        public SMTPEmail SMTPEmail
        {
            get
            {
                if ((this.mSMTPEmail == null))
                {
                    this.mSMTPEmail = new SMTPEmail(this);
                }
                return this.mSMTPEmail;
            }
        }
        
        public ExchangeEmail ExchangeEmail
        {
            get
            {
                if ((this.mExchangeEmail == null))
                {
                    this.mExchangeEmail = new ExchangeEmail(this);
                }
                return this.mExchangeEmail;
            }
        }
        
        public Comment1 Comment
        {
            get
            {
                if ((this.mComment == null))
                {
                    this.mComment = new Comment1(this);
                }
                return this.mComment;
            }
        }
        
        public XPath1 XPath
        {
            get
            {
                if ((this.mXPath == null))
                {
                    this.mXPath = new XPath1(this);
                }
                return this.mXPath;
            }
        }
        
        public DropboxDownload DropboxDownload
        {
            get
            {
                if ((this.mDropboxDownload == null))
                {
                    this.mDropboxDownload = new DropboxDownload(this);
                }
                return this.mDropboxDownload;
            }
        }
        
        public DropboxUpload DropboxUpload
        {
            get
            {
                if ((this.mDropboxUpload == null))
                {
                    this.mDropboxUpload = new DropboxUpload(this);
                }
                return this.mDropboxUpload;
            }
        }
        
        public DropboxDelete DropboxDelete
        {
            get
            {
                if ((this.mDropboxDelete == null))
                {
                    this.mDropboxDelete = new DropboxDelete(this);
                }
                return this.mDropboxDelete;
            }
        }
        
        public DropboxFileList DropboxFileList
        {
            get
            {
                if ((this.mDropboxFileList == null))
                {
                    this.mDropboxFileList = new DropboxFileList(this);
                }
                return this.mDropboxFileList;
            }
        }
        
        public PathCreate PathCreate
        {
            get
            {
                if ((this.mPathCreate == null))
                {
                    this.mPathCreate = new PathCreate(this);
                }
                return this.mPathCreate;
            }
        }
        
        public PathCopy PathCopy
        {
            get
            {
                if ((this.mPathCopy == null))
                {
                    this.mPathCopy = new PathCopy(this);
                }
                return this.mPathCopy;
            }
        }
        
        public PathDelete PathDelete
        {
            get
            {
                if ((this.mPathDelete == null))
                {
                    this.mPathDelete = new PathDelete(this);
                }
                return this.mPathDelete;
            }
        }
        
        public PathMove PathMove
        {
            get
            {
                if ((this.mPathMove == null))
                {
                    this.mPathMove = new PathMove(this);
                }
                return this.mPathMove;
            }
        }
        
        public FolderRead FolderRead
        {
            get
            {
                if ((this.mFolderRead == null))
                {
                    this.mFolderRead = new FolderRead(this);
                }
                return this.mFolderRead;
            }
        }
        
        public FileRead FileRead
        {
            get
            {
                if ((this.mFileRead == null))
                {
                    this.mFileRead = new FileRead(this);
                }
                return this.mFileRead;
            }
        }
        
        public FileWrite FileWrite
        {
            get
            {
                if ((this.mFileWrite == null))
                {
                    this.mFileWrite = new FileWrite(this);
                }
                return this.mFileWrite;
            }
        }
        
        public PathRename PathRename
        {
            get
            {
                if ((this.mPathRename == null))
                {
                    this.mPathRename = new PathRename(this);
                }
                return this.mPathRename;
            }
        }
        
        public UnZip1 UnZip
        {
            get
            {
                if ((this.mUnZip == null))
                {
                    this.mUnZip = new UnZip1(this);
                }
                return this.mUnZip;
            }
        }
        
        public Zip1 Zip
        {
            get
            {
                if ((this.mZip == null))
                {
                    this.mZip = new Zip1(this);
                }
                return this.mZip;
            }
        }
        
        public FindIndex1 FindIndex
        {
            get
            {
                if ((this.mFindIndex == null))
                {
                    this.mFindIndex = new FindIndex1(this);
                }
                return this.mFindIndex;
            }
        }
        
        public Replace1 Replace
        {
            get
            {
                if ((this.mReplace == null))
                {
                    this.mReplace = new Replace1(this);
                }
                return this.mReplace;
            }
        }
        
        public Decision1 Decision
        {
            get
            {
                if ((this.mDecision == null))
                {
                    this.mDecision = new Decision1(this);
                }
                return this.mDecision;
            }
        }
        
        public Switch1 Switch
        {
            get
            {
                if ((this.mSwitch == null))
                {
                    this.mSwitch = new Switch1(this);
                }
                return this.mSwitch;
            }
        }
        
        public Sequence1 Sequence
        {
            get
            {
                if ((this.mSequence == null))
                {
                    this.mSequence = new Sequence1(this);
                }
                return this.mSequence;
            }
        }
        
        public MultiAssign1 MultiAssign
        {
            get
            {
                if ((this.mMultiAssign == null))
                {
                    this.mMultiAssign = new MultiAssign1(this);
                }
                return this.mMultiAssign;
            }
        }
        
        public WpfCustom StartNode
        {
            get
            {
                if ((this.mStartNode == null))
                {
                    this.mStartNode = new WpfCustom(this);
                    #region Search Criteria
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.StartSymbol";
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.AutomationId] = "StartSymbol";
                    this.mStartNode.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStartNode;
            }
        }
        
        public WebPost WebPost
        {
            get
            {
                if ((this.mWebPost == null))
                {
                    this.mWebPost = new WebPost(this);
                }
                return this.mWebPost;
            }
        }
        
        public WpfCustom Connector1
        {
            get
            {
                if ((this.mConnector1 == null))
                {
                    this.mConnector1 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mConnector1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector1;
            }
        }
        
        public WpfCustom Connector2
        {
            get
            {
                if ((this.mConnector2 == null))
                {
                    this.mConnector2 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector2.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector2.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mConnector2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector2;
            }
        }
        
        public WpfCustom Connector3
        {
            get
            {
                if ((this.mConnector3 == null))
                {
                    this.mConnector3 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector3.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector3.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
                    this.mConnector3.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector3;
            }
        }
        
        public Error1 Error1
        {
            get
            {
                if ((this.mError1 == null))
                {
                    this.mError1 = new Error1(this);
                }
                return this.mError1;
            }
        }
        
        public WebGet WebGet
        {
            get
            {
                if ((this.mWebGet == null))
                {
                    this.mWebGet = new WebGet(this);
                }
                return this.mWebGet;
            }
        }
        
        public ExternalWorkFlow ExternalWorkFlow
        {
            get
            {
                if ((this.mExternalWorkFlow == null))
                {
                    this.mExternalWorkFlow = new ExternalWorkFlow(this);
                }
                return this.mExternalWorkFlow;
            }
        }
        
        public Javascript1 Javascript
        {
            get
            {
                if ((this.mJavascript == null))
                {
                    this.mJavascript = new Javascript1(this);
                }
                return this.mJavascript;
            }
        }
        
        public Python1 Python
        {
            get
            {
                if ((this.mPython == null))
                {
                    this.mPython = new Python1(this);
                }
                return this.mPython;
            }
        }
        
        public Ruby1 Ruby
        {
            get
            {
                if ((this.mRuby == null))
                {
                    this.mRuby = new Ruby1(this);
                }
                return this.mRuby;
            }
        }
        
        public SelectAndApply1 SelectAndApply
        {
            get
            {
                if ((this.mSelectAndApply == null))
                {
                    this.mSelectAndApply = new SelectAndApply1(this);
                }
                return this.mSelectAndApply;
            }
        }
        
        public WpfCustom HelloWorldWorkFlow
        {
            get
            {
                if ((this.mHelloWorldWorkFlow == null))
                {
                    this.mHelloWorldWorkFlow = new WpfCustom(this);
                    #region Search Criteria
                    this.mHelloWorldWorkFlow.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mHelloWorldWorkFlow.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Hello World(ServiceDesigner)";
                    this.mHelloWorldWorkFlow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHelloWorldWorkFlow;
            }
        }
        
        public WpfText Errors
        {
            get
            {
                if ((this.mErrors == null))
                {
                    this.mErrors = new WpfText(this);
                    #region Search Criteria
                    this.mErrors.SearchProperties[WpfText.PropertyNames.Name] = "Errors";
                    this.mErrors.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrors;
            }
        }
        
        public PrefixcontainsinvaliText PrefixcontainsinvaliText
        {
            get
            {
                if ((this.mPrefixcontainsinvaliText == null))
                {
                    this.mPrefixcontainsinvaliText = new PrefixcontainsinvaliText(this);
                }
                return this.mPrefixcontainsinvaliText;
            }
        }
        
        public DsfWebDeleteOutputsLargeView DsfWebDeleteOutputsLargeView
        {
            get
            {
                if ((this.mDsfWebDeleteOutputsLargeView == null))
                {
                    this.mDsfWebDeleteOutputsLargeView = new DsfWebDeleteOutputsLargeView(this);
                }
                return this.mDsfWebDeleteOutputsLargeView;
            }
        }
        
        public ComDll1 ComDll
        {
            get
            {
                if ((this.mComDll == null))
                {
                    this.mComDll = new ComDll1(this);
                }
                return this.mComDll;
            }
        }
        
        public WcfService WcfService
        {
            get
            {
                if ((this.mWcfService == null))
                {
                    this.mWcfService = new WcfService(this);
                }
                return this.mWcfService;
            }
        }
        
        public Adornert_numbernText Adornert_numbernText
        {
            get
            {
                if ((this.mAdornert_numbernText == null))
                {
                    this.mAdornert_numbernText = new Adornert_numbernText(this);
                }
                return this.mAdornert_numbernText;
            }
        }
        #endregion
        
        #region Fields
        private RabbitMQPublish mRabbitMQPublish;
        
        private RabbitMQConsume mRabbitMQConsume;
        
        private WebPut mWebPut;
        
        private WebDelete mWebDelete;
        
        private AssignObject1 mAssignObject;
        
        private WebRequest1 mWebRequest;
        
        private DotNetDll1 mDotNetDll;
        
        private DataMerge1 mDataMerge;
        
        private DataSplit1 mDataSplit;
        
        private MySqlDatabase mMySqlDatabase;
        
        private SqlServerDatabase mSqlServerDatabase;
        
        private ODBCDatabaseActivCustom mODBCDatabaseActivCustom;
        
        private OracleDatabaseActCustom mOracleDatabaseActCustom;
        
        private PostgreSqlActivitCustom mPostgreSqlActivitCustom;
        
        private BaseConvert1 mBaseConvert;
        
        private CaseConvert1 mCaseConvert;
        
        private WpfCustom mSubWorkflow;
        
        private ForEach1 mForEach;
        
        private Length1 mLength;
        
        private FindRecordsIndex mFindRecordsIndex;
        
        private DeleteRecord mDeleteRecord;
        
        private SortRecords mSortRecords;
        
        private CountRecordset mCountRecordset;
        
        private SqlBulkInsert1 mSqlBulkInsert;
        
        private Unique mUnique;
        
        private CreateJson1 mCreateJson;
        
        private ExecuteCommandLine mExecuteCommandLine;
        
        private SharepointMoveFile mSharepointMoveFile;
        
        private SharepointCreateListItem mSharepointCreateListItem;
        
        private SharepointCopyFile mSharepointCopyFile;
        
        private SharepointDeleteFile mSharepointDeleteFile;
        
        private SharepointReadListItem mSharepointReadListItem;
        
        private SharepointUpdate mSharepointUpdate;
        
        private SharepointUploadFile mSharepointUploadFile;
        
        private SharepointDownloadFile mSharepointDownloadFile;
        
        private SharepointDeleteListItem mSharepointDeleteListItem;
        
        private SharepointReadFolder mSharepointReadFolder;
        
        private Calculate1 mCalculate;
        
        private AggregateCalculat mAggregateCalculat;
        
        private DateTime1 mDateTime;
        
        private DateTimeDifference1 mDateTimeDifference;
        
        private GatherSystemInfo mGatherSystemInfo;
        
        private FormatNumber1 mFormatNumber;
        
        private Random1 mRandom;
        
        private SMTPEmail mSMTPEmail;
        
        private ExchangeEmail mExchangeEmail;
        
        private Comment1 mComment;
        
        private XPath1 mXPath;
        
        private DropboxDownload mDropboxDownload;
        
        private DropboxUpload mDropboxUpload;
        
        private DropboxDelete mDropboxDelete;
        
        private DropboxFileList mDropboxFileList;
        
        private PathCreate mPathCreate;
        
        private PathCopy mPathCopy;
        
        private PathDelete mPathDelete;
        
        private PathMove mPathMove;
        
        private FolderRead mFolderRead;
        
        private FileRead mFileRead;
        
        private FileWrite mFileWrite;
        
        private PathRename mPathRename;
        
        private UnZip1 mUnZip;
        
        private Zip1 mZip;
        
        private FindIndex1 mFindIndex;
        
        private Replace1 mReplace;
        
        private Decision1 mDecision;
        
        private Switch1 mSwitch;
        
        private Sequence1 mSequence;
        
        private MultiAssign1 mMultiAssign;
        
        private WpfCustom mStartNode;
        
        private WebPost mWebPost;
        
        private WpfCustom mConnector1;
        
        private WpfCustom mConnector2;
        
        private WpfCustom mConnector3;
        
        private Error1 mError1;
        
        private WebGet mWebGet;
        
        private ExternalWorkFlow mExternalWorkFlow;
        
        private Javascript1 mJavascript;
        
        private Python1 mPython;
        
        private Ruby1 mRuby;
        
        private SelectAndApply1 mSelectAndApply;
        
        private WpfCustom mHelloWorldWorkFlow;
        
        private WpfText mErrors;
        
        private PrefixcontainsinvaliText mPrefixcontainsinvaliText;
        
        private DsfWebDeleteOutputsLargeView mDsfWebDeleteOutputsLargeView;
        
        private ComDll1 mComDll;
        
        private WcfService mWcfService;
        
        private Adornert_numbernText mAdornert_numbernText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RabbitMQPublish : WpfCustom
    {
        
        public RabbitMQPublish(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RabbitMQPublishDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RabbitMQ Publish(RabbitMQPublishDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallViewContentCustom SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private SmallViewContentCustom mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom : WpfCustom
    {
        
        public LargeViewContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
                    this.mSourceComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public QueueNameComboBox QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public WpfCheckBox ExclusiveCheckBox
        {
            get
            {
                if ((this.mExclusiveCheckBox == null))
                {
                    this.mExclusiveCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExclusiveCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Exclusive";
                    this.mExclusiveCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExclusiveCheckBox;
            }
        }
        
        public WpfCheckBox DurableCheckBox
        {
            get
            {
                if ((this.mDurableCheckBox == null))
                {
                    this.mDurableCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mDurableCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Durable";
                    this.mDurableCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDurableCheckBox;
            }
        }
        
        public WpfCheckBox AutoDeleteCheckBox
        {
            get
            {
                if ((this.mAutoDeleteCheckBox == null))
                {
                    this.mAutoDeleteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAutoDeleteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Auto Delete";
                    this.mAutoDeleteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAutoDeleteCheckBox;
            }
        }
        
        public MessageComboBox MessageComboBox
        {
            get
            {
                if ((this.mMessageComboBox == null))
                {
                    this.mMessageComboBox = new MessageComboBox(this);
                }
                return this.mMessageComboBox;
            }
        }
        
        public ResultsComboBox ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox(this);
                }
                return this.mResultsComboBox;
            }
        }
        
        public OnErrorCustom OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private QueueNameComboBox mQueueNameComboBox;
        
        private WpfCheckBox mExclusiveCheckBox;
        
        private WpfCheckBox mDurableCheckBox;
        
        private WpfCheckBox mAutoDeleteCheckBox;
        
        private MessageComboBox mMessageComboBox;
        
        private ResultsComboBox mResultsComboBox;
        
        private OnErrorCustom mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox : WpfComboBox
    {
        
        public QueueNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MessageComboBox : WpfComboBox
    {
        
        public MessageComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox : WpfComboBox
    {
        
        public ResultsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom : WpfCustom
    {
        
        public OnErrorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup : WpfGroup
    {
        
        public OnErrorGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox mErrorVariableComboBox;
        
        private WebServiceComboBox mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox : WpfComboBox
    {
        
        public ErrorVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox : WpfComboBox
    {
        
        public WebServiceComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom : WpfCustom
    {
        
        public SmallViewContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
                    this.mSourceComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public QueueNameComboBox1 QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox1(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public MessageComboBox1 MessageComboBox
        {
            get
            {
                if ((this.mMessageComboBox == null))
                {
                    this.mMessageComboBox = new MessageComboBox1(this);
                }
                return this.mMessageComboBox;
            }
        }
        
        public ResultsComboBox1 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox1(this);
                }
                return this.mResultsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private QueueNameComboBox1 mQueueNameComboBox;
        
        private MessageComboBox1 mMessageComboBox;
        
        private ResultsComboBox1 mResultsComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox1 : WpfComboBox
    {
        
        public QueueNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MessageComboBox1 : WpfComboBox
    {
        
        public MessageComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox1 : WpfComboBox
    {
        
        public ResultsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RabbitMQConsume : WpfCustom
    {
        
        public RabbitMQConsume(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RabbitMQConsumeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RabbitMQ Consume(RabbitMQConsumeDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom1 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom1(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallViewContentCustom1 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom1(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom1 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private SmallViewContentCustom1 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom1 : WpfCustom
    {
        
        public LargeViewContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
                    this.mSourceComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public QueueNameComboBox2 QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox2(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public ResponseComboBox ResponseComboBox
        {
            get
            {
                if ((this.mResponseComboBox == null))
                {
                    this.mResponseComboBox = new ResponseComboBox(this);
                }
                return this.mResponseComboBox;
            }
        }
        
        public PrefetchComboBox PrefetchComboBox
        {
            get
            {
                if ((this.mPrefetchComboBox == null))
                {
                    this.mPrefetchComboBox = new PrefetchComboBox(this);
                }
                return this.mPrefetchComboBox;
            }
        }
        
        public TimeOutComboBox TimeOutComboBox
        {
            get
            {
                if ((this.mTimeOutComboBox == null))
                {
                    this.mTimeOutComboBox = new TimeOutComboBox(this);
                }
                return this.mTimeOutComboBox;
            }
        }
        
        public WpfCheckBox AcknowledgeCheckBox
        {
            get
            {
                if ((this.mAcknowledgeCheckBox == null))
                {
                    this.mAcknowledgeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAcknowledgeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Acknowledge";
                    this.mAcknowledgeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAcknowledgeCheckBox;
            }
        }
        
        public WpfCheckBox ReQueueCheckBox
        {
            get
            {
                if ((this.mReQueueCheckBox == null))
                {
                    this.mReQueueCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mReQueueCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "ReQueue";
                    this.mReQueueCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReQueueCheckBox;
            }
        }
        
        public ResultsComboBox2 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox2(this);
                }
                return this.mResultsComboBox;
            }
        }
        
        public OnErrorCustom1 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom1(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private QueueNameComboBox2 mQueueNameComboBox;
        
        private ResponseComboBox mResponseComboBox;
        
        private PrefetchComboBox mPrefetchComboBox;
        
        private TimeOutComboBox mTimeOutComboBox;
        
        private WpfCheckBox mAcknowledgeCheckBox;
        
        private WpfCheckBox mReQueueCheckBox;
        
        private ResultsComboBox2 mResultsComboBox;
        
        private OnErrorCustom1 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox2 : WpfComboBox
    {
        
        public QueueNameComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResponseComboBox : WpfComboBox
    {
        
        public ResponseComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrefetchComboBox : WpfComboBox
    {
        
        public PrefetchComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeOutComboBox : WpfComboBox
    {
        
        public TimeOutComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox2 : WpfComboBox
    {
        
        public ResultsComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom1 : WpfCustom
    {
        
        public OnErrorCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup1 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup1(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup1 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup1 : WpfGroup
    {
        
        public OnErrorGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox1 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox1(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox1 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox1(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox1 mErrorVariableComboBox;
        
        private WebServiceComboBox1 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox1 : WpfComboBox
    {
        
        public ErrorVariableComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox1 : WpfComboBox
    {
        
        public WebServiceComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom1 : WpfCustom
    {
        
        public SmallViewContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
                    this.mSourceComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public QueueNameComboBox3 QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox3(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public ResponseComboBox1 ResponseComboBox
        {
            get
            {
                if ((this.mResponseComboBox == null))
                {
                    this.mResponseComboBox = new ResponseComboBox1(this);
                }
                return this.mResponseComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private QueueNameComboBox3 mQueueNameComboBox;
        
        private ResponseComboBox1 mResponseComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox3 : WpfComboBox
    {
        
        public QueueNameComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResponseComboBox1 : WpfComboBox
    {
        
        public ResponseComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebPut : WpfCustom
    {
        
        public WebPut(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "PUT Web Method", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServicePutDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfEdit ResponseTextbox
        {
            get
            {
                if ((this.mResponseTextbox == null))
                {
                    this.mResponseTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ResponseTextbox";
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mResponseTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResponseTextbox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView mLargeView;
        
        private WpfEdit mResponseTextbox;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView : WpfCustom
    {
        
        public LargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        
        public Table Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table(this);
                }
                return this.mTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public SourcesComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfEdit RequestBody
        {
            get
            {
                if ((this.mRequestBody == null))
                {
                    this.mRequestBody = new WpfEdit(this);
                    #region Search Criteria
                    this.mRequestBody.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RequestBody";
                    this.mRequestBody.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestBody;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public InputsTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        
        private Table mTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private SourcesComboBox mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText mQueryStringText;
        
        private WpfEdit mRequestBody;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mDoneButton;
        
        private InputsTable mInputsTable;
        
        private WpfButton mTestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table : WpfTable
    {
        
        public Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow1 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow1(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow1 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow1 : WpfRow
    {
        
        public ItemRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell mItemValueCell;
        
        private HeaderCell mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell : WpfCell
    {
        
        public ItemValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox : WpfComboBox
    {
        
        public ValueComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell : WpfCell
    {
        
        public HeaderCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox : WpfComboBox
    {
        
        public HeaderComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox : WpfComboBox
    {
        
        public SourcesComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ComboboxListItemAsTestingReturnText
        {
            get
            {
                if ((this.mComboboxListItemAsTestingReturnText == null))
                {
                    this.mComboboxListItemAsTestingReturnText = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsTestingReturnText.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mComboboxListItemAsTestingReturnText.SearchProperties[WpfListItem.PropertyNames.Instance] = "9";
                    this.mComboboxListItemAsTestingReturnText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsTestingReturnText;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mComboboxListItemAsTestingReturnText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText : WpfText
    {
        
        public QueryStringText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable : WpfTable
    {
        
        public InputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SuccessImage
        {
            get
            {
                if ((this.mSuccessImage == null))
                {
                    this.mSuccessImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSuccessImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSuccessImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuccessImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSuccessImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebDelete : WpfCustom
    {
        
        public WebDelete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DELETE Web Method", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView1 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView1(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView1 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView1 : WpfCustom
    {
        
        public LargeView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfTable InputDataGridTable
        {
            get
            {
                if ((this.mInputDataGridTable == null))
                {
                    this.mInputDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputDataGridTable;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Paste a customized response instead";
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        
        public Table1 Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table1(this);
                }
                return this.mTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public SourcesComboBox1 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox1(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText1 QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText1(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Test the procedure or function";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfTable mInputDataGridTable;
        
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        
        private Table1 mTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private SourcesComboBox1 mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText1 mQueryStringText;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mTestButton;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table1 : WpfTable
    {
        
        public Table1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow11 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow11(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow11 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow11 : WpfRow
    {
        
        public ItemRow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell1 ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell1(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell1 HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell1(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell1 mItemValueCell;
        
        private HeaderCell1 mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell1 : WpfCell
    {
        
        public ItemValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox1 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox1(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox1 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox1 : WpfComboBox
    {
        
        public ValueComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell1 : WpfCell
    {
        
        public HeaderCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox1 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox1(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox1 mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox1 : WpfComboBox
    {
        
        public HeaderComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox1 : WpfComboBox
    {
        
        public SourcesComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UITesting
        {
            get
            {
                if ((this.mUITesting == null))
                {
                    this.mUITesting = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITesting.SearchProperties[WpfListItem.PropertyNames.Instance] = "8";
                    this.mUITesting.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITesting;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUITesting;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText1 : WpfText
    {
        
        public QueryStringText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignObject1 : WpfCustom
    {
        
        public AssignObject1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignObjectDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Assign Object (0)(MultiAssignObjectDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInput
        {
            get
            {
                if ((this.mOpenQuickVariableInput == null))
                {
                    this.mOpenQuickVariableInput = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInput.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInput.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInput;
            }
        }
        
        public WpfEdit DisplayNameTextbox
        {
            get
            {
                if ((this.mDisplayNameTextbox == null))
                {
                    this.mDisplayNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameBox";
                    this.mDisplayNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayNameTextbox;
            }
        }
        
        public SmallView SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView2 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView2(this);
                }
                return this.mLargeView;
            }
        }
        
        public QuickVariableInputContent QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInput;
        
        private WpfEdit mDisplayNameTextbox;
        
        private SmallView mSmallView;
        
        private LargeView2 mLargeView;
        
        private QuickVariableInputContent mQuickVariableInputContent;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView : WpfCustom
    {
        
        public SmallView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid : WpfTable
    {
        
        public DataGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row12 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row12(this);
                }
                return this.mRow1;
            }
        }
        
        public Row2 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row2(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row12 mRow1;
        
        private Row2 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row12 : WpfRow
    {
        
        public Row12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell mVariableCell;
        
        private ValueCell mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell : WpfCell
    {
        
        public VariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTextbox VariableTextbox
        {
            get
            {
                if ((this.mVariableTextbox == null))
                {
                    this.mVariableTextbox = new VariableTextbox(this);
                }
                return this.mVariableTextbox;
            }
        }
        #endregion
        
        #region Fields
        private VariableTextbox mVariableTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTextbox : WpfEdit
    {
        
        public VariableTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText VariableTextboxFloatingText
        {
            get
            {
                if ((this.mVariableTextboxFloatingText == null))
                {
                    this.mVariableTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextboxFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "[[Variable1]]";
                    this.mVariableTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mVariableTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell : WpfCell
    {
        
        public ValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2 : WpfRow
    {
        
        public Row2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell1 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell1(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell1 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell1(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell1 mVariableCell;
        
        private ValueCell1 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell1 : WpfCell
    {
        
        public VariableCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit VariableTextbox
        {
            get
            {
                if ((this.mVariableTextbox == null))
                {
                    this.mVariableTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mVariableTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
                    this.mVariableTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mVariableTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell1 : WpfCell
    {
        
        public ValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView2 : WpfCustom
    {
        
        public LargeView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid1 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid1(this);
                }
                return this.mDataGrid;
            }
        }
        
        public WpfText AddRowsMessage
        {
            get
            {
                if ((this.mAddRowsMessage == null))
                {
                    this.mAddRowsMessage = new WpfText(this);
                    #region Search Criteria
                    this.mAddRowsMessage.SearchProperties[WpfText.PropertyNames.Name] = "Type in the empty rows to add new rows.";
                    this.mAddRowsMessage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddRowsMessage;
            }
        }
        
        public WpfText InsertDeleteRowsMessage
        {
            get
            {
                if ((this.mInsertDeleteRowsMessage == null))
                {
                    this.mInsertDeleteRowsMessage = new WpfText(this);
                    #region Search Criteria
                    this.mInsertDeleteRowsMessage.SearchProperties[WpfText.PropertyNames.Name] = "Right click to insert or delete rows.";
                    this.mInsertDeleteRowsMessage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInsertDeleteRowsMessage;
            }
        }
        
        public OnError OnError
        {
            get
            {
                if ((this.mOnError == null))
                {
                    this.mOnError = new OnError(this);
                }
                return this.mOnError;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid1 mDataGrid;
        
        private WpfText mAddRowsMessage;
        
        private WpfText mInsertDeleteRowsMessage;
        
        private OnError mOnError;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid1 : WpfTable
    {
        
        public DataGrid1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row13 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row13(this);
                }
                return this.mRow1;
            }
        }
        
        public Row21 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row21(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row13 mRow1;
        
        private Row21 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row13 : WpfRow
    {
        
        public Row13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldCell FieldCell
        {
            get
            {
                if ((this.mFieldCell == null))
                {
                    this.mFieldCell = new FieldCell(this);
                }
                return this.mFieldCell;
            }
        }
        
        public FieldValueCell FieldValueCell
        {
            get
            {
                if ((this.mFieldValueCell == null))
                {
                    this.mFieldValueCell = new FieldValueCell(this);
                }
                return this.mFieldValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FieldCell mFieldCell;
        
        private FieldValueCell mFieldValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldCell : WpfCell
    {
        
        public FieldCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldNameComboBox FieldNameComboBox
        {
            get
            {
                if ((this.mFieldNameComboBox == null))
                {
                    this.mFieldNameComboBox = new FieldNameComboBox(this);
                }
                return this.mFieldNameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldNameComboBox mFieldNameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldNameComboBox : WpfComboBox
    {
        
        public FieldNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueCell : WpfCell
    {
        
        public FieldValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldValueComboBox FieldValueComboBox
        {
            get
            {
                if ((this.mFieldValueComboBox == null))
                {
                    this.mFieldValueComboBox = new FieldValueComboBox(this);
                }
                return this.mFieldValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldValueComboBox mFieldValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueComboBox : WpfComboBox
    {
        
        public FieldValueComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row21 : WpfRow
    {
        
        public Row21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldValueCell1 FieldValueCell
        {
            get
            {
                if ((this.mFieldValueCell == null))
                {
                    this.mFieldValueCell = new FieldValueCell1(this);
                }
                return this.mFieldValueCell;
            }
        }
        
        public FieldCell1 FieldCell
        {
            get
            {
                if ((this.mFieldCell == null))
                {
                    this.mFieldCell = new FieldCell1(this);
                }
                return this.mFieldCell;
            }
        }
        #endregion
        
        #region Fields
        private FieldValueCell1 mFieldValueCell;
        
        private FieldCell1 mFieldCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueCell1 : WpfCell
    {
        
        public FieldValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldValueComboBox1 FieldValueComboBox
        {
            get
            {
                if ((this.mFieldValueComboBox == null))
                {
                    this.mFieldValueComboBox = new FieldValueComboBox1(this);
                }
                return this.mFieldValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldValueComboBox1 mFieldValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueComboBox1 : WpfComboBox
    {
        
        public FieldValueComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldCell1 : WpfCell
    {
        
        public FieldCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldNameComboBox1 FieldNameComboBox
        {
            get
            {
                if ((this.mFieldNameComboBox == null))
                {
                    this.mFieldNameComboBox = new FieldNameComboBox1(this);
                }
                return this.mFieldNameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldNameComboBox1 mFieldNameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldNameComboBox1 : WpfComboBox
    {
        
        public FieldNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnError : WpfCustom
    {
        
        public OnError(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup2 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup2(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup2 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup2 : WpfGroup
    {
        
        public OnErrorGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ErrorVariable
        {
            get
            {
                if ((this.mErrorVariable == null))
                {
                    this.mErrorVariable = new WpfEdit(this);
                    #region Search Criteria
                    this.mErrorVariable.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Variable_AutoID";
                    this.mErrorVariable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorVariable;
            }
        }
        
        public WpfEdit ErrorWebservice
        {
            get
            {
                if ((this.mErrorWebservice == null))
                {
                    this.mErrorWebservice = new WpfEdit(this);
                    #region Search Criteria
                    this.mErrorWebservice.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
                    this.mErrorWebservice.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorWebservice;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mErrorVariable;
        
        private WpfEdit mErrorWebservice;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent : WpfCustom
    {
        
        public QuickVariableInputContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixWithEdit
        {
            get
            {
                if ((this.mPrefixWithEdit == null))
                {
                    this.mPrefixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixWithEdit;
            }
        }
        
        public PreviewCustom PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfEdit SurfixWithEdit
        {
            get
            {
                if ((this.mSurfixWithEdit == null))
                {
                    this.mSurfixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSurfixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSurfixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSurfixWithEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixWithEdit;
        
        private PreviewCustom mPreviewCustom;
        
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfEdit mSurfixWithEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom : WpfCustom
    {
        
        public PreviewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup : WpfGroup
    {
        
        public PreviewGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton : WpfButton
    {
        
        public PreviewButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebRequest1 : WpfCustom
    {
        
        public WebRequest1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.GetWebRequestWithTimeOutDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Web Request(GetWebRequestWithTimeOutDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new WpfCustom(this);
                    #region Search Criteria
                    this.mLargeView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
                    this.mLargeView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
                    this.mLargeView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom2 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom2(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom2 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom2(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mLargeView;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom2 mLargeViewContentCustom;
        
        private SmallViewContentCustom2 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom2 : WpfCustom
    {
        
        public LargeViewContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public HeaderComboBox2 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox2(this);
                }
                return this.mHeaderComboBox;
            }
        }
        
        public TimeOutComboBox1 TimeOutComboBox
        {
            get
            {
                if ((this.mTimeOutComboBox == null))
                {
                    this.mTimeOutComboBox = new TimeOutComboBox1(this);
                }
                return this.mTimeOutComboBox;
            }
        }
        
        public ResultComboBox ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public PreviewCustom1 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom1(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public OnErrorCustom2 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom2(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox mInputComboBox;
        
        private HeaderComboBox2 mHeaderComboBox;
        
        private TimeOutComboBox1 mTimeOutComboBox;
        
        private ResultComboBox mResultComboBox;
        
        private PreviewCustom1 mPreviewCustom;
        
        private OnErrorCustom2 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox : WpfComboBox
    {
        
        public InputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox2 : WpfComboBox
    {
        
        public HeaderComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeOutComboBox1 : WpfComboBox
    {
        
        public TimeOutComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "The length of time to wait for a web request to complete before failing";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox : WpfComboBox
    {
        
        public ResultComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom1 : WpfCustom
    {
        
        public PreviewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup1 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup1(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup1 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup1 : WpfGroup
    {
        
        public PreviewGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton1 PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton1(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton1 mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton1 : WpfButton
    {
        
        public PreviewButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom2 : WpfCustom
    {
        
        public OnErrorCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup3 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup3(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup3 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup3 : WpfGroup
    {
        
        public OnErrorGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox2 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox2(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebSerciveComboBox WebSerciveComboBox
        {
            get
            {
                if ((this.mWebSerciveComboBox == null))
                {
                    this.mWebSerciveComboBox = new WebSerciveComboBox(this);
                }
                return this.mWebSerciveComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox2 mErrorVariableComboBox;
        
        private WebSerciveComboBox mWebSerciveComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox2 : WpfComboBox
    {
        
        public ErrorVariableComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebSerciveComboBox : WpfComboBox
    {
        
        public WebSerciveComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom2 : WpfCustom
    {
        
        public SmallViewContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox1 InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox1(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public ResultComboBox1 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox1(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox1 mInputComboBox;
        
        private ResultComboBox1 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox1 : WpfComboBox
    {
        
        public InputComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox1 : WpfComboBox
    {
        
        public ResultComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DotNetDll1 : WpfCustom
    {
        
        public DotNetDll1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DotNetDllDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DotNet DLL", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView3 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView3(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView3 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView3 : WpfCustom
    {
        
        public LargeView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox2 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox2(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public ActionsComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public ClassNameComboBox ClassNameComboBox
        {
            get
            {
                if ((this.mClassNameComboBox == null))
                {
                    this.mClassNameComboBox = new ClassNameComboBox(this);
                }
                return this.mClassNameComboBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public WpfButton NewSourcButton
        {
            get
            {
                if ((this.mNewSourcButton == null))
                {
                    this.mNewSourcButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourcButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourcButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourcButton;
            }
        }
        
        public LargeDataGridTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox2 mSourcesComboBox;
        
        private ActionsComboBox mActionsComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mInputsTable;
        
        private ClassNameComboBox mClassNameComboBox;
        
        private WpfButton mDoneButton;
        
        private WpfButton mTestButton;
        
        private WpfButton mNewSourcButton;
        
        private LargeDataGridTable mLargeDataGridTable;
        
        private WpfButton mCancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox2 : WpfComboBox
    {
        
        public SourcesComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ListItem1
        {
            get
            {
                if ((this.mListItem1 == null))
                {
                    this.mListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem1.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mListItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem1;
            }
        }
        
        public WpfListItem DotNetSource
        {
            get
            {
                if ((this.mDotNetSource == null))
                {
                    this.mDotNetSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetSource.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mDotNetSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDotNetSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mListItem1;
        
        private WpfListItem mDotNetSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox : WpfComboBox
    {
        
        public ActionsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Item1
        {
            get
            {
                if ((this.mItem1 == null))
                {
                    this.mItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mItem1.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItem1;
            }
        }
        
        public WpfListItem NextListItem
        {
            get
            {
                if ((this.mNextListItem == null))
                {
                    this.mNextListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNextListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Next";
                    this.mNextListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNextListItem;
            }
        }
        
        public WpfListItem EqualsAction
        {
            get
            {
                if ((this.mEqualsAction == null))
                {
                    this.mEqualsAction = new WpfListItem(this);
                    #region Search Criteria
                    this.mEqualsAction.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.PluginAction";
                    this.mEqualsAction.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEqualsAction;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mItem1;
        
        private WpfListItem mNextListItem;
        
        private WpfListItem mEqualsAction;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ClassNameComboBox : WpfComboBox
    {
        
        public ClassNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "NamespaceComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ComboboxlistItemAsSystemObject
        {
            get
            {
                if ((this.mComboboxlistItemAsSystemObject == null))
                {
                    this.mComboboxlistItemAsSystemObject = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxlistItemAsSystemObject.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mComboboxlistItemAsSystemObject.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxlistItemAsSystemObject;
            }
        }
        
        public WpfListItem SystemRandomListItem
        {
            get
            {
                if ((this.mSystemRandomListItem == null))
                {
                    this.mSystemRandomListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSystemRandomListItem.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "System.Random", PropertyExpressionOperator.Contains));
                    this.mSystemRandomListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSystemRandomListItem;
            }
        }
        
        public WpfListItem AssemblyLocationGACCListItem
        {
            get
            {
                if ((this.mAssemblyLocationGACCListItem == null))
                {
                    this.mAssemblyLocationGACCListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mAssemblyLocationGACCListItem.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""AssemblyLocation"":""GAC:CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=AMD64"",""AssemblyName"":""CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=AMD64"",""FullName"":""ReplacesCorHdrNumericDefines"",""MethodName"":null}";
                    this.mAssemblyLocationGACCListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssemblyLocationGACCListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mComboboxlistItemAsSystemObject;
        
        private WpfListItem mSystemRandomListItem;
        
        private WpfListItem mAssemblyLocationGACCListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable : WpfTable
    {
        
        public LargeDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row14 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row14(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row14 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row14 : WpfRow
    {
        
        public Row14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputVariableCell InputVariableCell
        {
            get
            {
                if ((this.mInputVariableCell == null))
                {
                    this.mInputVariableCell = new InputVariableCell(this);
                }
                return this.mInputVariableCell;
            }
        }
        
        public EmptyIsNullCell EmptyIsNullCell
        {
            get
            {
                if ((this.mEmptyIsNullCell == null))
                {
                    this.mEmptyIsNullCell = new EmptyIsNullCell(this);
                }
                return this.mEmptyIsNullCell;
            }
        }
        #endregion
        
        #region Fields
        private InputVariableCell mInputVariableCell;
        
        private EmptyIsNullCell mEmptyIsNullCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputVariableCell : WpfCell
    {
        
        public InputVariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputVariableComboBox InputVariableComboBox
        {
            get
            {
                if ((this.mInputVariableComboBox == null))
                {
                    this.mInputVariableComboBox = new InputVariableComboBox(this);
                }
                return this.mInputVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputVariableComboBox mInputVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputVariableComboBox : WpfComboBox
    {
        
        public InputVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EmptyIsNullCell : WpfCell
    {
        
        public EmptyIsNullCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Empty Is Null";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox EmptyIsNullCheckBox
        {
            get
            {
                if ((this.mEmptyIsNullCheckBox == null))
                {
                    this.mEmptyIsNullCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEmptyIsNullCheckBox.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Use NULL when empty.";
                    this.mEmptyIsNullCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEmptyIsNullCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mEmptyIsNullCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataMerge1 : WpfCustom
    {
        
        public DataMerge1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataMergeDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DataMergeDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfEdit DisplayName
        {
            get
            {
                if ((this.mDisplayName == null))
                {
                    this.mDisplayName = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayName.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameBox";
                    this.mDisplayName.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayName;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallView1 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView1(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView4 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView4(this);
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private WpfEdit mDisplayName;
        
        private WpfButton mDoneButton;
        
        private SmallView1 mSmallView;
        
        private LargeView4 mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView1 : WpfCustom
    {
        
        public SmallView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UISmallDataGridTable UISmallDataGridTable
        {
            get
            {
                if ((this.mUISmallDataGridTable == null))
                {
                    this.mUISmallDataGridTable = new UISmallDataGridTable(this);
                }
                return this.mUISmallDataGridTable;
            }
        }
        
        public WpfEdit ResultTextbox
        {
            get
            {
                if ((this.mResultTextbox == null))
                {
                    this.mResultTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mResultTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
                    this.mResultTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResultTextbox;
            }
        }
        #endregion
        
        #region Fields
        private UISmallDataGridTable mUISmallDataGridTable;
        
        private WpfEdit mResultTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISmallDataGridTable : WpfTable
    {
        
        public UISmallDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row Row
        {
            get
            {
                if ((this.mRow == null))
                {
                    this.mRow = new Row(this);
                }
                return this.mRow;
            }
        }
        
        public Row22 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row22(this);
                }
                return this.mRow2;
            }
        }
        
        public Row3 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row3(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row mRow;
        
        private Row22 mRow2;
        
        private Row3 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row : WpfRow
    {
        
        public Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell mInputCell;
        
        private UsingCell mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell : WpfCell
    {
        
        public InputCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1InputVariabComboBox Row1InputVariabComboBox
        {
            get
            {
                if ((this.mRow1InputVariabComboBox == null))
                {
                    this.mRow1InputVariabComboBox = new Row1InputVariabComboBox(this);
                }
                return this.mRow1InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1InputVariabComboBox mRow1InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1InputVariabComboBox : WpfComboBox
    {
        
        public Row1InputVariabComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell : WpfCell
    {
        
        public UsingCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1UsingDComboBox Row1UsingDComboBox
        {
            get
            {
                if ((this.mRow1UsingDComboBox == null))
                {
                    this.mRow1UsingDComboBox = new Row1UsingDComboBox(this);
                }
                return this.mRow1UsingDComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1UsingDComboBox mRow1UsingDComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1UsingDComboBox : WpfComboBox
    {
        
        public Row1UsingDComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row22 : WpfRow
    {
        
        public Row22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell1 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell1(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell1 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell1(this);
                }
                return this.mUsingCell;
            }
        }
        
        public WpfCell MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new WpfCell(this);
                    #region Search Criteria
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
                    this.mMergeTypeCell.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell1 mInputCell;
        
        private UsingCell1 mUsingCell;
        
        private WpfCell mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell1 : WpfCell
    {
        
        public InputCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2InputVariabComboBox Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2InputVariabComboBox mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox : WpfComboBox
    {
        
        public Row2InputVariabComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell1 : WpfCell
    {
        
        public UsingCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2UsingComboBox Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2UsingComboBox mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox : WpfComboBox
    {
        
        public Row2UsingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row3 : WpfRow
    {
        
        public Row3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MergeTypeCell MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell(this);
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private MergeTypeCell mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell : WpfCell
    {
        
        public MergeTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow4MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
                    this.mRow4MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView4 : WpfCustom
    {
        
        public LargeView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatGrid DatGrid
        {
            get
            {
                if ((this.mDatGrid == null))
                {
                    this.mDatGrid = new DatGrid(this);
                }
                return this.mDatGrid;
            }
        }
        
        public WpfEdit ResultTextbox
        {
            get
            {
                if ((this.mResultTextbox == null))
                {
                    this.mResultTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mResultTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
                    this.mResultTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResultTextbox;
            }
        }
        
        public OnErrorGroup4 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup4(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private DatGrid mDatGrid;
        
        private WpfEdit mResultTextbox;
        
        private OnErrorGroup4 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatGrid : WpfTable
    {
        
        public DatGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row4 Row
        {
            get
            {
                if ((this.mRow == null))
                {
                    this.mRow = new Row4(this);
                }
                return this.mRow;
            }
        }
        
        public Row23 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row23(this);
                }
                return this.mRow2;
            }
        }
        
        public Row31 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row31(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row4 mRow;
        
        private Row23 mRow2;
        
        private Row31 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row4 : WpfRow
    {
        
        public Row4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell2 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell2(this);
                }
                return this.mInputCell;
            }
        }
        
        public MergeTypeCell1 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell1(this);
                }
                return this.mMergeTypeCell;
            }
        }
        
        public UsingCell2 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell2(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell2 mInputCell;
        
        private MergeTypeCell1 mMergeTypeCell;
        
        private UsingCell2 mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell2 : WpfCell
    {
        
        public InputCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1InputVariabComboBox1 Row1InputVariabComboBox
        {
            get
            {
                if ((this.mRow1InputVariabComboBox == null))
                {
                    this.mRow1InputVariabComboBox = new Row1InputVariabComboBox1(this);
                }
                return this.mRow1InputVariabComboBox;
            }
        }
        
        public Row2InputVariabComboBox1 Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox1(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1InputVariabComboBox1 mRow1InputVariabComboBox;
        
        private Row2InputVariabComboBox1 mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1InputVariabComboBox1 : WpfComboBox
    {
        
        public Row1InputVariabComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox1 : WpfComboBox
    {
        
        public Row2InputVariabComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell1 : WpfCell
    {
        
        public MergeTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row1MergeTypeComboBox
        {
            get
            {
                if ((this.mRow1MergeTypeComboBox == null))
                {
                    this.mRow1MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow1MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_MergeType_AutoID";
                    this.mRow1MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow1MergeTypeComboBox;
            }
        }
        
        public WpfComboBox Row2MergeTypeComboBox
        {
            get
            {
                if ((this.mRow2MergeTypeComboBox == null))
                {
                    this.mRow2MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow2MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_MergeType_AutoID";
                    this.mRow2MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow2MergeTypeComboBox;
            }
        }
        
        public Row4MergeTypeComboBox Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new Row4MergeTypeComboBox(this);
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow1MergeTypeComboBox;
        
        private WpfComboBox mRow2MergeTypeComboBox;
        
        private Row4MergeTypeComboBox mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row4MergeTypeComboBox : WpfComboBox
    {
        
        public Row4MergeTypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewLineListItem
        {
            get
            {
                if ((this.mNewLineListItem == null))
                {
                    this.mNewLineListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewLineListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "New Line";
                    this.mNewLineListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewLineListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewLineListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell2 : WpfCell
    {
        
        public UsingCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Using";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1UsingComboBox Row1UsingComboBox
        {
            get
            {
                if ((this.mRow1UsingComboBox == null))
                {
                    this.mRow1UsingComboBox = new Row1UsingComboBox(this);
                }
                return this.mRow1UsingComboBox;
            }
        }
        
        public Row2UsingComboBox1 Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox1(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1UsingComboBox mRow1UsingComboBox;
        
        private Row2UsingComboBox1 mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1UsingComboBox : WpfComboBox
    {
        
        public Row1UsingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox1 : WpfComboBox
    {
        
        public Row2UsingComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row23 : WpfRow
    {
        
        public Row23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell3 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell3(this);
                }
                return this.mInputCell;
            }
        }
        
        public MergeTypeCell2 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell2(this);
                }
                return this.mMergeTypeCell;
            }
        }
        
        public UsingCell3 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell3(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell3 mInputCell;
        
        private MergeTypeCell2 mMergeTypeCell;
        
        private UsingCell3 mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell3 : WpfCell
    {
        
        public InputCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2InputVariabComboBox2 Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox2(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2InputVariabComboBox2 mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox2 : WpfComboBox
    {
        
        public Row2InputVariabComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell2 : WpfCell
    {
        
        public MergeTypeCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row2MergeTypeComboBox
        {
            get
            {
                if ((this.mRow2MergeTypeComboBox == null))
                {
                    this.mRow2MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow2MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_MergeType_AutoID";
                    this.mRow2MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow2MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow2MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell3 : WpfCell
    {
        
        public UsingCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Using";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2UsingComboBox2 Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox2(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2UsingComboBox2 mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox2 : WpfComboBox
    {
        
        public Row2UsingComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row31 : WpfRow
    {
        
        public Row31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MergeTypeCell3 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell3(this);
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private MergeTypeCell3 mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell3 : WpfCell
    {
        
        public MergeTypeCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row4MergeTypeComboBox1 Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new Row4MergeTypeComboBox1(this);
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row4MergeTypeComboBox1 mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row4MergeTypeComboBox1 : WpfComboBox
    {
        
        public Row4MergeTypeComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewLineListItem
        {
            get
            {
                if ((this.mNewLineListItem == null))
                {
                    this.mNewLineListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewLineListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "New Line";
                    this.mNewLineListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewLineListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewLineListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup4 : WpfGroup
    {
        
        public OnErrorGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit VariableTextbox
        {
            get
            {
                if ((this.mVariableTextbox == null))
                {
                    this.mVariableTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mVariableTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Variable_AutoID";
                    this.mVariableTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mVariableTextbox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataSplit1 : WpfCustom
    {
        
        public DataSplit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataSplitDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DataSplitDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent1 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent1(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public LargeViewContentCustom3 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom3(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom3 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom3(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent1 mQuickVariableInputContent;
        
        private LargeViewContentCustom3 mLargeViewContentCustom;
        
        private SmallViewContentCustom3 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent1 : WpfCustom
    {
        
        public QuickVariableInputContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixWithEdit
        {
            get
            {
                if ((this.mPrefixWithEdit == null))
                {
                    this.mPrefixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixWithEdit;
            }
        }
        
        public PreviewCustom2 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom2(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfEdit SurfixWithEdit
        {
            get
            {
                if ((this.mSurfixWithEdit == null))
                {
                    this.mSurfixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSurfixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSurfixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSurfixWithEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixWithEdit;
        
        private PreviewCustom2 mPreviewCustom;
        
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfEdit mSurfixWithEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom2 : WpfCustom
    {
        
        public PreviewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup2 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup2(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup2 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup2 : WpfGroup
    {
        
        public PreviewGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton2 PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton2(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton2 mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton2 : WpfButton
    {
        
        public PreviewButton2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom3 : WpfCustom
    {
        
        public LargeViewContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public WpfRadioButton ForwardRadioButton
        {
            get
            {
                if ((this.mForwardRadioButton == null))
                {
                    this.mForwardRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mForwardRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI__ProcessDirectionForward_AutoID";
                    this.mForwardRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mForwardRadioButton;
            }
        }
        
        public WpfRadioButton BackwardRadioButton
        {
            get
            {
                if ((this.mBackwardRadioButton == null))
                {
                    this.mBackwardRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mBackwardRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI__ProcessDirectionBackward_AutoID";
                    this.mBackwardRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBackwardRadioButton;
            }
        }
        
        public WpfCheckBox SkipblankrowsCheckBox
        {
            get
            {
                if ((this.mSkipblankrowsCheckBox == null))
                {
                    this.mSkipblankrowsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mSkipblankrowsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__SkipBlankRows_AutoID";
                    this.mSkipblankrowsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSkipblankrowsCheckBox;
            }
        }
        
        public LargeDataGridTable1 LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable1(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox mSourceStringComboBox;
        
        private WpfRadioButton mForwardRadioButton;
        
        private WpfRadioButton mBackwardRadioButton;
        
        private WpfCheckBox mSkipblankrowsCheckBox;
        
        private LargeDataGridTable1 mLargeDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox : WpfComboBox
    {
        
        public SourceStringComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable1 : WpfTable
    {
        
        public LargeDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row15 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row15(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row15 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row15 : WpfRow
    {
        
        public Row15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell(this);
                }
                return this.mResultCell;
            }
        }
        
        public SplitTypeCell SplitTypeCell
        {
            get
            {
                if ((this.mSplitTypeCell == null))
                {
                    this.mSplitTypeCell = new SplitTypeCell(this);
                }
                return this.mSplitTypeCell;
            }
        }
        
        public UsingCell4 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell4(this);
                }
                return this.mUsingCell;
            }
        }
        
        public IncludeCell IncludeCell
        {
            get
            {
                if ((this.mIncludeCell == null))
                {
                    this.mIncludeCell = new IncludeCell(this);
                }
                return this.mIncludeCell;
            }
        }
        
        public EscapeCharCell EscapeCharCell
        {
            get
            {
                if ((this.mEscapeCharCell == null))
                {
                    this.mEscapeCharCell = new EscapeCharCell(this);
                }
                return this.mEscapeCharCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell mResultCell;
        
        private SplitTypeCell mSplitTypeCell;
        
        private UsingCell4 mUsingCell;
        
        private IncludeCell mIncludeCell;
        
        private EscapeCharCell mEscapeCharCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell : WpfCell
    {
        
        public ResultCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Results";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultComboBox2 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox2(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ResultComboBox2 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox2 : WpfComboBox
    {
        
        public ResultComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitTypeCell : WpfCell
    {
        
        public SplitTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SplitTypeComboBox
        {
            get
            {
                if ((this.mSplitTypeComboBox == null))
                {
                    this.mSplitTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSplitTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SplitType_AutoID";
                    this.mSplitTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSplitTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSplitTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell4 : WpfCell
    {
        
        public UsingCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Using";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UsingComboBox UsingComboBox
        {
            get
            {
                if ((this.mUsingComboBox == null))
                {
                    this.mUsingComboBox = new UsingComboBox(this);
                }
                return this.mUsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UsingComboBox mUsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingComboBox : WpfComboBox
    {
        
        public UsingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IncludeCell : WpfCell
    {
        
        public IncludeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Include";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox IncludeCheckBox
        {
            get
            {
                if ((this.mIncludeCheckBox == null))
                {
                    this.mIncludeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mIncludeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__Include_Row1_AutoID";
                    this.mIncludeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIncludeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mIncludeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EscapeCharCell : WpfCell
    {
        
        public EscapeCharCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Escape";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public EscapeCharComboBox EscapeCharComboBox
        {
            get
            {
                if ((this.mEscapeCharComboBox == null))
                {
                    this.mEscapeCharComboBox = new EscapeCharComboBox(this);
                }
                return this.mEscapeCharComboBox;
            }
        }
        #endregion
        
        #region Fields
        private EscapeCharComboBox mEscapeCharComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EscapeCharComboBox : WpfComboBox
    {
        
        public EscapeCharComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__EscapeChar_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom3 : WpfCustom
    {
        
        public SmallViewContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox1 SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox1(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public SmallDataGridTable SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox1 mSourceStringComboBox;
        
        private SmallDataGridTable mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox1 : WpfComboBox
    {
        
        public SourceStringComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable : WpfTable
    {
        
        public SmallDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row16 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row16(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row16 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row16 : WpfRow
    {
        
        public Row16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueCell2 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell2(this);
                }
                return this.mValueCell;
            }
        }
        
        public SplitTypeCell1 SplitTypeCell
        {
            get
            {
                if ((this.mSplitTypeCell == null))
                {
                    this.mSplitTypeCell = new SplitTypeCell1(this);
                }
                return this.mSplitTypeCell;
            }
        }
        
        public AtIndexCell AtIndexCell
        {
            get
            {
                if ((this.mAtIndexCell == null))
                {
                    this.mAtIndexCell = new AtIndexCell(this);
                }
                return this.mAtIndexCell;
            }
        }
        #endregion
        
        #region Fields
        private ValueCell2 mValueCell;
        
        private SplitTypeCell1 mSplitTypeCell;
        
        private AtIndexCell mAtIndexCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell2 : WpfCell
    {
        
        public ValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox2 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox2(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox2 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox2 : WpfComboBox
    {
        
        public ValueComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitTypeCell1 : WpfCell
    {
        
        public SplitTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SplitTypeComboBox
        {
            get
            {
                if ((this.mSplitTypeComboBox == null))
                {
                    this.mSplitTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSplitTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SplitType_AutoID";
                    this.mSplitTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSplitTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSplitTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AtIndexCell : WpfCell
    {
        
        public AtIndexCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AtIndexComboBox AtIndexComboBox
        {
            get
            {
                if ((this.mAtIndexComboBox == null))
                {
                    this.mAtIndexComboBox = new AtIndexComboBox(this);
                }
                return this.mAtIndexComboBox;
            }
        }
        #endregion
        
        #region Fields
        private AtIndexComboBox mAtIndexComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AtIndexComboBox : WpfComboBox
    {
        
        public AtIndexComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MySqlDatabase : WpfCustom
    {
        
        public MySqlDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MySqlDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MySql Database(MySqlDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView5 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView5(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView5 mLargeView;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView5 : WpfCustom
    {
        
        public LargeView5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfTable InputLargeDataGridTable
        {
            get
            {
                if ((this.mInputLargeDataGridTable == null))
                {
                    this.mInputLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputLargeDataGridTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom3 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom3(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mActionsComboBox;
        
        private WpfButton mRefreshButton;
        
        private WpfTable mInputLargeDataGridTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom3 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom3 : WpfCustom
    {
        
        public OnErrorCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup5 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup5(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup5 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup5 : WpfGroup
    {
        
        public OnErrorGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox3 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox3(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox2 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox2(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox3 mErrorVariableComboBox;
        
        private WebServiceComboBox2 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox3 : WpfComboBox
    {
        
        public ErrorVariableComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox2 : WpfComboBox
    {
        
        public WebServiceComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SqlServerDatabase : WpfCustom
    {
        
        public SqlServerDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SqlServerDatabaseDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SQL Server Database", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView6 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView6(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView6 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView6 : WpfCustom
    {
        
        public LargeView6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActionsCombobox1 ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new ActionsCombobox1(this);
                }
                return this.mActionsCombobox;
            }
        }
        
        public SourcesCombobox3 SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new SourcesCombobox3(this);
                }
                return this.mSourcesCombobox;
            }
        }
        
        public InputsTable1 InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable1(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public TestInputsTable TestInputsTable
        {
            get
            {
                if ((this.mTestInputsTable == null))
                {
                    this.mTestInputsTable = new TestInputsTable(this);
                }
                return this.mTestInputsTable;
            }
        }
        
        public WpfButton TestInputsButton
        {
            get
            {
                if ((this.mTestInputsButton == null))
                {
                    this.mTestInputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestInputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestInputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestInputsButton;
            }
        }
        
        public WpfButton TestInputsDoneButton
        {
            get
            {
                if ((this.mTestInputsDoneButton == null))
                {
                    this.mTestInputsDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestInputsDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mTestInputsDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestInputsDoneButton;
            }
        }
        
        public WpfButton NewDbSourceButton
        {
            get
            {
                if ((this.mNewDbSourceButton == null))
                {
                    this.mNewDbSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewDbSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewDbSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDbSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public OnErrorCustom4 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom4(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private ActionsCombobox1 mActionsCombobox;
        
        private SourcesCombobox3 mSourcesCombobox;
        
        private InputsTable1 mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private TestInputsTable mTestInputsTable;
        
        private WpfButton mTestInputsButton;
        
        private WpfButton mTestInputsDoneButton;
        
        private WpfButton mNewDbSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private OnErrorCustom4 mOnErrorCustom;
        
        private WpfButton mRefreshButton;
        
        private WpfEdit mRecordSetTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsCombobox1 : WpfComboBox
    {
        
        public ActionsCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem GetCountriesListItem
        {
            get
            {
                if ((this.mGetCountriesListItem == null))
                {
                    this.mGetCountriesListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGetCountriesListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "dbo.GetCountries";
                    this.mGetCountriesListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGetCountriesListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mGetCountriesListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesCombobox3 : WpfComboBox
    {
        
        public SourcesCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UITestingDBSourceListItem
        {
            get
            {
                if ((this.mUITestingDBSourceListItem == null))
                {
                    this.mUITestingDBSourceListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITestingDBSourceListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "UITestingDBSource";
                    this.mUITestingDBSourceListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITestingDBSourceListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUITestingDBSourceListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable1 : WpfTable
    {
        
        public InputsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row17 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row17(this);
                }
                return this.mRow1;
            }
        }
        
        public Row24 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row24(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row17 mRow1;
        
        private Row24 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row17 : WpfRow
    {
        
        public Row17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCell DataCell
        {
            get
            {
                if ((this.mDataCell == null))
                {
                    this.mDataCell = new DataCell(this);
                }
                return this.mDataCell;
            }
        }
        #endregion
        
        #region Fields
        private DataCell mDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCell : WpfCell
    {
        
        public DataCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCombobox DataCombobox
        {
            get
            {
                if ((this.mDataCombobox == null))
                {
                    this.mDataCombobox = new DataCombobox(this);
                }
                return this.mDataCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DataCombobox mDataCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCombobox : WpfComboBox
    {
        
        public DataCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DataTextbox
        {
            get
            {
                if ((this.mDataTextbox == null))
                {
                    this.mDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row24 : WpfRow
    {
        
        public Row24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCell1 DataCell
        {
            get
            {
                if ((this.mDataCell == null))
                {
                    this.mDataCell = new DataCell1(this);
                }
                return this.mDataCell;
            }
        }
        #endregion
        
        #region Fields
        private DataCell1 mDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCell1 : WpfCell
    {
        
        public DataCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCombobox1 DataCombobox
        {
            get
            {
                if ((this.mDataCombobox == null))
                {
                    this.mDataCombobox = new DataCombobox1(this);
                }
                return this.mDataCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DataCombobox1 mDataCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCombobox1 : WpfComboBox
    {
        
        public DataCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DataTextbox
        {
            get
            {
                if ((this.mDataTextbox == null))
                {
                    this.mDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInputsTable : WpfTable
    {
        
        public TestInputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.SearchProperties[WpfTable.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row18 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row18(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row18 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row18 : WpfRow
    {
        
        public Row18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestDataCell TestDataCell
        {
            get
            {
                if ((this.mTestDataCell == null))
                {
                    this.mTestDataCell = new TestDataCell(this);
                }
                return this.mTestDataCell;
            }
        }
        #endregion
        
        #region Fields
        private TestDataCell mTestDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestDataCell : WpfCell
    {
        
        public TestDataCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Test Data";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestDataComboBox TestDataComboBox
        {
            get
            {
                if ((this.mTestDataComboBox == null))
                {
                    this.mTestDataComboBox = new TestDataComboBox(this);
                }
                return this.mTestDataComboBox;
            }
        }
        #endregion
        
        #region Fields
        private TestDataComboBox mTestDataComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestDataComboBox : WpfComboBox
    {
        
        public TestDataComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "This data is used for testing and not at run time.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TestDataTextbox
        {
            get
            {
                if ((this.mTestDataTextbox == null))
                {
                    this.mTestDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTestDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTestDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTestDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom4 : WpfCustom
    {
        
        public OnErrorCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup6 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup6(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup6 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup6 : WpfGroup
    {
        
        public OnErrorGroup6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox4 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox4(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox4 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox4 : WpfComboBox
    {
        
        public ErrorVariableComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ODBCDatabaseActivCustom : WpfCustom
    {
        
        public ODBCDatabaseActivCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ODBCDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ODBC Data Source(ODBCDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView7 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView7(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView7 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView7 : WpfCustom
    {
        
        public LargeView7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EdistSourceButton
        {
            get
            {
                if ((this.mEdistSourceButton == null))
                {
                    this.mEdistSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEdistSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEdistSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEdistSourceButton;
            }
        }
        
        public ActionCommandComboBox ActionCommandComboBox
        {
            get
            {
                if ((this.mActionCommandComboBox == null))
                {
                    this.mActionCommandComboBox = new ActionCommandComboBox(this);
                }
                return this.mActionCommandComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom5 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom5(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEdistSourceButton;
        
        private ActionCommandComboBox mActionCommandComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom5 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionCommandComboBox : WpfComboBox
    {
        
        public ActionCommandComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom5 : WpfCustom
    {
        
        public OnErrorCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup7 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup7(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup7 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup7 : WpfGroup
    {
        
        public OnErrorGroup7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox5 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox5(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox3 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox3(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox5 mErrorVariableComboBox;
        
        private WebServiceComboBox3 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox5 : WpfComboBox
    {
        
        public ErrorVariableComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox3 : WpfComboBox
    {
        
        public WebServiceComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OracleDatabaseActCustom : WpfCustom
    {
        
        public OracleDatabaseActCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OracleDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Oracle Database(OracleDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView8 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView8(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView8 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView8 : WpfCustom
    {
        
        public LargeView8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesComboBoxComboBox
        {
            get
            {
                if ((this.mSourcesComboBoxComboBox == null))
                {
                    this.mSourcesComboBoxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBoxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBoxComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBoxComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom6 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom6(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesComboBoxComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mActionsComboBox;
        
        private WpfTable mLargeDataGridTable;
        
        private WpfButton mRefreshButton;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom6 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom6 : WpfCustom
    {
        
        public OnErrorCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup8 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup8(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup8 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup8 : WpfGroup
    {
        
        public OnErrorGroup8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox6 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox6(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox4 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox4(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox6 mErrorVariableComboBox;
        
        private WebServiceComboBox4 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox6 : WpfComboBox
    {
        
        public ErrorVariableComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox4 : WpfComboBox
    {
        
        public WebServiceComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PostgreSqlActivitCustom : WpfCustom
    {
        
        public PostgreSqlActivitCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PostgreSqlDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PostgreSQL Database(PostgreSqlDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView9 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView9(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView9 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView9 : WpfCustom
    {
        
        public LargeView9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox4 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox4(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ActionsComboBox2 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox2(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom7 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom7(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox4 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private ActionsComboBox2 mActionsComboBox;
        
        private WpfButton mRefreshButton;
        
        private WpfTable mLargeDataGridTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom7 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox4 : WpfComboBox
    {
        
        public SourcesComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem PostgreSourceTest
        {
            get
            {
                if ((this.mPostgreSourceTest == null))
                {
                    this.mPostgreSourceTest = new WpfListItem(this);
                    #region Search Criteria
                    this.mPostgreSourceTest.SearchProperties[WpfListItem.PropertyNames.Name] = "PostgreSourceTest";
                    this.mPostgreSourceTest.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPostgreSourceTest;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mPostgreSourceTest;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox2 : WpfComboBox
    {
        
        public ActionsComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem GetCountries
        {
            get
            {
                if ((this.mGetCountries == null))
                {
                    this.mGetCountries = new WpfListItem(this);
                    #region Search Criteria
                    this.mGetCountries.SearchProperties[WpfListItem.PropertyNames.Name] = "get_countries";
                    this.mGetCountries.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGetCountries;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mGetCountries;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom7 : WpfCustom
    {
        
        public OnErrorCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup9 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup9(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup9 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup9 : WpfGroup
    {
        
        public OnErrorGroup9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox7 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox7(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox5 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox5(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox7 mErrorVariableComboBox;
        
        private WebServiceComboBox5 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox7 : WpfComboBox
    {
        
        public ErrorVariableComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox5 : WpfComboBox
    {
        
        public WebServiceComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BaseConvert1 : WpfCustom
    {
        
        public BaseConvert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.BaseConvertDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "BaseConvertDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public LargeView10 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView10(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallView2 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView2(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private LargeView10 mLargeView;
        
        private WpfButton mDoneButton;
        
        private SmallView2 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView10 : WpfCustom
    {
        
        public LargeView10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid2 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid2(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid2 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid2 : WpfTable
    {
        
        public DataGrid2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row19 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row19(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row19 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row19 : WpfRow
    {
        
        public Row19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell : WpfCell
    {
        
        public Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox : WpfControl
    {
        
        public Listbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Combobox";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView2 : WpfCustom
    {
        
        public SmallView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid3 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid3(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid3 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid3 : WpfTable
    {
        
        public DataGrid3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row110 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row110(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row110 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row110 : WpfRow
    {
        
        public Row110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell1 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell1(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell1 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell1 : WpfCell
    {
        
        public Cell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox1 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox1(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox1 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox1 : WpfControl
    {
        
        public Listbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Combobox";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CaseConvert1 : WpfCustom
    {
        
        public CaseConvert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CaseConvertDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "CaseConvertDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent2 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent2(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public SmallViewContentCustom4 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom4(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom4 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom4(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent2 mQuickVariableInputContent;
        
        private SmallViewContentCustom4 mSmallViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom4 mLargeViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent2 : WpfCustom
    {
        
        public QuickVariableInputContent2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixWithEdit
        {
            get
            {
                if ((this.mPrefixWithEdit == null))
                {
                    this.mPrefixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixWithEdit;
            }
        }
        
        public PreviewCustom3 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom3(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfEdit SurfixWithEdit
        {
            get
            {
                if ((this.mSurfixWithEdit == null))
                {
                    this.mSurfixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSurfixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSurfixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSurfixWithEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixWithEdit;
        
        private PreviewCustom3 mPreviewCustom;
        
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfEdit mSurfixWithEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom3 : WpfCustom
    {
        
        public PreviewCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup3 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup3(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup3 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup3 : WpfGroup
    {
        
        public PreviewGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton3 PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton3(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton3 mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton3 : WpfButton
    {
        
        public PreviewButton3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom4 : WpfCustom
    {
        
        public SmallViewContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable1 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable1(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable1 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable1 : WpfTable
    {
        
        public SmallDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row111 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row111(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row111 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row111 : WpfRow
    {
        
        public Row111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueCell3 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell3(this);
                }
                return this.mValueCell;
            }
        }
        
        public ConvertFuncCell ConvertFuncCell
        {
            get
            {
                if ((this.mConvertFuncCell == null))
                {
                    this.mConvertFuncCell = new ConvertFuncCell(this);
                }
                return this.mConvertFuncCell;
            }
        }
        #endregion
        
        #region Fields
        private ValueCell3 mValueCell;
        
        private ConvertFuncCell mConvertFuncCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell3 : WpfCell
    {
        
        public ValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox3 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox3(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox3 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox3 : WpfComboBox
    {
        
        public ValueComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertFuncCell : WpfCell
    {
        
        public ConvertFuncCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ConverFuncComboBox
        {
            get
            {
                if ((this.mConverFuncComboBox == null))
                {
                    this.mConverFuncComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mConverFuncComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
                    this.mConverFuncComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConverFuncComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mConverFuncComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom4 : WpfCustom
    {
        
        public LargeViewContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable2 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable2(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public OnErrorCustom8 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom8(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable2 mSmallDataGridTable;
        
        private OnErrorCustom8 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable2 : WpfTable
    {
        
        public SmallDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row112 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row112(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row112 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row112 : WpfRow
    {
        
        public Row112(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OutputVariableCell OutputVariableCell
        {
            get
            {
                if ((this.mOutputVariableCell == null))
                {
                    this.mOutputVariableCell = new OutputVariableCell(this);
                }
                return this.mOutputVariableCell;
            }
        }
        
        public ConvertToCell ConvertToCell
        {
            get
            {
                if ((this.mConvertToCell == null))
                {
                    this.mConvertToCell = new ConvertToCell(this);
                }
                return this.mConvertToCell;
            }
        }
        #endregion
        
        #region Fields
        private OutputVariableCell mOutputVariableCell;
        
        private ConvertToCell mConvertToCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputVariableCell : WpfCell
    {
        
        public OutputVariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OutputVariableComboBox OutputVariableComboBox
        {
            get
            {
                if ((this.mOutputVariableComboBox == null))
                {
                    this.mOutputVariableComboBox = new OutputVariableComboBox(this);
                }
                return this.mOutputVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OutputVariableComboBox mOutputVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputVariableComboBox : WpfComboBox
    {
        
        public OutputVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertToCell : WpfCell
    {
        
        public ConvertToCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ConvertToComboBox
        {
            get
            {
                if ((this.mConvertToComboBox == null))
                {
                    this.mConvertToComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mConvertToComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
                    this.mConvertToComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConvertToComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mConvertToComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom8 : WpfCustom
    {
        
        public OnErrorCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup10 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup10(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup10 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup10 : WpfGroup
    {
        
        public OnErrorGroup10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox8 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox8(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox6 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox6(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox8 mErrorVariableComboBox;
        
        private WebServiceComboBox6 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox8 : WpfComboBox
    {
        
        public ErrorVariableComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox6 : WpfComboBox
    {
        
        public WebServiceComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForEach1 : WpfCustom
    {
        
        public ForEach1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ForeachDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "For Each(ForeachDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView3 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView3(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView11 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView11(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView3 mSmallView;
        
        private LargeView11 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView3 : WpfCustom
    {
        
        public SmallView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ForEachTypeComboBox
        {
            get
            {
                if ((this.mForEachTypeComboBox == null))
                {
                    this.mForEachTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mForEachTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachType_AutoID";
                    this.mForEachTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mForEachTypeComboBox;
            }
        }
        
        public FromIntellisenseTextbox FromIntellisenseTextbox
        {
            get
            {
                if ((this.mFromIntellisenseTextbox == null))
                {
                    this.mFromIntellisenseTextbox = new FromIntellisenseTextbox(this);
                }
                return this.mFromIntellisenseTextbox;
            }
        }
        
        public ToIntellisenseTextbox ToIntellisenseTextbox
        {
            get
            {
                if ((this.mToIntellisenseTextbox == null))
                {
                    this.mToIntellisenseTextbox = new ToIntellisenseTextbox(this);
                }
                return this.mToIntellisenseTextbox;
            }
        }
        
        public WpfCustom DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new WpfCustom(this);
                    #region Search Criteria
                    this.mDropActivityHere.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
                    this.mDropActivityHere.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
                    this.mDropActivityHere.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHere;
            }
        }
        
        public DropActivityHereCustom DropActivityHereCustom
        {
            get
            {
                if ((this.mDropActivityHereCustom == null))
                {
                    this.mDropActivityHereCustom = new DropActivityHereCustom(this);
                }
                return this.mDropActivityHereCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mForEachTypeComboBox;
        
        private FromIntellisenseTextbox mFromIntellisenseTextbox;
        
        private ToIntellisenseTextbox mToIntellisenseTextbox;
        
        private WpfCustom mDropActivityHere;
        
        private DropActivityHereCustom mDropActivityHereCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromIntellisenseTextbox : WpfComboBox
    {
        
        public FromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachFromTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToIntellisenseTextbox : WpfComboBox
    {
        
        public ToIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachToTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHereCustom : WpfCustom
    {
        
        public DropActivityHereCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereText
        {
            get
            {
                if ((this.mDropActivityHereText == null))
                {
                    this.mDropActivityHereText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView11 : WpfCustom
    {
        
        public LargeView11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeCombobox
        {
            get
            {
                if ((this.mTypeCombobox == null))
                {
                    this.mTypeCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachType_AutoID";
                    this.mTypeCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeCombobox;
            }
        }
        
        public ForEachFromIntellisenseTextbox ForEachFromIntellisenseTextbox
        {
            get
            {
                if ((this.mForEachFromIntellisenseTextbox == null))
                {
                    this.mForEachFromIntellisenseTextbox = new ForEachFromIntellisenseTextbox(this);
                }
                return this.mForEachFromIntellisenseTextbox;
            }
        }
        
        public ToIntellisenseTextbox1 ToIntellisenseTextbox
        {
            get
            {
                if ((this.mToIntellisenseTextbox == null))
                {
                    this.mToIntellisenseTextbox = new ToIntellisenseTextbox1(this);
                }
                return this.mToIntellisenseTextbox;
            }
        }
        
        public DropActivityHere DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new DropActivityHere(this);
                }
                return this.mDropActivityHere;
            }
        }
        
        public OnErrorPane OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeCombobox;
        
        private ForEachFromIntellisenseTextbox mForEachFromIntellisenseTextbox;
        
        private ToIntellisenseTextbox1 mToIntellisenseTextbox;
        
        private DropActivityHere mDropActivityHere;
        
        private OnErrorPane mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForEachFromIntellisenseTextbox : WpfComboBox
    {
        
        public ForEachFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachFromTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToIntellisenseTextbox1 : WpfComboBox
    {
        
        public ToIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachToTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHere : WpfCustom
    {
        
        public DropActivityHere(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereFloatingText
        {
            get
            {
                if ((this.mDropActivityHereFloatingText == null))
                {
                    this.mDropActivityHereFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane : WpfCustom
    {
        
        public OnErrorPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup11 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup11(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup11 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup11 : WpfGroup
    {
        
        public OnErrorGroup11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseTextbox ErrorVariableIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseTextbox == null))
                {
                    this.mErrorVariableIntellisenseTextbox = new ErrorVariableIntellisenseTextbox(this);
                }
                return this.mErrorVariableIntellisenseTextbox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseTextbox mErrorVariableIntellisenseTextbox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseTextbox : WpfComboBox
    {
        
        public ErrorVariableIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Length1 : WpfCustom
    {
        
        public Length1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RecordsLengthDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Length(RecordsLengthDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom5 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom5(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallViewContentCustom5 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom5(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom5 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private SmallViewContentCustom5 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom5 : WpfCustom
    {
        
        public LargeViewContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecordsetComboBox RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        
        public WpfCheckBox NullAsZeroCheckBox
        {
            get
            {
                if ((this.mNullAsZeroCheckBox == null))
                {
                    this.mNullAsZeroCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNullAsZeroCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__NullAsCheckBox_AutoID";
                    this.mNullAsZeroCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNullAsZeroCheckBox;
            }
        }
        
        public ResultComboBox3 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox3(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom9 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom9(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private RecordsetComboBox mRecordsetComboBox;
        
        private WpfCheckBox mNullAsZeroCheckBox;
        
        private ResultComboBox3 mResultComboBox;
        
        private OnErrorCustom9 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox : WpfComboBox
    {
        
        public RecordsetComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox3 : WpfComboBox
    {
        
        public ResultComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom9 : WpfCustom
    {
        
        public OnErrorCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup12 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup12(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup12 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup12 : WpfGroup
    {
        
        public OnErrorGroup12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox(this);
                }
                return this.mVariableComboBox;
            }
        }
        
        public WebServiceComboBox7 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox7(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox mVariableComboBox;
        
        private WebServiceComboBox7 mWebServiceComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox : WpfComboBox
    {
        
        public VariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox7 : WpfComboBox
    {
        
        public WebServiceComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom5 : WpfCustom
    {
        
        public SmallViewContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultComboBox4 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox4(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public RecordsetComboBox1 RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox1(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ResultComboBox4 mResultComboBox;
        
        private RecordsetComboBox1 mRecordsetComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox4 : WpfComboBox
    {
        
        public ResultComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox1 : WpfComboBox
    {
        
        public RecordsetComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindRecordsIndex : WpfCustom
    {
        
        public FindRecordsIndex(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FindRecordsMultipleCriteriaDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "FindRecordsMultipleCriteriaDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom6 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom6(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom6 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom6(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom6 mSmallViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom6 mLargeViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom6 : WpfCustom
    {
        
        public SmallViewContentCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldsToSearchComboBox FieldsToSearchComboBox
        {
            get
            {
                if ((this.mFieldsToSearchComboBox == null))
                {
                    this.mFieldsToSearchComboBox = new FieldsToSearchComboBox(this);
                }
                return this.mFieldsToSearchComboBox;
            }
        }
        
        public SmallDataGridTable3 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable3(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public ResultComboBox5 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox5(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldsToSearchComboBox mFieldsToSearchComboBox;
        
        private SmallDataGridTable3 mSmallDataGridTable;
        
        private ResultComboBox5 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldsToSearchComboBox : WpfComboBox
    {
        
        public FieldsToSearchComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FieldsToSearch_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable3 : WpfTable
    {
        
        public SmallDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row113 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row113(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row113 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row113 : WpfRow
    {
        
        public Row113(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchTypeCell SearchTypeCell
        {
            get
            {
                if ((this.mSearchTypeCell == null))
                {
                    this.mSearchTypeCell = new SearchTypeCell(this);
                }
                return this.mSearchTypeCell;
            }
        }
        
        public SearchCriteriaCell SearchCriteriaCell
        {
            get
            {
                if ((this.mSearchCriteriaCell == null))
                {
                    this.mSearchCriteriaCell = new SearchCriteriaCell(this);
                }
                return this.mSearchCriteriaCell;
            }
        }
        #endregion
        
        #region Fields
        private SearchTypeCell mSearchTypeCell;
        
        private SearchCriteriaCell mSearchCriteriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTypeCell : WpfCell
    {
        
        public SearchTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SearchTypeComboBox
        {
            get
            {
                if ((this.mSearchTypeComboBox == null))
                {
                    this.mSearchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSearchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mSearchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSearchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaCell : WpfCell
    {
        
        public SearchCriteriaCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchCriteriaComboBox SearchCriteriaComboBox
        {
            get
            {
                if ((this.mSearchCriteriaComboBox == null))
                {
                    this.mSearchCriteriaComboBox = new SearchCriteriaComboBox(this);
                }
                return this.mSearchCriteriaComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SearchCriteriaComboBox mSearchCriteriaComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaComboBox : WpfComboBox
    {
        
        public SearchCriteriaComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox5 : WpfComboBox
    {
        
        public ResultComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom6 : WpfCustom
    {
        
        public LargeViewContentCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldsToSearchComboBox1 FieldsToSearchComboBox
        {
            get
            {
                if ((this.mFieldsToSearchComboBox == null))
                {
                    this.mFieldsToSearchComboBox = new FieldsToSearchComboBox1(this);
                }
                return this.mFieldsToSearchComboBox;
            }
        }
        
        public LargeDataGridTable2 LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable2(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfCheckBox RequireAllMatchesTruCheckBox
        {
            get
            {
                if ((this.mRequireAllMatchesTruCheckBox == null))
                {
                    this.mRequireAllMatchesTruCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequireAllMatchesTruCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequireAllMatchesTruCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequireAllMatchesTruCheckBox;
            }
        }
        
        public WpfCheckBox RequireAllFieldsToMatchCheckBox
        {
            get
            {
                if ((this.mRequireAllFieldsToMatchCheckBox == null))
                {
                    this.mRequireAllFieldsToMatchCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequireAllFieldsToMatchCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllFieldsToMatch_AutoID";
                    this.mRequireAllFieldsToMatchCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequireAllFieldsToMatchCheckBox;
            }
        }
        
        public ResultComboBox6 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox6(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom10 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom10(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FieldsToSearchComboBox1 mFieldsToSearchComboBox;
        
        private LargeDataGridTable2 mLargeDataGridTable;
        
        private WpfCheckBox mRequireAllMatchesTruCheckBox;
        
        private WpfCheckBox mRequireAllFieldsToMatchCheckBox;
        
        private ResultComboBox6 mResultComboBox;
        
        private OnErrorCustom10 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldsToSearchComboBox1 : WpfComboBox
    {
        
        public FieldsToSearchComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FieldsToSearchtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable2 : WpfTable
    {
        
        public LargeDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row114 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row114(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row114 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row114 : WpfRow
    {
        
        public Row114(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchTypeCell1 SearchTypeCell
        {
            get
            {
                if ((this.mSearchTypeCell == null))
                {
                    this.mSearchTypeCell = new SearchTypeCell1(this);
                }
                return this.mSearchTypeCell;
            }
        }
        
        public SearchCriteriaCell1 SearchCriteriaCell
        {
            get
            {
                if ((this.mSearchCriteriaCell == null))
                {
                    this.mSearchCriteriaCell = new SearchCriteriaCell1(this);
                }
                return this.mSearchCriteriaCell;
            }
        }
        #endregion
        
        #region Fields
        private SearchTypeCell1 mSearchTypeCell;
        
        private SearchCriteriaCell1 mSearchCriteriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTypeCell1 : WpfCell
    {
        
        public SearchTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "MatchType";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SearchTypeComboBox
        {
            get
            {
                if ((this.mSearchTypeComboBox == null))
                {
                    this.mSearchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSearchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mSearchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSearchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaCell1 : WpfCell
    {
        
        public SearchCriteriaCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchCriteriaComboBox1 SearchCriteriaComboBox
        {
            get
            {
                if ((this.mSearchCriteriaComboBox == null))
                {
                    this.mSearchCriteriaComboBox = new SearchCriteriaComboBox1(this);
                }
                return this.mSearchCriteriaComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SearchCriteriaComboBox1 mSearchCriteriaComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaComboBox1 : WpfComboBox
    {
        
        public SearchCriteriaComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox6 : WpfComboBox
    {
        
        public ResultComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom10 : WpfCustom
    {
        
        public OnErrorCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup13 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup13(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup13 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup13 : WpfGroup
    {
        
        public OnErrorGroup13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox9 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox9(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox8 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox8(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox9 mErrorVariableComboBox;
        
        private WebServiceComboBox8 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox9 : WpfComboBox
    {
        
        public ErrorVariableComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox8 : WpfComboBox
    {
        
        public WebServiceComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteRecord : WpfCustom
    {
        
        public DeleteRecord(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DeleteRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Delete Record(DeleteRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom7 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom7(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public LargeViewContentCustom7 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom7(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom7 mSmallViewContentCustom;
        
        private LargeViewContentCustom7 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom7 : WpfCustom
    {
        
        public SmallViewContentCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecordsetComboBox2 RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox2(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        
        public ResultComboBox7 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox7(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private RecordsetComboBox2 mRecordsetComboBox;
        
        private ResultComboBox7 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox2 : WpfComboBox
    {
        
        public RecordsetComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox7 : WpfComboBox
    {
        
        public ResultComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom7 : WpfCustom
    {
        
        public LargeViewContentCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecordsetComboBox3 RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox3(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        
        public WpfCheckBox NullAsZeroCheckBoxCheckBox
        {
            get
            {
                if ((this.mNullAsZeroCheckBoxCheckBox == null))
                {
                    this.mNullAsZeroCheckBoxCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNullAsZeroCheckBoxCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__NullAsCheckBox_AutoID";
                    this.mNullAsZeroCheckBoxCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNullAsZeroCheckBoxCheckBox;
            }
        }
        
        public ResultComboBox8 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox8(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom11 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom11(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private RecordsetComboBox3 mRecordsetComboBox;
        
        private WpfCheckBox mNullAsZeroCheckBoxCheckBox;
        
        private ResultComboBox8 mResultComboBox;
        
        private OnErrorCustom11 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox3 : WpfComboBox
    {
        
        public RecordsetComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox8 : WpfComboBox
    {
        
        public ResultComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom11 : WpfCustom
    {
        
        public OnErrorCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup14 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup14(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup14 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup14 : WpfGroup
    {
        
        public OnErrorGroup14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox10 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox10(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox9 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox9(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox10 mErrorVariableComboBox;
        
        private WebServiceComboBox9 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox10 : WpfComboBox
    {
        
        public ErrorVariableComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox9 : WpfComboBox
    {
        
        public WebServiceComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SortRecords : WpfCustom
    {
        
        public SortRecords(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SortRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sort Records(SortRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom8 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom8(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public LargeViewContentCustom8 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom8(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom8 mSmallViewContentCustom;
        
        private LargeViewContentCustom8 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom8 : WpfCustom
    {
        
        public SmallViewContentCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SortFieldComboBox SortFieldComboBox
        {
            get
            {
                if ((this.mSortFieldComboBox == null))
                {
                    this.mSortFieldComboBox = new SortFieldComboBox(this);
                }
                return this.mSortFieldComboBox;
            }
        }
        
        public WpfComboBox SortOrderComboBox
        {
            get
            {
                if ((this.mSortOrderComboBox == null))
                {
                    this.mSortOrderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSortOrderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortOrdercbx_AutoID";
                    this.mSortOrderComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSortOrderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SortFieldComboBox mSortFieldComboBox;
        
        private WpfComboBox mSortOrderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SortFieldComboBox : WpfComboBox
    {
        
        public SortFieldComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom8 : WpfCustom
    {
        
        public LargeViewContentCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SortFieldComboBox1 SortFieldComboBox
        {
            get
            {
                if ((this.mSortFieldComboBox == null))
                {
                    this.mSortFieldComboBox = new SortFieldComboBox1(this);
                }
                return this.mSortFieldComboBox;
            }
        }
        
        public WpfComboBox SortOrderComboBox
        {
            get
            {
                if ((this.mSortOrderComboBox == null))
                {
                    this.mSortOrderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSortOrderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortOrdercbx_AutoID";
                    this.mSortOrderComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSortOrderComboBox;
            }
        }
        
        public OnErrorCustom12 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom12(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SortFieldComboBox1 mSortFieldComboBox;
        
        private WpfComboBox mSortOrderComboBox;
        
        private OnErrorCustom12 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SortFieldComboBox1 : WpfComboBox
    {
        
        public SortFieldComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom12 : WpfCustom
    {
        
        public OnErrorCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup15 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup15(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup15 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup15 : WpfGroup
    {
        
        public OnErrorGroup15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox11 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox11(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox10 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox10(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox11 mErrorVariableComboBox;
        
        private WebServiceComboBox10 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox11 : WpfComboBox
    {
        
        public ErrorVariableComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox10 : WpfComboBox
    {
        
        public WebServiceComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CountRecordset : WpfCustom
    {
        
        public CountRecordset(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CountRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Count Records(CountRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom9 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom9(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom9 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom9(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom9 mLargeViewContentCustom;
        
        private SmallViewContentCustom9 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom9 : WpfCustom
    {
        
        public LargeViewContentCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecorsetComboBox RecorsetComboBox
        {
            get
            {
                if ((this.mRecorsetComboBox == null))
                {
                    this.mRecorsetComboBox = new RecorsetComboBox(this);
                }
                return this.mRecorsetComboBox;
            }
        }
        
        public WpfCheckBox NullAsZeroCheckBoxCheckBox
        {
            get
            {
                if ((this.mNullAsZeroCheckBoxCheckBox == null))
                {
                    this.mNullAsZeroCheckBoxCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNullAsZeroCheckBoxCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__NullAsCheckBox_AutoID";
                    this.mNullAsZeroCheckBoxCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNullAsZeroCheckBoxCheckBox;
            }
        }
        
        public ResultComboBox9 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox9(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom13 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom13(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private RecorsetComboBox mRecorsetComboBox;
        
        private WpfCheckBox mNullAsZeroCheckBoxCheckBox;
        
        private ResultComboBox9 mResultComboBox;
        
        private OnErrorCustom13 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecorsetComboBox : WpfComboBox
    {
        
        public RecorsetComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox9 : WpfComboBox
    {
        
        public ResultComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom13 : WpfCustom
    {
        
        public OnErrorCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup16 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup16(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup16 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup16 : WpfGroup
    {
        
        public OnErrorGroup16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox12 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox12(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox11 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox11(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox12 mErrorVariableComboBox;
        
        private WebServiceComboBox11 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox12 : WpfComboBox
    {
        
        public ErrorVariableComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox11 : WpfComboBox
    {
        
        public WebServiceComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom9 : WpfCustom
    {
        
        public SmallViewContentCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecorsetComboBox1 RecorsetComboBox
        {
            get
            {
                if ((this.mRecorsetComboBox == null))
                {
                    this.mRecorsetComboBox = new RecorsetComboBox1(this);
                }
                return this.mRecorsetComboBox;
            }
        }
        
        public ResultComboBox10 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox10(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private RecorsetComboBox1 mRecorsetComboBox;
        
        private ResultComboBox10 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecorsetComboBox1 : WpfComboBox
    {
        
        public RecorsetComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox10 : WpfComboBox
    {
        
        public ResultComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SqlBulkInsert1 : WpfCustom
    {
        
        public SqlBulkInsert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SqlBulkInsertDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SQL Bulk Insert(SqlBulkInsertDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom10 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom10(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom10 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom10(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom10 mLargeViewContentCustom;
        
        private SmallViewContentCustom10 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom10 : WpfCustom
    {
        
        public LargeViewContentCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatabaseComboBox DatabaseComboBox
        {
            get
            {
                if ((this.mDatabaseComboBox == null))
                {
                    this.mDatabaseComboBox = new DatabaseComboBox(this);
                }
                return this.mDatabaseComboBox;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mItemButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        
        public TableNameComboBox TableNameComboBox
        {
            get
            {
                if ((this.mTableNameComboBox == null))
                {
                    this.mTableNameComboBox = new TableNameComboBox(this);
                }
                return this.mTableNameComboBox;
            }
        }
        
        public WpfButton RfreshTableButton
        {
            get
            {
                if ((this.mRfreshTableButton == null))
                {
                    this.mRfreshTableButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRfreshTableButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRfreshTableButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRfreshTableButton;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public BatchSizeComboBox BatchSizeComboBox
        {
            get
            {
                if ((this.mBatchSizeComboBox == null))
                {
                    this.mBatchSizeComboBox = new BatchSizeComboBox(this);
                }
                return this.mBatchSizeComboBox;
            }
        }
        
        public TimeoutComboBox2 TimeoutComboBox
        {
            get
            {
                if ((this.mTimeoutComboBox == null))
                {
                    this.mTimeoutComboBox = new TimeoutComboBox2(this);
                }
                return this.mTimeoutComboBox;
            }
        }
        
        public WpfCheckBox CheckConstraintsCheckBox
        {
            get
            {
                if ((this.mCheckConstraintsCheckBox == null))
                {
                    this.mCheckConstraintsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mCheckConstraintsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__CheckConstraints_AutoID";
                    this.mCheckConstraintsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCheckConstraintsCheckBox;
            }
        }
        
        public WpfCheckBox KeepTableLockCheckBox
        {
            get
            {
                if ((this.mKeepTableLockCheckBox == null))
                {
                    this.mKeepTableLockCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mKeepTableLockCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__KeepTableLock_AutoID";
                    this.mKeepTableLockCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKeepTableLockCheckBox;
            }
        }
        
        public WpfCheckBox FireTriggersCheckBox
        {
            get
            {
                if ((this.mFireTriggersCheckBox == null))
                {
                    this.mFireTriggersCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mFireTriggersCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__FireTriggers_AutoID";
                    this.mFireTriggersCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFireTriggersCheckBox;
            }
        }
        
        public WpfCheckBox UseInternalTransactiCheckBox
        {
            get
            {
                if ((this.mUseInternalTransactiCheckBox == null))
                {
                    this.mUseInternalTransactiCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUseInternalTransactiCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__UseInternalTransaction_AutoID";
                    this.mUseInternalTransactiCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUseInternalTransactiCheckBox;
            }
        }
        
        public WpfCheckBox SkipblankrowsCheckBox
        {
            get
            {
                if ((this.mSkipblankrowsCheckBox == null))
                {
                    this.mSkipblankrowsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mSkipblankrowsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IgnoreBlankRows_AutoID";
                    this.mSkipblankrowsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSkipblankrowsCheckBox;
            }
        }
        
        public WpfCheckBox KeepIdentityCheckBox
        {
            get
            {
                if ((this.mKeepIdentityCheckBox == null))
                {
                    this.mKeepIdentityCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mKeepIdentityCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__KeepIdentity_AutoID";
                    this.mKeepIdentityCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKeepIdentityCheckBox;
            }
        }
        
        public ResultComboBox11 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox11(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom14 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom14(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private DatabaseComboBox mDatabaseComboBox;
        
        private WpfButton mItemButton;
        
        private TableNameComboBox mTableNameComboBox;
        
        private WpfButton mRfreshTableButton;
        
        private WpfTable mLargeDataGridTable;
        
        private BatchSizeComboBox mBatchSizeComboBox;
        
        private TimeoutComboBox2 mTimeoutComboBox;
        
        private WpfCheckBox mCheckConstraintsCheckBox;
        
        private WpfCheckBox mKeepTableLockCheckBox;
        
        private WpfCheckBox mFireTriggersCheckBox;
        
        private WpfCheckBox mUseInternalTransactiCheckBox;
        
        private WpfCheckBox mSkipblankrowsCheckBox;
        
        private WpfCheckBox mKeepIdentityCheckBox;
        
        private ResultComboBox11 mResultComboBox;
        
        private OnErrorCustom14 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseComboBox : WpfComboBox
    {
        
        public DatabaseComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem TestingDb
        {
            get
            {
                if ((this.mTestingDb == null))
                {
                    this.mTestingDb = new WpfListItem(this);
                    #region Search Criteria
                    this.mTestingDb.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":""RSAKLFSVRGENDEV"",""DatabaseName"":""Dev2TestingDB"",""Port"":1433,""AuthenticationType"":""User"",""UserID"":""testuser"",""Password"":""test123"",""DataList"":"""",""ConnectionString"":""Data Source=RSAKLFSVRGENDEV,1433;Initial Catalog=Dev2TestingDB;User ID=testuser;Password=test123;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""ebba47dc-e5d4-4303-a203-09e2e9761d16"",""ResourceType"":""DbSource"",""ResourceName"":""testingDBSrc"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mTestingDb.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestingDb;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mTestingDb;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TableNameComboBox : WpfComboBox
    {
        
        public TableNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem DboBig
        {
            get
            {
                if ((this.mDboBig == null))
                {
                    this.mDboBig = new WpfListItem(this);
                    #region Search Criteria
                    this.mDboBig.SearchProperties[WpfListItem.PropertyNames.Name] = "dbo.[Big]";
                    this.mDboBig.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDboBig;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mDboBig;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BatchSizeComboBox : WpfComboBox
    {
        
        public BatchSizeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__BatchSize_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeoutComboBox2 : WpfComboBox
    {
        
        public TimeoutComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Timeout_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox11 : WpfComboBox
    {
        
        public ResultComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom14 : WpfCustom
    {
        
        public OnErrorCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup17 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup17(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup17 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup17 : WpfGroup
    {
        
        public OnErrorGroup17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox13 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox13(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox12 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox12(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox13 mErrorVariableComboBox;
        
        private WebServiceComboBox12 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox13 : WpfComboBox
    {
        
        public ErrorVariableComboBox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox12 : WpfComboBox
    {
        
        public WebServiceComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom10 : WpfCustom
    {
        
        public SmallViewContentCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatabaseComboBox1 DatabaseComboBox
        {
            get
            {
                if ((this.mDatabaseComboBox == null))
                {
                    this.mDatabaseComboBox = new DatabaseComboBox1(this);
                }
                return this.mDatabaseComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox TableNameComboBox
        {
            get
            {
                if ((this.mTableNameComboBox == null))
                {
                    this.mTableNameComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTableNameComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mTableNameComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTableNameComboBox;
            }
        }
        
        public WpfTable SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mSmallDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
                    this.mSmallDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public ResultComboBox12 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox12(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfButton RefreshTableButton
        {
            get
            {
                if ((this.mRefreshTableButton == null))
                {
                    this.mRefreshTableButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshTableButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshTableButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshTableButton;
            }
        }
        #endregion
        
        #region Fields
        private DatabaseComboBox1 mDatabaseComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mTableNameComboBox;
        
        private WpfTable mSmallDataGridTable;
        
        private ResultComboBox12 mResultComboBox;
        
        private WpfButton mRefreshTableButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseComboBox1 : WpfComboBox
    {
        
        public DatabaseComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewDataBaseSource
        {
            get
            {
                if ((this.mNewDataBaseSource == null))
                {
                    this.mNewDataBaseSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDataBaseSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":null,""DatabaseName"":null,""Port"":0,""AuthenticationType"":""Windows"",""UserID"":null,""Password"":null,""DataList"":null,""ConnectionString"":""Data Source=;Initial Catalog=;Integrated Security=SSPI;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""4bc4d063-c49c-4fcc-829a-9d6efd41ce68"",""ResourceType"":""DbSource"",""ResourceName"":""New Database Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewDataBaseSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDataBaseSource;
            }
        }
        
        public WpfListItem GenDev
        {
            get
            {
                if ((this.mGenDev == null))
                {
                    this.mGenDev = new WpfListItem(this);
                    #region Search Criteria
                    this.mGenDev.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":"""",""DatabaseName"":"""",""Port"":1433,""AuthenticationType"":""Windows"",""UserID"":null,""Password"":null,""DataList"":"""",""ConnectionString"":""Data Source=,1433;Initial Catalog=;Integrated Security=SSPI;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""62505a00-b304-4ac0-a55c-50ce85111f16"",""ResourceType"":""DbSource"",""ResourceName"":""GenDev"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mGenDev.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenDev;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewDataBaseSource;
        
        private WpfListItem mGenDev;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox12 : WpfComboBox
    {
        
        public ResultComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Unique : WpfCustom
    {
        
        public Unique(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UniqueRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Unique Records(UniqueRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom11 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom11(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom11 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom11(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom11 mLargeViewContentCustom;
        
        private SmallViewContentCustom11 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom11 : WpfCustom
    {
        
        public LargeViewContentCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFieldsComboBox InFieldsComboBox
        {
            get
            {
                if ((this.mInFieldsComboBox == null))
                {
                    this.mInFieldsComboBox = new InFieldsComboBox(this);
                }
                return this.mInFieldsComboBox;
            }
        }
        
        public ReturnFieldsComboBox ReturnFieldsComboBox
        {
            get
            {
                if ((this.mReturnFieldsComboBox == null))
                {
                    this.mReturnFieldsComboBox = new ReturnFieldsComboBox(this);
                }
                return this.mReturnFieldsComboBox;
            }
        }
        
        public ResultsComboBox3 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox3(this);
                }
                return this.mResultsComboBox;
            }
        }
        
        public OnErrorCustom15 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom15(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InFieldsComboBox mInFieldsComboBox;
        
        private ReturnFieldsComboBox mReturnFieldsComboBox;
        
        private ResultsComboBox3 mResultsComboBox;
        
        private OnErrorCustom15 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldsComboBox : WpfComboBox
    {
        
        public InFieldsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtInFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReturnFieldsComboBox : WpfComboBox
    {
        
        public ReturnFieldsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtReturnFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox3 : WpfComboBox
    {
        
        public ResultsComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtResults_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom15 : WpfCustom
    {
        
        public OnErrorCustom15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup18 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup18(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup18 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup18 : WpfGroup
    {
        
        public OnErrorGroup18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox1 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox1(this);
                }
                return this.mVariableComboBox;
            }
        }
        
        public WebServiceComboBox13 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox13(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox1 mVariableComboBox;
        
        private WebServiceComboBox13 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox1 : WpfComboBox
    {
        
        public VariableComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox13 : WpfComboBox
    {
        
        public WebServiceComboBox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom11 : WpfCustom
    {
        
        public SmallViewContentCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFieldsComboBox1 InFieldsComboBox
        {
            get
            {
                if ((this.mInFieldsComboBox == null))
                {
                    this.mInFieldsComboBox = new InFieldsComboBox1(this);
                }
                return this.mInFieldsComboBox;
            }
        }
        
        public ReturnFieldsComboBox1 ReturnFieldsComboBox
        {
            get
            {
                if ((this.mReturnFieldsComboBox == null))
                {
                    this.mReturnFieldsComboBox = new ReturnFieldsComboBox1(this);
                }
                return this.mReturnFieldsComboBox;
            }
        }
        
        public ResultsComboBox4 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox4(this);
                }
                return this.mResultsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InFieldsComboBox1 mInFieldsComboBox;
        
        private ReturnFieldsComboBox1 mReturnFieldsComboBox;
        
        private ResultsComboBox4 mResultsComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldsComboBox1 : WpfComboBox
    {
        
        public InFieldsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtInFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReturnFieldsComboBox1 : WpfComboBox
    {
        
        public ReturnFieldsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtReturnFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox4 : WpfComboBox
    {
        
        public ResultsComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtResults_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateJson1 : WpfCustom
    {
        
        public CreateJson1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CreateJsonDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "CreateJsonDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteCommandLine : WpfCustom
    {
        
        public ExecuteCommandLine(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CommandLineDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Execute Command Line(CommandLineDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent mLargeViewContent;
        
        private SmallViewContent mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent : WpfCustom
    {
        
        public LargeViewContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseTextbox ScriptIntellisenseTextbox
        {
            get
            {
                if ((this.mScriptIntellisenseTextbox == null))
                {
                    this.mScriptIntellisenseTextbox = new ScriptIntellisenseTextbox(this);
                }
                return this.mScriptIntellisenseTextbox;
            }
        }
        
        public WpfComboBox PriorityComboBox
        {
            get
            {
                if ((this.mPriorityComboBox == null))
                {
                    this.mPriorityComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mPriorityComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__CmdPriority_AutoID";
                    this.mPriorityComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPriorityComboBox;
            }
        }
        
        public ResultIntellisenseTextbox ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        
        public OnError1 OnError
        {
            get
            {
                if ((this.mOnError == null))
                {
                    this.mOnError = new OnError1(this);
                }
                return this.mOnError;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseTextbox mScriptIntellisenseTextbox;
        
        private WpfComboBox mPriorityComboBox;
        
        private ResultIntellisenseTextbox mResultIntellisenseTextbox;
        
        private OnError1 mOnError;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseTextbox : WpfComboBox
    {
        
        public ScriptIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Cmdtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox : WpfComboBox
    {
        
        public ResultIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnError1 : WpfCustom
    {
        
        public OnError1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup19 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup19(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup19 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup19 : WpfGroup
    {
        
        public OnErrorGroup19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseTextbox1 ErrorVariableIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseTextbox == null))
                {
                    this.mErrorVariableIntellisenseTextbox = new ErrorVariableIntellisenseTextbox1(this);
                }
                return this.mErrorVariableIntellisenseTextbox;
            }
        }
        
        public OnErrorWorkflow OnErrorWorkflow
        {
            get
            {
                if ((this.mOnErrorWorkflow == null))
                {
                    this.mOnErrorWorkflow = new OnErrorWorkflow(this);
                }
                return this.mOnErrorWorkflow;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseTextbox1 mErrorVariableIntellisenseTextbox;
        
        private OnErrorWorkflow mOnErrorWorkflow;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseTextbox1 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWorkflow : WpfComboBox
    {
        
        public OnErrorWorkflow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent : WpfCustom
    {
        
        public SmallViewContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseTextbox1 ScriptIntellisenseTextbox
        {
            get
            {
                if ((this.mScriptIntellisenseTextbox == null))
                {
                    this.mScriptIntellisenseTextbox = new ScriptIntellisenseTextbox1(this);
                }
                return this.mScriptIntellisenseTextbox;
            }
        }
        
        public ResultIntellisenseTextbox1 ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox1(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseTextbox1 mScriptIntellisenseTextbox;
        
        private ResultIntellisenseTextbox1 mResultIntellisenseTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseTextbox1 : WpfComboBox
    {
        
        public ScriptIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Cmdtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox1 : WpfComboBox
    {
        
        public ResultIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointMoveFile : WpfCustom
    {
        
        public SharepointMoveFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointMoveFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Move File(SharePointMoveFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView12 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView12(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView4 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView4(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView12 mLargeView;
        
        private SmallView4 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView12 : WpfCustom
    {
        
        public LargeView12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox13 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox13(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorPane1 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane1(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server mServer;
        
        private FromDirectoryComboBox mFromDirectoryComboBox;
        
        private PathDirectoryComboBox mPathDirectoryComboBox;
        
        private ResultComboBox13 mResultComboBox;
        
        private OnErrorPane1 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server : WpfComboBox
    {
        
        public Server(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox : WpfComboBox
    {
        
        public FromDirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox : WpfComboBox
    {
        
        public PathDirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox13 : WpfComboBox
    {
        
        public ResultComboBox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane1 : WpfCustom
    {
        
        public OnErrorPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup20 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup20(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup20 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup20 : WpfGroup
    {
        
        public OnErrorGroup20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView4 : WpfCustom
    {
        
        public SmallView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server1 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server1(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox1 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox1(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox1 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox1(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox14 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox14(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server1 mServer;
        
        private FromDirectoryComboBox1 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox1 mPathDirectoryComboBox;
        
        private ResultComboBox14 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server1 : WpfComboBox
    {
        
        public Server1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox1 : WpfComboBox
    {
        
        public FromDirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox1 : WpfComboBox
    {
        
        public PathDirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox14 : WpfComboBox
    {
        
        public ResultComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointCreateListItem : WpfCustom
    {
        
        public SharepointCreateListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListCreateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sharepoint Create List Item(SharepointListCreateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView13 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView13(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView5 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView5(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView13 mLargeView;
        
        private SmallView5 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView13 : WpfCustom
    {
        
        public LargeView13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox List
        {
            get
            {
                if ((this.mList == null))
                {
                    this.mList = new WpfComboBox(this);
                    #region Search Criteria
                    this.mList.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mList.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mList;
            }
        }
        
        public Server2 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server2(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTable DataGridTable
        {
            get
            {
                if ((this.mDataGridTable == null))
                {
                    this.mDataGridTable = new DataGridTable(this);
                }
                return this.mDataGridTable;
            }
        }
        
        public OnErrorPane2 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane2(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mList;
        
        private Server2 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTable mDataGridTable;
        
        private OnErrorPane2 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server2 : WpfComboBox
    {
        
        public Server2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList : WpfComboBox
    {
        
        public MethodList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTable : WpfTable
    {
        
        public DataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ContentTypeRow ContentTypeRow
        {
            get
            {
                if ((this.mContentTypeRow == null))
                {
                    this.mContentTypeRow = new ContentTypeRow(this);
                }
                return this.mContentTypeRow;
            }
        }
        
        public TitleRow TitleRow
        {
            get
            {
                if ((this.mTitleRow == null))
                {
                    this.mTitleRow = new TitleRow(this);
                }
                return this.mTitleRow;
            }
        }
        
        public AttachmentsRow AttachmentsRow
        {
            get
            {
                if ((this.mAttachmentsRow == null))
                {
                    this.mAttachmentsRow = new AttachmentsRow(this);
                }
                return this.mAttachmentsRow;
            }
        }
        #endregion
        
        #region Fields
        private ContentTypeRow mContentTypeRow;
        
        private TitleRow mTitleRow;
        
        private AttachmentsRow mAttachmentsRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentTypeRow : WpfRow
    {
        
        public ContentTypeRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Content Type";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemContentTypeCell ItemContentTypeCell
        {
            get
            {
                if ((this.mItemContentTypeCell == null))
                {
                    this.mItemContentTypeCell = new ItemContentTypeCell(this);
                }
                return this.mItemContentTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemContentTypeCell mItemContentTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemContentTypeCell : WpfCell
    {
        
        public ItemContentTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText ContentTypeText
        {
            get
            {
                if ((this.mContentTypeText == null))
                {
                    this.mContentTypeText = new WpfText(this);
                    #region Search Criteria
                    this.mContentTypeText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mContentTypeText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mContentTypeText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mContentTypeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TitleRow : WpfRow
    {
        
        public TitleRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Title";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TitleColumnCell TitleColumnCell
        {
            get
            {
                if ((this.mTitleColumnCell == null))
                {
                    this.mTitleColumnCell = new TitleColumnCell(this);
                }
                return this.mTitleColumnCell;
            }
        }
        #endregion
        
        #region Fields
        private TitleColumnCell mTitleColumnCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TitleColumnCell : WpfCell
    {
        
        public TitleColumnCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TitleText
        {
            get
            {
                if ((this.mTitleText == null))
                {
                    this.mTitleText = new WpfText(this);
                    #region Search Criteria
                    this.mTitleText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mTitleText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTitleText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTitleText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsRow : WpfRow
    {
        
        public AttachmentsRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Attachments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemAttachmentsCell ItemAttachmentsCell
        {
            get
            {
                if ((this.mItemAttachmentsCell == null))
                {
                    this.mItemAttachmentsCell = new ItemAttachmentsCell(this);
                }
                return this.mItemAttachmentsCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemAttachmentsCell mItemAttachmentsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemAttachmentsCell : WpfCell
    {
        
        public ItemAttachmentsCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText AttachmentsText
        {
            get
            {
                if ((this.mAttachmentsText == null))
                {
                    this.mAttachmentsText = new WpfText(this);
                    #region Search Criteria
                    this.mAttachmentsText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mAttachmentsText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachmentsText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mAttachmentsText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane2 : WpfCustom
    {
        
        public OnErrorPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup21 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup21(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup21 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup21 : WpfGroup
    {
        
        public OnErrorGroup21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox1 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox1(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox1 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox1(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox1 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox1 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView5 : WpfCustom
    {
        
        public SmallView5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox List
        {
            get
            {
                if ((this.mList == null))
                {
                    this.mList = new WpfComboBox(this);
                    #region Search Criteria
                    this.mList.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mList.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mList;
            }
        }
        
        public Server3 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server3(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList1 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList1(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mList;
        
        private Server3 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList1 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server3 : WpfComboBox
    {
        
        public Server3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList1 : WpfComboBox
    {
        
        public MethodList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointCopyFile : WpfCustom
    {
        
        public SharepointCopyFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointCopyFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Copy File(SharePointCopyFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView14 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView14(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView6 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView6(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView14 mLargeView;
        
        private SmallView6 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView14 : WpfCustom
    {
        
        public LargeView14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server4 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server4(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox2 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox2(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox2 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox2(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox15 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox15(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorPane3 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane3(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server4 mServer;
        
        private FromDirectoryComboBox2 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox2 mPathDirectoryComboBox;
        
        private ResultComboBox15 mResultComboBox;
        
        private OnErrorPane3 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server4 : WpfComboBox
    {
        
        public Server4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox2 : WpfComboBox
    {
        
        public FromDirectoryComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox2 : WpfComboBox
    {
        
        public PathDirectoryComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox15 : WpfComboBox
    {
        
        public ResultComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane3 : WpfCustom
    {
        
        public OnErrorPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup22 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup22(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup22 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup22 : WpfGroup
    {
        
        public OnErrorGroup22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox2 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox2(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox2 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox2(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox2 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox2 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox2 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox2 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView6 : WpfCustom
    {
        
        public SmallView6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server5 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server5(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox3 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox3(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox3 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox3(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox16 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox16(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server5 mServer;
        
        private FromDirectoryComboBox3 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox3 mPathDirectoryComboBox;
        
        private ResultComboBox16 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server5 : WpfComboBox
    {
        
        public Server5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox3 : WpfComboBox
    {
        
        public FromDirectoryComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox3 : WpfComboBox
    {
        
        public PathDirectoryComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox16 : WpfComboBox
    {
        
        public ResultComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDeleteFile : WpfCustom
    {
        
        public SharepointDeleteFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListDeleteDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListDeleteDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView15 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView15(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView7 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView7(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView15 mLargeView;
        
        private SmallView7 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView15 : WpfCustom
    {
        
        public LargeView15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server6 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server6(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList2 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList2(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTable1 DataGridTable
        {
            get
            {
                if ((this.mDataGridTable == null))
                {
                    this.mDataGridTable = new DataGridTable1(this);
                }
                return this.mDataGridTable;
            }
        }
        
        public OnErrorPane4 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane4(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server6 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList2 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTable1 mDataGridTable;
        
        private OnErrorPane4 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server6 : WpfComboBox
    {
        
        public Server6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList2 : WpfComboBox
    {
        
        public MethodList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTable1 : WpfTable
    {
        
        public DataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow12 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow12(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow12 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow12 : WpfRow
    {
        
        public ItemRow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell4 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell4(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell mFileNameCell;
        
        private MatchTypeCell mMatchTypeCell;
        
        private ValueCell4 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell : WpfCell
    {
        
        public FileNameCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell : WpfCell
    {
        
        public MatchTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell4 : WpfCell
    {
        
        public ValueCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox4 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox4(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox4 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox4 : WpfComboBox
    {
        
        public ValueComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane4 : WpfCustom
    {
        
        public OnErrorPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup23 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup23(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup23 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup23 : WpfGroup
    {
        
        public OnErrorGroup23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox3 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox3(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox3 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox3(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox3 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox3 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox3 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox3 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView7 : WpfCustom
    {
        
        public SmallView7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server7 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server7(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList3 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList3(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private Server7 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList3 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server7 : WpfComboBox
    {
        
        public Server7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList3 : WpfComboBox
    {
        
        public MethodList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointReadListItem : WpfCustom
    {
        
        public SharepointReadListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListReadDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListReadDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView16 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView16(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView8 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView8(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView16 mLargeView;
        
        private SmallView8 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView16 : WpfCustom
    {
        
        public LargeView16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server8 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server8(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList4 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList4(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTableVariables DataGridTableVariables
        {
            get
            {
                if ((this.mDataGridTableVariables == null))
                {
                    this.mDataGridTableVariables = new DataGridTableVariables(this);
                }
                return this.mDataGridTableVariables;
            }
        }
        
        public DataGridTableValues DataGridTableValues
        {
            get
            {
                if ((this.mDataGridTableValues == null))
                {
                    this.mDataGridTableValues = new DataGridTableValues(this);
                }
                return this.mDataGridTableValues;
            }
        }
        
        public OnErrorPane5 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane5(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server8 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList4 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTableVariables mDataGridTableVariables;
        
        private DataGridTableValues mDataGridTableValues;
        
        private OnErrorPane5 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server8 : WpfComboBox
    {
        
        public Server8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList4 : WpfComboBox
    {
        
        public MethodList4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableVariables : WpfTable
    {
        
        public DataGridTableVariables(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow13 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow13(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow13 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow13 : WpfRow
    {
        
        public ItemRow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell1 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell1(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell1 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell1(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell5 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell5(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell1 mFileNameCell;
        
        private MatchTypeCell1 mMatchTypeCell;
        
        private ValueCell5 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell1 : WpfCell
    {
        
        public FileNameCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell1 : WpfCell
    {
        
        public MatchTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell5 : WpfCell
    {
        
        public ValueCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox5 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox5(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox5 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox5 : WpfComboBox
    {
        
        public ValueComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableValues : WpfTable
    {
        
        public DataGridTableValues(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow14 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow14(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow14 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow14 : WpfRow
    {
        
        public ItemRow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell2 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell2(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell2 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell2(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell6 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell6(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell2 mFileNameCell;
        
        private MatchTypeCell2 mMatchTypeCell;
        
        private ValueCell6 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell2 : WpfCell
    {
        
        public FileNameCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell2 : WpfCell
    {
        
        public MatchTypeCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell6 : WpfCell
    {
        
        public ValueCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox6 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox6(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox6 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox6 : WpfComboBox
    {
        
        public ValueComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane5 : WpfCustom
    {
        
        public OnErrorPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup24 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup24(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup24 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup24 : WpfGroup
    {
        
        public OnErrorGroup24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox4 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox4(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox4 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox4(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox4 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox4 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox4 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox4 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView8 : WpfCustom
    {
        
        public SmallView8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server9 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server9(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList5 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList5(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        #endregion
        
        #region Fields
        private Server9 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList5 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private WpfComboBox mSourceCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server9 : WpfComboBox
    {
        
        public Server9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList5 : WpfComboBox
    {
        
        public MethodList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointUpdate : WpfCustom
    {
        
        public SharepointUpdate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListUpdateDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListUpdateDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView17 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView17(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView9 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView9(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView17 mLargeView;
        
        private SmallView9 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView17 : WpfCustom
    {
        
        public LargeView17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server10 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server10(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList6 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList6(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTableVariables1 DataGridTableVariables
        {
            get
            {
                if ((this.mDataGridTableVariables == null))
                {
                    this.mDataGridTableVariables = new DataGridTableVariables1(this);
                }
                return this.mDataGridTableVariables;
            }
        }
        
        public DataGridTableValues1 DataGridTableValues
        {
            get
            {
                if ((this.mDataGridTableValues == null))
                {
                    this.mDataGridTableValues = new DataGridTableValues1(this);
                }
                return this.mDataGridTableValues;
            }
        }
        
        public OnErrorPane6 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane6(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server10 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList6 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTableVariables1 mDataGridTableVariables;
        
        private DataGridTableValues1 mDataGridTableValues;
        
        private OnErrorPane6 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server10 : WpfComboBox
    {
        
        public Server10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList6 : WpfComboBox
    {
        
        public MethodList6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableVariables1 : WpfTable
    {
        
        public DataGridTableVariables1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow15 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow15(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow15 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow15 : WpfRow
    {
        
        public ItemRow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell3 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell3(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell3 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell3(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell7 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell7(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell3 mFileNameCell;
        
        private MatchTypeCell3 mMatchTypeCell;
        
        private ValueCell7 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell3 : WpfCell
    {
        
        public FileNameCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell3 : WpfCell
    {
        
        public MatchTypeCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell7 : WpfCell
    {
        
        public ValueCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox7 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox7(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox7 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox7 : WpfComboBox
    {
        
        public ValueComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableValues1 : WpfTable
    {
        
        public DataGridTableValues1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow16 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow16(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow16 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow16 : WpfRow
    {
        
        public ItemRow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell4 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell4(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell4 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell4(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell8 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell8(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell4 mFileNameCell;
        
        private MatchTypeCell4 mMatchTypeCell;
        
        private ValueCell8 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell4 : WpfCell
    {
        
        public FileNameCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell4 : WpfCell
    {
        
        public MatchTypeCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell8 : WpfCell
    {
        
        public ValueCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox8 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox8(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox8 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox8 : WpfComboBox
    {
        
        public ValueComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane6 : WpfCustom
    {
        
        public OnErrorPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup25 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup25(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup25 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup25 : WpfGroup
    {
        
        public OnErrorGroup25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox5 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox5(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox5 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox5(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox5 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox5 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox5 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox5 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView9 : WpfCustom
    {
        
        public SmallView9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server11 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server11(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList7 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList7(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private Server11 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList7 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server11 : WpfComboBox
    {
        
        public Server11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList7 : WpfComboBox
    {
        
        public MethodList7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointUploadFile : WpfCustom
    {
        
        public SharepointUploadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.ClassName, "SharePointFileUploadDesigner", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Upload File(SharePointFileUploadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView18 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView18(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView10 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView10(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView18 mLargeView;
        
        private SmallView10 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView18 : WpfCustom
    {
        
        public LargeView18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceCombobox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new SourceCombobox(this);
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public LocalPathFromIntellisenseCombobox LocalPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathFromIntellisenseCombobox == null))
                {
                    this.mLocalPathFromIntellisenseCombobox = new LocalPathFromIntellisenseCombobox(this);
                }
                return this.mLocalPathFromIntellisenseCombobox;
            }
        }
        
        public ServerPathToIntellisenseCombobox ServerPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathToIntellisenseCombobox == null))
                {
                    this.mServerPathToIntellisenseCombobox = new ServerPathToIntellisenseCombobox(this);
                }
                return this.mServerPathToIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public OnErrorPane7 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane7(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private SourceCombobox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private LocalPathFromIntellisenseCombobox mLocalPathFromIntellisenseCombobox;
        
        private ServerPathToIntellisenseCombobox mServerPathToIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox mResultsIntellisenseCombobox;
        
        private OnErrorPane7 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceCombobox : WpfComboBox
    {
        
        public SourceCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "New Sharepoint Server Source...", PropertyExpressionOperator.Contains));
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "SharePoint Test Server", PropertyExpressionOperator.Contains));
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathFromIntellisenseCombobox : WpfComboBox
    {
        
        public LocalPathFromIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathToIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathToIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane7 : WpfCustom
    {
        
        public OnErrorPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup26 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup26(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup26 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup26 : WpfGroup
    {
        
        public OnErrorGroup26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox6 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox6(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox6 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox6(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox6 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox6 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox6 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox6 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView10 : WpfCustom
    {
        
        public SmallView10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceCombobox1 SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new SourceCombobox1(this);
                }
                return this.mSourceCombobox;
            }
        }
        
        public LocalPathFromIntellisenseCombobox1 LocalPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathFromIntellisenseCombobox == null))
                {
                    this.mLocalPathFromIntellisenseCombobox = new LocalPathFromIntellisenseCombobox1(this);
                }
                return this.mLocalPathFromIntellisenseCombobox;
            }
        }
        
        public ServerPathToIntellisenseCombobox1 ServerPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathToIntellisenseCombobox == null))
                {
                    this.mServerPathToIntellisenseCombobox = new ServerPathToIntellisenseCombobox1(this);
                }
                return this.mServerPathToIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox1 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox1(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        #endregion
        
        #region Fields
        private SourceCombobox1 mSourceCombobox;
        
        private LocalPathFromIntellisenseCombobox1 mLocalPathFromIntellisenseCombobox;
        
        private ServerPathToIntellisenseCombobox1 mServerPathToIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox1 mResultsIntellisenseCombobox;
        
        private WpfButton mEditSourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceCombobox1 : WpfComboBox
    {
        
        public SourceCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "New Sharepoint Server Source...", PropertyExpressionOperator.Contains));
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "SharePoint Test Server", PropertyExpressionOperator.Contains));
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathFromIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalPathFromIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathToIntellisenseCombobox1 : WpfComboBox
    {
        
        public ServerPathToIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox1 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDownloadFile : WpfCustom
    {
        
        public SharepointDownloadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointFileDownLoadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Download File(SharePointFileDownLoadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView11 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView11(this);
                }
                return this.mSmallView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView19 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView19(this);
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private SmallView11 mSmallView;
        
        private WpfButton mDoneButton;
        
        private LargeView19 mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView11 : WpfCustom
    {
        
        public SmallView11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SelectSourceCombobox
        {
            get
            {
                if ((this.mSelectSourceCombobox == null))
                {
                    this.mSelectSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSelectSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSelectSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectSourceCombobox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public ServerPathFromIntellisenseCombobox ServerPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathFromIntellisenseCombobox == null))
                {
                    this.mServerPathFromIntellisenseCombobox = new ServerPathFromIntellisenseCombobox(this);
                }
                return this.mServerPathFromIntellisenseCombobox;
            }
        }
        
        public LocalPathToIntellisenseCombobox LocalPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathToIntellisenseCombobox == null))
                {
                    this.mLocalPathToIntellisenseCombobox = new LocalPathToIntellisenseCombobox(this);
                }
                return this.mLocalPathToIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSelectSourceCombobox;
        
        private WpfButton mNewSourceButton;
        
        private ServerPathFromIntellisenseCombobox mServerPathFromIntellisenseCombobox;
        
        private LocalPathToIntellisenseCombobox mLocalPathToIntellisenseCombobox;
        
        private ResultIntellisenseCombobox mResultIntellisenseCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mSourceCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathFromIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathFromIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathToIntellisenseCombobox : WpfComboBox
    {
        
        public LocalPathToIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox : WpfComboBox
    {
        
        public ResultIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView19 : WpfCustom
    {
        
        public LargeView19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public ServerPathFromIntellisenseTextbox ServerPathFromIntellisenseTextbox
        {
            get
            {
                if ((this.mServerPathFromIntellisenseTextbox == null))
                {
                    this.mServerPathFromIntellisenseTextbox = new ServerPathFromIntellisenseTextbox(this);
                }
                return this.mServerPathFromIntellisenseTextbox;
            }
        }
        
        public LocalPathToIntellisenseCombobox1 LocalPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathToIntellisenseCombobox == null))
                {
                    this.mLocalPathToIntellisenseCombobox = new LocalPathToIntellisenseCombobox1(this);
                }
                return this.mLocalPathToIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultsIntellisenseCombobox2 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox2(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public OnErrorPane8 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane8(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private ServerPathFromIntellisenseTextbox mServerPathFromIntellisenseTextbox;
        
        private LocalPathToIntellisenseCombobox1 mLocalPathToIntellisenseCombobox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultsIntellisenseCombobox2 mResultsIntellisenseCombobox;
        
        private OnErrorPane8 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathFromIntellisenseTextbox : WpfComboBox
    {
        
        public ServerPathFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathToIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalPathToIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox2 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane8 : WpfCustom
    {
        
        public OnErrorPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup27 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup27(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup27 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup27 : WpfGroup
    {
        
        public OnErrorGroup27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox7 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox7(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox7 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox7(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox7 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox7 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox7 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox7 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDeleteListItem : WpfCustom
    {
        
        public SharepointDeleteListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListDeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sharepoint Delete List Item (1)(SharepointListDeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView12 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView12(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView20 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView20(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView12 mSmallView;
        
        private LargeView20 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView12 : WpfCustom
    {
        
        public SmallView12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfComboBox ListCombobox
        {
            get
            {
                if ((this.mListCombobox == null))
                {
                    this.mListCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mListCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mListCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public ResultsIntellisenseCombobox3 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox3(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfComboBox mListCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mRefreshButton;
        
        private ResultsIntellisenseCombobox3 mResultsIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox3 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView20 : WpfCustom
    {
        
        public LargeView20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ListCombobox
        {
            get
            {
                if ((this.mListCombobox == null))
                {
                    this.mListCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mListCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mListCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListCombobox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public Table2 Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table2(this);
                }
                return this.mTable;
            }
        }
        
        public WpfCheckBox RequireAllMatchesToBeTrueCheckbox
        {
            get
            {
                if ((this.mRequireAllMatchesToBeTrueCheckbox == null))
                {
                    this.mRequireAllMatchesToBeTrueCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequireAllMatchesToBeTrueCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequireAllMatchesToBeTrueCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequireAllMatchesToBeTrueCheckbox;
            }
        }
        
        public ResultIntellisenseCombobox1 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox1(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane9 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane9(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mListCombobox;
        
        private WpfButton mRefreshButton;
        
        private Table2 mTable;
        
        private WpfCheckBox mRequireAllMatchesToBeTrueCheckbox;
        
        private ResultIntellisenseCombobox1 mResultIntellisenseCombobox;
        
        private OnErrorPane9 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table2 : WpfTable
    {
        
        public Table2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row115 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row115(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row115 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row115 : WpfRow
    {
        
        public Row115(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldNameCell FieldNameCell
        {
            get
            {
                if ((this.mFieldNameCell == null))
                {
                    this.mFieldNameCell = new FieldNameCell(this);
                }
                return this.mFieldNameCell;
            }
        }
        
        public MatchTypeCell5 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell5(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell9 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell9(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FieldNameCell mFieldNameCell;
        
        private MatchTypeCell5 mMatchTypeCell;
        
        private ValueCell9 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldNameCell : WpfCell
    {
        
        public FieldNameCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SearchTypeComboBox
        {
            get
            {
                if ((this.mSearchTypeComboBox == null))
                {
                    this.mSearchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSearchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mSearchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSearchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell5 : WpfCell
    {
        
        public MatchTypeCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SearchTypeCombobox
        {
            get
            {
                if ((this.mSearchTypeCombobox == null))
                {
                    this.mSearchTypeCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSearchTypeCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mSearchTypeCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTypeCombobox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSearchTypeCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell9 : WpfCell
    {
        
        public ValueCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchCriteriaIntellisenseCombobox SearchCriteriaIntellisenseCombobox
        {
            get
            {
                if ((this.mSearchCriteriaIntellisenseCombobox == null))
                {
                    this.mSearchCriteriaIntellisenseCombobox = new SearchCriteriaIntellisenseCombobox(this);
                }
                return this.mSearchCriteriaIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private SearchCriteriaIntellisenseCombobox mSearchCriteriaIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaIntellisenseCombobox : WpfComboBox
    {
        
        public SearchCriteriaIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox1 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane9 : WpfCustom
    {
        
        public OnErrorPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup28 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup28(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup28 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup28 : WpfGroup
    {
        
        public OnErrorGroup28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox8 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox8(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox8 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox8(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox8 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox8 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox8 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox8 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointReadFolder : WpfCustom
    {
        
        public SharepointReadFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointReadFolderDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Read Folder Items(SharePointReadFolderDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView13 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView13(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView21 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView21(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView13 mSmallView;
        
        private LargeView21 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView13 : WpfCustom
    {
        
        public SmallView13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathIntellisenseCombobox ServerPathIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathIntellisenseCombobox == null))
                {
                    this.mServerPathIntellisenseCombobox = new ServerPathIntellisenseCombobox(this);
                }
                return this.mServerPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesAndFoldersRadioButton
        {
            get
            {
                if ((this.mFilesAndFoldersRadioButton == null))
                {
                    this.mFilesAndFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesAndFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesAndFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesAndFoldersRadioButton;
            }
        }
        
        public ResultIntellisenseCombobox2 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox2(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathIntellisenseCombobox mServerPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesAndFoldersRadioButton;
        
        private ResultIntellisenseCombobox2 mResultIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox2 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView21 : WpfCustom
    {
        
        public LargeView21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathIntellisenseCombobox1 ServerPathIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathIntellisenseCombobox == null))
                {
                    this.mServerPathIntellisenseCombobox = new ServerPathIntellisenseCombobox1(this);
                }
                return this.mServerPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesAndFoldersRadioButton
        {
            get
            {
                if ((this.mFilesAndFoldersRadioButton == null))
                {
                    this.mFilesAndFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesAndFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesAndFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesAndFoldersRadioButton;
            }
        }
        
        public ResultIntellisenseTextbox2 ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox2(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        
        public OnErrorPane10 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane10(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathIntellisenseCombobox1 mServerPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesAndFoldersRadioButton;
        
        private ResultIntellisenseTextbox2 mResultIntellisenseTextbox;
        
        private OnErrorPane10 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathIntellisenseCombobox1 : WpfComboBox
    {
        
        public ServerPathIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox2 : WpfComboBox
    {
        
        public ResultIntellisenseTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane10 : WpfCustom
    {
        
        public OnErrorPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup29 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup29(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup29 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup29 : WpfGroup
    {
        
        public OnErrorGroup29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox9 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox9(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox9 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox9(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox9 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox9 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox9 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox9 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Calculate1 : WpfCustom
    {
        
        public Calculate1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CalculateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Calculate(CalculateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView22 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView22(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallView14 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView14(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView22 mLargeView;
        
        private WpfButton mDoneButton;
        
        private SmallView14 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView22 : WpfCustom
    {
        
        public LargeView22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox2 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox2(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox2 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox2 : WpfControl
    {
        
        public Listbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Combobox";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit FunctionTextbox
        {
            get
            {
                if ((this.mFunctionTextbox == null))
                {
                    this.mFunctionTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mFunctionTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mFunctionTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFunctionTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mFunctionTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView14 : WpfCustom
    {
        
        public SmallView14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox3 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox3(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox3 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox3 : WpfControl
    {
        
        public Listbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Combobox";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit FunctionTextbox
        {
            get
            {
                if ((this.mFunctionTextbox == null))
                {
                    this.mFunctionTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mFunctionTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mFunctionTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFunctionTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mFunctionTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AggregateCalculat : WpfCustom
    {
        
        public AggregateCalculat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.AggregateCalculateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Aggregate Calculate(AggregateCalculateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom12 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom12(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public LargeViewContentCustom12 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom12(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom12 mSmallViewContentCustom;
        
        private LargeViewContentCustom12 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom12 : WpfCustom
    {
        
        public SmallViewContentCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public fxComboBox fxComboBox
        {
            get
            {
                if ((this.mfxComboBox == null))
                {
                    this.mfxComboBox = new fxComboBox(this);
                }
                return this.mfxComboBox;
            }
        }
        
        public ResultComboBox17 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox17(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private fxComboBox mfxComboBox;
        
        private ResultComboBox17 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class fxComboBox : WpfComboBox
    {
        
        public fxComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox17 : WpfComboBox
    {
        
        public ResultComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom12 : WpfCustom
    {
        
        public LargeViewContentCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public fxComboBox1 fxComboBox
        {
            get
            {
                if ((this.mfxComboBox == null))
                {
                    this.mfxComboBox = new fxComboBox1(this);
                }
                return this.mfxComboBox;
            }
        }
        
        public ResultComboBox18 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox18(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom16 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom16(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private fxComboBox1 mfxComboBox;
        
        private ResultComboBox18 mResultComboBox;
        
        private OnErrorCustom16 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class fxComboBox1 : WpfComboBox
    {
        
        public fxComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox18 : WpfComboBox
    {
        
        public ResultComboBox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom16 : WpfCustom
    {
        
        public OnErrorCustom16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup30 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup30(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup30 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup30 : WpfGroup
    {
        
        public OnErrorGroup30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox14 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox14(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox14 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox14(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox14 mErrorVariableComboBox;
        
        private WebServiceComboBox14 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox14 : WpfComboBox
    {
        
        public ErrorVariableComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox14 : WpfComboBox
    {
        
        public WebServiceComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DateTime1 : WpfCustom
    {
        
        public DateTime1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DateTimeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Date and Time(DateTimeDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom13 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom13(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom13 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom13(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom13 mLargeViewContentCustom;
        
        private SmallViewContentCustom13 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom13 : WpfCustom
    {
        
        public LargeViewContentCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox2 InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox2(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public InputFormatComboBox InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public WpfComboBox AddTimeTypeComboBox
        {
            get
            {
                if ((this.mAddTimeTypeComboBox == null))
                {
                    this.mAddTimeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAddTimeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeTypecbx_AutoID";
                    this.mAddTimeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddTimeTypeComboBox;
            }
        }
        
        public AddTimeAmountComboBox AddTimeAmountComboBox
        {
            get
            {
                if ((this.mAddTimeAmountComboBox == null))
                {
                    this.mAddTimeAmountComboBox = new AddTimeAmountComboBox(this);
                }
                return this.mAddTimeAmountComboBox;
            }
        }
        
        public OutputFormatComboBox OutputFormatComboBox
        {
            get
            {
                if ((this.mOutputFormatComboBox == null))
                {
                    this.mOutputFormatComboBox = new OutputFormatComboBox(this);
                }
                return this.mOutputFormatComboBox;
            }
        }
        
        public ResultComboBox19 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox19(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom17 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom17(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox2 mInputComboBox;
        
        private InputFormatComboBox mInputFormatComboBox;
        
        private WpfComboBox mAddTimeTypeComboBox;
        
        private AddTimeAmountComboBox mAddTimeAmountComboBox;
        
        private OutputFormatComboBox mOutputFormatComboBox;
        
        private ResultComboBox19 mResultComboBox;
        
        private OnErrorCustom17 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox2 : WpfComboBox
    {
        
        public InputComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox : WpfComboBox
    {
        
        public InputFormatComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddTimeAmountComboBox : WpfComboBox
    {
        
        public AddTimeAmountComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeAmounttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputFormatComboBox : WpfComboBox
    {
        
        public OutputFormatComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox19 : WpfComboBox
    {
        
        public ResultComboBox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom17 : WpfCustom
    {
        
        public OnErrorCustom17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup31 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup31(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup31 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup31 : WpfGroup
    {
        
        public OnErrorGroup31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WebServiceComboBox15 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox15(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public ErrorVariableComboBox15 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox15(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WebServiceComboBox15 mWebServiceComboBox;
        
        private ErrorVariableComboBox15 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox15 : WpfComboBox
    {
        
        public WebServiceComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox15 : WpfComboBox
    {
        
        public ErrorVariableComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom13 : WpfCustom
    {
        
        public SmallViewContentCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox3 InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox3(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public InputFormatComboBox1 InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox1(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public AddTimeTypeComboBox AddTimeTypeComboBox
        {
            get
            {
                if ((this.mAddTimeTypeComboBox == null))
                {
                    this.mAddTimeTypeComboBox = new AddTimeTypeComboBox(this);
                }
                return this.mAddTimeTypeComboBox;
            }
        }
        
        public AddTimeAmountComboBox1 AddTimeAmountComboBox
        {
            get
            {
                if ((this.mAddTimeAmountComboBox == null))
                {
                    this.mAddTimeAmountComboBox = new AddTimeAmountComboBox1(this);
                }
                return this.mAddTimeAmountComboBox;
            }
        }
        
        public OutputFormatComboBox1 OutputFormatComboBox
        {
            get
            {
                if ((this.mOutputFormatComboBox == null))
                {
                    this.mOutputFormatComboBox = new OutputFormatComboBox1(this);
                }
                return this.mOutputFormatComboBox;
            }
        }
        
        public ResultComboBox20 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox20(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox3 mInputComboBox;
        
        private InputFormatComboBox1 mInputFormatComboBox;
        
        private AddTimeTypeComboBox mAddTimeTypeComboBox;
        
        private AddTimeAmountComboBox1 mAddTimeAmountComboBox;
        
        private OutputFormatComboBox1 mOutputFormatComboBox;
        
        private ResultComboBox20 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox3 : WpfComboBox
    {
        
        public InputComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox1 : WpfComboBox
    {
        
        public InputFormatComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddTimeTypeComboBox : WpfComboBox
    {
        
        public AddTimeTypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeTypecbx_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Months
        {
            get
            {
                if ((this.mMonths == null))
                {
                    this.mMonths = new WpfListItem(this);
                    #region Search Criteria
                    this.mMonths.SearchProperties[WpfListItem.PropertyNames.Name] = "Months";
                    this.mMonths.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMonths;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mMonths;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddTimeAmountComboBox1 : WpfComboBox
    {
        
        public AddTimeAmountComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeAmounttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputFormatComboBox1 : WpfComboBox
    {
        
        public OutputFormatComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox20 : WpfComboBox
    {
        
        public ResultComboBox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DateTimeDifference1 : WpfCustom
    {
        
        public DateTimeDifference1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DateTimeDifferenceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Date and Time Difference(DateTimeDifferenceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom14 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom14(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom14 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom14(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom14 mLargeViewContentCustom;
        
        private SmallViewContentCustom14 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom14 : WpfCustom
    {
        
        public LargeViewContentCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Input1ComboBox Input1ComboBox
        {
            get
            {
                if ((this.mInput1ComboBox == null))
                {
                    this.mInput1ComboBox = new Input1ComboBox(this);
                }
                return this.mInput1ComboBox;
            }
        }
        
        public Input2ComboBox Input2ComboBox
        {
            get
            {
                if ((this.mInput2ComboBox == null))
                {
                    this.mInput2ComboBox = new Input2ComboBox(this);
                }
                return this.mInput2ComboBox;
            }
        }
        
        public InputFormatComboBox2 InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox2(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public WpfComboBox OutputInComboBox
        {
            get
            {
                if ((this.mOutputInComboBox == null))
                {
                    this.mOutputInComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mOutputInComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputIncbx_AutoID";
                    this.mOutputInComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputInComboBox;
            }
        }
        
        public ResultComboBox21 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox21(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom18 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom18(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private Input1ComboBox mInput1ComboBox;
        
        private Input2ComboBox mInput2ComboBox;
        
        private InputFormatComboBox2 mInputFormatComboBox;
        
        private WpfComboBox mOutputInComboBox;
        
        private ResultComboBox21 mResultComboBox;
        
        private OnErrorCustom18 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input1ComboBox : WpfComboBox
    {
        
        public Input1ComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input1txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input2ComboBox : WpfComboBox
    {
        
        public Input2ComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input2txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox2 : WpfComboBox
    {
        
        public InputFormatComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox21 : WpfComboBox
    {
        
        public ResultComboBox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom18 : WpfCustom
    {
        
        public OnErrorCustom18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup32 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup32(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup32 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup32 : WpfGroup
    {
        
        public OnErrorGroup32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox16 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox16(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox16 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox16(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox16 mErrorVariableComboBox;
        
        private WebServiceComboBox16 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox16 : WpfComboBox
    {
        
        public ErrorVariableComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox16 : WpfComboBox
    {
        
        public WebServiceComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom14 : WpfCustom
    {
        
        public SmallViewContentCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Input1ComboBox1 Input1ComboBox
        {
            get
            {
                if ((this.mInput1ComboBox == null))
                {
                    this.mInput1ComboBox = new Input1ComboBox1(this);
                }
                return this.mInput1ComboBox;
            }
        }
        
        public Input2ComboBox1 Input2ComboBox
        {
            get
            {
                if ((this.mInput2ComboBox == null))
                {
                    this.mInput2ComboBox = new Input2ComboBox1(this);
                }
                return this.mInput2ComboBox;
            }
        }
        
        public InputFormatComboBox3 InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox3(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public OutputInComboBox OutputInComboBox
        {
            get
            {
                if ((this.mOutputInComboBox == null))
                {
                    this.mOutputInComboBox = new OutputInComboBox(this);
                }
                return this.mOutputInComboBox;
            }
        }
        
        public ResultComboBox22 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox22(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Input1ComboBox1 mInput1ComboBox;
        
        private Input2ComboBox1 mInput2ComboBox;
        
        private InputFormatComboBox3 mInputFormatComboBox;
        
        private OutputInComboBox mOutputInComboBox;
        
        private ResultComboBox22 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input1ComboBox1 : WpfComboBox
    {
        
        public Input1ComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input1txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input2ComboBox1 : WpfComboBox
    {
        
        public Input2ComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input2txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox3 : WpfComboBox
    {
        
        public InputFormatComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputInComboBox : WpfComboBox
    {
        
        public OutputInComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputIncbx_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Days
        {
            get
            {
                if ((this.mDays == null))
                {
                    this.mDays = new WpfListItem(this);
                    #region Search Criteria
                    this.mDays.SearchProperties[WpfListItem.PropertyNames.Name] = "Days";
                    this.mDays.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDays;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mDays;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox22 : WpfComboBox
    {
        
        public ResultComboBox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatherSystemInfo : WpfCustom
    {
        
        public GatherSystemInfo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.GatherSystemInformationDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "GatherSystemInformationDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom15 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom15(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom15 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom15(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom15 mLargeViewContentCustom;
        
        private SmallViewContentCustom15 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom15 : WpfCustom
    {
        
        public LargeViewContentCustom15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorCustom19 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom19(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public SmallDataGridTable4 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable4(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorCustom19 mOnErrorCustom;
        
        private SmallDataGridTable4 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom19 : WpfCustom
    {
        
        public OnErrorCustom19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup33 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup33(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup33 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup33 : WpfGroup
    {
        
        public OnErrorGroup33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox17 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox17(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox17 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox17(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox17 mErrorVariableComboBox;
        
        private WebServiceComboBox17 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox17 : WpfComboBox
    {
        
        public ErrorVariableComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox17 : WpfComboBox
    {
        
        public WebServiceComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable4 : WpfTable
    {
        
        public SmallDataGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row116 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row116(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row116 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row116 : WpfRow
    {
        
        public Row116(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell2 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell2(this);
                }
                return this.mVariableCell;
            }
        }
        
        public TypeCell TypeCell
        {
            get
            {
                if ((this.mTypeCell == null))
                {
                    this.mTypeCell = new TypeCell(this);
                }
                return this.mTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell2 mVariableCell;
        
        private TypeCell mTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell2 : WpfCell
    {
        
        public VariableCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox2 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox2(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox2 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox2 : WpfComboBox
    {
        
        public VariableComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TypeCell : WpfCell
    {
        
        public TypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromTypecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom15 : WpfCustom
    {
        
        public SmallViewContentCustom15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable5 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable5(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable5 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable5 : WpfTable
    {
        
        public SmallDataGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row117 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row117(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row117 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row117 : WpfRow
    {
        
        public Row117(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell3 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell3(this);
                }
                return this.mVariableCell;
            }
        }
        
        public TypeCell1 TypeCell
        {
            get
            {
                if ((this.mTypeCell == null))
                {
                    this.mTypeCell = new TypeCell1(this);
                }
                return this.mTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell3 mVariableCell;
        
        private TypeCell1 mTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell3 : WpfCell
    {
        
        public VariableCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox3 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox3(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox3 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox3 : WpfComboBox
    {
        
        public VariableComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TypeCell1 : WpfCell
    {
        
        public TypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromTypecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FormatNumber1 : WpfCustom
    {
        
        public FormatNumber1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FormatNumberDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Format Number(FormatNumberDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom16 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom16(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom16 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom16(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom16 mLargeViewContentCustom;
        
        private SmallViewContentCustom16 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom16 : WpfCustom
    {
        
        public LargeViewContentCustom16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NumberInputComboBox NumberInputComboBox
        {
            get
            {
                if ((this.mNumberInputComboBox == null))
                {
                    this.mNumberInputComboBox = new NumberInputComboBox(this);
                }
                return this.mNumberInputComboBox;
            }
        }
        
        public RoundingComboBox RoundingComboBox
        {
            get
            {
                if ((this.mRoundingComboBox == null))
                {
                    this.mRoundingComboBox = new RoundingComboBox(this);
                }
                return this.mRoundingComboBox;
            }
        }
        
        public DecimalsToShowComboBox DecimalsToShowComboBox
        {
            get
            {
                if ((this.mDecimalsToShowComboBox == null))
                {
                    this.mDecimalsToShowComboBox = new DecimalsToShowComboBox(this);
                }
                return this.mDecimalsToShowComboBox;
            }
        }
        
        public ResultInputComboBox ResultInputComboBox
        {
            get
            {
                if ((this.mResultInputComboBox == null))
                {
                    this.mResultInputComboBox = new ResultInputComboBox(this);
                }
                return this.mResultInputComboBox;
            }
        }
        
        public OnErrorCustom20 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom20(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public RoundingInputComboBox RoundingInputComboBox
        {
            get
            {
                if ((this.mRoundingInputComboBox == null))
                {
                    this.mRoundingInputComboBox = new RoundingInputComboBox(this);
                }
                return this.mRoundingInputComboBox;
            }
        }
        #endregion
        
        #region Fields
        private NumberInputComboBox mNumberInputComboBox;
        
        private RoundingComboBox mRoundingComboBox;
        
        private DecimalsToShowComboBox mDecimalsToShowComboBox;
        
        private ResultInputComboBox mResultInputComboBox;
        
        private OnErrorCustom20 mOnErrorCustom;
        
        private RoundingInputComboBox mRoundingInputComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NumberInputComboBox : WpfComboBox
    {
        
        public NumberInputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Number_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RoundingComboBox : WpfComboBox
    {
        
        public RoundingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfComboBox.PropertyNames.HelpText, "How would you like to round the number?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RoungUP
        {
            get
            {
                if ((this.mRoungUP == null))
                {
                    this.mRoungUP = new WpfListItem(this);
                    #region Search Criteria
                    this.mRoungUP.SearchProperties[WpfListItem.PropertyNames.Name] = "Up";
                    this.mRoungUP.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRoungUP;
            }
        }
        
        public WpfListItem Normal
        {
            get
            {
                if ((this.mNormal == null))
                {
                    this.mNormal = new WpfListItem(this);
                    #region Search Criteria
                    this.mNormal.SearchProperties[WpfListItem.PropertyNames.Name] = "Normal";
                    this.mNormal.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNormal;
            }
        }
        
        public WpfListItem None
        {
            get
            {
                if ((this.mNone == null))
                {
                    this.mNone = new WpfListItem(this);
                    #region Search Criteria
                    this.mNone.SearchProperties[WpfListItem.PropertyNames.Name] = "None";
                    this.mNone.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNone;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRoungUP;
        
        private WpfListItem mNormal;
        
        private WpfListItem mNone;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecimalsToShowComboBox : WpfComboBox
    {
        
        public DecimalsToShowComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__DecimalsToShow_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultInputComboBox : WpfComboBox
    {
        
        public ResultInputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom20 : WpfCustom
    {
        
        public OnErrorCustom20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup34 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup34(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup34 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup34 : WpfGroup
    {
        
        public OnErrorGroup34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox18 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox18(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox18 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox18(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox18 mErrorVariableComboBox;
        
        private WebServiceComboBox18 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox18 : WpfComboBox
    {
        
        public ErrorVariableComboBox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox18 : WpfComboBox
    {
        
        public WebServiceComboBox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RoundingInputComboBox : WpfComboBox
    {
        
        public RoundingInputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Rounding_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom16 : WpfCustom
    {
        
        public SmallViewContentCustom16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NumberInputComboBox1 NumberInputComboBox
        {
            get
            {
                if ((this.mNumberInputComboBox == null))
                {
                    this.mNumberInputComboBox = new NumberInputComboBox1(this);
                }
                return this.mNumberInputComboBox;
            }
        }
        
        public WpfComboBox RoundingComboBox
        {
            get
            {
                if ((this.mRoundingComboBox == null))
                {
                    this.mRoundingComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRoundingComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRoundingComboBox;
            }
        }
        
        public DecimalsToShowComboBox1 DecimalsToShowComboBox
        {
            get
            {
                if ((this.mDecimalsToShowComboBox == null))
                {
                    this.mDecimalsToShowComboBox = new DecimalsToShowComboBox1(this);
                }
                return this.mDecimalsToShowComboBox;
            }
        }
        
        public ResultInputComboBox1 ResultInputComboBox
        {
            get
            {
                if ((this.mResultInputComboBox == null))
                {
                    this.mResultInputComboBox = new ResultInputComboBox1(this);
                }
                return this.mResultInputComboBox;
            }
        }
        #endregion
        
        #region Fields
        private NumberInputComboBox1 mNumberInputComboBox;
        
        private WpfComboBox mRoundingComboBox;
        
        private DecimalsToShowComboBox1 mDecimalsToShowComboBox;
        
        private ResultInputComboBox1 mResultInputComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NumberInputComboBox1 : WpfComboBox
    {
        
        public NumberInputComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Number_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecimalsToShowComboBox1 : WpfComboBox
    {
        
        public DecimalsToShowComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__DecimalsToShow_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultInputComboBox1 : WpfComboBox
    {
        
        public ResultInputComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Random1 : WpfCustom
    {
        
        public Random1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RandomDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Random(RandomDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView15 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView15(this);
                }
                return this.mSmallView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom17 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom17(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom17 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom17(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private SmallView15 mSmallView;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom17 mLargeViewContentCustom;
        
        private SmallViewContentCustom17 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView15 : WpfCustom
    {
        
        public SmallView15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public From From
        {
            get
            {
                if ((this.mFrom == null))
                {
                    this.mFrom = new From(this);
                }
                return this.mFrom;
            }
        }
        
        public To To
        {
            get
            {
                if ((this.mTo == null))
                {
                    this.mTo = new To(this);
                }
                return this.mTo;
            }
        }
        
        public ResultComboBox23 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox23(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private From mFrom;
        
        private To mTo;
        
        private ResultComboBox23 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class From : WpfComboBox
    {
        
        public From(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit FromTextEdit
        {
            get
            {
                if ((this.mFromTextEdit == null))
                {
                    this.mFromTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mFromTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mFromTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFromTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mFromTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class To : WpfComboBox
    {
        
        public To(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ToTextEdit
        {
            get
            {
                if ((this.mToTextEdit == null))
                {
                    this.mToTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mToTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mToTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mToTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox23 : WpfComboBox
    {
        
        public ResultComboBox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom17 : WpfCustom
    {
        
        public LargeViewContentCustom17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Wherecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        
        public FromComboBox FromComboBox
        {
            get
            {
                if ((this.mFromComboBox == null))
                {
                    this.mFromComboBox = new FromComboBox(this);
                }
                return this.mFromComboBox;
            }
        }
        
        public ToComboBox ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox(this);
                }
                return this.mToComboBox;
            }
        }
        
        public ResultComboBox24 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox24(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom21 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom21(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeComboBox;
        
        private FromComboBox mFromComboBox;
        
        private ToComboBox mToComboBox;
        
        private ResultComboBox24 mResultComboBox;
        
        private OnErrorCustom21 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromComboBox : WpfComboBox
    {
        
        public FromComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox : WpfComboBox
    {
        
        public ToComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox24 : WpfComboBox
    {
        
        public ResultComboBox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom21 : WpfCustom
    {
        
        public OnErrorCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup35 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup35(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup35 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup35 : WpfGroup
    {
        
        public OnErrorGroup35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox19 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox19(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox19 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox19(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox19 mErrorVariableComboBox;
        
        private WebServiceComboBox19 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox19 : WpfComboBox
    {
        
        public ErrorVariableComboBox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox19 : WpfComboBox
    {
        
        public WebServiceComboBox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom17 : WpfCustom
    {
        
        public SmallViewContentCustom17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TypeComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new TypeComboBox(this);
                }
                return this.mTypeComboBox;
            }
        }
        
        public FromComboBox1 FromComboBox
        {
            get
            {
                if ((this.mFromComboBox == null))
                {
                    this.mFromComboBox = new FromComboBox1(this);
                }
                return this.mFromComboBox;
            }
        }
        
        public ToComboBox1 ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox1(this);
                }
                return this.mToComboBox;
            }
        }
        
        public ResultComboBox25 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox25(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public LengthComboBox LengthComboBox
        {
            get
            {
                if ((this.mLengthComboBox == null))
                {
                    this.mLengthComboBox = new LengthComboBox(this);
                }
                return this.mLengthComboBox;
            }
        }
        #endregion
        
        #region Fields
        private TypeComboBox mTypeComboBox;
        
        private FromComboBox1 mFromComboBox;
        
        private ToComboBox1 mToComboBox;
        
        private ResultComboBox25 mResultComboBox;
        
        private LengthComboBox mLengthComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TypeComboBox : WpfComboBox
    {
        
        public TypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Wherecbx_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Letters
        {
            get
            {
                if ((this.mLetters == null))
                {
                    this.mLetters = new WpfListItem(this);
                    #region Search Criteria
                    this.mLetters.SearchProperties[WpfListItem.PropertyNames.Name] = "Letters";
                    this.mLetters.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLetters;
            }
        }
        
        public WpfListItem GUID
        {
            get
            {
                if ((this.mGUID == null))
                {
                    this.mGUID = new WpfListItem(this);
                    #region Search Criteria
                    this.mGUID.SearchProperties[WpfListItem.PropertyNames.Name] = "GUID";
                    this.mGUID.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGUID;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mLetters;
        
        private WpfListItem mGUID;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromComboBox1 : WpfComboBox
    {
        
        public FromComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox1 : WpfComboBox
    {
        
        public ToComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox25 : WpfComboBox
    {
        
        public ResultComboBox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LengthComboBox : WpfComboBox
    {
        
        public LengthComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SMTPEmail : WpfCustom
    {
        
        public SMTPEmail(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EmailDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Email(EmailDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new WpfCustom(this);
                    #region Search Criteria
                    this.mLargeView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
                    this.mLargeView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
                    this.mLargeView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExchangeEmail : WpfCustom
    {
        
        public ExchangeEmail(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExchangeEmailDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Exchange Email(ExchangeEmailDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new WpfCustom(this);
                    #region Search Criteria
                    this.mLargeView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
                    this.mLargeView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
                    this.mLargeView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Comment1 : WpfCustom
    {
        
        public Comment1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CommentDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Comment(CommentDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom18 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom18(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom18 mLargeViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom18 : WpfCustom
    {
        
        public LargeViewContentCustom18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public CommentComboBox CommentComboBox
        {
            get
            {
                if ((this.mCommentComboBox == null))
                {
                    this.mCommentComboBox = new CommentComboBox(this);
                }
                return this.mCommentComboBox;
            }
        }
        
        public WpfControl ItemResizer
        {
            get
            {
                if ((this.mItemResizer == null))
                {
                    this.mItemResizer = new WpfControl(this);
                    #region Search Criteria
                    this.mItemResizer.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemResizer.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemResizer.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mItemResizer;
            }
        }
        #endregion
        
        #region Fields
        private CommentComboBox mCommentComboBox;
        
        private WpfControl mItemResizer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentComboBox : WpfComboBox
    {
        
        public CommentComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Commenttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XPath1 : WpfCustom
    {
        
        public XPath1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XPathDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "XPathDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom19 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom19(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom18 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom18(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom19 mLargeViewContentCustom;
        
        private SmallViewContentCustom18 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom19 : WpfCustom
    {
        
        public LargeViewContentCustom19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox2 SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox2(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public LargeDataGridTable3 LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable3(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public OnErrorCustom22 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom22(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox2 mSourceStringComboBox;
        
        private LargeDataGridTable3 mLargeDataGridTable;
        
        private OnErrorCustom22 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox2 : WpfComboBox
    {
        
        public SourceStringComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable3 : WpfTable
    {
        
        public LargeDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row118 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row118(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row118 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row118 : WpfRow
    {
        
        public Row118(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell4 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell4(this);
                }
                return this.mVariableCell;
            }
        }
        
        public XpathCell XpathCell
        {
            get
            {
                if ((this.mXpathCell == null))
                {
                    this.mXpathCell = new XpathCell(this);
                }
                return this.mXpathCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell4 mVariableCell;
        
        private XpathCell mXpathCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell4 : WpfCell
    {
        
        public VariableCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Results";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox4 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox4(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox4 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox4 : WpfComboBox
    {
        
        public VariableComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathCell : WpfCell
    {
        
        public XpathCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Xpath";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public XpathComboBox XpathComboBox
        {
            get
            {
                if ((this.mXpathComboBox == null))
                {
                    this.mXpathComboBox = new XpathComboBox(this);
                }
                return this.mXpathComboBox;
            }
        }
        #endregion
        
        #region Fields
        private XpathComboBox mXpathComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathComboBox : WpfComboBox
    {
        
        public XpathComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom22 : WpfCustom
    {
        
        public OnErrorCustom22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup36 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup36(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup36 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup36 : WpfGroup
    {
        
        public OnErrorGroup36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox20 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox20(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox20 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox20(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox20 mErrorVariableComboBox;
        
        private WebServiceComboBox20 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox20 : WpfComboBox
    {
        
        public ErrorVariableComboBox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox20 : WpfComboBox
    {
        
        public WebServiceComboBox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom18 : WpfCustom
    {
        
        public SmallViewContentCustom18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox3 SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox3(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public SmallDataGridTable6 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable6(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox3 mSourceStringComboBox;
        
        private SmallDataGridTable6 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox3 : WpfComboBox
    {
        
        public SourceStringComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable6 : WpfTable
    {
        
        public SmallDataGridTable6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row119 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row119(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row119 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row119 : WpfRow
    {
        
        public Row119(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell5 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell5(this);
                }
                return this.mVariableCell;
            }
        }
        
        public XpathCell1 XpathCell
        {
            get
            {
                if ((this.mXpathCell == null))
                {
                    this.mXpathCell = new XpathCell1(this);
                }
                return this.mXpathCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell5 mVariableCell;
        
        private XpathCell1 mXpathCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell5 : WpfCell
    {
        
        public VariableCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox5 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox5(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox5 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox5 : WpfComboBox
    {
        
        public VariableComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathCell1 : WpfCell
    {
        
        public XpathCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public XpathComboBox1 XpathComboBox
        {
            get
            {
                if ((this.mXpathComboBox == null))
                {
                    this.mXpathComboBox = new XpathComboBox1(this);
                }
                return this.mXpathComboBox;
            }
        }
        #endregion
        
        #region Fields
        private XpathComboBox1 mXpathComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathComboBox1 : WpfComboBox
    {
        
        public XpathComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxDownload : WpfCustom
    {
        
        public DropboxDownload(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxDownloadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DOWNLOAD from Dropbox(DropBoxDownloadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent1 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent1(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent1 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent1(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent1 mLargeViewContent;
        
        private SmallViewContent1 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent1 : WpfCustom
    {
        
        public LargeViewContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public LocalFileIntellisenseCombobox LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public DropboxFileIntellisenseCombobox DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox3 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox3(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane11 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane11(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private LocalFileIntellisenseCombobox mLocalFileIntellisenseCombobox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private DropboxFileIntellisenseCombobox mDropboxFileIntellisenseCombobox;
        
        private ResultIntellisenseCombobox3 mResultIntellisenseCombobox;
        
        private OnErrorPane11 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox3 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane11 : WpfCustom
    {
        
        public OnErrorPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup37 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup37(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup37 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup37 : WpfGroup
    {
        
        public OnErrorGroup37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent1 : WpfCustom
    {
        
        public SmallViewContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LocalFileIntellisenseCombobox1 LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox1(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public DropboxFileIntellisenseCombobox1 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox1(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private LocalFileIntellisenseCombobox1 mLocalFileIntellisenseCombobox;
        
        private DropboxFileIntellisenseCombobox1 mDropboxFileIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox1 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxUpload : WpfCustom
    {
        
        public DropboxUpload(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxUploadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Upload to Dropbox(DropBoxUploadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent2 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent2(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent2 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent2(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent2 mLargeViewContent;
        
        private SmallViewContent2 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent2 : WpfCustom
    {
        
        public LargeViewContent2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public LocalFileIntellisenseCombobox2 LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox2(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton OverwriteRadioButton
        {
            get
            {
                if ((this.mOverwriteRadioButton == null))
                {
                    this.mOverwriteRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mOverwriteRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "CheckBoxOverwriteMode";
                    this.mOverwriteRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteRadioButton;
            }
        }
        
        public WpfRadioButton AddRadioButton
        {
            get
            {
                if ((this.mAddRadioButton == null))
                {
                    this.mAddRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAddRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "CheckBoxUpdateMode";
                    this.mAddRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddRadioButton;
            }
        }
        
        public DropboxFileIntellisenseCombobox2 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox2(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox4 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox4(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane12 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane12(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private LocalFileIntellisenseCombobox2 mLocalFileIntellisenseCombobox;
        
        private WpfRadioButton mOverwriteRadioButton;
        
        private WpfRadioButton mAddRadioButton;
        
        private DropboxFileIntellisenseCombobox2 mDropboxFileIntellisenseCombobox;
        
        private ResultIntellisenseCombobox4 mResultIntellisenseCombobox;
        
        private OnErrorPane12 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox2 : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox2 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox4 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane12 : WpfCustom
    {
        
        public OnErrorPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup38 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup38(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup38 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup38 : WpfGroup
    {
        
        public OnErrorGroup38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox1 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox1(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox1 ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox1(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox1 mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox1 mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox1 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent2 : WpfCustom
    {
        
        public SmallViewContent2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LocalFileIntellisenseCombobox3 LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox3(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public DropboxFileIntellisenseCombobox3 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox3(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private LocalFileIntellisenseCombobox3 mLocalFileIntellisenseCombobox;
        
        private DropboxFileIntellisenseCombobox3 mDropboxFileIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox3 : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox3 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxDelete : WpfCustom
    {
        
        public DropboxDelete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxDeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Delete from Dropbox(DropBoxDeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom20 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom20(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContent3 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent3(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom20 mLargeViewContentCustom;
        
        private SmallViewContent3 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom20 : WpfCustom
    {
        
        public LargeViewContentCustom20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public DropboxFileIntellisenseCombobox4 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox4(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox5 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox5(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane13 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane13(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private DropboxFileIntellisenseCombobox4 mDropboxFileIntellisenseCombobox;
        
        private ResultIntellisenseCombobox5 mResultIntellisenseCombobox;
        
        private OnErrorPane13 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox4 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox5 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane13 : WpfCustom
    {
        
        public OnErrorPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup39 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup39(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup39 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup39 : WpfGroup
    {
        
        public OnErrorGroup39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox2 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox2(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox2 ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox2(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox2 mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox2 mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox2 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox2 : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent3 : WpfCustom
    {
        
        public SmallViewContent3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DropboxFileIntellisenseCombobox5 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox5(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DropboxFileIntellisenseCombobox5 mDropboxFileIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox5 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileList : WpfCustom
    {
        
        public DropboxFileList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxFileListDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "List Dropbox Contents(DropBoxFileListDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent3 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent3(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent4 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent4(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent3 mLargeViewContent;
        
        private SmallViewContent4 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent3 : WpfCustom
    {
        
        public LargeViewContent3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public DropboxPathIntellisenseCombobox DropboxPathIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxPathIntellisenseCombobox == null))
                {
                    this.mDropboxPathIntellisenseCombobox = new DropboxPathIntellisenseCombobox(this);
                }
                return this.mDropboxPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesFoldersRadioButton
        {
            get
            {
                if ((this.mFilesFoldersRadioButton == null))
                {
                    this.mFilesFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesFoldersRadioButton;
            }
        }
        
        public WpfCheckBox LoadSubfoldersCheckBox
        {
            get
            {
                if ((this.mLoadSubfoldersCheckBox == null))
                {
                    this.mLoadSubfoldersCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mLoadSubfoldersCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Load Sub folders";
                    this.mLoadSubfoldersCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLoadSubfoldersCheckBox;
            }
        }
        
        public ResultIntellisenseCombobox6 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox6(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane14 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane14(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private DropboxPathIntellisenseCombobox mDropboxPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesFoldersRadioButton;
        
        private WpfCheckBox mLoadSubfoldersCheckBox;
        
        private ResultIntellisenseCombobox6 mResultIntellisenseCombobox;
        
        private OnErrorPane14 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxPathIntellisenseCombobox : WpfComboBox
    {
        
        public DropboxPathIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox6 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane14 : WpfCustom
    {
        
        public OnErrorPane14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup40 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup40(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup40 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup40 : WpfGroup
    {
        
        public OnErrorGroup40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox3 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox3(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox3 ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox3(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox3 mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox3 mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox3 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox3 : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent4 : WpfCustom
    {
        
        public SmallViewContent4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DropboxPathIntellisenseCombobox1 DropboxPathIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxPathIntellisenseCombobox == null))
                {
                    this.mDropboxPathIntellisenseCombobox = new DropboxPathIntellisenseCombobox1(this);
                }
                return this.mDropboxPathIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox4 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox4(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DropboxPathIntellisenseCombobox1 mDropboxPathIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox4 mResultsIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxPathIntellisenseCombobox1 : WpfComboBox
    {
        
        public DropboxPathIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox4 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathCreate : WpfCustom
    {
        
        public PathCreate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CreateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Create(CreateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom21 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom21(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom19 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom19(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom21 mLargeViewContentCustom;
        
        private SmallViewContentCustom19 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom21 : WpfCustom
    {
        
        public LargeViewContentCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameoComboBox FileNameoComboBox
        {
            get
            {
                if ((this.mFileNameoComboBox == null))
                {
                    this.mFileNameoComboBox = new FileNameoComboBox(this);
                }
                return this.mFileNameoComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public UserNameComboBox UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox26 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox26(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom23 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom23(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileNameoComboBox mFileNameoComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private UserNameComboBox mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox mPrivateKeyComboBox;
        
        private ResultComboBox26 mResultComboBox;
        
        private OnErrorCustom23 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameoComboBox : WpfComboBox
    {
        
        public FileNameoComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox : WpfComboBox
    {
        
        public UserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox : WpfComboBox
    {
        
        public PrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox26 : WpfComboBox
    {
        
        public ResultComboBox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom23 : WpfCustom
    {
        
        public OnErrorCustom23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup41 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup41(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup41 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup41 : WpfGroup
    {
        
        public OnErrorGroup41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox21 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox21(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox21 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox21(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox21 mErrorVariableComboBox;
        
        private WebServiceComboBox21 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox21 : WpfComboBox
    {
        
        public ErrorVariableComboBox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox21 : WpfComboBox
    {
        
        public WebServiceComboBox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom19 : WpfCustom
    {
        
        public SmallViewContentCustom19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public ResultComboBox27 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox27(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox mFileOrFolderComboBox;
        
        private ResultComboBox27 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox : WpfComboBox
    {
        
        public FileOrFolderComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox27 : WpfComboBox
    {
        
        public ResultComboBox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathCopy : WpfCustom
    {
        
        public PathCopy(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CopyDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Copy(CopyDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom22 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom22(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom20 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom20(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom22 mLargeViewContentCustom;
        
        private SmallViewContentCustom20 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom22 : WpfCustom
    {
        
        public LargeViewContentCustom22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox1 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox1(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox1 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox1(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox1 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox1(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public DestinationComboBox DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public DestinationUserNameComboBox DestinationUserNameComboBox
        {
            get
            {
                if ((this.mDestinationUserNameComboBox == null))
                {
                    this.mDestinationUserNameComboBox = new DestinationUserNameComboBox(this);
                }
                return this.mDestinationUserNameComboBox;
            }
        }
        
        public WpfEdit DestinationPasswordEdit
        {
            get
            {
                if ((this.mDestinationPasswordEdit == null))
                {
                    this.mDestinationPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mDestinationPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDestinationPasswordEdit;
            }
        }
        
        public DestinationFileOrFolderComboBox DestinationFileOrFolderComboBox
        {
            get
            {
                if ((this.mDestinationFileOrFolderComboBox == null))
                {
                    this.mDestinationFileOrFolderComboBox = new DestinationFileOrFolderComboBox(this);
                }
                return this.mDestinationFileOrFolderComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultComboBox28 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox28(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom24 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom24(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox1 mFileOrFolderComboBox;
        
        private UserNameComboBox1 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox1 mPrivateKeyComboBox;
        
        private DestinationComboBox mDestinationComboBox;
        
        private DestinationUserNameComboBox mDestinationUserNameComboBox;
        
        private WpfEdit mDestinationPasswordEdit;
        
        private DestinationFileOrFolderComboBox mDestinationFileOrFolderComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultComboBox28 mResultComboBox;
        
        private OnErrorCustom24 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox1 : WpfComboBox
    {
        
        public FileOrFolderComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox1 : WpfComboBox
    {
        
        public UserNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox1 : WpfComboBox
    {
        
        public PrivateKeyComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox : WpfComboBox
    {
        
        public DestinationComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationUserNameComboBox : WpfComboBox
    {
        
        public DestinationUserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationFileOrFolderComboBox : WpfComboBox
    {
        
        public DestinationFileOrFolderComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox28 : WpfComboBox
    {
        
        public ResultComboBox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom24 : WpfCustom
    {
        
        public OnErrorCustom24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup42 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup42(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup42 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup42 : WpfGroup
    {
        
        public OnErrorGroup42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox22 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox22(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox22 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox22(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox22 mErrorVariableComboBox;
        
        private WebServiceComboBox22 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox22 : WpfComboBox
    {
        
        public ErrorVariableComboBox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox22 : WpfComboBox
    {
        
        public WebServiceComboBox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom20 : WpfCustom
    {
        
        public SmallViewContentCustom20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox2 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox2(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public DestinationComboBox1 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox1(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public ResultComboBox29 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox29(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox2 mFileOrFolderComboBox;
        
        private DestinationComboBox1 mDestinationComboBox;
        
        private ResultComboBox29 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox2 : WpfComboBox
    {
        
        public FileOrFolderComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox1 : WpfComboBox
    {
        
        public DestinationComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox29 : WpfComboBox
    {
        
        public ResultComboBox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDelete : WpfCustom
    {
        
        public PathDelete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Delete(DeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom23 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom23(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom21 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom21(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom23 mLargeViewContentCustom;
        
        private SmallViewContentCustom21 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom23 : WpfCustom
    {
        
        public LargeViewContentCustom23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox3 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox3(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox2 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox2(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public FileNameComboBox FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public ResultComboBox30 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox30(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom25 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom25(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox3 mFileOrFolderComboBox;
        
        private UserNameComboBox2 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private FileNameComboBox mFileNameComboBox;
        
        private ResultComboBox30 mResultComboBox;
        
        private OnErrorCustom25 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox3 : WpfComboBox
    {
        
        public FileOrFolderComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox2 : WpfComboBox
    {
        
        public UserNameComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox : WpfComboBox
    {
        
        public FileNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox30 : WpfComboBox
    {
        
        public ResultComboBox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom25 : WpfCustom
    {
        
        public OnErrorCustom25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup43 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup43(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup43 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup43 : WpfGroup
    {
        
        public OnErrorGroup43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox23 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox23(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox23 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox23(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox23 mErrorVariableComboBox;
        
        private WebServiceComboBox23 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox23 : WpfComboBox
    {
        
        public ErrorVariableComboBox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox23 : WpfComboBox
    {
        
        public WebServiceComboBox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom21 : WpfCustom
    {
        
        public SmallViewContentCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox4 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox4(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public ResultComboBox31 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox31(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox4 mFileOrFolderComboBox;
        
        private ResultComboBox31 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox4 : WpfComboBox
    {
        
        public FileOrFolderComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox31 : WpfComboBox
    {
        
        public ResultComboBox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathMove : WpfCustom
    {
        
        public PathMove(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MoveDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Move(MoveDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom24 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom24(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom22 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom22(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom24 mLargeViewContentCustom;
        
        private SmallViewContentCustom22 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom24 : WpfCustom
    {
        
        public LargeViewContentCustom24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox5 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox5(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox3 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox3(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeCombobox PrivateKeCombobox
        {
            get
            {
                if ((this.mPrivateKeCombobox == null))
                {
                    this.mPrivateKeCombobox = new PrivateKeCombobox(this);
                }
                return this.mPrivateKeCombobox;
            }
        }
        
        public DestinationComboBox2 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox2(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public DestinationUserNameComboBox1 DestinationUserNameComboBox
        {
            get
            {
                if ((this.mDestinationUserNameComboBox == null))
                {
                    this.mDestinationUserNameComboBox = new DestinationUserNameComboBox1(this);
                }
                return this.mDestinationUserNameComboBox;
            }
        }
        
        public WpfEdit DestinationPasswordEdit
        {
            get
            {
                if ((this.mDestinationPasswordEdit == null))
                {
                    this.mDestinationPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mDestinationPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDestinationPasswordEdit;
            }
        }
        
        public DestinationPrvateKeyComboBox DestinationPrvateKeyComboBox
        {
            get
            {
                if ((this.mDestinationPrvateKeyComboBox == null))
                {
                    this.mDestinationPrvateKeyComboBox = new DestinationPrvateKeyComboBox(this);
                }
                return this.mDestinationPrvateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultComboBox32 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox32(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom26 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom26(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox5 mFileOrFolderComboBox;
        
        private UserNameComboBox3 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeCombobox mPrivateKeCombobox;
        
        private DestinationComboBox2 mDestinationComboBox;
        
        private DestinationUserNameComboBox1 mDestinationUserNameComboBox;
        
        private WpfEdit mDestinationPasswordEdit;
        
        private DestinationPrvateKeyComboBox mDestinationPrvateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultComboBox32 mResultComboBox;
        
        private OnErrorCustom26 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox5 : WpfComboBox
    {
        
        public FileOrFolderComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox3 : WpfComboBox
    {
        
        public UserNameComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeCombobox : WpfComboBox
    {
        
        public PrivateKeCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox2 : WpfComboBox
    {
        
        public DestinationComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationUserNameComboBox1 : WpfComboBox
    {
        
        public DestinationUserNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationPrvateKeyComboBox : WpfComboBox
    {
        
        public DestinationPrvateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox32 : WpfComboBox
    {
        
        public ResultComboBox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom26 : WpfCustom
    {
        
        public OnErrorCustom26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup44 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup44(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup44 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup44 : WpfGroup
    {
        
        public OnErrorGroup44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox24 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox24(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox24 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox24(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox24 mErrorVariableComboBox;
        
        private WebServiceComboBox24 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox24 : WpfComboBox
    {
        
        public ErrorVariableComboBox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox24 : WpfComboBox
    {
        
        public WebServiceComboBox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom22 : WpfCustom
    {
        
        public SmallViewContentCustom22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox6 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox6(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public DestinationComboBox3 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox3(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public ResultComboBox33 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox33(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox6 mFileOrFolderComboBox;
        
        private DestinationComboBox3 mDestinationComboBox;
        
        private ResultComboBox33 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox6 : WpfComboBox
    {
        
        public FileOrFolderComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox3 : WpfComboBox
    {
        
        public DestinationComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox33 : WpfComboBox
    {
        
        public ResultComboBox33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FolderRead : WpfCustom
    {
        
        public FolderRead(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ReadFolderDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Read Folder(ReadFolderDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom25 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom25(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom23 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom23(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom25 mLargeViewContentCustom;
        
        private SmallViewContentCustom23 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom25 : WpfCustom
    {
        
        public LargeViewContentCustom25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DirectoryComboBox DirectoryComboBox
        {
            get
            {
                if ((this.mDirectoryComboBox == null))
                {
                    this.mDirectoryComboBox = new DirectoryComboBox(this);
                }
                return this.mDirectoryComboBox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesFoldersRadioButton
        {
            get
            {
                if ((this.mFilesFoldersRadioButton == null))
                {
                    this.mFilesFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesFoldersRadioButton;
            }
        }
        
        public UserNameComboBox4 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox4(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox2 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox2(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox34 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox34(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom27 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom27(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private DirectoryComboBox mDirectoryComboBox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesFoldersRadioButton;
        
        private UserNameComboBox4 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox2 mPrivateKeyComboBox;
        
        private ResultComboBox34 mResultComboBox;
        
        private OnErrorCustom27 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DirectoryComboBox : WpfComboBox
    {
        
        public DirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox4 : WpfComboBox
    {
        
        public UserNameComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox2 : WpfComboBox
    {
        
        public PrivateKeyComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox34 : WpfComboBox
    {
        
        public ResultComboBox34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom27 : WpfCustom
    {
        
        public OnErrorCustom27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup45 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup45(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup45 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup45 : WpfGroup
    {
        
        public OnErrorGroup45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox25 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox25(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox25 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox25 : WpfComboBox
    {
        
        public ErrorVariableComboBox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom23 : WpfCustom
    {
        
        public SmallViewContentCustom23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DirectoryComboBox1 DirectoryComboBox
        {
            get
            {
                if ((this.mDirectoryComboBox == null))
                {
                    this.mDirectoryComboBox = new DirectoryComboBox1(this);
                }
                return this.mDirectoryComboBox;
            }
        }
        
        public ResultComboBox35 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox35(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private DirectoryComboBox1 mDirectoryComboBox;
        
        private ResultComboBox35 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DirectoryComboBox1 : WpfComboBox
    {
        
        public DirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox35 : WpfComboBox
    {
        
        public ResultComboBox35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileRead : WpfCustom
    {
        
        public FileRead(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ReadFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Read File(ReadFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom26 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom26(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom24 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom24(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom26 mLargeViewContentCustom;
        
        private SmallViewContentCustom24 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom26 : WpfCustom
    {
        
        public LargeViewContentCustom26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox1 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox1(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public UserNameComboBox5 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox5(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox3 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox3(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox36 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox36(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom28 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom28(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox1 mFileNameComboBox;
        
        private UserNameComboBox5 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox3 mPrivateKeyComboBox;
        
        private ResultComboBox36 mResultComboBox;
        
        private OnErrorCustom28 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox1 : WpfComboBox
    {
        
        public FileNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox5 : WpfComboBox
    {
        
        public UserNameComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox3 : WpfComboBox
    {
        
        public PrivateKeyComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox36 : WpfComboBox
    {
        
        public ResultComboBox36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom28 : WpfCustom
    {
        
        public OnErrorCustom28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup46 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup46(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup46 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup46 : WpfGroup
    {
        
        public OnErrorGroup46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox26 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox26(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox25 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox25(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox26 mErrorVariableComboBox;
        
        private WebServiceComboBox25 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox26 : WpfComboBox
    {
        
        public ErrorVariableComboBox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox25 : WpfComboBox
    {
        
        public WebServiceComboBox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom24 : WpfCustom
    {
        
        public SmallViewContentCustom24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox2 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox2(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public ResultComboBox37 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox37(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox2 mFileNameComboBox;
        
        private ResultComboBox37 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox2 : WpfComboBox
    {
        
        public FileNameComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox37 : WpfComboBox
    {
        
        public ResultComboBox37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileWrite : WpfCustom
    {
        
        public FileWrite(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WriteFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Write File(WriteFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom27 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom27(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom25 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom25(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom27 mLargeViewContentCustom;
        
        private SmallViewContentCustom25 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom27 : WpfCustom
    {
        
        public LargeViewContentCustom27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox3 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox3(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public OverwriteRadioButton OverwriteRadioButton
        {
            get
            {
                if ((this.mOverwriteRadioButton == null))
                {
                    this.mOverwriteRadioButton = new OverwriteRadioButton(this);
                }
                return this.mOverwriteRadioButton;
            }
        }
        
        public WpfRadioButton AppendTopRadioButton
        {
            get
            {
                if ((this.mAppendTopRadioButton == null))
                {
                    this.mAppendTopRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendTopRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Append Top";
                    this.mAppendTopRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendTopRadioButton;
            }
        }
        
        public WpfRadioButton AppendBottomRadioButton
        {
            get
            {
                if ((this.mAppendBottomRadioButton == null))
                {
                    this.mAppendBottomRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendBottomRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Append Bottom";
                    this.mAppendBottomRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendBottomRadioButton;
            }
        }
        
        public ContentsComboBox ContentsComboBox
        {
            get
            {
                if ((this.mContentsComboBox == null))
                {
                    this.mContentsComboBox = new ContentsComboBox(this);
                }
                return this.mContentsComboBox;
            }
        }
        
        public UserNameComboBox6 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox6(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox4 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox4(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox38 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox38(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom29 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom29(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox3 mFileNameComboBox;
        
        private OverwriteRadioButton mOverwriteRadioButton;
        
        private WpfRadioButton mAppendTopRadioButton;
        
        private WpfRadioButton mAppendBottomRadioButton;
        
        private ContentsComboBox mContentsComboBox;
        
        private UserNameComboBox6 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox4 mPrivateKeyComboBox;
        
        private ResultComboBox38 mResultComboBox;
        
        private OnErrorCustom29 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox3 : WpfComboBox
    {
        
        public FileNameComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OverwriteRadioButton : WpfRadioButton
    {
        
        public OverwriteRadioButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Overwrite";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Item1
        {
            get
            {
                if ((this.mItem1 == null))
                {
                    this.mItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mItem1.SearchProperties[WpfListItem.PropertyNames.Instance] = "14";
                    this.mItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItem1;
            }
        }
        
        public WpfListItem NextListItem
        {
            get
            {
                if ((this.mNextListItem == null))
                {
                    this.mNextListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNextListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Next";
                    this.mNextListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNextListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mItem1;
        
        private WpfListItem mNextListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentsComboBox : WpfComboBox
    {
        
        public ContentsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Contentstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "5";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox6 : WpfComboBox
    {
        
        public UserNameComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox4 : WpfComboBox
    {
        
        public PrivateKeyComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row5 Row
        {
            get
            {
                if ((this.mRow == null))
                {
                    this.mRow = new Row5(this);
                }
                return this.mRow;
            }
        }
        
        public Row25 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row25(this);
                }
                return this.mRow2;
            }
        }
        
        public Row32 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row32(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row5 mRow;
        
        private Row25 mRow2;
        
        private Row32 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row5 : WpfRow
    {
        
        public Row5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell4 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell4(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell5 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell5(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell4 mInputCell;
        
        private UsingCell5 mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell4 : WpfCell
    {
        
        public InputCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1InputVariabComboBox2 Row1InputVariabComboBox
        {
            get
            {
                if ((this.mRow1InputVariabComboBox == null))
                {
                    this.mRow1InputVariabComboBox = new Row1InputVariabComboBox2(this);
                }
                return this.mRow1InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1InputVariabComboBox2 mRow1InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1InputVariabComboBox2 : WpfComboBox
    {
        
        public Row1InputVariabComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell5 : WpfCell
    {
        
        public UsingCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1UsingDComboBox1 Row1UsingDComboBox
        {
            get
            {
                if ((this.mRow1UsingDComboBox == null))
                {
                    this.mRow1UsingDComboBox = new Row1UsingDComboBox1(this);
                }
                return this.mRow1UsingDComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1UsingDComboBox1 mRow1UsingDComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1UsingDComboBox1 : WpfComboBox
    {
        
        public Row1UsingDComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row25 : WpfRow
    {
        
        public Row25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell5 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell5(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell6 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell6(this);
                }
                return this.mUsingCell;
            }
        }
        
        public WpfCell MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new WpfCell(this);
                    #region Search Criteria
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
                    this.mMergeTypeCell.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell5 mInputCell;
        
        private UsingCell6 mUsingCell;
        
        private WpfCell mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell5 : WpfCell
    {
        
        public InputCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2InputVariabComboBox3 Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox3(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2InputVariabComboBox3 mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox3 : WpfComboBox
    {
        
        public Row2InputVariabComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell6 : WpfCell
    {
        
        public UsingCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2UsingComboBox3 Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox3(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2UsingComboBox3 mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox3 : WpfComboBox
    {
        
        public Row2UsingComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row32 : WpfRow
    {
        
        public Row32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MergeTypeCell4 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell4(this);
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private MergeTypeCell4 mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell4 : WpfCell
    {
        
        public MergeTypeCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow4MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
                    this.mRow4MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox38 : WpfComboBox
    {
        
        public ResultComboBox38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom29 : WpfCustom
    {
        
        public OnErrorCustom29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup47 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup47(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup47 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup47 : WpfGroup
    {
        
        public OnErrorGroup47(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox27 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox27(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox26 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox26(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox27 mErrorVariableComboBox;
        
        private WebServiceComboBox26 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox27 : WpfComboBox
    {
        
        public ErrorVariableComboBox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox26 : WpfComboBox
    {
        
        public WebServiceComboBox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom25 : WpfCustom
    {
        
        public SmallViewContentCustom25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox4 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox4(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public ContentsComboBox1 ContentsComboBox
        {
            get
            {
                if ((this.mContentsComboBox == null))
                {
                    this.mContentsComboBox = new ContentsComboBox1(this);
                }
                return this.mContentsComboBox;
            }
        }
        
        public ResultComboBox39 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox39(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox4 mFileNameComboBox;
        
        private ContentsComboBox1 mContentsComboBox;
        
        private ResultComboBox39 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox4 : WpfComboBox
    {
        
        public FileNameComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentsComboBox1 : WpfComboBox
    {
        
        public ContentsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Contentstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox39 : WpfComboBox
    {
        
        public ResultComboBox39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathRename : WpfCustom
    {
        
        public PathRename(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RenameDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Rename(RenameDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom28 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom28(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom26 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom26(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom28 mLargeViewContentCustom;
        
        private SmallViewContentCustom26 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom28 : WpfCustom
    {
        
        public LargeViewContentCustom28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox7 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox7(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox7 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox7(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox5 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox5(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public NewNameComboBox NewNameComboBox
        {
            get
            {
                if ((this.mNewNameComboBox == null))
                {
                    this.mNewNameComboBox = new NewNameComboBox(this);
                }
                return this.mNewNameComboBox;
            }
        }
        
        public NewFileUserNameComboBox NewFileUserNameComboBox
        {
            get
            {
                if ((this.mNewFileUserNameComboBox == null))
                {
                    this.mNewFileUserNameComboBox = new NewFileUserNameComboBox(this);
                }
                return this.mNewFileUserNameComboBox;
            }
        }
        
        public WpfEdit NewFilePasswordEdit
        {
            get
            {
                if ((this.mNewFilePasswordEdit == null))
                {
                    this.mNewFilePasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mNewFilePasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mNewFilePasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mNewFilePasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewFilePasswordEdit;
            }
        }
        
        public NewFilePrivateKeyComboBox NewFilePrivateKeyComboBox
        {
            get
            {
                if ((this.mNewFilePrivateKeyComboBox == null))
                {
                    this.mNewFilePrivateKeyComboBox = new NewFilePrivateKeyComboBox(this);
                }
                return this.mNewFilePrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultComboBox40 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox40(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom30 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom30(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox7 mFileOrFolderComboBox;
        
        private UserNameComboBox7 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox5 mPrivateKeyComboBox;
        
        private NewNameComboBox mNewNameComboBox;
        
        private NewFileUserNameComboBox mNewFileUserNameComboBox;
        
        private WpfEdit mNewFilePasswordEdit;
        
        private NewFilePrivateKeyComboBox mNewFilePrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultComboBox40 mResultComboBox;
        
        private OnErrorCustom30 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox7 : WpfComboBox
    {
        
        public FileOrFolderComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox7 : WpfComboBox
    {
        
        public UserNameComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox5 : WpfComboBox
    {
        
        public PrivateKeyComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewNameComboBox : WpfComboBox
    {
        
        public NewNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__NewNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewFileUserNameComboBox : WpfComboBox
    {
        
        public NewFileUserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewFilePrivateKeyComboBox : WpfComboBox
    {
        
        public NewFilePrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox40 : WpfComboBox
    {
        
        public ResultComboBox40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom30 : WpfCustom
    {
        
        public OnErrorCustom30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup48 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup48(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup48 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup48 : WpfGroup
    {
        
        public OnErrorGroup48(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox28 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox28(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox27 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox27(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox28 mErrorVariableComboBox;
        
        private WebServiceComboBox27 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox28 : WpfComboBox
    {
        
        public ErrorVariableComboBox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox27 : WpfComboBox
    {
        
        public WebServiceComboBox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom26 : WpfCustom
    {
        
        public SmallViewContentCustom26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox8 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox8(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public NewNameComboBox1 NewNameComboBox
        {
            get
            {
                if ((this.mNewNameComboBox == null))
                {
                    this.mNewNameComboBox = new NewNameComboBox1(this);
                }
                return this.mNewNameComboBox;
            }
        }
        
        public ResultComboBox41 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox41(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox8 mFileOrFolderComboBox;
        
        private NewNameComboBox1 mNewNameComboBox;
        
        private ResultComboBox41 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox8 : WpfComboBox
    {
        
        public FileOrFolderComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewNameComboBox1 : WpfComboBox
    {
        
        public NewNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__NewNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox41 : WpfComboBox
    {
        
        public ResultComboBox41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZip1 : WpfCustom
    {
        
        public UnZip1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UnzipDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Unzip(UnzipDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom29 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom29(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom27 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom27(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom29 mLargeViewContentCustom;
        
        private SmallViewContentCustom27 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom29 : WpfCustom
    {
        
        public LargeViewContentCustom29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnZipNameComboBox UnZipNameComboBox
        {
            get
            {
                if ((this.mUnZipNameComboBox == null))
                {
                    this.mUnZipNameComboBox = new UnZipNameComboBox(this);
                }
                return this.mUnZipNameComboBox;
            }
        }
        
        public UserNameComboBox8 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox8(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox6 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox6(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public DestinationComboBox4 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox4(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public UnZipUserNameComboBox UnZipUserNameComboBox
        {
            get
            {
                if ((this.mUnZipUserNameComboBox == null))
                {
                    this.mUnZipUserNameComboBox = new UnZipUserNameComboBox(this);
                }
                return this.mUnZipUserNameComboBox;
            }
        }
        
        public WpfEdit UnZipPasswordEdit
        {
            get
            {
                if ((this.mUnZipPasswordEdit == null))
                {
                    this.mUnZipPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUnZipPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mUnZipPasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUnZipPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnZipPasswordEdit;
            }
        }
        
        public UnZipPrivateKeyComboBox UnZipPrivateKeyComboBox
        {
            get
            {
                if ((this.mUnZipPrivateKeyComboBox == null))
                {
                    this.mUnZipPrivateKeyComboBox = new UnZipPrivateKeyComboBox(this);
                }
                return this.mUnZipPrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public WpfEdit ArchivePassword
        {
            get
            {
                if ((this.mArchivePassword == null))
                {
                    this.mArchivePassword = new WpfEdit(this);
                    #region Search Criteria
                    this.mArchivePassword.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__ArchivePasswordtxt_AutoID";
                    this.mArchivePassword.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mArchivePassword;
            }
        }
        
        public ResultComboBox42 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox42(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom31 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom31(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private UnZipNameComboBox mUnZipNameComboBox;
        
        private UserNameComboBox8 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox6 mPrivateKeyComboBox;
        
        private DestinationComboBox4 mDestinationComboBox;
        
        private UnZipUserNameComboBox mUnZipUserNameComboBox;
        
        private WpfEdit mUnZipPasswordEdit;
        
        private UnZipPrivateKeyComboBox mUnZipPrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private WpfEdit mArchivePassword;
        
        private ResultComboBox42 mResultComboBox;
        
        private OnErrorCustom31 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipNameComboBox : WpfComboBox
    {
        
        public UnZipNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox8 : WpfComboBox
    {
        
        public UserNameComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox6 : WpfComboBox
    {
        
        public PrivateKeyComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox4 : WpfComboBox
    {
        
        public DestinationComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipUserNameComboBox : WpfComboBox
    {
        
        public UnZipUserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipPrivateKeyComboBox : WpfComboBox
    {
        
        public UnZipPrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox42 : WpfComboBox
    {
        
        public ResultComboBox42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom31 : WpfCustom
    {
        
        public OnErrorCustom31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup49 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup49(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup49 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup49 : WpfGroup
    {
        
        public OnErrorGroup49(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox29 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox29(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox28 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox28(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox29 mErrorVariableComboBox;
        
        private WebServiceComboBox28 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox29 : WpfComboBox
    {
        
        public ErrorVariableComboBox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox28 : WpfComboBox
    {
        
        public WebServiceComboBox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom27 : WpfCustom
    {
        
        public SmallViewContentCustom27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnZipNameComboBox1 UnZipNameComboBox
        {
            get
            {
                if ((this.mUnZipNameComboBox == null))
                {
                    this.mUnZipNameComboBox = new UnZipNameComboBox1(this);
                }
                return this.mUnZipNameComboBox;
            }
        }
        
        public ResultComboBox43 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox43(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public DestinationComboBox5 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox5(this);
                }
                return this.mDestinationComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UnZipNameComboBox1 mUnZipNameComboBox;
        
        private ResultComboBox43 mResultComboBox;
        
        private DestinationComboBox5 mDestinationComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipNameComboBox1 : WpfComboBox
    {
        
        public UnZipNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox43 : WpfComboBox
    {
        
        public ResultComboBox43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox5 : WpfComboBox
    {
        
        public DestinationComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Zip1 : WpfCustom
    {
        
        public Zip1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ZipDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Zip(ZipDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom30 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom30(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom28 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom28(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom30 mLargeViewContentCustom;
        
        private SmallViewContentCustom28 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom30 : WpfCustom
    {
        
        public LargeViewContentCustom30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox9 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox9(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox9 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox9(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox7 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox7(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ZipNameComboBox ZipNameComboBox
        {
            get
            {
                if ((this.mZipNameComboBox == null))
                {
                    this.mZipNameComboBox = new ZipNameComboBox(this);
                }
                return this.mZipNameComboBox;
            }
        }
        
        public ZipDestinationUsernComboBox ZipDestinationUsernComboBox
        {
            get
            {
                if ((this.mZipDestinationUsernComboBox == null))
                {
                    this.mZipDestinationUsernComboBox = new ZipDestinationUsernComboBox(this);
                }
                return this.mZipDestinationUsernComboBox;
            }
        }
        
        public WpfEdit ZipDestinationPasswEdit
        {
            get
            {
                if ((this.mZipDestinationPasswEdit == null))
                {
                    this.mZipDestinationPasswEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mZipDestinationPasswEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__DestinationPasswordtxt_AutoID";
                    this.mZipDestinationPasswEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mZipDestinationPasswEdit;
            }
        }
        
        public ZipPrivateKeyComboBox ZipPrivateKeyComboBox
        {
            get
            {
                if ((this.mZipPrivateKeyComboBox == null))
                {
                    this.mZipPrivateKeyComboBox = new ZipPrivateKeyComboBox(this);
                }
                return this.mZipPrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public WpfEdit ArchivePasswordtEdit
        {
            get
            {
                if ((this.mArchivePasswordtEdit == null))
                {
                    this.mArchivePasswordtEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mArchivePasswordtEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__ArchivePasswordtxt_AutoID";
                    this.mArchivePasswordtEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mArchivePasswordtEdit;
            }
        }
        
        public SelectedCompressComboBox SelectedCompressComboBox
        {
            get
            {
                if ((this.mSelectedCompressComboBox == null))
                {
                    this.mSelectedCompressComboBox = new SelectedCompressComboBox(this);
                }
                return this.mSelectedCompressComboBox;
            }
        }
        
        public OnErrorCustom32 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom32(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public ResultComboBox44 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox44(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox9 mFileOrFolderComboBox;
        
        private UserNameComboBox9 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox7 mPrivateKeyComboBox;
        
        private ZipNameComboBox mZipNameComboBox;
        
        private ZipDestinationUsernComboBox mZipDestinationUsernComboBox;
        
        private WpfEdit mZipDestinationPasswEdit;
        
        private ZipPrivateKeyComboBox mZipPrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private WpfEdit mArchivePasswordtEdit;
        
        private SelectedCompressComboBox mSelectedCompressComboBox;
        
        private OnErrorCustom32 mOnErrorCustom;
        
        private ResultComboBox44 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox9 : WpfComboBox
    {
        
        public FileOrFolderComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox9 : WpfComboBox
    {
        
        public UserNameComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox7 : WpfComboBox
    {
        
        public PrivateKeyComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ZipNameComboBox : WpfComboBox
    {
        
        public ZipNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ZipDestinationUsernComboBox : WpfComboBox
    {
        
        public ZipDestinationUsernComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__DestinationUsernametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ZipPrivateKeyComboBox : WpfComboBox
    {
        
        public ZipPrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectedCompressComboBox : WpfComboBox
    {
        
        public SelectedCompressComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SelectedCompressionType_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NoneNoCompression
        {
            get
            {
                if ((this.mNoneNoCompression == null))
                {
                    this.mNoneNoCompression = new WpfListItem(this);
                    #region Search Criteria
                    this.mNoneNoCompression.SearchProperties[WpfListItem.PropertyNames.Name] = "None (No Compression)";
                    this.mNoneNoCompression.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNoneNoCompression;
            }
        }
        
        public WpfListItem NormalDefault
        {
            get
            {
                if ((this.mNormalDefault == null))
                {
                    this.mNormalDefault = new WpfListItem(this);
                    #region Search Criteria
                    this.mNormalDefault.SearchProperties[WpfListItem.PropertyNames.Name] = "Normal (Default)";
                    this.mNormalDefault.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNormalDefault;
            }
        }
        
        public WpfListItem MaxBestCompression
        {
            get
            {
                if ((this.mMaxBestCompression == null))
                {
                    this.mMaxBestCompression = new WpfListItem(this);
                    #region Search Criteria
                    this.mMaxBestCompression.SearchProperties[WpfListItem.PropertyNames.Name] = "Max (Best Compression)";
                    this.mMaxBestCompression.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMaxBestCompression;
            }
        }
        
        public WpfListItem PartialBestSpeed
        {
            get
            {
                if ((this.mPartialBestSpeed == null))
                {
                    this.mPartialBestSpeed = new WpfListItem(this);
                    #region Search Criteria
                    this.mPartialBestSpeed.SearchProperties[WpfListItem.PropertyNames.Name] = "Partial (Best Speed)";
                    this.mPartialBestSpeed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPartialBestSpeed;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNoneNoCompression;
        
        private WpfListItem mNormalDefault;
        
        private WpfListItem mMaxBestCompression;
        
        private WpfListItem mPartialBestSpeed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom32 : WpfCustom
    {
        
        public OnErrorCustom32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup50 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup50(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup50 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup50 : WpfGroup
    {
        
        public OnErrorGroup50(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox30 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox30(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox29 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox29(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox30 mErrorVariableComboBox;
        
        private WebServiceComboBox29 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox30 : WpfComboBox
    {
        
        public ErrorVariableComboBox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox29 : WpfComboBox
    {
        
        public WebServiceComboBox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox44 : WpfComboBox
    {
        
        public ResultComboBox44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom28 : WpfCustom
    {
        
        public SmallViewContentCustom28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox10 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox10(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public ZipNameComboBox1 ZipNameComboBox
        {
            get
            {
                if ((this.mZipNameComboBox == null))
                {
                    this.mZipNameComboBox = new ZipNameComboBox1(this);
                }
                return this.mZipNameComboBox;
            }
        }
        
        public ResultComboBox45 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox45(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox10 mFileOrFolderComboBox;
        
        private ZipNameComboBox1 mZipNameComboBox;
        
        private ResultComboBox45 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox10 : WpfComboBox
    {
        
        public FileOrFolderComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ZipNameComboBox1 : WpfComboBox
    {
        
        public ZipNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox45 : WpfComboBox
    {
        
        public ResultComboBox45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindIndex1 : WpfCustom
    {
        
        public FindIndex1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FindIndexDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Find Index(FindIndexDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom31 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom31(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom29 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom29(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom31 mLargeViewContentCustom;
        
        private SmallViewContentCustom29 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom31 : WpfCustom
    {
        
        public LargeViewContentCustom31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox DirectionComboBox
        {
            get
            {
                if ((this.mDirectionComboBox == null))
                {
                    this.mDirectionComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mDirectionComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directioncbx_AutoID";
                    this.mDirectionComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDirectionComboBox;
            }
        }
        
        public CharactersComboBox CharactersComboBox
        {
            get
            {
                if ((this.mCharactersComboBox == null))
                {
                    this.mCharactersComboBox = new CharactersComboBox(this);
                }
                return this.mCharactersComboBox;
            }
        }
        
        public WpfComboBox IndexComboBox
        {
            get
            {
                if ((this.mIndexComboBox == null))
                {
                    this.mIndexComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mIndexComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Indextcbx_AutoID";
                    this.mIndexComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIndexComboBox;
            }
        }
        
        public InFieldComboBox InFieldComboBox
        {
            get
            {
                if ((this.mInFieldComboBox == null))
                {
                    this.mInFieldComboBox = new InFieldComboBox(this);
                }
                return this.mInFieldComboBox;
            }
        }
        
        public OnErrorCustom33 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom33(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public ResultComboBox46 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox46(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mDirectionComboBox;
        
        private CharactersComboBox mCharactersComboBox;
        
        private WpfComboBox mIndexComboBox;
        
        private InFieldComboBox mInFieldComboBox;
        
        private OnErrorCustom33 mOnErrorCustom;
        
        private ResultComboBox46 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CharactersComboBox : WpfComboBox
    {
        
        public CharactersComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Characterstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldComboBox : WpfComboBox
    {
        
        public InFieldComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom33 : WpfCustom
    {
        
        public OnErrorCustom33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup51 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup51(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup51 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup51 : WpfGroup
    {
        
        public OnErrorGroup51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WebServiceComboBox30 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox30(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public ErrorVariableComboBox31 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox31(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WebServiceComboBox30 mWebServiceComboBox;
        
        private ErrorVariableComboBox31 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox30 : WpfComboBox
    {
        
        public WebServiceComboBox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox31 : WpfComboBox
    {
        
        public ErrorVariableComboBox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox46 : WpfComboBox
    {
        
        public ResultComboBox46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom29 : WpfCustom
    {
        
        public SmallViewContentCustom29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultComboBox47 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox47(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfComboBox DirectionComboBox
        {
            get
            {
                if ((this.mDirectionComboBox == null))
                {
                    this.mDirectionComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mDirectionComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directioncbx_AutoID";
                    this.mDirectionComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDirectionComboBox;
            }
        }
        
        public CharactersComboBox1 CharactersComboBox
        {
            get
            {
                if ((this.mCharactersComboBox == null))
                {
                    this.mCharactersComboBox = new CharactersComboBox1(this);
                }
                return this.mCharactersComboBox;
            }
        }
        
        public WpfComboBox IndexComboBox
        {
            get
            {
                if ((this.mIndexComboBox == null))
                {
                    this.mIndexComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mIndexComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Indextcbx_AutoID";
                    this.mIndexComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIndexComboBox;
            }
        }
        
        public InFieldComboBox1 InFieldComboBox
        {
            get
            {
                if ((this.mInFieldComboBox == null))
                {
                    this.mInFieldComboBox = new InFieldComboBox1(this);
                }
                return this.mInFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ResultComboBox47 mResultComboBox;
        
        private WpfComboBox mDirectionComboBox;
        
        private CharactersComboBox1 mCharactersComboBox;
        
        private WpfComboBox mIndexComboBox;
        
        private InFieldComboBox1 mInFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox47 : WpfComboBox
    {
        
        public ResultComboBox47(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CharactersComboBox1 : WpfComboBox
    {
        
        public CharactersComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Characterstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldComboBox1 : WpfComboBox
    {
        
        public InFieldComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Replace1 : WpfCustom
    {
        
        public Replace1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ReplaceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Replace(ReplaceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom32 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom32(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom30 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom30(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom32 mLargeViewContentCustom;
        
        private SmallViewContentCustom30 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom32 : WpfCustom
    {
        
        public LargeViewContentCustom32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFiledsComboBox InFiledsComboBox
        {
            get
            {
                if ((this.mInFiledsComboBox == null))
                {
                    this.mInFiledsComboBox = new InFiledsComboBox(this);
                }
                return this.mInFiledsComboBox;
            }
        }
        
        public FindComboBox FindComboBox
        {
            get
            {
                if ((this.mFindComboBox == null))
                {
                    this.mFindComboBox = new FindComboBox(this);
                }
                return this.mFindComboBox;
            }
        }
        
        public ReplaceComboBox ReplaceComboBox
        {
            get
            {
                if ((this.mReplaceComboBox == null))
                {
                    this.mReplaceComboBox = new ReplaceComboBox(this);
                }
                return this.mReplaceComboBox;
            }
        }
        
        public ResultComboBox48 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox48(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public UIOnErrorCustom UIOnErrorCustom
        {
            get
            {
                if ((this.mUIOnErrorCustom == null))
                {
                    this.mUIOnErrorCustom = new UIOnErrorCustom(this);
                }
                return this.mUIOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InFiledsComboBox mInFiledsComboBox;
        
        private FindComboBox mFindComboBox;
        
        private ReplaceComboBox mReplaceComboBox;
        
        private ResultComboBox48 mResultComboBox;
        
        private UIOnErrorCustom mUIOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFiledsComboBox : WpfComboBox
    {
        
        public InFiledsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFiledstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindComboBox : WpfComboBox
    {
        
        public FindComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Findtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReplaceComboBox : WpfComboBox
    {
        
        public ReplaceComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Replacetxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox48 : WpfComboBox
    {
        
        public ResultComboBox48(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOnErrorCustom : WpfCustom
    {
        
        public UIOnErrorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup52 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup52(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup52 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup52 : WpfGroup
    {
        
        public OnErrorGroup52(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        
        public WebserviceComboBox31 WebserviceComboBox
        {
            get
            {
                if ((this.mWebserviceComboBox == null))
                {
                    this.mWebserviceComboBox = new WebserviceComboBox31(this);
                }
                return this.mWebserviceComboBox;
            }
        }
        
        public ErrorVariableComboBox32 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox32(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mEndthisworkflowCheckBox;
        
        private WebserviceComboBox31 mWebserviceComboBox;
        
        private ErrorVariableComboBox32 mErrorVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebserviceComboBox31 : WpfComboBox
    {
        
        public WebserviceComboBox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox32 : WpfComboBox
    {
        
        public ErrorVariableComboBox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom30 : WpfCustom
    {
        
        public SmallViewContentCustom30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFiledsComboBox1 InFiledsComboBox
        {
            get
            {
                if ((this.mInFiledsComboBox == null))
                {
                    this.mInFiledsComboBox = new InFiledsComboBox1(this);
                }
                return this.mInFiledsComboBox;
            }
        }
        
        public FindComboBox1 FindComboBox
        {
            get
            {
                if ((this.mFindComboBox == null))
                {
                    this.mFindComboBox = new FindComboBox1(this);
                }
                return this.mFindComboBox;
            }
        }
        
        public ReplaceComboBox1 ReplaceComboBox
        {
            get
            {
                if ((this.mReplaceComboBox == null))
                {
                    this.mReplaceComboBox = new ReplaceComboBox1(this);
                }
                return this.mReplaceComboBox;
            }
        }
        
        public ResultComboBox49 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox49(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InFiledsComboBox1 mInFiledsComboBox;
        
        private FindComboBox1 mFindComboBox;
        
        private ReplaceComboBox1 mReplaceComboBox;
        
        private ResultComboBox49 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFiledsComboBox1 : WpfComboBox
    {
        
        public InFiledsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFiledstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindComboBox1 : WpfComboBox
    {
        
        public FindComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Findtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReplaceComboBox1 : WpfComboBox
    {
        
        public ReplaceComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Replacetxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox49 : WpfComboBox
    {
        
        public ResultComboBox49(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Decision1 : WpfCustom
    {
        
        public Decision1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowDecisionDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "FlowDecisionDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DisplayNameTextBoxEdit
        {
            get
            {
                if ((this.mDisplayNameTextBoxEdit == null))
                {
                    this.mDisplayNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameTextBox";
                    this.mDisplayNameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayNameTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDisplayNameTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Switch1 : WpfCustom
    {
        
        public Switch1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowSwitchDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "FlowSwitchDesigner";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public VariableCombobox6 VariableCombobox
        {
            get
            {
                if ((this.mVariableCombobox == null))
                {
                    this.mVariableCombobox = new VariableCombobox6(this);
                }
                return this.mVariableCombobox;
            }
        }
        
        public WpfEdit DisplayTextEdit
        {
            get
            {
                if ((this.mDisplayTextEdit == null))
                {
                    this.mDisplayTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayText";
                    this.mDisplayTextEdit.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mDisplayTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private VariableCombobox6 mVariableCombobox;
        
        private WpfEdit mDisplayTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCombobox6 : WpfComboBox
    {
        
        public VariableCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Sequence1 : WpfCustom
    {
        
        public Sequence1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SequenceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sequence(SequenceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SequenceLargeView SequenceLargeView
        {
            get
            {
                if ((this.mSequenceLargeView == null))
                {
                    this.mSequenceLargeView = new SequenceLargeView(this);
                }
                return this.mSequenceLargeView;
            }
        }
        #endregion
        
        #region Fields
        private SequenceLargeView mSequenceLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceLargeView : WpfCustom
    {
        
        public SequenceLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SequenceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sequence(SequenceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom AddModeNewActivity
        {
            get
            {
                if ((this.mAddModeNewActivity == null))
                {
                    this.mAddModeNewActivity = new WpfCustom(this);
                    #region Search Criteria
                    this.mAddModeNewActivity.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemsPresenter";
                    this.mAddModeNewActivity.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__ActivitiesPresenter_AutoID";
                    this.mAddModeNewActivity.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddModeNewActivity;
            }
        }
        
        public OnErrorCustom34 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom34(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mAddModeNewActivity;
        
        private OnErrorCustom34 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom34 : WpfCustom
    {
        
        public OnErrorCustom34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup53 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup53(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup53 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup53 : WpfGroup
    {
        
        public OnErrorGroup53(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox33 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox33(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox32 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox32(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox UIEndthisworkflowCheckBox
        {
            get
            {
                if ((this.mUIEndthisworkflowCheckBox == null))
                {
                    this.mUIEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mUIEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox33 mErrorVariableComboBox;
        
        private WebServiceComboBox32 mWebServiceComboBox;
        
        private WpfCheckBox mUIEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox33 : WpfComboBox
    {
        
        public ErrorVariableComboBox33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox32 : WpfComboBox
    {
        
        public WebServiceComboBox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MultiAssign1 : WpfCustom
    {
        
        public MultiAssign1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "MultiAssignDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView16 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView16(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView23 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView23(this);
                }
                return this.mLargeView;
            }
        }
        
        public DoneButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new DoneButton(this);
                }
                return this.mDoneButton;
            }
        }
        
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent3 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent3(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton AddButton
        {
            get
            {
                if ((this.mAddButton == null))
                {
                    this.mAddButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAddButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddModeButton";
                    this.mAddButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView16 mSmallView;
        
        private LargeView23 mLargeView;
        
        private DoneButton mDoneButton;
        
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent3 mQuickVariableInputContent;
        
        private WpfButton mAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView16 : WpfCustom
    {
        
        public SmallView16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid4 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid4(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid4 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid4 : WpfTable
    {
        
        public DataGrid4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row120 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row120(this);
                }
                return this.mRow1;
            }
        }
        
        public Row26 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row26(this);
                }
                return this.mRow2;
            }
        }
        
        public Row33 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row33(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row120 mRow1;
        
        private Row26 mRow2;
        
        private Row33 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row120 : WpfRow
    {
        
        public Row120(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell6 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell6(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell10 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell10(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell6 mVariableCell;
        
        private ValueCell10 mValueCell;
        
        private RowNumberCell mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell6 : WpfCell
    {
        
        public VariableCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox : WpfComboBox
    {
        
        public IntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox : WpfEdit
    {
        
        public Textbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "[[Variable1]]";
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell10 : WpfCell
    {
        
        public ValueCell10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox1 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox1(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox1 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox1 : WpfComboBox
    {
        
        public IntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell : WpfCell
    {
        
        public RowNumberCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "1";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row26 : WpfRow
    {
        
        public Row26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell7 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell7(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell11 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell11(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell1 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell1(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell7 mVariableCell;
        
        private ValueCell11 mValueCell;
        
        private RowNumberCell1 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell7 : WpfCell
    {
        
        public VariableCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox2 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox2(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox2 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox2 : WpfComboBox
    {
        
        public IntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox1 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox1(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox1 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox1 : WpfEdit
    {
        
        public Textbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell11 : WpfCell
    {
        
        public ValueCell11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox3 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox3(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox3 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox3 : WpfComboBox
    {
        
        public IntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell1 : WpfCell
    {
        
        public RowNumberCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "2";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row33 : WpfRow
    {
        
        public Row33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell8 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell8(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell12 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell12(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell2 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell2(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell8 mVariableCell;
        
        private ValueCell12 mValueCell;
        
        private RowNumberCell2 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell8 : WpfCell
    {
        
        public VariableCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox4 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox4(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox4 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox4 : WpfComboBox
    {
        
        public IntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox2 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox2(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox2 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox2 : WpfEdit
    {
        
        public Textbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell12 : WpfCell
    {
        
        public ValueCell12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox5 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox5(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox5 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox5 : WpfComboBox
    {
        
        public IntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell2 : WpfCell
    {
        
        public RowNumberCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "3";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView23 : WpfCustom
    {
        
        public LargeView23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid5 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid5(this);
                }
                return this.mDataGrid;
            }
        }
        
        public OnErrorPane15 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane15(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid5 mDataGrid;
        
        private OnErrorPane15 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid5 : WpfTable
    {
        
        public DataGrid5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row121 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row121(this);
                }
                return this.mRow1;
            }
        }
        
        public Row27 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row27(this);
                }
                return this.mRow2;
            }
        }
        
        public Row34 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row34(this);
                }
                return this.mRow3;
            }
        }
        
        public Row41 Row4
        {
            get
            {
                if ((this.mRow4 == null))
                {
                    this.mRow4 = new Row41(this);
                }
                return this.mRow4;
            }
        }
        #endregion
        
        #region Fields
        private Row121 mRow1;
        
        private Row27 mRow2;
        
        private Row34 mRow3;
        
        private Row41 mRow4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row121 : WpfRow
    {
        
        public Row121(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfRow.PropertyNames.AutomationId, "UI_ActivityGridRow_0_AutoID", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell9 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell9(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell13 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell13(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell9 mVariableCell;
        
        private ValueCell13 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell9 : WpfCell
    {
        
        public VariableCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox6 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox6(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox6 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox6 : WpfComboBox
    {
        
        public IntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell13 : WpfCell
    {
        
        public ValueCell13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox7 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox7(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox7 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox7 : WpfComboBox
    {
        
        public IntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row27 : WpfRow
    {
        
        public Row27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell10 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell10(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell14 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell14(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell10 mVariableCell;
        
        private ValueCell14 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell10 : WpfCell
    {
        
        public VariableCell10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox8 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox8(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox8 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox8 : WpfComboBox
    {
        
        public IntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell14 : WpfCell
    {
        
        public ValueCell14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox9 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox9(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox9 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox9 : WpfComboBox
    {
        
        public IntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row34 : WpfRow
    {
        
        public Row34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell11 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell11(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell15 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell15(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell11 mVariableCell;
        
        private ValueCell15 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell11 : WpfCell
    {
        
        public VariableCell11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox10 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox10(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox10 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox10 : WpfComboBox
    {
        
        public IntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell15 : WpfCell
    {
        
        public ValueCell15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox11 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox11(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox11 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox11 : WpfComboBox
    {
        
        public IntellisenseCombobox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row41 : WpfRow
    {
        
        public Row41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_3_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell12 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell12(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell16 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell16(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell12 mVariableCell;
        
        private ValueCell16 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell12 : WpfCell
    {
        
        public VariableCell12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox12 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox12(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox12 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox12 : WpfComboBox
    {
        
        public IntellisenseCombobox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell16 : WpfCell
    {
        
        public ValueCell16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox13 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox13(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox13 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox13 : WpfComboBox
    {
        
        public IntellisenseCombobox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane15 : WpfCustom
    {
        
        public OnErrorPane15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup54 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup54(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup54 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup54 : WpfGroup
    {
        
        public OnErrorGroup54(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox10 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox10(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox10 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox10(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox10 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox10 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox10 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox10 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DoneButton : WpfButton
    {
        
        public DoneButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl ItemIndicator
        {
            get
            {
                if ((this.mItemIndicator == null))
                {
                    this.mItemIndicator = new WpfControl(this);
                    #region Search Criteria
                    this.mItemIndicator.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemIndicator.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemIndicator.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemIndicator;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mItemIndicator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent3 : WpfCustom
    {
        
        public QuickVariableInputContent3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixEdit
        {
            get
            {
                if ((this.mPrefixEdit == null))
                {
                    this.mPrefixEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixEdit;
            }
        }
        
        public WpfEdit SuffixEdit
        {
            get
            {
                if ((this.mSuffixEdit == null))
                {
                    this.mSuffixEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSuffixEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSuffixEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuffixEdit;
            }
        }
        
        public PreviewCustom4 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom4(this);
                }
                return this.mPreviewCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixEdit;
        
        private WpfEdit mSuffixEdit;
        
        private PreviewCustom4 mPreviewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom4 : WpfCustom
    {
        
        public PreviewCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup4 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup4(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup4 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup4 : WpfGroup
    {
        
        public PreviewGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPreviewButton.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
                    this.mPreviewButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebPost : WpfCustom
    {
        
        public WebPost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServicePostDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "POST Web Method", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ResponseTextbox
        {
            get
            {
                if ((this.mResponseTextbox == null))
                {
                    this.mResponseTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ResponseTextbox";
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mResponseTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResponseTextbox;
            }
        }
        
        public LargeView24 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView24(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mResponseTextbox;
        
        private LargeView24 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView24 : WpfCustom
    {
        
        public LargeView24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        
        public Table3 Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table3(this);
                }
                return this.mTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText2 QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText2(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfEdit RequestBody
        {
            get
            {
                if ((this.mRequestBody == null))
                {
                    this.mRequestBody = new WpfEdit(this);
                    #region Search Criteria
                    this.mRequestBody.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RequestBody";
                    this.mRequestBody.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestBody;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public InputsTable2 InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable2(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        
        private Table3 mTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText2 mQueryStringText;
        
        private WpfEdit mRequestBody;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mTestButton;
        
        private InputsTable2 mInputsTable;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table3 : WpfTable
    {
        
        public Table3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow17 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow17(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow17 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow17 : WpfRow
    {
        
        public ItemRow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell2 ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell2(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell2 HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell2(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell2 mItemValueCell;
        
        private HeaderCell2 mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell2 : WpfCell
    {
        
        public ItemValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox9 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox9(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox9 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox9 : WpfComboBox
    {
        
        public ValueComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell2 : WpfCell
    {
        
        public HeaderCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox3 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox3(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox3 mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox3 : WpfComboBox
    {
        
        public HeaderComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText2 : WpfText
    {
        
        public QueryStringText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable2 : WpfTable
    {
        
        public InputsTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SuccessImage
        {
            get
            {
                if ((this.mSuccessImage == null))
                {
                    this.mSuccessImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSuccessImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSuccessImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuccessImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSuccessImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Error1 : WpfText
    {
        
        public Error1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebGet : WpfCustom
    {
        
        public WebGet(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServiceGetDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "GET Web Method", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView25 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView25(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView25 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView25 : WpfCustom
    {
        
        public LargeView25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfTable InputDataGridTable
        {
            get
            {
                if ((this.mInputDataGridTable == null))
                {
                    this.mInputDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputDataGridTable;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public HeadersTable HeadersTable
        {
            get
            {
                if ((this.mHeadersTable == null))
                {
                    this.mHeadersTable = new HeadersTable(this);
                }
                return this.mHeadersTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Select the webservice host you want to use";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText3 QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText3(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Accept these results and continue";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfTable mInputDataGridTable;
        
        private WpfButton mTestButton;
        
        private HeadersTable mHeadersTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText3 mQueryStringText;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mDoneButton;
        
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeadersTable : WpfTable
    {
        
        public HeadersTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow18 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow18(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow18 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow18 : WpfRow
    {
        
        public ItemRow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell3 ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell3(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell3 HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell3(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell3 mItemValueCell;
        
        private HeaderCell3 mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell3 : WpfCell
    {
        
        public ItemValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox10 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox10(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox10 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox10 : WpfComboBox
    {
        
        public ValueComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell3 : WpfCell
    {
        
        public HeaderCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox4 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox4(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox4 mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox4 : WpfComboBox
    {
        
        public HeaderComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText3 : WpfText
    {
        
        public QueryStringText3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExternalWorkFlow : WpfCustom
    {
        
        public ExternalWorkFlow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "(ServiceDesigner)", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Javascript1 : WpfCustom
    {
        
        public Javascript1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ScriptDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "JavaScript(ScriptDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView17 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView17(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView26 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView26(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView17 mSmallView;
        
        private LargeView26 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView17 : WpfCustom
    {
        
        public SmallView17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox5 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox5(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox mScriptIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox5 mResultsIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox5 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView26 : WpfCustom
    {
        
        public LargeView26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox1 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox1(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public AttachmentsIntellisenseCombobox AttachmentsIntellisenseCombobox
        {
            get
            {
                if ((this.mAttachmentsIntellisenseCombobox == null))
                {
                    this.mAttachmentsIntellisenseCombobox = new AttachmentsIntellisenseCombobox(this);
                }
                return this.mAttachmentsIntellisenseCombobox;
            }
        }
        
        public WpfButton AttachFileButton
        {
            get
            {
                if ((this.mAttachFileButton == null))
                {
                    this.mAttachFileButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAttachFileButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mAttachFileButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachFileButton;
            }
        }
        
        public WpfCheckBox EscapesequencesCheckBox
        {
            get
            {
                if ((this.mEscapesequencesCheckBox == null))
                {
                    this.mEscapesequencesCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEscapesequencesCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Escape sequences in variables";
                    this.mEscapesequencesCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEscapesequencesCheckBox;
            }
        }
        
        public ResultIntellisenseCombobox7 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox7(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane16 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane16(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox1 mScriptIntellisenseCombobox;
        
        private AttachmentsIntellisenseCombobox mAttachmentsIntellisenseCombobox;
        
        private WpfButton mAttachFileButton;
        
        private WpfCheckBox mEscapesequencesCheckBox;
        
        private ResultIntellisenseCombobox7 mResultIntellisenseCombobox;
        
        private OnErrorPane16 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox1 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsIntellisenseCombobox : WpfComboBox
    {
        
        public AttachmentsIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox7 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane16 : WpfCustom
    {
        
        public OnErrorPane16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup55 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup55(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup55 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup55 : WpfGroup
    {
        
        public OnErrorGroup55(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox4 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox4(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ExecuteWorkflowIntellisenseCombobox ExecuteWorkflowIntellisenseCombobox
        {
            get
            {
                if ((this.mExecuteWorkflowIntellisenseCombobox == null))
                {
                    this.mExecuteWorkflowIntellisenseCombobox = new ExecuteWorkflowIntellisenseCombobox(this);
                }
                return this.mExecuteWorkflowIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox4 mErrorVariableIntellisenseCombobox;
        
        private ExecuteWorkflowIntellisenseCombobox mExecuteWorkflowIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox4 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteWorkflowIntellisenseCombobox : WpfComboBox
    {
        
        public ExecuteWorkflowIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Python1 : WpfCustom
    {
        
        public Python1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ScriptDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Python(ScriptDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView18 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView18(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView27 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView27(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView18 mSmallView;
        
        private LargeView27 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView18 : WpfCustom
    {
        
        public SmallView18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox2 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox2(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox8 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox8(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox2 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox8 mResultIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox2 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox8 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView27 : WpfCustom
    {
        
        public LargeView27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AttachmentsIntellisenseCombobox1 AttachmentsIntellisenseCombobox
        {
            get
            {
                if ((this.mAttachmentsIntellisenseCombobox == null))
                {
                    this.mAttachmentsIntellisenseCombobox = new AttachmentsIntellisenseCombobox1(this);
                }
                return this.mAttachmentsIntellisenseCombobox;
            }
        }
        
        public WpfButton AttachFileButton
        {
            get
            {
                if ((this.mAttachFileButton == null))
                {
                    this.mAttachFileButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAttachFileButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mAttachFileButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachFileButton;
            }
        }
        
        public WpfCheckBox EscapesequencesCheckBox
        {
            get
            {
                if ((this.mEscapesequencesCheckBox == null))
                {
                    this.mEscapesequencesCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEscapesequencesCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Escape sequences in variables";
                    this.mEscapesequencesCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEscapesequencesCheckBox;
            }
        }
        
        public ScriptIntellisenseCombobox3 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox3(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox9 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox9(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane17 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane17(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private AttachmentsIntellisenseCombobox1 mAttachmentsIntellisenseCombobox;
        
        private WpfButton mAttachFileButton;
        
        private WpfCheckBox mEscapesequencesCheckBox;
        
        private ScriptIntellisenseCombobox3 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox9 mResultIntellisenseCombobox;
        
        private OnErrorPane17 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsIntellisenseCombobox1 : WpfComboBox
    {
        
        public AttachmentsIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox3 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox9 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane17 : WpfCustom
    {
        
        public OnErrorPane17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup56 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup56(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup56 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup56 : WpfGroup
    {
        
        public OnErrorGroup56(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableIntellisenseCombobox VariableIntellisenseCombobox
        {
            get
            {
                if ((this.mVariableIntellisenseCombobox == null))
                {
                    this.mVariableIntellisenseCombobox = new VariableIntellisenseCombobox(this);
                }
                return this.mVariableIntellisenseCombobox;
            }
        }
        
        public ExecuteWorkflowIntellisenseCombobox1 ExecuteWorkflowIntellisenseCombobox
        {
            get
            {
                if ((this.mExecuteWorkflowIntellisenseCombobox == null))
                {
                    this.mExecuteWorkflowIntellisenseCombobox = new ExecuteWorkflowIntellisenseCombobox1(this);
                }
                return this.mExecuteWorkflowIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableIntellisenseCombobox mVariableIntellisenseCombobox;
        
        private ExecuteWorkflowIntellisenseCombobox1 mExecuteWorkflowIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableIntellisenseCombobox : WpfComboBox
    {
        
        public VariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteWorkflowIntellisenseCombobox1 : WpfComboBox
    {
        
        public ExecuteWorkflowIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Ruby1 : WpfCustom
    {
        
        public Ruby1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ScriptDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Ruby(ScriptDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView19 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView19(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView28 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView28(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView19 mSmallView;
        
        private LargeView28 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView19 : WpfCustom
    {
        
        public SmallView19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox4 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox4(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox10 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox10(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox4 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox10 mResultIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox4 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox10 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView28 : WpfCustom
    {
        
        public LargeView28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AttachmentsIntellisenseCombobox2 AttachmentsIntellisenseCombobox
        {
            get
            {
                if ((this.mAttachmentsIntellisenseCombobox == null))
                {
                    this.mAttachmentsIntellisenseCombobox = new AttachmentsIntellisenseCombobox2(this);
                }
                return this.mAttachmentsIntellisenseCombobox;
            }
        }
        
        public WpfButton AttachFileButton
        {
            get
            {
                if ((this.mAttachFileButton == null))
                {
                    this.mAttachFileButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAttachFileButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mAttachFileButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachFileButton;
            }
        }
        
        public WpfCheckBox EscapesequencesCheckBox
        {
            get
            {
                if ((this.mEscapesequencesCheckBox == null))
                {
                    this.mEscapesequencesCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEscapesequencesCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Escape sequences in variables";
                    this.mEscapesequencesCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEscapesequencesCheckBox;
            }
        }
        
        public ScriptIntellisenseCombobox5 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox5(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox11 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox11(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane18 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane18(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private AttachmentsIntellisenseCombobox2 mAttachmentsIntellisenseCombobox;
        
        private WpfButton mAttachFileButton;
        
        private WpfCheckBox mEscapesequencesCheckBox;
        
        private ScriptIntellisenseCombobox5 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox11 mResultIntellisenseCombobox;
        
        private OnErrorPane18 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsIntellisenseCombobox2 : WpfComboBox
    {
        
        public AttachmentsIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox5 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox11 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane18 : WpfCustom
    {
        
        public OnErrorPane18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup57 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup57(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup57 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup57 : WpfGroup
    {
        
        public OnErrorGroup57(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox5 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox5(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ExecuteWorkflowIntellisenseCombobox2 ExecuteWorkflowIntellisenseCombobox
        {
            get
            {
                if ((this.mExecuteWorkflowIntellisenseCombobox == null))
                {
                    this.mExecuteWorkflowIntellisenseCombobox = new ExecuteWorkflowIntellisenseCombobox2(this);
                }
                return this.mExecuteWorkflowIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox5 mErrorVariableIntellisenseCombobox;
        
        private ExecuteWorkflowIntellisenseCombobox2 mExecuteWorkflowIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox5 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteWorkflowIntellisenseCombobox2 : WpfComboBox
    {
        
        public ExecuteWorkflowIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectAndApply1 : WpfCustom
    {
        
        public SelectAndApply1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SelectAndApplyDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Select and apply(SelectAndApplyDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView20 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView20(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView29 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView29(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView20 mSmallView;
        
        private LargeView29 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView20 : WpfCustom
    {
        
        public SmallView20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SelectFromIntellisenseTextbox SelectFromIntellisenseTextbox
        {
            get
            {
                if ((this.mSelectFromIntellisenseTextbox == null))
                {
                    this.mSelectFromIntellisenseTextbox = new SelectFromIntellisenseTextbox(this);
                }
                return this.mSelectFromIntellisenseTextbox;
            }
        }
        
        public AliasIntellisenseTextbox AliasIntellisenseTextbox
        {
            get
            {
                if ((this.mAliasIntellisenseTextbox == null))
                {
                    this.mAliasIntellisenseTextbox = new AliasIntellisenseTextbox(this);
                }
                return this.mAliasIntellisenseTextbox;
            }
        }
        
        public DropActivityHere1 DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new DropActivityHere1(this);
                }
                return this.mDropActivityHere;
            }
        }
        #endregion
        
        #region Fields
        private SelectFromIntellisenseTextbox mSelectFromIntellisenseTextbox;
        
        private AliasIntellisenseTextbox mAliasIntellisenseTextbox;
        
        private DropActivityHere1 mDropActivityHere;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectFromIntellisenseTextbox : WpfComboBox
    {
        
        public SelectFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AliasIntellisenseTextbox : WpfComboBox
    {
        
        public AliasIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHere1 : WpfCustom
    {
        
        public DropActivityHere1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereFloatingText
        {
            get
            {
                if ((this.mDropActivityHereFloatingText == null))
                {
                    this.mDropActivityHereFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView29 : WpfCustom
    {
        
        public LargeView29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SelectFromIntellisenseTextbox1 SelectFromIntellisenseTextbox
        {
            get
            {
                if ((this.mSelectFromIntellisenseTextbox == null))
                {
                    this.mSelectFromIntellisenseTextbox = new SelectFromIntellisenseTextbox1(this);
                }
                return this.mSelectFromIntellisenseTextbox;
            }
        }
        
        public AliasIntellisenseTextbox1 AliasIntellisenseTextbox
        {
            get
            {
                if ((this.mAliasIntellisenseTextbox == null))
                {
                    this.mAliasIntellisenseTextbox = new AliasIntellisenseTextbox1(this);
                }
                return this.mAliasIntellisenseTextbox;
            }
        }
        
        public DropActivityHere2 DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new DropActivityHere2(this);
                }
                return this.mDropActivityHere;
            }
        }
        
        public OnErrorPane19 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane19(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private SelectFromIntellisenseTextbox1 mSelectFromIntellisenseTextbox;
        
        private AliasIntellisenseTextbox1 mAliasIntellisenseTextbox;
        
        private DropActivityHere2 mDropActivityHere;
        
        private OnErrorPane19 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectFromIntellisenseTextbox1 : WpfComboBox
    {
        
        public SelectFromIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AliasIntellisenseTextbox1 : WpfComboBox
    {
        
        public AliasIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHere2 : WpfCustom
    {
        
        public DropActivityHere2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereFloatingText
        {
            get
            {
                if ((this.mDropActivityHereFloatingText == null))
                {
                    this.mDropActivityHereFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane19 : WpfCustom
    {
        
        public OnErrorPane19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup58 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup58(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup58 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup58 : WpfGroup
    {
        
        public OnErrorGroup58(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseTextbox2 ErrorVariableIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseTextbox == null))
                {
                    this.mErrorVariableIntellisenseTextbox = new ErrorVariableIntellisenseTextbox2(this);
                }
                return this.mErrorVariableIntellisenseTextbox;
            }
        }
        
        public ErrorWorkflowIntellisenseTextbox ErrorWorkflowIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorWorkflowIntellisenseTextbox == null))
                {
                    this.mErrorWorkflowIntellisenseTextbox = new ErrorWorkflowIntellisenseTextbox(this);
                }
                return this.mErrorWorkflowIntellisenseTextbox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseTextbox2 mErrorVariableIntellisenseTextbox;
        
        private ErrorWorkflowIntellisenseTextbox mErrorWorkflowIntellisenseTextbox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseTextbox2 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWorkflowIntellisenseTextbox : WpfComboBox
    {
        
        public ErrorWorkflowIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrefixcontainsinvaliText : WpfText
    {
        
        public PrefixcontainsinvaliText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink PrefixcontainsinvaliHyperlink
        {
            get
            {
                if ((this.mPrefixcontainsinvaliHyperlink == null))
                {
                    this.mPrefixcontainsinvaliHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mPrefixcontainsinvaliHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "Prefix contains invalid characters";
                    this.mPrefixcontainsinvaliHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixcontainsinvaliHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mPrefixcontainsinvaliHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DsfWebDeleteOutputsLargeView : WpfCustom
    {
        
        public DsfWebDeleteOutputsLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServiceDeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DELETE Web Method - Outputs(WebServiceDeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Test the procedure or function";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Paste a customized response instead";
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mTestButton;
        
        private WpfButton mPasteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComDll1 : WpfCustom
    {
        
        public ComDll1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComDllDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Com DLL(ComDllDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView30 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView30(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView30 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView30 : WpfCustom
    {
        
        public LargeView30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfComboBox NamespaceCombobox
        {
            get
            {
                if ((this.mNamespaceCombobox == null))
                {
                    this.mNamespaceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mNamespaceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "NamespaceComboBox";
                    this.mNamespaceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNamespaceCombobox;
            }
        }
        
        public WpfButton RefreshNamespaceButton
        {
            get
            {
                if ((this.mRefreshNamespaceButton == null))
                {
                    this.mRefreshNamespaceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshNamespaceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NamespaceRefreshButton";
                    this.mRefreshNamespaceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshNamespaceButton;
            }
        }
        
        public WpfComboBox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsCombobox;
            }
        }
        
        public WpfButton ActionRefreshButton
        {
            get
            {
                if ((this.mActionRefreshButton == null))
                {
                    this.mActionRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mActionRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mActionRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionRefreshButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckbox
        {
            get
            {
                if ((this.mOutputToObjectCheckbox == null))
                {
                    this.mOutputToObjectCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputToObjectCheckbox;
            }
        }
        
        public WpfTable OutputsTable
        {
            get
            {
                if ((this.mOutputsTable == null))
                {
                    this.mOutputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsTable;
            }
        }
        
        public WpfEdit RecordsetNameTextbox
        {
            get
            {
                if ((this.mRecordsetNameTextbox == null))
                {
                    this.mRecordsetNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordsetNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordsetNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetNameTextbox;
            }
        }
        
        public OnErrorPanel OnErrorPanel
        {
            get
            {
                if ((this.mOnErrorPanel == null))
                {
                    this.mOnErrorPanel = new OnErrorPanel(this);
                }
                return this.mOnErrorPanel;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private WpfComboBox mNamespaceCombobox;
        
        private WpfButton mRefreshNamespaceButton;
        
        private WpfComboBox mActionsCombobox;
        
        private WpfButton mActionRefreshButton;
        
        private WpfTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputToObjectCheckbox;
        
        private WpfTable mOutputsTable;
        
        private WpfEdit mRecordsetNameTextbox;
        
        private OnErrorPanel mOnErrorPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPanel : WpfCustom
    {
        
        public OnErrorPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup59 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup59(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup59 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup59 : WpfGroup
    {
        
        public OnErrorGroup59(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox11 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox11(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorWebServiceIntellisenseCombobox OnErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorWebServiceIntellisenseCombobox = new OnErrorWebServiceIntellisenseCombobox(this);
                }
                return this.mOnErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox11 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorWebServiceIntellisenseCombobox mOnErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox11 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWebServiceIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorWebServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WcfService : WpfCustom
    {
        
        public WcfService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WcfEndPointDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WCF Service(WcfEndPointDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        
        public LargeView31 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView31(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSmallView;
        
        private LargeView31 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView31 : WpfCustom
    {
        
        public LargeView31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewButton
        {
            get
            {
                if ((this.mNewButton == null))
                {
                    this.mNewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewButton;
            }
        }
        
        public WpfComboBox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsCombobox;
            }
        }
        
        public WpfButton RefreshActionsButton
        {
            get
            {
                if ((this.mRefreshActionsButton == null))
                {
                    this.mRefreshActionsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshActionsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshActionsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshActionsButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckbox
        {
            get
            {
                if ((this.mOutputToObjectCheckbox == null))
                {
                    this.mOutputToObjectCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputToObjectCheckbox;
            }
        }
        
        public WpfTable OutputsTable
        {
            get
            {
                if ((this.mOutputsTable == null))
                {
                    this.mOutputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsTable;
            }
        }
        
        public WpfEdit RecordSetTextbox
        {
            get
            {
                if ((this.mRecordSetTextbox == null))
                {
                    this.mRecordSetTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextbox;
            }
        }
        
        public OnErrorPanel1 OnErrorPanel
        {
            get
            {
                if ((this.mOnErrorPanel == null))
                {
                    this.mOnErrorPanel = new OnErrorPanel1(this);
                }
                return this.mOnErrorPanel;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewButton;
        
        private WpfComboBox mActionsCombobox;
        
        private WpfButton mRefreshActionsButton;
        
        private WpfTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputToObjectCheckbox;
        
        private WpfTable mOutputsTable;
        
        private WpfEdit mRecordSetTextbox;
        
        private OnErrorPanel1 mOnErrorPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPanel1 : WpfCustom
    {
        
        public OnErrorPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup60 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup60(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup60 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup60 : WpfGroup
    {
        
        public OnErrorGroup60(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox12 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox12(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorWebServiceIntellisenseCombobox1 OnErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorWebServiceIntellisenseCombobox = new OnErrorWebServiceIntellisenseCombobox1(this);
                }
                return this.mOnErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox12 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorWebServiceIntellisenseCombobox1 mOnErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox12 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWebServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorWebServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Adornert_numbernText : WpfText
    {
        
        public Adornert_numbernText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink NumbernHyperlink
        {
            get
            {
                if ((this.mNumbernHyperlink == null))
                {
                    this.mNumbernHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNumbernHyperlink.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mNumbernHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mNumbernHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TopScrollViewerPane : WpfPane
    {
        
        public TopScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ScrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnsavedWorkflowLinkText UnsavedWorkflowLinkText
        {
            get
            {
                if ((this.mUnsavedWorkflowLinkText == null))
                {
                    this.mUnsavedWorkflowLinkText = new UnsavedWorkflowLinkText(this);
                }
                return this.mUnsavedWorkflowLinkText;
            }
        }
        
        public HttpLocalHostText HttpLocalHostText
        {
            get
            {
                if ((this.mHttpLocalHostText == null))
                {
                    this.mHttpLocalHostText = new HttpLocalHostText(this);
                }
                return this.mHttpLocalHostText;
            }
        }
        
        public UrlWithRenamedFolder UrlWithRenamedFolder
        {
            get
            {
                if ((this.mUrlWithRenamedFolder == null))
                {
                    this.mUrlWithRenamedFolder = new UrlWithRenamedFolder(this);
                }
                return this.mUrlWithRenamedFolder;
            }
        }
        
        public UnitTestsUrlWorkflowUrlText UnitTestsUrlWorkflowUrlText
        {
            get
            {
                if ((this.mUnitTestsUrlWorkflowUrlText == null))
                {
                    this.mUnitTestsUrlWorkflowUrlText = new UnitTestsUrlWorkflowUrlText(this);
                }
                return this.mUnitTestsUrlWorkflowUrlText;
            }
        }
        #endregion
        
        #region Fields
        private UnsavedWorkflowLinkText mUnsavedWorkflowLinkText;
        
        private HttpLocalHostText mHttpLocalHostText;
        
        private UrlWithRenamedFolder mUrlWithRenamedFolder;
        
        private UnitTestsUrlWorkflowUrlText mUnitTestsUrlWorkflowUrlText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnsavedWorkflowLinkText : WpfText
    {
        
        public UnsavedWorkflowLinkText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "Unassigned/Unsaved", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HttpLocalHostText : WpfText
    {
        
        public HttpLocalHostText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink NewWorkflowHyperLink
        {
            get
            {
                if ((this.mNewWorkflowHyperLink == null))
                {
                    this.mNewWorkflowHyperLink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNewWorkflowHyperLink.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mNewWorkflowHyperLink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mNewWorkflowHyperLink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UrlWithRenamedFolder : WpfText
    {
        
        public UrlWithRenamedFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "http://rsaklfsanele:3142/secure/Acceptance Tests_Renamed/LoopTest.json?<DataList>" +
                "</DataList>";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UrlWithRenamedFolderHyperlink
        {
            get
            {
                if ((this.mUrlWithRenamedFolderHyperlink == null))
                {
                    this.mUrlWithRenamedFolderHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUrlWithRenamedFolderHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "http://rsaklfsanele:3142/secure/Acceptance Tests_Renamed/LoopTest.json?<DataList>" +
                        "</DataList>";
                    this.mUrlWithRenamedFolderHyperlink.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUrlWithRenamedFolderHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUrlWithRenamedFolderHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnitTestsUrlWorkflowUrlText : WpfText
    {
        
        public UnitTestsUrlWorkflowUrlText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "http://rsaklfsanele:3142/secure/Unit Tests/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UnitTestsUrlWorkflowUrlHyperlink
        {
            get
            {
                if ((this.mUnitTestsUrlWorkflowUrlHyperlink == null))
                {
                    this.mUnitTestsUrlWorkflowUrlHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUnitTestsUrlWorkflowUrlHyperlink.SearchProperties.Add(new PropertyExpression(WpfHyperlink.PropertyNames.Name, "http://rsaklfsanele:3142/secure/Unit Tests/", PropertyExpressionOperator.Contains));
                    this.mUnitTestsUrlWorkflowUrlHyperlink.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUnitTestsUrlWorkflowUrlHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUnitTestsUrlWorkflowUrlHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentPane : WpfCustom
    {
        
        public ContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ContentDockManager ContentDockManager
        {
            get
            {
                if ((this.mContentDockManager == null))
                {
                    this.mContentDockManager = new ContentDockManager(this);
                }
                return this.mContentDockManager;
            }
        }
        #endregion
        
        #region Fields
        private ContentDockManager mContentDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentDockManager : WpfCustom
    {
        
        public ContentDockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ContentDockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneRight SplitPaneRight
        {
            get
            {
                if ((this.mSplitPaneRight == null))
                {
                    this.mSplitPaneRight = new SplitPaneRight(this);
                }
                return this.mSplitPaneRight;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneRight mSplitPaneRight;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneRight : WpfCustom
    {
        
        public SplitPaneRight(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Variables Variables
        {
            get
            {
                if ((this.mVariables == null))
                {
                    this.mVariables = new Variables(this);
                }
                return this.mVariables;
            }
        }
        
        public DebugOutput DebugOutput
        {
            get
            {
                if ((this.mDebugOutput == null))
                {
                    this.mDebugOutput = new DebugOutput(this);
                }
                return this.mDebugOutput;
            }
        }
        #endregion
        
        #region Fields
        private Variables mVariables;
        
        private DebugOutput mDebugOutput;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Variables : WpfCustom
    {
        
        public Variables(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Variables";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton VariableUnpinBtn
        {
            get
            {
                if ((this.mVariableUnpinBtn == null))
                {
                    this.mVariableUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mVariableUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mVariableUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableUnpinBtn;
            }
        }
        
        public DatalistView DatalistView
        {
            get
            {
                if ((this.mDatalistView == null))
                {
                    this.mDatalistView = new DatalistView(this);
                }
                return this.mDatalistView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mVariableUnpinBtn;
        
        private DatalistView mDatalistView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatalistView : WpfCustom
    {
        
        public DatalistView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataListView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_DataListView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTree VariableTree
        {
            get
            {
                if ((this.mVariableTree == null))
                {
                    this.mVariableTree = new VariableTree(this);
                }
                return this.mVariableTree;
            }
        }
        
        public SearchTextbox2 SearchTextbox
        {
            get
            {
                if ((this.mSearchTextbox == null))
                {
                    this.mSearchTextbox = new SearchTextbox2(this);
                }
                return this.mSearchTextbox;
            }
        }
        
        public WpfButton RemoveUnused
        {
            get
            {
                if ((this.mRemoveUnused == null))
                {
                    this.mRemoveUnused = new WpfButton(this);
                    #region Search Criteria
                    this.mRemoveUnused.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_AddRemovebtn_AutoID";
                    this.mRemoveUnused.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRemoveUnused;
            }
        }
        
        public WpfButton Sort
        {
            get
            {
                if ((this.mSort == null))
                {
                    this.mSort = new WpfButton(this);
                    #region Search Criteria
                    this.mSort.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Sortbtn_AutoID";
                    this.mSort.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSort;
            }
        }
        #endregion
        
        #region Fields
        private VariableTree mVariableTree;
        
        private SearchTextbox2 mSearchTextbox;
        
        private WpfButton mRemoveUnused;
        
        private WpfButton mSort;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTree : WpfTree
    {
        
        public VariableTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "UI_VariableTreeView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTreeItem VariableTreeItem
        {
            get
            {
                if ((this.mVariableTreeItem == null))
                {
                    this.mVariableTreeItem = new VariableTreeItem(this);
                }
                return this.mVariableTreeItem;
            }
        }
        
        public RecordsetTreeItem RecordsetTreeItem
        {
            get
            {
                if ((this.mRecordsetTreeItem == null))
                {
                    this.mRecordsetTreeItem = new RecordsetTreeItem(this);
                }
                return this.mRecordsetTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private VariableTreeItem mVariableTreeItem;
        
        private RecordsetTreeItem mRecordsetTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTreeItem : WpfTreeItem
    {
        
        public VariableTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Variable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem1 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem1(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem2 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem2(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem3 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem3(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem4 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem4(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem5 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem5(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem1 mTreeItem1;
        
        private TreeItem2 mTreeItem2;
        
        private TreeItem3 mTreeItem3;
        
        private TreeItem4 mTreeItem4;
        
        private TreeItem5 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem1 : WpfTreeItem
    {
        
        public TreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane1 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane1(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane1 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane1 : WpfPane
    {
        
        public ScrollViewerPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox : WpfEdit
    {
        
        public NameTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public DeleteButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new DeleteButton(this);
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private DeleteButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteButton : WpfButton
    {
        
        public DeleteButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteVar";
                    this.mImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem2 : WpfTreeItem
    {
        
        public TreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane2 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane2(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane2 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane2 : WpfPane
    {
        
        public ScrollViewerPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox1 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox1(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox1 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox1 : WpfEdit
    {
        
        public NameTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem3 : WpfTreeItem
    {
        
        public TreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane3 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane3(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane3 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane3 : WpfPane
    {
        
        public ScrollViewerPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox2 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox2(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox2 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox2 : WpfEdit
    {
        
        public NameTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem4 : WpfTreeItem
    {
        
        public TreeItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane4 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane4(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane4 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane4 : WpfPane
    {
        
        public ScrollViewerPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox3 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox3(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox3 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox3 : WpfEdit
    {
        
        public NameTextbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem5 : WpfTreeItem
    {
        
        public TreeItem5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane5 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane5(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane5 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane5 : WpfPane
    {
        
        public ScrollViewerPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox4 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox4(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox4 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox4 : WpfEdit
    {
        
        public NameTextbox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetTreeItem : WpfTreeItem
    {
        
        public RecordsetTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Recordset";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem11 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem11(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem21 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem21(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem31 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem31(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem41 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem41(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem51 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem51(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem11 mTreeItem1;
        
        private TreeItem21 mTreeItem2;
        
        private TreeItem31 mTreeItem3;
        
        private TreeItem41 mTreeItem4;
        
        private TreeItem51 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem11 : WpfTreeItem
    {
        
        public TreeItem11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane6 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane6(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field1 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field1(this);
                }
                return this.mField1;
            }
        }
        
        public Field2 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field2(this);
                }
                return this.mField2;
            }
        }
        
        public Field3 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field3(this);
                }
                return this.mField3;
            }
        }
        
        public Field4 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field4(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane6 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field1 mField1;
        
        private Field2 mField2;
        
        private Field3 mField3;
        
        private Field4 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane6 : WpfPane
    {
        
        public ScrollViewerPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox5 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox5(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox5 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox5 : WpfEdit
    {
        
        public NameTextbox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field1 : WpfTreeItem
    {
        
        public Field1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane7 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane7(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane7 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane7 : WpfPane
    {
        
        public ScrollViewerPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox6 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox6(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox6 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox6 : WpfEdit
    {
        
        public NameTextbox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field2 : WpfTreeItem
    {
        
        public Field2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane8 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane8(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane8 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane8 : WpfPane
    {
        
        public ScrollViewerPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox7 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox7(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox7 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox7 : WpfEdit
    {
        
        public NameTextbox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field3 : WpfTreeItem
    {
        
        public Field3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane9 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane9(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane9 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane9 : WpfPane
    {
        
        public ScrollViewerPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox8 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox8(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox8 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox8 : WpfEdit
    {
        
        public NameTextbox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field4 : WpfTreeItem
    {
        
        public Field4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane10 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane10(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane10 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane10 : WpfPane
    {
        
        public ScrollViewerPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox9 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox9(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox9 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox9 : WpfEdit
    {
        
        public NameTextbox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem21 : WpfTreeItem
    {
        
        public TreeItem21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane11 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane11(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field11 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field11(this);
                }
                return this.mField1;
            }
        }
        
        public Field21 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field21(this);
                }
                return this.mField2;
            }
        }
        
        public Field31 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field31(this);
                }
                return this.mField3;
            }
        }
        
        public Field41 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field41(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane11 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field11 mField1;
        
        private Field21 mField2;
        
        private Field31 mField3;
        
        private Field41 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane11 : WpfPane
    {
        
        public ScrollViewerPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox10 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox10(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox10 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox10 : WpfEdit
    {
        
        public NameTextbox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field11 : WpfTreeItem
    {
        
        public Field11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane12 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane12(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane12 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane12 : WpfPane
    {
        
        public ScrollViewerPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox11 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox11(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox11 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox11 : WpfEdit
    {
        
        public NameTextbox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field21 : WpfTreeItem
    {
        
        public Field21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane13 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane13(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane13 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane13 : WpfPane
    {
        
        public ScrollViewerPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox12 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox12(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox12 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox12 : WpfEdit
    {
        
        public NameTextbox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field31 : WpfTreeItem
    {
        
        public Field31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane14 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane14(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane14 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane14 : WpfPane
    {
        
        public ScrollViewerPane14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox13 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox13(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox13 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox13 : WpfEdit
    {
        
        public NameTextbox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field41 : WpfTreeItem
    {
        
        public Field41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane15 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane15(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane15 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane15 : WpfPane
    {
        
        public ScrollViewerPane15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox14 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox14(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox14 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox14 : WpfEdit
    {
        
        public NameTextbox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem31 : WpfTreeItem
    {
        
        public TreeItem31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane16 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane16(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane16 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane16 : WpfPane
    {
        
        public ScrollViewerPane16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox15 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox15(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox15 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox15 : WpfEdit
    {
        
        public NameTextbox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field : WpfTreeItem
    {
        
        public Field(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane17 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane17(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane17 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane17 : WpfPane
    {
        
        public ScrollViewerPane17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox16 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox16(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox16 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox16 : WpfEdit
    {
        
        public NameTextbox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem41 : WpfTreeItem
    {
        
        public TreeItem41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane18 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane18(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field5 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field5(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane18 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field5 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane18 : WpfPane
    {
        
        public ScrollViewerPane18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox17 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox17(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox17 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox17 : WpfEdit
    {
        
        public NameTextbox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field5 : WpfTreeItem
    {
        
        public Field5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane19 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane19(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane19 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane19 : WpfPane
    {
        
        public ScrollViewerPane19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox18 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox18(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox18 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox18 : WpfEdit
    {
        
        public NameTextbox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem51 : WpfTreeItem
    {
        
        public TreeItem51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane20 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane20(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field6 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field6(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane20 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field6 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane20 : WpfPane
    {
        
        public ScrollViewerPane20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox19 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox19(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox19 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox19 : WpfEdit
    {
        
        public NameTextbox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field6 : WpfTreeItem
    {
        
        public Field6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane21 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane21(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane21 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane21 : WpfPane
    {
        
        public ScrollViewerPane21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox20 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox20(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox20 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox20 : WpfEdit
    {
        
        public NameTextbox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextbox2 : WpfEdit
    {
        
        public SearchTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfImage ClearSearchDisabled
        {
            get
            {
                if ((this.mClearSearchDisabled == null))
                {
                    this.mClearSearchDisabled = new WpfImage(this);
                    #region Search Criteria
                    this.mClearSearchDisabled.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ClearSearchDisabled";
                    this.mClearSearchDisabled.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchDisabled;
            }
        }
        
        public WpfButton ClearSearchButton
        {
            get
            {
                if ((this.mClearSearchButton == null))
                {
                    this.mClearSearchButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearSearchButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearSearchButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mFilterText;
        
        private WpfImage mClearSearchDisabled;
        
        private WpfButton mClearSearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutput : WpfCustom
    {
        
        public DebugOutput(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DebugOutputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DebugOutput";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DebugOutputUnpinBtn
        {
            get
            {
                if ((this.mDebugOutputUnpinBtn == null))
                {
                    this.mDebugOutputUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mDebugOutputUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mDebugOutputUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDebugOutputUnpinBtn;
            }
        }
        
        public WpfEdit SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mSearchTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton SettingsButton
        {
            get
            {
                if ((this.mSettingsButton == null))
                {
                    this.mSettingsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSettingsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputOptionsButton_AutoID";
                    this.mSettingsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSettingsButton;
            }
        }
        
        public WpfButton ExpandCollapseButton
        {
            get
            {
                if ((this.mExpandCollapseButton == null))
                {
                    this.mExpandCollapseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpandCollapseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputExpandAllMode_AutoID";
                    this.mExpandCollapseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandCollapseButton;
            }
        }
        
        public DebugOutputTree DebugOutputTree
        {
            get
            {
                if ((this.mDebugOutputTree == null))
                {
                    this.mDebugOutputTree = new DebugOutputTree(this);
                }
                return this.mDebugOutputTree;
            }
        }
        
        public StatusBar StatusBar
        {
            get
            {
                if ((this.mStatusBar == null))
                {
                    this.mStatusBar = new StatusBar(this);
                }
                return this.mStatusBar;
            }
        }
        
        public CommentTreeItem CommentTreeItem
        {
            get
            {
                if ((this.mCommentTreeItem == null))
                {
                    this.mCommentTreeItem = new CommentTreeItem(this);
                }
                return this.mCommentTreeItem;
            }
        }
        
        public WpfButton CreateTestFromDebugButton
        {
            get
            {
                if ((this.mCreateTestFromDebugButton == null))
                {
                    this.mCreateTestFromDebugButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCreateTestFromDebugButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputAddNewTestMode_AutoID";
                    this.mCreateTestFromDebugButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateTestFromDebugButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDebugOutputUnpinBtn;
        
        private WpfEdit mSearchTextBox;
        
        private WpfButton mSettingsButton;
        
        private WpfButton mExpandCollapseButton;
        
        private DebugOutputTree mDebugOutputTree;
        
        private StatusBar mStatusBar;
        
        private CommentTreeItem mCommentTreeItem;
        
        private WpfButton mCreateTestFromDebugButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutputTree : WpfTree
    {
        
        public DebugOutputTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "DebugOutputTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Step1 Step1
        {
            get
            {
                if ((this.mStep1 == null))
                {
                    this.mStep1 = new Step1(this);
                }
                return this.mStep1;
            }
        }
        
        public SubWorkflow SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new SubWorkflow(this);
                }
                return this.mSubWorkflow;
            }
        }
        
        public ServiceTreeItem ServiceTreeItem
        {
            get
            {
                if ((this.mServiceTreeItem == null))
                {
                    this.mServiceTreeItem = new ServiceTreeItem(this);
                }
                return this.mServiceTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private Step1 mStep1;
        
        private SubWorkflow mSubWorkflow;
        
        private ServiceTreeItem mServiceTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Step1 : WpfTreeItem
    {
        
        public Step1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText VariableTextbox1
        {
            get
            {
                if ((this.mVariableTextbox1 == null))
                {
                    this.mVariableTextbox1 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox1.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox1.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mVariableTextbox1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox1;
            }
        }
        
        public WpfText VariableTextbox2
        {
            get
            {
                if ((this.mVariableTextbox2 == null))
                {
                    this.mVariableTextbox2 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mVariableTextbox2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox2;
            }
        }
        
        public WpfButton Assign1Button
        {
            get
            {
                if ((this.mAssign1Button == null))
                {
                    this.mAssign1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mAssign1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Assign (1)";
                    this.mAssign1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssign1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssign1Button;
            }
        }
        
        public WpfButton BaseConversion1Button
        {
            get
            {
                if ((this.mBaseConversion1Button == null))
                {
                    this.mBaseConversion1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mBaseConversion1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Base Conversion (1)";
                    this.mBaseConversion1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBaseConversion1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBaseConversion1Button;
            }
        }
        
        public WpfButton CalculateButton
        {
            get
            {
                if ((this.mCalculateButton == null))
                {
                    this.mCalculateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCalculateButton.SearchProperties[WpfButton.PropertyNames.Name] = "Calculate";
                    this.mCalculateButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCalculateButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCalculateButton;
            }
        }
        
        public RecordsetGroup RecordsetGroup
        {
            get
            {
                if ((this.mRecordsetGroup == null))
                {
                    this.mRecordsetGroup = new RecordsetGroup(this);
                }
                return this.mRecordsetGroup;
            }
        }
        
        public WpfText ValueTextbox1
        {
            get
            {
                if ((this.mValueTextbox1 == null))
                {
                    this.mValueTextbox1 = new WpfText(this);
                    #region Search Criteria
                    this.mValueTextbox1.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mValueTextbox1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValueTextbox1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mVariableTextbox1;
        
        private WpfText mVariableTextbox2;
        
        private WpfButton mAssign1Button;
        
        private WpfButton mBaseConversion1Button;
        
        private WpfButton mCalculateButton;
        
        private RecordsetGroup mRecordsetGroup;
        
        private WpfText mValueTextbox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetGroup : WpfExpander
    {
        
        public RecordsetGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_DefaultRecordSetIOTemplate_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText RecordsetName
        {
            get
            {
                if ((this.mRecordsetName == null))
                {
                    this.mRecordsetName = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetName.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mRecordsetName.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetName.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetName;
            }
        }
        
        public WpfText RecordsetValue
        {
            get
            {
                if ((this.mRecordsetValue == null))
                {
                    this.mRecordsetValue = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetValue.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mRecordsetValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mRecordsetName;
        
        private WpfText mRecordsetValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubWorkflow : WpfTreeItem
    {
        
        public SubWorkflow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIHelloWorldTreeItem1 UIHelloWorldTreeItem1
        {
            get
            {
                if ((this.mUIHelloWorldTreeItem1 == null))
                {
                    this.mUIHelloWorldTreeItem1 = new UIHelloWorldTreeItem1(this);
                }
                return this.mUIHelloWorldTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIHelloWorldTreeItem1 mUIHelloWorldTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHelloWorldTreeItem1 : WpfTreeItem
    {
        
        public UIHelloWorldTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Start";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton UIHelloWorldButton
        {
            get
            {
                if ((this.mUIHelloWorldButton == null))
                {
                    this.mUIHelloWorldButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHelloWorldButton.SearchProperties[WpfButton.PropertyNames.Name] = "Hello World";
                    this.mUIHelloWorldButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIHelloWorldButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIHelloWorldButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIHelloWorldButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceTreeItem : WpfTreeItem
    {
        
        public ServiceTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton Workflow1Button
        {
            get
            {
                if ((this.mWorkflow1Button == null))
                {
                    this.mWorkflow1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mWorkflow1Button.SearchProperties[WpfButton.PropertyNames.Name] = "workflow1";
                    this.mWorkflow1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mWorkflow1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflow1Button;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mWorkflow1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusBar : WpfEdit
    {
        
        public StatusBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Dev2StatusBarAutomationID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentTreeItem : WpfTreeItem
    {
        
        public CommentTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CommentButton
        {
            get
            {
                if ((this.mCommentButton == null))
                {
                    this.mCommentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCommentButton.SearchProperties[WpfButton.PropertyNames.Name] = "Comment";
                    this.mCommentButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCommentButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCommentButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCommentButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DBSourceWizardTab : WpfTabPage
    {
        
        public DBSourceWizardTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.ServerProxyLayer.IDbSour" +
                "ce]";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext2 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext2(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfScrollBar VerticalScrollBar
        {
            get
            {
                if ((this.mVerticalScrollBar == null))
                {
                    this.mVerticalScrollBar = new WpfScrollBar(this);
                    #region Search Criteria
                    this.mVerticalScrollBar.SearchProperties[WpfScrollBar.PropertyNames.AutomationId] = "VerticalScrollBar";
                    this.mVerticalScrollBar.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVerticalScrollBar;
            }
        }
        
        public WpfScrollBar HorizontalScrollBar
        {
            get
            {
                if ((this.mHorizontalScrollBar == null))
                {
                    this.mHorizontalScrollBar = new WpfScrollBar(this);
                    #region Search Criteria
                    this.mHorizontalScrollBar.SearchProperties[WpfScrollBar.PropertyNames.AutomationId] = "HorizontalScrollBar";
                    this.mHorizontalScrollBar.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHorizontalScrollBar;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext2 mWorkSurfaceContext;
        
        private WpfScrollBar mVerticalScrollBar;
        
        private WpfScrollBar mHorizontalScrollBar;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext2 : WpfCustom
    {
        
        public WorkSurfaceContext2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ManageDatabaseSourceControl ManageDatabaseSourceControl
        {
            get
            {
                if ((this.mManageDatabaseSourceControl == null))
                {
                    this.mManageDatabaseSourceControl = new ManageDatabaseSourceControl(this);
                }
                return this.mManageDatabaseSourceControl;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestConnectionButton";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public ErrorText ErrorText
        {
            get
            {
                if ((this.mErrorText == null))
                {
                    this.mErrorText = new ErrorText(this);
                }
                return this.mErrorText;
            }
        }
        
        public WpfEdit PasswordTextBox
        {
            get
            {
                if ((this.mPasswordTextBox == null))
                {
                    this.mPasswordTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextBox;
            }
        }
        
        public WpfEdit UserNameTextBox
        {
            get
            {
                if ((this.mUserNameTextBox == null))
                {
                    this.mUserNameTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mUserNameTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UserNameTextBox";
                    this.mUserNameTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserNameTextBox;
            }
        }
        
        public WpfRadioButton UserRadioButton
        {
            get
            {
                if ((this.mUserRadioButton == null))
                {
                    this.mUserRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUserRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UserRadioButton";
                    this.mUserRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserRadioButton;
            }
        }
        
        public WpfRadioButton WindowsRadioButton
        {
            get
            {
                if ((this.mWindowsRadioButton == null))
                {
                    this.mWindowsRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mWindowsRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "WindowsRadioButton";
                    this.mWindowsRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWindowsRadioButton;
            }
        }
        
        public WpfButton CancelTestButton
        {
            get
            {
                if ((this.mCancelTestButton == null))
                {
                    this.mCancelTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CancelTestButton";
                    this.mCancelTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelTestButton;
            }
        }
        
        public WpfImage ConnectionPassedImage
        {
            get
            {
                if ((this.mConnectionPassedImage == null))
                {
                    this.mConnectionPassedImage = new WpfImage(this);
                    #region Search Criteria
                    this.mConnectionPassedImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mConnectionPassedImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectionPassedImage;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private ManageDatabaseSourceControl mManageDatabaseSourceControl;
        
        private WpfButton mTestConnectionButton;
        
        private ErrorText mErrorText;
        
        private WpfEdit mPasswordTextBox;
        
        private WpfEdit mUserNameTextBox;
        
        private WpfRadioButton mUserRadioButton;
        
        private WpfRadioButton mWindowsRadioButton;
        
        private WpfButton mCancelTestButton;
        
        private WpfImage mConnectionPassedImage;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ManageDatabaseSourceControl : WpfCustom
    {
        
        public ManageDatabaseSourceControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ManageDatabaseSourceControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerTypeComboBox ServerTypeComboBox
        {
            get
            {
                if ((this.mServerTypeComboBox == null))
                {
                    this.mServerTypeComboBox = new ServerTypeComboBox(this);
                }
                return this.mServerTypeComboBox;
            }
        }
        
        public ServerComboBox1 ServerComboBox
        {
            get
            {
                if ((this.mServerComboBox == null))
                {
                    this.mServerComboBox = new ServerComboBox1(this);
                }
                return this.mServerComboBox;
            }
        }
        
        public UIDatabaseComboxBoxCustom UIDatabaseComboxBoxCustom
        {
            get
            {
                if ((this.mUIDatabaseComboxBoxCustom == null))
                {
                    this.mUIDatabaseComboxBoxCustom = new UIDatabaseComboxBoxCustom(this);
                }
                return this.mUIDatabaseComboxBoxCustom;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestConnectionButton";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public DatabaseCombobox2 DatabaseCombobox
        {
            get
            {
                if ((this.mDatabaseCombobox == null))
                {
                    this.mDatabaseCombobox = new DatabaseCombobox2(this);
                }
                return this.mDatabaseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ServerTypeComboBox mServerTypeComboBox;
        
        private ServerComboBox1 mServerComboBox;
        
        private UIDatabaseComboxBoxCustom mUIDatabaseComboxBoxCustom;
        
        private WpfButton mTestConnectionButton;
        
        private DatabaseCombobox2 mDatabaseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerTypeComboBox : WpfCustom
    {
        
        public ServerTypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ServerTypeComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToggleButton
        {
            get
            {
                if ((this.mToggleButton == null))
                {
                    this.mToggleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mToggleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToggleButton;
            }
        }
        
        public WpfText MicrosoftSQLServer
        {
            get
            {
                if ((this.mMicrosoftSQLServer == null))
                {
                    this.mMicrosoftSQLServer = new WpfText(this);
                    #region Search Criteria
                    this.mMicrosoftSQLServer.SearchProperties[WpfText.PropertyNames.Name] = "Microsoft SQL Server";
                    this.mMicrosoftSQLServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMicrosoftSQLServer;
            }
        }
        
        public WpfText OracleDatabase
        {
            get
            {
                if ((this.mOracleDatabase == null))
                {
                    this.mOracleDatabase = new WpfText(this);
                    #region Search Criteria
                    this.mOracleDatabase.SearchProperties[WpfText.PropertyNames.Name] = "Oracle Database";
                    this.mOracleDatabase.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOracleDatabase;
            }
        }
        
        public WpfText ODBCDatabase
        {
            get
            {
                if ((this.mODBCDatabase == null))
                {
                    this.mODBCDatabase = new WpfText(this);
                    #region Search Criteria
                    this.mODBCDatabase.SearchProperties[WpfText.PropertyNames.Name] = "ODBC Database";
                    this.mODBCDatabase.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mODBCDatabase;
            }
        }
        
        public WpfText MySqlDatabase
        {
            get
            {
                if ((this.mMySqlDatabase == null))
                {
                    this.mMySqlDatabase = new WpfText(this);
                    #region Search Criteria
                    this.mMySqlDatabase.SearchProperties[WpfText.PropertyNames.Name] = "MySql Database";
                    this.mMySqlDatabase.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMySqlDatabase;
            }
        }
        
        public WpfText PostgreSQLDatabaseText
        {
            get
            {
                if ((this.mPostgreSQLDatabaseText == null))
                {
                    this.mPostgreSQLDatabaseText = new WpfText(this);
                    #region Search Criteria
                    this.mPostgreSQLDatabaseText.SearchProperties[WpfText.PropertyNames.Name] = "PostgreSQL Database";
                    this.mPostgreSQLDatabaseText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPostgreSQLDatabaseText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToggleButton;
        
        private WpfText mMicrosoftSQLServer;
        
        private WpfText mOracleDatabase;
        
        private WpfText mODBCDatabase;
        
        private WpfText mMySqlDatabase;
        
        private WpfText mPostgreSQLDatabaseText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerComboBox1 : WpfComboBox
    {
        
        public ServerComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ServerTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RSAKLFSVRGENDEV
        {
            get
            {
                if ((this.mRSAKLFSVRGENDEV == null))
                {
                    this.mRSAKLFSVRGENDEV = new WpfListItem(this);
                    #region Search Criteria
                    this.mRSAKLFSVRGENDEV.SearchProperties[WpfListItem.PropertyNames.Name] = "RSAKLFSVRGENDEV";
                    this.mRSAKLFSVRGENDEV.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRSAKLFSVRGENDEV;
            }
        }
        
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRSAKLFSVRGENDEV;
        
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDatabaseComboxBoxCustom : WpfCustom
    {
        
        public UIDatabaseComboxBoxCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DatabaseComboxBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText UIDev2TestingDBText
        {
            get
            {
                if ((this.mUIDev2TestingDBText == null))
                {
                    this.mUIDev2TestingDBText = new WpfText(this);
                    #region Search Criteria
                    this.mUIDev2TestingDBText.SearchProperties[WpfText.PropertyNames.Name] = "Dev2TestingDB";
                    this.mUIDev2TestingDBText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIDev2TestingDBText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIDev2TestingDBText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseCombobox2 : WpfCustom
    {
        
        public DatabaseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DatabaseComboxBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom DatabaseComboxBoxMsAccess
        {
            get
            {
                if ((this.mDatabaseComboxBoxMsAccess == null))
                {
                    this.mDatabaseComboxBoxMsAccess = new WpfCustom(this);
                    #region Search Criteria
                    this.mDatabaseComboxBoxMsAccess.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
                    this.mDatabaseComboxBoxMsAccess.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DatabaseComboxBox";
                    this.mDatabaseComboxBoxMsAccess.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDatabaseComboxBoxMsAccess;
            }
        }
        
        public WpfText MSAccessDatabaseText
        {
            get
            {
                if ((this.mMSAccessDatabaseText == null))
                {
                    this.mMSAccessDatabaseText = new WpfText(this);
                    #region Search Criteria
                    this.mMSAccessDatabaseText.SearchProperties[WpfText.PropertyNames.Name] = "MS Access Database";
                    this.mMSAccessDatabaseText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMSAccessDatabaseText;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mDatabaseComboxBoxMsAccess;
        
        private WpfText mMSAccessDatabaseText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorText : WpfText
    {
        
        public ErrorText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ErrorTextBlock";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FilesMenu : WpfMenu
    {
        
        public FilesMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.AutomationId] = "filesMenu";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem PositionButton
        {
            get
            {
                if ((this.mPositionButton == null))
                {
                    this.mPositionButton = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mPositionButton.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "PART_FilesMenuItem";
                    this.mPositionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPositionButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mPositionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DependencyGraphTab : WpfTabPage
    {
        
        public DependencyGraphTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.DependencyVisualization.DependencyVisualiserViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorksurfaceContext3 WorksurfaceContext
        {
            get
            {
                if ((this.mWorksurfaceContext == null))
                {
                    this.mWorksurfaceContext = new WorksurfaceContext3(this);
                }
                return this.mWorksurfaceContext;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorksurfaceContext3 mWorksurfaceContext;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorksurfaceContext3 : WpfCustom
    {
        
        public WorksurfaceContext3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DependencyView DependencyView
        {
            get
            {
                if ((this.mDependencyView == null))
                {
                    this.mDependencyView = new DependencyView(this);
                }
                return this.mDependencyView;
            }
        }
        #endregion
        
        #region Fields
        private DependencyView mDependencyView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DependencyView : WpfCustom
    {
        
        public DependencyView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DependencyVisualiserView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_DependencyView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewer ScrollViewer
        {
            get
            {
                if ((this.mScrollViewer == null))
                {
                    this.mScrollViewer = new ScrollViewer(this);
                }
                return this.mScrollViewer;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewer mScrollViewer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewer : WpfPane
    {
        
        public ScrollViewer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "UI_TopScrollView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.Name] = "Refresh";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfRadioButton ShowwhatdependsonthisRadioButton
        {
            get
            {
                if ((this.mShowwhatdependsonthisRadioButton == null))
                {
                    this.mShowwhatdependsonthisRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mShowwhatdependsonthisRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "WfDependsOn";
                    this.mShowwhatdependsonthisRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowwhatdependsonthisRadioButton;
            }
        }
        
        public WpfRadioButton ShowwhatthisdependsonRadioButton
        {
            get
            {
                if ((this.mShowwhatthisdependsonRadioButton == null))
                {
                    this.mShowwhatthisdependsonRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mShowwhatthisdependsonRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "DependsOnWf";
                    this.mShowwhatthisdependsonRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowwhatthisdependsonRadioButton;
            }
        }
        
        public NestingLevelsText NestingLevelsText
        {
            get
            {
                if ((this.mNestingLevelsText == null))
                {
                    this.mNestingLevelsText = new NestingLevelsText(this);
                }
                return this.mNestingLevelsText;
            }
        }
        
        public Node1 Node1
        {
            get
            {
                if ((this.mNode1 == null))
                {
                    this.mNode1 = new Node1(this);
                }
                return this.mNode1;
            }
        }
        
        public Node2 Node2
        {
            get
            {
                if ((this.mNode2 == null))
                {
                    this.mNode2 = new Node2(this);
                }
                return this.mNode2;
            }
        }
        
        public Node3 Node3
        {
            get
            {
                if ((this.mNode3 == null))
                {
                    this.mNode3 = new Node3(this);
                }
                return this.mNode3;
            }
        }
        
        public Node4 Node4
        {
            get
            {
                if ((this.mNode4 == null))
                {
                    this.mNode4 = new Node4(this);
                }
                return this.mNode4;
            }
        }
        
        public Node5 Node5
        {
            get
            {
                if ((this.mNode5 == null))
                {
                    this.mNode5 = new Node5(this);
                }
                return this.mNode5;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mRefreshButton;
        
        private WpfRadioButton mShowwhatdependsonthisRadioButton;
        
        private WpfRadioButton mShowwhatthisdependsonRadioButton;
        
        private NestingLevelsText mNestingLevelsText;
        
        private Node1 mNode1;
        
        private Node2 mNode2;
        
        private Node3 mNode3;
        
        private Node4 mNode4;
        
        private Node5 mNode5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NestingLevelsText : WpfText
    {
        
        public NestingLevelsText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Nesting Levels";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node1 : WpfCustom
    {
        
        public Node1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node2 : WpfCustom
    {
        
        public Node2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node3 : WpfCustom
    {
        
        public Node3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node4 : WpfCustom
    {
        
        public Node4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Node5 : WpfCustom
    {
        
        public Node5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamNetworkNode";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Nodes";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DotNetPluginSourceWizardTab : WpfTabPage
    {
        
        public DotNetPluginSourceWizardTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.IPluginSource]";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext4 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext4(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext4 mWorkSurfaceContext;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext4 : WpfCustom
    {
        
        public WorkSurfaceContext4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssemblyNameTextbox
        {
            get
            {
                if ((this.mAssemblyNameTextbox == null))
                {
                    this.mAssemblyNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssemblyNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "AssemblyNameTextBox";
                    this.mAssemblyNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssemblyNameTextbox;
            }
        }
        
        public ContentDockManager1 ContentDockManager
        {
            get
            {
                if ((this.mContentDockManager == null))
                {
                    this.mContentDockManager = new ContentDockManager1(this);
                }
                return this.mContentDockManager;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssemblyNameTextbox;
        
        private ContentDockManager1 mContentDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentDockManager1 : WpfCustom
    {
        
        public ContentDockManager1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ContentDockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FilterTextbox FilterTextbox
        {
            get
            {
                if ((this.mFilterTextbox == null))
                {
                    this.mFilterTextbox = new FilterTextbox(this);
                }
                return this.mFilterTextbox;
            }
        }
        
        public RefreshButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new RefreshButton(this);
                }
                return this.mRefreshButton;
            }
        }
        
        public ExplorerTree1 ExplorerTree
        {
            get
            {
                if ((this.mExplorerTree == null))
                {
                    this.mExplorerTree = new ExplorerTree1(this);
                }
                return this.mExplorerTree;
            }
        }
        #endregion
        
        #region Fields
        private FilterTextbox mFilterTextbox;
        
        private RefreshButton mRefreshButton;
        
        private ExplorerTree1 mExplorerTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FilterTextbox : WpfEdit
    {
        
        public FilterTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText WatermarkText
        {
            get
            {
                if ((this.mWatermarkText == null))
                {
                    this.mWatermarkText = new WpfText(this);
                    #region Search Criteria
                    this.mWatermarkText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mWatermarkText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWatermarkText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mWatermarkText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RefreshButton : WpfButton
    {
        
        public RefreshButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "RefreshButton";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerTree1 : WpfTree
    {
        
        public ExplorerTree1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public GACTreeItem GACTreeItem
        {
            get
            {
                if ((this.mGACTreeItem == null))
                {
                    this.mGACTreeItem = new GACTreeItem(this);
                }
                return this.mGACTreeItem;
            }
        }
        
        public WpfTreeItem FileSystemTreeItem
        {
            get
            {
                if ((this.mFileSystemTreeItem == null))
                {
                    this.mFileSystemTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mFileSystemTreeItem.SearchProperties[WpfTreeItem.PropertyNames.Name] = "File System";
                    this.mFileSystemTreeItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFileSystemTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private GACTreeItem mGACTreeItem;
        
        private WpfTreeItem mFileSystemTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GACTreeItem : WpfTreeItem
    {
        
        public GACTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "GAC";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ExpansionIndicatorCheckbox
        {
            get
            {
                if ((this.mExpansionIndicatorCheckbox == null))
                {
                    this.mExpansionIndicatorCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExpansionIndicatorCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ExpansionIndicator";
                    this.mExpansionIndicatorCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpansionIndicatorCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpansionIndicatorCheckbox;
            }
        }
        
        public WpfTreeItem FirstTreeItem
        {
            get
            {
                if ((this.mFirstTreeItem == null))
                {
                    this.mFirstTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mFirstTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFirstTreeItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFirstTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mExpansionIndicatorCheckbox;
        
        private WpfTreeItem mFirstTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebSourceWizardTab : WpfTabPage
    {
        
        public WebSourceWizardTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.ServerProxyLayer.IWebSer" +
                "viceSource]";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext5 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext5(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext5 mWorkSurfaceContext;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext5 : WpfCustom
    {
        
        public WorkSurfaceContext5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AddressTextbox
        {
            get
            {
                if ((this.mAddressTextbox == null))
                {
                    this.mAddressTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mAddressTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ServerTextBox";
                    this.mAddressTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddressTextbox;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestConnectionButton";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAddressTextbox;
        
        private WpfButton mTestConnectionButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestsTabPage : WpfTabPage
    {
        
        public TestsTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.StudioTestViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TabDescription
        {
            get
            {
                if ((this.mTabDescription == null))
                {
                    this.mTabDescription = new WpfText(this);
                    #region Search Criteria
                    this.mTabDescription.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabDescription;
            }
        }
        
        public WpfButton CloseTestTabButton
        {
            get
            {
                if ((this.mCloseTestTabButton == null))
                {
                    this.mCloseTestTabButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseTestTabButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseTestTabButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseTestTabButton;
            }
        }
        
        public WorkSurfaceContext6 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext6(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTabDescription;
        
        private WpfButton mCloseTestTabButton;
        
        private WorkSurfaceContext6 mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext6 : WpfCustom
    {
        
        public WorkSurfaceContext6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServiceTestView ServiceTestView
        {
            get
            {
                if ((this.mServiceTestView == null))
                {
                    this.mServiceTestView = new ServiceTestView(this);
                }
                return this.mServiceTestView;
            }
        }
        #endregion
        
        #region Fields
        private ServiceTestView mServiceTestView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceTestView : WpfCustom
    {
        
        public ServiceTestView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceTestView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_ServiceTestView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UrlText UrlText
        {
            get
            {
                if ((this.mUrlText == null))
                {
                    this.mUrlText = new UrlText(this);
                }
                return this.mUrlText;
            }
        }
        
        public WpfButton RunAllButton
        {
            get
            {
                if ((this.mRunAllButton == null))
                {
                    this.mRunAllButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunAllButton.SearchProperties[WpfButton.PropertyNames.Name] = "Run All";
                    this.mRunAllButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunAllButton;
            }
        }
        
        public TestsListboxList TestsListboxList
        {
            get
            {
                if ((this.mTestsListboxList == null))
                {
                    this.mTestsListboxList = new TestsListboxList(this);
                }
                return this.mTestsListboxList;
            }
        }
        
        public WpfButton DuplicateButton
        {
            get
            {
                if ((this.mDuplicateButton == null))
                {
                    this.mDuplicateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDuplicateButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Duplicate this test";
                    this.mDuplicateButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDuplicateButton;
            }
        }
        
        public WpfRadioButton WindowsRadioButton
        {
            get
            {
                if ((this.mWindowsRadioButton == null))
                {
                    this.mWindowsRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mWindowsRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "WindowsRadioButton";
                    this.mWindowsRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWindowsRadioButton;
            }
        }
        
        public WpfText TestNameText
        {
            get
            {
                if ((this.mTestNameText == null))
                {
                    this.mTestNameText = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameText.SearchProperties[WpfText.PropertyNames.Name] = "Test Name";
                    this.mTestNameText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameText;
            }
        }
        
        public TestInputsTable1 TestInputsTable
        {
            get
            {
                if ((this.mTestInputsTable == null))
                {
                    this.mTestInputsTable = new TestInputsTable1(this);
                }
                return this.mTestInputsTable;
            }
        }
        
        public TestOutputsTable TestOutputsTable
        {
            get
            {
                if ((this.mTestOutputsTable == null))
                {
                    this.mTestOutputsTable = new TestOutputsTable(this);
                }
                return this.mTestOutputsTable;
            }
        }
        
        public WpfRadioButton ErrorRadioButton
        {
            get
            {
                if ((this.mErrorRadioButton == null))
                {
                    this.mErrorRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mErrorRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ErrorRadioButton";
                    this.mErrorRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorRadioButton;
            }
        }
        
        public WpfRadioButton NoErrorRadioButton
        {
            get
            {
                if ((this.mNoErrorRadioButton == null))
                {
                    this.mNoErrorRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mNoErrorRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "NoErrorRadioButton";
                    this.mNoErrorRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNoErrorRadioButton;
            }
        }
        
        public WpfRadioButton UserRadioButton
        {
            get
            {
                if ((this.mUserRadioButton == null))
                {
                    this.mUserRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUserRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UserRadioButton";
                    this.mUserRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserRadioButton;
            }
        }
        
        public WpfEdit PasswordTextBoxEdit
        {
            get
            {
                if ((this.mPasswordTextBoxEdit == null))
                {
                    this.mPasswordTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextBoxEdit;
            }
        }
        
        public WpfEdit UsernameTextBoxEdit
        {
            get
            {
                if ((this.mUsernameTextBoxEdit == null))
                {
                    this.mUsernameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUsernameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UsernameTextBox";
                    this.mUsernameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUsernameTextBoxEdit;
            }
        }
        
        public WpfText TestUrlText
        {
            get
            {
                if ((this.mTestUrlText == null))
                {
                    this.mTestUrlText = new WpfText(this);
                    #region Search Criteria
                    this.mTestUrlText.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mTestUrlText.SearchProperties[WpfText.PropertyNames.Name] = " ";
                    this.mTestUrlText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestUrlText;
            }
        }
        
        public WpfEdit TestNameTextbox
        {
            get
            {
                if ((this.mTestNameTextbox == null))
                {
                    this.mTestNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTestNameTextbox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mTestNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameTextbox;
            }
        }
        
        public StepTestDataTreeTree StepTestDataTreeTree
        {
            get
            {
                if ((this.mStepTestDataTreeTree == null))
                {
                    this.mStepTestDataTreeTree = new StepTestDataTreeTree(this);
                }
                return this.mStepTestDataTreeTree;
            }
        }
        
        public UserControl_1Custom UserControl_1Custom
        {
            get
            {
                if ((this.mUserControl_1Custom == null))
                {
                    this.mUserControl_1Custom = new UserControl_1Custom(this);
                }
                return this.mUserControl_1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UrlText mUrlText;
        
        private WpfButton mRunAllButton;
        
        private TestsListboxList mTestsListboxList;
        
        private WpfButton mDuplicateButton;
        
        private WpfRadioButton mWindowsRadioButton;
        
        private WpfText mTestNameText;
        
        private TestInputsTable1 mTestInputsTable;
        
        private TestOutputsTable mTestOutputsTable;
        
        private WpfRadioButton mErrorRadioButton;
        
        private WpfRadioButton mNoErrorRadioButton;
        
        private WpfRadioButton mUserRadioButton;
        
        private WpfEdit mPasswordTextBoxEdit;
        
        private WpfEdit mUsernameTextBoxEdit;
        
        private WpfText mTestUrlText;
        
        private WpfEdit mTestNameTextbox;
        
        private StepTestDataTreeTree mStepTestDataTreeTree;
        
        private UserControl_1Custom mUserControl_1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UrlText : WpfText
    {
        
        public UrlText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Instance] = "1";
            this.SearchProperties[WpfText.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UrlHyperlink
        {
            get
            {
                if ((this.mUrlHyperlink == null))
                {
                    this.mUrlHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUrlHyperlink.SearchProperties[WpfHyperlink.PropertyNames.AutomationId] = "RunAllTestsUrl";
                    this.mUrlHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUrlHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUrlHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestsListboxList : WpfList
    {
        
        public TestsListboxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "TestsListbox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public CreateTest CreateTest
        {
            get
            {
                if ((this.mCreateTest == null))
                {
                    this.mCreateTest = new CreateTest(this);
                }
                return this.mCreateTest;
            }
        }
        
        public Test1 Test1
        {
            get
            {
                if ((this.mTest1 == null))
                {
                    this.mTest1 = new Test1(this);
                }
                return this.mTest1;
            }
        }
        
        public Test2 Test2
        {
            get
            {
                if ((this.mTest2 == null))
                {
                    this.mTest2 = new Test2(this);
                }
                return this.mTest2;
            }
        }
        
        public Test3 Test3
        {
            get
            {
                if ((this.mTest3 == null))
                {
                    this.mTest3 = new Test3(this);
                }
                return this.mTest3;
            }
        }
        
        public Test4 Test4
        {
            get
            {
                if ((this.mTest4 == null))
                {
                    this.mTest4 = new Test4(this);
                }
                return this.mTest4;
            }
        }
        
        public Test5 Test5
        {
            get
            {
                if ((this.mTest5 == null))
                {
                    this.mTest5 = new Test5(this);
                }
                return this.mTest5;
            }
        }
        #endregion
        
        #region Fields
        private CreateTest mCreateTest;
        
        private Test1 mTest1;
        
        private Test2 mTest2;
        
        private Test3 mTest3;
        
        private Test4 mTest4;
        
        private Test5 mTest5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateTest : WpfListItem
    {
        
        public CreateTest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.DummyServiceTest";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CreateTestButton
        {
            get
            {
                if ((this.mCreateTestButton == null))
                {
                    this.mCreateTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCreateTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Create a new test";
                    this.mCreateTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateTestButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCreateTestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test1 : WpfListItem
    {
        
        public Test1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test2 : WpfListItem
    {
        
        public Test2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test3 : WpfListItem
    {
        
        public Test3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test4 : WpfListItem
    {
        
        public Test4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test5 : WpfListItem
    {
        
        public Test5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInputsTable1 : WpfTable
    {
        
        public TestInputsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "UI_TestInputsDev2DataGrid_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row122 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row122(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row122 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row122 : WpfRow
    {
        
        public Row122(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell2 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell2(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell2 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell2 : WpfCell
    {
        
        public Cell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseComboBox14 IntellisenseComboBox
        {
            get
            {
                if ((this.mIntellisenseComboBox == null))
                {
                    this.mIntellisenseComboBox = new IntellisenseComboBox14(this);
                }
                return this.mIntellisenseComboBox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseComboBox14 mIntellisenseComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseComboBox14 : WpfComboBox
    {
        
        public IntellisenseComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TestInputsValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "1";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestOutputsTable : WpfTable
    {
        
        public TestOutputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "UI_TestOutputsDev2DataGrid_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row123 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row123(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row123 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row123 : WpfRow
    {
        
        public Row123(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell3 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell3(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell3 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell3 : WpfCell
    {
        
        public Cell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseComboBox15 IntellisenseComboBox
        {
            get
            {
                if ((this.mIntellisenseComboBox == null))
                {
                    this.mIntellisenseComboBox = new IntellisenseComboBox15(this);
                }
                return this.mIntellisenseComboBox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseComboBox15 mIntellisenseComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseComboBox15 : WpfComboBox
    {
        
        public IntellisenseComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TestOutputsValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "1";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StepTestDataTreeTree : WpfTree
    {
        
        public StepTestDataTreeTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "StepTestDataTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SetOutputTreeItem SetOutputTreeItem
        {
            get
            {
                if ((this.mSetOutputTreeItem == null))
                {
                    this.mSetOutputTreeItem = new SetOutputTreeItem(this);
                }
                return this.mSetOutputTreeItem;
            }
        }
        
        public AssignToNameTreeItem AssignToNameTreeItem
        {
            get
            {
                if ((this.mAssignToNameTreeItem == null))
                {
                    this.mAssignToNameTreeItem = new AssignToNameTreeItem(this);
                }
                return this.mAssignToNameTreeItem;
            }
        }
        
        public SequenceTreeItem SequenceTreeItem
        {
            get
            {
                if ((this.mSequenceTreeItem == null))
                {
                    this.mSequenceTreeItem = new SequenceTreeItem(this);
                }
                return this.mSequenceTreeItem;
            }
        }
        
        public ForeachTreeItem ForeachTreeItem
        {
            get
            {
                if ((this.mForeachTreeItem == null))
                {
                    this.mForeachTreeItem = new ForeachTreeItem(this);
                }
                return this.mForeachTreeItem;
            }
        }
        
        public DecisionTreeItem DecisionTreeItem
        {
            get
            {
                if ((this.mDecisionTreeItem == null))
                {
                    this.mDecisionTreeItem = new DecisionTreeItem(this);
                }
                return this.mDecisionTreeItem;
            }
        }
        
        public RandomTreeItem RandomTreeItem
        {
            get
            {
                if ((this.mRandomTreeItem == null))
                {
                    this.mRandomTreeItem = new RandomTreeItem(this);
                }
                return this.mRandomTreeItem;
            }
        }
        
        public DiceRollTreeItem DiceRollTreeItem
        {
            get
            {
                if ((this.mDiceRollTreeItem == null))
                {
                    this.mDiceRollTreeItem = new DiceRollTreeItem(this);
                }
                return this.mDiceRollTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private SetOutputTreeItem mSetOutputTreeItem;
        
        private AssignToNameTreeItem mAssignToNameTreeItem;
        
        private SequenceTreeItem mSequenceTreeItem;
        
        private ForeachTreeItem mForeachTreeItem;
        
        private DecisionTreeItem mDecisionTreeItem;
        
        private RandomTreeItem mRandomTreeItem;
        
        private DiceRollTreeItem mDiceRollTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetOutputTreeItem : WpfTreeItem
    {
        
        public SetOutputTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OutputMessageAssert OutputMessageAssert
        {
            get
            {
                if ((this.mOutputMessageAssert == null))
                {
                    this.mOutputMessageAssert = new OutputMessageAssert(this);
                }
                return this.mOutputMessageAssert;
            }
        }
        #endregion
        
        #region Fields
        private OutputMessageAssert mOutputMessageAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputMessageAssert : WpfExpander
    {
        
        public OutputMessageAssert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable7 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable7(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable7 mSmallDataGridTable;
        
        private AssertHeader mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable7 : WpfTable
    {
        
        public SmallDataGridTable7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row124 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row124(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row124 mRow1;
        
        private ColumnHeadersPrHeader mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row124 : WpfRow
    {
        
        public Row124(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell1 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell1(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public StatusViewCell StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell(this);
                }
                return this.mStatusViewCell;
            }
        }
        
        public AssertValueCell AssertValueCell
        {
            get
            {
                if ((this.mAssertValueCell == null))
                {
                    this.mAssertValueCell = new AssertValueCell(this);
                }
                return this.mAssertValueCell;
            }
        }
        
        public Cell4 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell4(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell1 mResultCell;
        
        private AssertOperatorCell mAssertOperatorCell;
        
        private StatusViewCell mStatusViewCell;
        
        private AssertValueCell mAssertValueCell;
        
        private Cell4 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell1 : WpfCell
    {
        
        public ResultCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell : WpfCell
    {
        
        public AssertOperatorCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell : WpfCell
    {
        
        public StatusViewCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertValueCell : WpfCell
    {
        
        public AssertValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell4 : WpfCustom
    {
        
        public Cell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader : WpfControl
    {
        
        public ColumnHeadersPrHeader(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert : WpfControl
    {
        
        public MockOrAssert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader : WpfButton
    {
        
        public AssertHeader(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignToNameTreeItem : WpfTreeItem
    {
        
        public AssignToNameTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignAssert AssignAssert
        {
            get
            {
                if ((this.mAssignAssert == null))
                {
                    this.mAssignAssert = new AssignAssert(this);
                }
                return this.mAssignAssert;
            }
        }
        #endregion
        
        #region Fields
        private AssignAssert mAssignAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignAssert : WpfExpander
    {
        
        public AssignAssert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable8 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable8(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader1 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader1(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable8 mSmallDataGridTable;
        
        private AssertHeader1 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable8 : WpfTable
    {
        
        public SmallDataGridTable8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row125 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row125(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader1 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader1(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row125 mRow1;
        
        private ColumnHeadersPrHeader1 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row125 : WpfRow
    {
        
        public Row125(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell2 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell2(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell1 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell1(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell1 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell1(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell2 mResultCell;
        
        private AssertOperatorCell1 mAssertOperatorCell;
        
        private OptionsForValueCell mOptionsForValueCell;
        
        private StatusViewCell1 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell2 : WpfCell
    {
        
        public ResultCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell1 : WpfCell
    {
        
        public AssertOperatorCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell : WpfCell
    {
        
        public OptionsForValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox : WpfComboBox
    {
        
        public OptionsForValueComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell1 : WpfCell
    {
        
        public StatusViewCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader1 : WpfControl
    {
        
        public ColumnHeadersPrHeader1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert1 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert1(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert1 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert1 : WpfControl
    {
        
        public MockOrAssert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "Mock this step";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "Assert this step";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader1 : WpfButton
    {
        
        public AssertHeader1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceTreeItem : WpfTreeItem
    {
        
        public SequenceTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SequenceAssert SequenceAssert
        {
            get
            {
                if ((this.mSequenceAssert == null))
                {
                    this.mSequenceAssert = new SequenceAssert(this);
                }
                return this.mSequenceAssert;
            }
        }
        #endregion
        
        #region Fields
        private SequenceAssert mSequenceAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceAssert : WpfExpander
    {
        
        public SequenceAssert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitNamesTreeItem SplitNamesTreeItem
        {
            get
            {
                if ((this.mSplitNamesTreeItem == null))
                {
                    this.mSplitNamesTreeItem = new SplitNamesTreeItem(this);
                }
                return this.mSplitNamesTreeItem;
            }
        }
        
        public AssertHeader3 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader3(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SplitNamesTreeItem mSplitNamesTreeItem;
        
        private AssertHeader3 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitNamesTreeItem : WpfTreeItem
    {
        
        public SplitNamesTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitNamesAssert SplitNamesAssert
        {
            get
            {
                if ((this.mSplitNamesAssert == null))
                {
                    this.mSplitNamesAssert = new SplitNamesAssert(this);
                }
                return this.mSplitNamesAssert;
            }
        }
        #endregion
        
        #region Fields
        private SplitNamesAssert mSplitNamesAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitNamesAssert : WpfExpander
    {
        
        public SplitNamesAssert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable9 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable9(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader2 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader2(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable9 mSmallDataGridTable;
        
        private AssertHeader2 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable9 : WpfTable
    {
        
        public SmallDataGridTable9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row126 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row126(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader2 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader2(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row126 mRow1;
        
        private ColumnHeadersPrHeader2 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row126 : WpfRow
    {
        
        public Row126(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell3 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell3(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell2 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell2(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell1 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell1(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell2 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell2(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell3 mResultCell;
        
        private AssertOperatorCell2 mAssertOperatorCell;
        
        private OptionsForValueCell1 mOptionsForValueCell;
        
        private StatusViewCell2 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell3 : WpfCell
    {
        
        public ResultCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell2 : WpfCell
    {
        
        public AssertOperatorCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell1 : WpfCell
    {
        
        public OptionsForValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox1 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox1(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox1 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox1 : WpfComboBox
    {
        
        public OptionsForValueComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell2 : WpfCell
    {
        
        public StatusViewCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader2 : WpfControl
    {
        
        public ColumnHeadersPrHeader2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert2 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert2(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert2 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert2 : WpfControl
    {
        
        public MockOrAssert2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader2 : WpfButton
    {
        
        public AssertHeader2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader3 : WpfButton
    {
        
        public AssertHeader3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForeachTreeItem : WpfTreeItem
    {
        
        public ForeachTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SequenceTreeItem1 SequenceTreeItem
        {
            get
            {
                if ((this.mSequenceTreeItem == null))
                {
                    this.mSequenceTreeItem = new SequenceTreeItem1(this);
                }
                return this.mSequenceTreeItem;
            }
        }
        
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private SequenceTreeItem1 mSequenceTreeItem;
        
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceTreeItem1 : WpfTreeItem
    {
        
        public SequenceTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ConvertCaseToTitleCase ConvertCaseToTitleCase
        {
            get
            {
                if ((this.mConvertCaseToTitleCase == null))
                {
                    this.mConvertCaseToTitleCase = new ConvertCaseToTitleCase(this);
                }
                return this.mConvertCaseToTitleCase;
            }
        }
        #endregion
        
        #region Fields
        private ConvertCaseToTitleCase mConvertCaseToTitleCase;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertCaseToTitleCase : WpfTreeItem
    {
        
        public ConvertCaseToTitleCase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ConvertCase ConvertCase
        {
            get
            {
                if ((this.mConvertCase == null))
                {
                    this.mConvertCase = new ConvertCase(this);
                }
                return this.mConvertCase;
            }
        }
        #endregion
        
        #region Fields
        private ConvertCase mConvertCase;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertCase : WpfExpander
    {
        
        public ConvertCase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable10 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable10(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader4 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader4(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable10 mSmallDataGridTable;
        
        private AssertHeader4 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable10 : WpfTable
    {
        
        public SmallDataGridTable10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row127 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row127(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader3 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader3(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row127 mRow1;
        
        private ColumnHeadersPrHeader3 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row127 : WpfRow
    {
        
        public Row127(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell4 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell4(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell3 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell3(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell2 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell2(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell3 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell3(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell4 mResultCell;
        
        private AssertOperatorCell3 mAssertOperatorCell;
        
        private OptionsForValueCell2 mOptionsForValueCell;
        
        private StatusViewCell3 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell4 : WpfCell
    {
        
        public ResultCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell3 : WpfCell
    {
        
        public AssertOperatorCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell2 : WpfCell
    {
        
        public OptionsForValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox2 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox2(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox2 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox2 : WpfComboBox
    {
        
        public OptionsForValueComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell3 : WpfCell
    {
        
        public StatusViewCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader3 : WpfControl
    {
        
        public ColumnHeadersPrHeader3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert3 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert3(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert3 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert3 : WpfControl
    {
        
        public MockOrAssert3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader4 : WpfButton
    {
        
        public AssertHeader4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecisionTreeItem : WpfTreeItem
    {
        
        public DecisionTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DecisionAssert DecisionAssert
        {
            get
            {
                if ((this.mDecisionAssert == null))
                {
                    this.mDecisionAssert = new DecisionAssert(this);
                }
                return this.mDecisionAssert;
            }
        }
        #endregion
        
        #region Fields
        private DecisionAssert mDecisionAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecisionAssert : WpfExpander
    {
        
        public DecisionAssert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchProperties[WpfExpander.PropertyNames.ClassName] = "Expander";
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestStep";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable11 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable11(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader5 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader5(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable11 mSmallDataGridTable;
        
        private AssertHeader5 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable11 : WpfTable
    {
        
        public SmallDataGridTable11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row128 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row128(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader4 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader4(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row128 mRow1;
        
        private ColumnHeadersPrHeader4 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row128 : WpfRow
    {
        
        public Row128(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell5 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell5(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell4 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell4(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell3 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell3(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell4 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell4(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell5 mResultCell;
        
        private AssertOperatorCell4 mAssertOperatorCell;
        
        private OptionsForValueCell3 mOptionsForValueCell;
        
        private StatusViewCell4 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell5 : WpfCell
    {
        
        public ResultCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell4 : WpfCell
    {
        
        public AssertOperatorCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell3 : WpfCell
    {
        
        public OptionsForValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox3 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox3(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox3 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox3 : WpfComboBox
    {
        
        public OptionsForValueComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell4 : WpfCell
    {
        
        public StatusViewCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader4 : WpfControl
    {
        
        public ColumnHeadersPrHeader4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert4 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert4(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert4 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert4 : WpfControl
    {
        
        public MockOrAssert4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader5 : WpfButton
    {
        
        public AssertHeader5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        
        public WpfButton ToolIcon
        {
            get
            {
                if ((this.mToolIcon == null))
                {
                    this.mToolIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mToolIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
                    this.mToolIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mToolIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToolIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        
        private WpfButton mToolIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RandomTreeItem : WpfTreeItem
    {
        
        public RandomTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RandomExpander RandomExpander
        {
            get
            {
                if ((this.mRandomExpander == null))
                {
                    this.mRandomExpander = new RandomExpander(this);
                }
                return this.mRandomExpander;
            }
        }
        #endregion
        
        #region Fields
        private RandomExpander mRandomExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RandomExpander : WpfExpander
    {
        
        public RandomExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton RandomExpanderHeader
        {
            get
            {
                if ((this.mRandomExpanderHeader == null))
                {
                    this.mRandomExpanderHeader = new WpfButton(this);
                    #region Search Criteria
                    this.mRandomExpanderHeader.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
                    this.mRandomExpanderHeader.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRandomExpanderHeader.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRandomExpanderHeader;
            }
        }
        
        public SmallDataGridTable12 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable12(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mRandomExpanderHeader;
        
        private SmallDataGridTable12 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable12 : WpfTable
    {
        
        public SmallDataGridTable12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row129 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row129(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row129 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row129 : WpfRow
    {
        
        public Row129(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssertValueCell1 AssertValueCell
        {
            get
            {
                if ((this.mAssertValueCell == null))
                {
                    this.mAssertValueCell = new AssertValueCell1(this);
                }
                return this.mAssertValueCell;
            }
        }
        #endregion
        
        #region Fields
        private AssertValueCell1 mAssertValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertValueCell1 : WpfCell
    {
        
        public AssertValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValueEdit
        {
            get
            {
                if ((this.mAssertValueEdit == null))
                {
                    this.mAssertValueEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValueEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValueEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValueEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValueEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValueEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DiceRollTreeItem : WpfTreeItem
    {
        
        public DiceRollTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DiceRollExpander DiceRollExpander
        {
            get
            {
                if ((this.mDiceRollExpander == null))
                {
                    this.mDiceRollExpander = new DiceRollExpander(this);
                }
                return this.mDiceRollExpander;
            }
        }
        #endregion
        
        #region Fields
        private DiceRollExpander mDiceRollExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DiceRollExpander : WpfExpander
    {
        
        public DiceRollExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable13 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable13(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable13 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable13 : WpfTable
    {
        
        public SmallDataGridTable13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row130 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row130(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row130 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row130 : WpfRow
    {
        
        public Row130(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell6 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell6(this);
                }
                return this.mResultCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell6 mResultCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell6 : WpfCell
    {
        
        public ResultCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Result";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValueResultEdit
        {
            get
            {
                if ((this.mAssertValueResultEdit == null))
                {
                    this.mAssertValueResultEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValueResultEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValueResultEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValueResultEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValueResultEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValueResultEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserControl_1Custom : WpfCustom
    {
        
        public UserControl_1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane22 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane22(this);
                }
                return this.mScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane22 mScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane22 : WpfPane
    {
        
        public ScrollViewerPane22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityBuilderCustom ActivityBuilderCustom
        {
            get
            {
                if ((this.mActivityBuilderCustom == null))
                {
                    this.mActivityBuilderCustom = new ActivityBuilderCustom(this);
                }
                return this.mActivityBuilderCustom;
            }
        }
        #endregion
        
        #region Fields
        private ActivityBuilderCustom mActivityBuilderCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityBuilderCustom : WpfCustom
    {
        
        public ActivityBuilderCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenteCustom WorkflowItemPresenteCustom
        {
            get
            {
                if ((this.mWorkflowItemPresenteCustom == null))
                {
                    this.mWorkflowItemPresenteCustom = new WorkflowItemPresenteCustom(this);
                }
                return this.mWorkflowItemPresenteCustom;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenteCustom mWorkflowItemPresenteCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenteCustom : WpfCustom
    {
        
        public WorkflowItemPresenteCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FlowchartCustom FlowchartCustom
        {
            get
            {
                if ((this.mFlowchartCustom == null))
                {
                    this.mFlowchartCustom = new FlowchartCustom(this);
                }
                return this.mFlowchartCustom;
            }
        }
        #endregion
        
        #region Fields
        private FlowchartCustom mFlowchartCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FlowchartCustom : WpfCustom
    {
        
        public FlowchartCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Hello World(FlowchartDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DsfMultiAssignActiviCustom DsfMultiAssignActiviCustom
        {
            get
            {
                if ((this.mDsfMultiAssignActiviCustom == null))
                {
                    this.mDsfMultiAssignActiviCustom = new DsfMultiAssignActiviCustom(this);
                }
                return this.mDsfMultiAssignActiviCustom;
            }
        }
        #endregion
        
        #region Fields
        private DsfMultiAssignActiviCustom mDsfMultiAssignActiviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DsfMultiAssignActiviCustom : WpfCustom
    {
        
        public DsfMultiAssignActiviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Assign a value to Name if blank (1)(MultiAssignDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DisplayNameEdit
        {
            get
            {
                if ((this.mDisplayNameEdit == null))
                {
                    this.mDisplayNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameBox";
                    this.mDisplayNameEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDisplayNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SchedulerTab : WpfTabPage
    {
        
        public SchedulerTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Settings.Scheduler.SchedulerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext7 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext7(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext7 mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext7 : WpfCustom
    {
        
        public WorkSurfaceContext7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SchedulerView SchedulerView
        {
            get
            {
                if ((this.mSchedulerView == null))
                {
                    this.mSchedulerView = new SchedulerView(this);
                }
                return this.mSchedulerView;
            }
        }
        #endregion
        
        #region Fields
        private SchedulerView mSchedulerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SchedulerView : WpfCustom
    {
        
        public SchedulerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SchedulerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SchedulerView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox RunTaskCheckBox
        {
            get
            {
                if ((this.mRunTaskCheckBox == null))
                {
                    this.mRunTaskCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRunTaskCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_RunAsapCheckBox";
                    this.mRunTaskCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTaskCheckBox;
            }
        }
        
        public WpfText RunasthefollowinguseText
        {
            get
            {
                if ((this.mRunasthefollowinguseText == null))
                {
                    this.mRunasthefollowinguseText = new WpfText(this);
                    #region Search Criteria
                    this.mRunasthefollowinguseText.SearchProperties[WpfText.PropertyNames.Name] = "Run as the following user account ";
                    this.mRunasthefollowinguseText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunasthefollowinguseText;
            }
        }
        
        public WpfButton ResourcePickerButton
        {
            get
            {
                if ((this.mResourcePickerButton == null))
                {
                    this.mResourcePickerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mResourcePickerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_WorkflowSelectorButton_AutoID";
                    this.mResourcePickerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourcePickerButton;
            }
        }
        
        public WpfEdit PasswordTextbox
        {
            get
            {
                if ((this.mPasswordTextbox == null))
                {
                    this.mPasswordTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_PasswordBox";
                    this.mPasswordTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextbox;
            }
        }
        
        public WpfText PasswordText
        {
            get
            {
                if ((this.mPasswordText == null))
                {
                    this.mPasswordText = new WpfText(this);
                    #region Search Criteria
                    this.mPasswordText.SearchProperties[WpfText.PropertyNames.Name] = "Password ";
                    this.mPasswordText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordText;
            }
        }
        
        public WpfEdit NumOfHistoryTextBoxEdit
        {
            get
            {
                if ((this.mNumOfHistoryTextBoxEdit == null))
                {
                    this.mNumOfHistoryTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mNumOfHistoryTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NumOfHisTextBox";
                    this.mNumOfHistoryTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNumOfHistoryTextBoxEdit;
            }
        }
        
        public WpfText NumberofHistoryText
        {
            get
            {
                if ((this.mNumberofHistoryText == null))
                {
                    this.mNumberofHistoryText = new WpfText(this);
                    #region Search Criteria
                    this.mNumberofHistoryText.SearchProperties[WpfText.PropertyNames.Name] = "Number of History records to load (0 = all) ";
                    this.mNumberofHistoryText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNumberofHistoryText;
            }
        }
        
        public WpfEdit NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextbox";
                    this.mNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameTextbox;
            }
        }
        
        public WpfText NameText
        {
            get
            {
                if ((this.mNameText == null))
                {
                    this.mNameText = new WpfText(this);
                    #region Search Criteria
                    this.mNameText.SearchProperties[WpfText.PropertyNames.Name] = "Name ";
                    this.mNameText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameText;
            }
        }
        
        public WpfTable HistoryTable
        {
            get
            {
                if ((this.mHistoryTable == null))
                {
                    this.mHistoryTable = new WpfTable(this);
                    #region Search Criteria
                    this.mHistoryTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHistoryTable;
            }
        }
        
        public WpfText ErrorMessageText
        {
            get
            {
                if ((this.mErrorMessageText == null))
                {
                    this.mErrorMessageText = new WpfText(this);
                    #region Search Criteria
                    this.mErrorMessageText.SearchProperties[WpfText.PropertyNames.Name] = "Please select a workflow to schedule";
                    this.mErrorMessageText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorMessageText;
            }
        }
        
        public WpfRadioButton EnabledRadioButton
        {
            get
            {
                if ((this.mEnabledRadioButton == null))
                {
                    this.mEnabledRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mEnabledRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_EnabledRadioButton";
                    this.mEnabledRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEnabledRadioButton;
            }
        }
        
        public WpfButton EditTriggerButton
        {
            get
            {
                if ((this.mEditTriggerButton == null))
                {
                    this.mEditTriggerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditTriggerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_EditTriggerButton_AutoID";
                    this.mEditTriggerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditTriggerButton;
            }
        }
        
        public ConnectControl1 ConnectControl
        {
            get
            {
                if ((this.mConnectControl == null))
                {
                    this.mConnectControl = new ConnectControl1(this);
                }
                return this.mConnectControl;
            }
        }
        
        public SchedulesList SchedulesList
        {
            get
            {
                if ((this.mSchedulesList == null))
                {
                    this.mSchedulesList = new SchedulesList(this);
                }
                return this.mSchedulesList;
            }
        }
        
        public WpfText StatusText
        {
            get
            {
                if ((this.mStatusText == null))
                {
                    this.mStatusText = new WpfText(this);
                    #region Search Criteria
                    this.mStatusText.SearchProperties[WpfText.PropertyNames.Name] = "Status ";
                    this.mStatusText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStatusText;
            }
        }
        
        public WpfText TriggerText
        {
            get
            {
                if ((this.mTriggerText == null))
                {
                    this.mTriggerText = new WpfText(this);
                    #region Search Criteria
                    this.mTriggerText.SearchProperties[WpfText.PropertyNames.Name] = "Triggered at ";
                    this.mTriggerText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTriggerText;
            }
        }
        
        public WpfText TriggerValueText
        {
            get
            {
                if ((this.mTriggerValueText == null))
                {
                    this.mTriggerValueText = new WpfText(this);
                    #region Search Criteria
                    this.mTriggerValueText.SearchProperties[WpfText.PropertyNames.Name] = "At 2:40 PM every day";
                    this.mTriggerValueText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTriggerValueText;
            }
        }
        
        public WpfText UsernameText
        {
            get
            {
                if ((this.mUsernameText == null))
                {
                    this.mUsernameText = new WpfText(this);
                    #region Search Criteria
                    this.mUsernameText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UsernameTextBlock";
                    this.mUsernameText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUsernameText;
            }
        }
        
        public WpfEdit UserNameTextBoxEdit
        {
            get
            {
                if ((this.mUserNameTextBoxEdit == null))
                {
                    this.mUserNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUserNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_UserNameTextBox";
                    this.mUserNameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserNameTextBoxEdit;
            }
        }
        
        public WpfEdit WorkflowNameTextBox
        {
            get
            {
                if ((this.mWorkflowNameTextBox == null))
                {
                    this.mWorkflowNameTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mWorkflowNameTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_WorkflowNameTextBox_AutoID";
                    this.mWorkflowNameTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflowNameTextBox;
            }
        }
        
        public WpfText WorkflowText
        {
            get
            {
                if ((this.mWorkflowText == null))
                {
                    this.mWorkflowText = new WpfText(this);
                    #region Search Criteria
                    this.mWorkflowText.SearchProperties[WpfText.PropertyNames.Name] = "Workflow ";
                    this.mWorkflowText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflowText;
            }
        }
        
        public WpfRadioButton DisabledRadioButton
        {
            get
            {
                if ((this.mDisabledRadioButton == null))
                {
                    this.mDisabledRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mDisabledRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_DisabledRadioButton";
                    this.mDisabledRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mRunTaskCheckBox;
        
        private WpfText mRunasthefollowinguseText;
        
        private WpfButton mResourcePickerButton;
        
        private WpfEdit mPasswordTextbox;
        
        private WpfText mPasswordText;
        
        private WpfEdit mNumOfHistoryTextBoxEdit;
        
        private WpfText mNumberofHistoryText;
        
        private WpfEdit mNameTextbox;
        
        private WpfText mNameText;
        
        private WpfTable mHistoryTable;
        
        private WpfText mErrorMessageText;
        
        private WpfRadioButton mEnabledRadioButton;
        
        private WpfButton mEditTriggerButton;
        
        private ConnectControl1 mConnectControl;
        
        private SchedulesList mSchedulesList;
        
        private WpfText mStatusText;
        
        private WpfText mTriggerText;
        
        private WpfText mTriggerValueText;
        
        private WpfText mUsernameText;
        
        private WpfEdit mUserNameTextBoxEdit;
        
        private WpfEdit mWorkflowNameTextBox;
        
        private WpfText mWorkflowText;
        
        private WpfRadioButton mDisabledRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConnectControl1 : WpfCustom
    {
        
        public ConnectControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ConnectUserControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ServerComboBox
        {
            get
            {
                if ((this.mServerComboBox == null))
                {
                    this.mServerComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mServerComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_SettingsServerComboBox_AutoID";
                    this.mServerComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mServerComboBox;
            }
        }
        
        public WpfButton EditServerButton
        {
            get
            {
                if ((this.mEditServerButton == null))
                {
                    this.mEditServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SettingsServerEditButton_AutoID";
                    this.mEditServerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditServerButton;
            }
        }
        
        public WpfButton ConnectServerButton
        {
            get
            {
                if ((this.mConnectServerButton == null))
                {
                    this.mConnectServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mConnectServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SettingsServerConnectButton_AutoID";
                    this.mConnectServerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectServerButton;
            }
        }
        
        public WpfRadioButton DisabledRadioButton
        {
            get
            {
                if ((this.mDisabledRadioButton == null))
                {
                    this.mDisabledRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mDisabledRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_DisabledRadioButton";
                    this.mDisabledRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mServerComboBox;
        
        private WpfButton mEditServerButton;
        
        private WpfButton mConnectServerButton;
        
        private WpfRadioButton mDisabledRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SchedulesList : WpfList
    {
        
        public SchedulesList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "Schedules";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UINameworkflow1ResourcListItem UINameworkflow1ResourcListItem
        {
            get
            {
                if ((this.mUINameworkflow1ResourcListItem == null))
                {
                    this.mUINameworkflow1ResourcListItem = new UINameworkflow1ResourcListItem(this);
                }
                return this.mUINameworkflow1ResourcListItem;
            }
        }
        
        public SchedulerListItem SchedulerListItem
        {
            get
            {
                if ((this.mSchedulerListItem == null))
                {
                    this.mSchedulerListItem = new SchedulerListItem(this);
                }
                return this.mSchedulerListItem;
            }
        }
        
        public NewTask NewTask
        {
            get
            {
                if ((this.mNewTask == null))
                {
                    this.mNewTask = new NewTask(this);
                }
                return this.mNewTask;
            }
        }
        
        public WpfButton DeleteTaskButton
        {
            get
            {
                if ((this.mDeleteTaskButton == null))
                {
                    this.mDeleteTaskButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteTaskButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_WorkflowSelectorButton_AutoID";
                    this.mDeleteTaskButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteTaskButton;
            }
        }
        #endregion
        
        #region Fields
        private UINameworkflow1ResourcListItem mUINameworkflow1ResourcListItem;
        
        private SchedulerListItem mSchedulerListItem;
        
        private NewTask mNewTask;
        
        private WpfButton mDeleteTaskButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINameworkflow1ResourcListItem : WpfListItem
    {
        
        public UINameworkflow1ResourcListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Name:workflow1 ResourceId:00000000-0000-0000-0000-000000000000";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox StatusCheckBox
        {
            get
            {
                if ((this.mStatusCheckBox == null))
                {
                    this.mStatusCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mStatusCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStatusCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mStatusCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SchedulerListItem : WpfListItem
    {
        
        public SchedulerListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Scheduler.DummyResource";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public CreateTaskButton CreateTaskButton
        {
            get
            {
                if ((this.mCreateTaskButton == null))
                {
                    this.mCreateTaskButton = new CreateTaskButton(this);
                }
                return this.mCreateTaskButton;
            }
        }
        #endregion
        
        #region Fields
        private CreateTaskButton mCreateTaskButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateTaskButton : WpfButton
    {
        
        public CreateTaskButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton NewTaskButton
        {
            get
            {
                if ((this.mNewTaskButton == null))
                {
                    this.mNewTaskButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewTaskButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mNewTaskButton.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mNewTaskButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewTaskButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mNewTaskButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewTask : WpfListItem
    {
        
        public NewTask(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Name:New Task1 ResourceId:00000000-0000-0000-0000-000000000000";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox StatusCheckbox
        {
            get
            {
                if ((this.mStatusCheckbox == null))
                {
                    this.mStatusCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mStatusCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStatusCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mStatusCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointServerSourceTab : WpfTabPage
    {
        
        public SharepointServerSourceTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.ISharepointServerSource]" +
                "";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SharepointServerSourceView SharepointServerSourceView
        {
            get
            {
                if ((this.mSharepointServerSourceView == null))
                {
                    this.mSharepointServerSourceView = new SharepointServerSourceView(this);
                }
                return this.mSharepointServerSourceView;
            }
        }
        
        public WpfButton SharepointSourceTabCloseButton
        {
            get
            {
                if ((this.mSharepointSourceTabCloseButton == null))
                {
                    this.mSharepointSourceTabCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSharepointSourceTabCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mSharepointSourceTabCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointSourceTabCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private SharepointServerSourceView mSharepointServerSourceView;
        
        private WpfButton mSharepointSourceTabCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointServerSourceView : WpfCustom
    {
        
        public SharepointServerSourceView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SharepointView SharepointView
        {
            get
            {
                if ((this.mSharepointView == null))
                {
                    this.mSharepointView = new SharepointView(this);
                }
                return this.mSharepointView;
            }
        }
        #endregion
        
        #region Fields
        private SharepointView mSharepointView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointView : WpfCustom
    {
        
        public SharepointView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointServerSource";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestConnection";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public WpfRadioButton UserRadioButton
        {
            get
            {
                if ((this.mUserRadioButton == null))
                {
                    this.mUserRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUserRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UserRadioButton";
                    this.mUserRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserRadioButton;
            }
        }
        
        public WpfEdit PasswordTextBox
        {
            get
            {
                if ((this.mPasswordTextBox == null))
                {
                    this.mPasswordTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextBox;
            }
        }
        
        public WpfEdit ServerNameEdit
        {
            get
            {
                if ((this.mServerNameEdit == null))
                {
                    this.mServerNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mServerNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ServerName";
                    this.mServerNameEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mServerNameEdit;
            }
        }
        
        public WpfEdit UserNameTextBox
        {
            get
            {
                if ((this.mUserNameTextBox == null))
                {
                    this.mUserNameTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mUserNameTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UserNameTextBox";
                    this.mUserNameTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserNameTextBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mTestConnectionButton;
        
        private WpfRadioButton mUserRadioButton;
        
        private WpfEdit mPasswordTextBox;
        
        private WpfEdit mServerNameEdit;
        
        private WpfEdit mUserNameTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployTab : WpfTabPage
    {
        
        public DeployTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.DeployWorksurfaceViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext8 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext8(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfButton TabCloseButton
        {
            get
            {
                if ((this.mTabCloseButton == null))
                {
                    this.mTabCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTabCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mTabCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext8 mWorkSurfaceContext;
        
        private WpfButton mTabCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext8 : WpfCustom
    {
        
        public WorkSurfaceContext8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager1 DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager1(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager1 mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager1 : WpfCustom
    {
        
        public DockManager1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ContentDockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DeployView DeployView
        {
            get
            {
                if ((this.mDeployView == null))
                {
                    this.mDeployView = new DeployView(this);
                }
                return this.mDeployView;
            }
        }
        #endregion
        
        #region Fields
        private DeployView mDeployView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployView : WpfCustom
    {
        
        public DeployView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DeployView";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DeployButton DeployButton
        {
            get
            {
                if ((this.mDeployButton == null))
                {
                    this.mDeployButton = new DeployButton(this);
                }
                return this.mDeployButton;
            }
        }
        
        public WpfText DeployButtonMessageText
        {
            get
            {
                if ((this.mDeployButtonMessageText == null))
                {
                    this.mDeployButtonMessageText = new WpfText(this);
                    #region Search Criteria
                    this.mDeployButtonMessageText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DeploySelectTB_AutoID";
                    this.mDeployButtonMessageText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeployButtonMessageText;
            }
        }
        
        public DestinationServerConectControl DestinationServerConectControl
        {
            get
            {
                if ((this.mDestinationServerConectControl == null))
                {
                    this.mDestinationServerConectControl = new DestinationServerConectControl(this);
                }
                return this.mDestinationServerConectControl;
            }
        }
        
        public WpfButton EditDestinationButton
        {
            get
            {
                if ((this.mEditDestinationButton == null))
                {
                    this.mEditDestinationButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditDestinationButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DestinationServerEditbtn_AutoID";
                    this.mEditDestinationButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditDestinationButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SourceServerEditbtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfHyperlink NewResourceHyperlink
        {
            get
            {
                if ((this.mNewResourceHyperlink == null))
                {
                    this.mNewResourceHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNewResourceHyperlink.SearchProperties[WpfHyperlink.PropertyNames.AutomationId] = "NewResourcesView";
                    this.mNewResourceHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewResourceHyperlink;
            }
        }
        
        public WpfText NewResourcesText
        {
            get
            {
                if ((this.mNewResourcesText == null))
                {
                    this.mNewResourcesText = new WpfText(this);
                    #region Search Criteria
                    this.mNewResourcesText.SearchProperties[WpfText.PropertyNames.Name] = "New Resources";
                    this.mNewResourcesText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewResourcesText;
            }
        }
        
        public WpfHyperlink OverrideHyperlink
        {
            get
            {
                if ((this.mOverrideHyperlink == null))
                {
                    this.mOverrideHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mOverrideHyperlink.SearchProperties[WpfHyperlink.PropertyNames.AutomationId] = "OverridesCountView";
                    this.mOverrideHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverrideHyperlink;
            }
        }
        
        public WpfText OverrideText
        {
            get
            {
                if ((this.mOverrideText == null))
                {
                    this.mOverrideText = new WpfText(this);
                    #region Search Criteria
                    this.mOverrideText.SearchProperties[WpfText.PropertyNames.Name] = "Override";
                    this.mOverrideText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverrideText;
            }
        }
        
        public WpfText ServiceCountText
        {
            get
            {
                if ((this.mServiceCountText == null))
                {
                    this.mServiceCountText = new WpfText(this);
                    #region Search Criteria
                    this.mServiceCountText.SearchProperties[WpfText.PropertyNames.AutomationId] = "WorkflowsCount";
                    this.mServiceCountText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mServiceCountText;
            }
        }
        
        public WpfText ServicesText
        {
            get
            {
                if ((this.mServicesText == null))
                {
                    this.mServicesText = new WpfText(this);
                    #region Search Criteria
                    this.mServicesText.SearchProperties[WpfText.PropertyNames.Name] = "Services";
                    this.mServicesText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mServicesText;
            }
        }
        
        public WpfButton ShowDependenciesButton
        {
            get
            {
                if ((this.mShowDependenciesButton == null))
                {
                    this.mShowDependenciesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mShowDependenciesButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SelectDepbtn_AutoID";
                    this.mShowDependenciesButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mShowDependenciesButton;
            }
        }
        
        public WpfButton SourceConnectButton
        {
            get
            {
                if ((this.mSourceConnectButton == null))
                {
                    this.mSourceConnectButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSourceConnectButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SourceConnectServerbtn_AutoID";
                    this.mSourceConnectButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceConnectButton;
            }
        }
        
        public WpfText SourceCountText
        {
            get
            {
                if ((this.mSourceCountText == null))
                {
                    this.mSourceCountText = new WpfText(this);
                    #region Search Criteria
                    this.mSourceCountText.SearchProperties[WpfText.PropertyNames.AutomationId] = "SourcesCount";
                    this.mSourceCountText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCountText;
            }
        }
        
        public SourceServerConectControl SourceServerConectControl
        {
            get
            {
                if ((this.mSourceServerConectControl == null))
                {
                    this.mSourceServerConectControl = new SourceServerConectControl(this);
                }
                return this.mSourceServerConectControl;
            }
        }
        
        public SourceServerExplorer SourceServerExplorer
        {
            get
            {
                if ((this.mSourceServerExplorer == null))
                {
                    this.mSourceServerExplorer = new SourceServerExplorer(this);
                }
                return this.mSourceServerExplorer;
            }
        }
        
        public WpfText SourcesText
        {
            get
            {
                if ((this.mSourcesText == null))
                {
                    this.mSourcesText = new WpfText(this);
                    #region Search Criteria
                    this.mSourcesText.SearchProperties[WpfText.PropertyNames.Name] = "Sources";
                    this.mSourcesText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesText;
            }
        }
        #endregion
        
        #region Fields
        private DeployButton mDeployButton;
        
        private WpfText mDeployButtonMessageText;
        
        private DestinationServerConectControl mDestinationServerConectControl;
        
        private WpfButton mEditDestinationButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfHyperlink mNewResourceHyperlink;
        
        private WpfText mNewResourcesText;
        
        private WpfHyperlink mOverrideHyperlink;
        
        private WpfText mOverrideText;
        
        private WpfText mServiceCountText;
        
        private WpfText mServicesText;
        
        private WpfButton mShowDependenciesButton;
        
        private WpfButton mSourceConnectButton;
        
        private WpfText mSourceCountText;
        
        private SourceServerConectControl mSourceServerConectControl;
        
        private SourceServerExplorer mSourceServerExplorer;
        
        private WpfText mSourcesText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployButton : WpfButton
    {
        
        public DeployButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Deploybtn_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationServerConectControl : WpfCustom
    {
        
        public DestinationServerConectControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DestinationConnectControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Combobox Combobox
        {
            get
            {
                if ((this.mCombobox == null))
                {
                    this.mCombobox = new Combobox(this);
                }
                return this.mCombobox;
            }
        }
        
        public WpfButton ConnectDestinationButton
        {
            get
            {
                if ((this.mConnectDestinationButton == null))
                {
                    this.mConnectDestinationButton = new WpfButton(this);
                    #region Search Criteria
                    this.mConnectDestinationButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DestinationServerConnectbtn_AutoID";
                    this.mConnectDestinationButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectDestinationButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_IndicatorConnecting_AutoID";
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private Combobox mCombobox;
        
        private WpfButton mConnectDestinationButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Combobox : WpfCustom
    {
        
        public Combobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TheServerComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToggleButton
        {
            get
            {
                if ((this.mToggleButton == null))
                {
                    this.mToggleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mToggleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToggleButton;
            }
        }
        
        public WpfText RemoteConnectionIntegrationText
        {
            get
            {
                if ((this.mRemoteConnectionIntegrationText == null))
                {
                    this.mRemoteConnectionIntegrationText = new WpfText(this);
                    #region Search Criteria
                    this.mRemoteConnectionIntegrationText.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration";
                    this.mRemoteConnectionIntegrationText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRemoteConnectionIntegrationText;
            }
        }
        
        public WpfText ConnectedRemoteConnectionText
        {
            get
            {
                if ((this.mConnectedRemoteConnectionText == null))
                {
                    this.mConnectedRemoteConnectionText = new WpfText(this);
                    #region Search Criteria
                    this.mConnectedRemoteConnectionText.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration (Connected)";
                    this.mConnectedRemoteConnectionText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectedRemoteConnectionText;
            }
        }
        
        public WpfText ConnectedLocalhostText
        {
            get
            {
                if ((this.mConnectedLocalhostText == null))
                {
                    this.mConnectedLocalhostText = new WpfText(this);
                    #region Search Criteria
                    this.mConnectedLocalhostText.SearchProperties[WpfText.PropertyNames.Name] = "localhost (Connected)";
                    this.mConnectedLocalhostText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectedLocalhostText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToggleButton;
        
        private WpfText mRemoteConnectionIntegrationText;
        
        private WpfText mConnectedRemoteConnectionText;
        
        private WpfText mConnectedLocalhostText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceServerConectControl : WpfCustom
    {
        
        public SourceServerConectControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SourceConnectControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Combobox1 Combobox
        {
            get
            {
                if ((this.mCombobox == null))
                {
                    this.mCombobox = new Combobox1(this);
                }
                return this.mCombobox;
            }
        }
        
        public WpfButton ConnectSourceButton
        {
            get
            {
                if ((this.mConnectSourceButton == null))
                {
                    this.mConnectSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mConnectSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SourceConnectServerbtn_AutoID";
                    this.mConnectSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectSourceButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_IndicatorConnecting_AutoID";
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private Combobox1 mCombobox;
        
        private WpfButton mConnectSourceButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Combobox1 : WpfCustom
    {
        
        public Combobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TheServerComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToggleButton
        {
            get
            {
                if ((this.mToggleButton == null))
                {
                    this.mToggleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mToggleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToggleButton;
            }
        }
        
        public WpfText RemoteConnectionIntegrationText
        {
            get
            {
                if ((this.mRemoteConnectionIntegrationText == null))
                {
                    this.mRemoteConnectionIntegrationText = new WpfText(this);
                    #region Search Criteria
                    this.mRemoteConnectionIntegrationText.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration";
                    this.mRemoteConnectionIntegrationText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRemoteConnectionIntegrationText;
            }
        }
        
        public WpfText ConnectedRemoteConnectionText
        {
            get
            {
                if ((this.mConnectedRemoteConnectionText == null))
                {
                    this.mConnectedRemoteConnectionText = new WpfText(this);
                    #region Search Criteria
                    this.mConnectedRemoteConnectionText.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration (Connected)";
                    this.mConnectedRemoteConnectionText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectedRemoteConnectionText;
            }
        }
        
        public LocalhostText LocalhostText
        {
            get
            {
                if ((this.mLocalhostText == null))
                {
                    this.mLocalhostText = new LocalhostText(this);
                }
                return this.mLocalhostText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToggleButton;
        
        private WpfText mRemoteConnectionIntegrationText;
        
        private WpfText mConnectedRemoteConnectionText;
        
        private LocalhostText mLocalhostText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalhostText : WpfText
    {
        
        public LocalhostText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "localhost (Connected)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceServerExplorer : WpfCustom
    {
        
        public SourceServerExplorer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExplorerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SourceNavigationView";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit SearchTextbox
        {
            get
            {
                if ((this.mSearchTextbox == null))
                {
                    this.mSearchTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mSearchTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTextbox;
            }
        }
        
        public ExplorerTree2 ExplorerTree
        {
            get
            {
                if ((this.mExplorerTree == null))
                {
                    this.mExplorerTree = new ExplorerTree2(this);
                }
                return this.mExplorerTree;
            }
        }
        
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "FilterRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mSearchTextbox;
        
        private ExplorerTree2 mExplorerTree;
        
        private WpfText mFilterText;
        
        private WpfButton mRefreshButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerTree2 : WpfTree
    {
        
        public ExplorerTree2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceServerName SourceServerName
        {
            get
            {
                if ((this.mSourceServerName == null))
                {
                    this.mSourceServerName = new SourceServerName(this);
                }
                return this.mSourceServerName;
            }
        }
        
        public LocalHost1 LocalHost
        {
            get
            {
                if ((this.mLocalHost == null))
                {
                    this.mLocalHost = new LocalHost1(this);
                }
                return this.mLocalHost;
            }
        }
        #endregion
        
        #region Fields
        private SourceServerName mSourceServerName;
        
        private LocalHost1 mLocalHost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceServerName : WpfTreeItem
    {
        
        public SourceServerName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FirstExplorerTreeItem FirstExplorerTreeItem
        {
            get
            {
                if ((this.mFirstExplorerTreeItem == null))
                {
                    this.mFirstExplorerTreeItem = new FirstExplorerTreeItem(this);
                }
                return this.mFirstExplorerTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private FirstExplorerTreeItem mFirstExplorerTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstExplorerTreeItem : WpfTreeItem
    {
        
        public FirstExplorerTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox CheckBox
        {
            get
            {
                if ((this.mCheckBox == null))
                {
                    this.mCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ResourceNameCheckBox";
                    this.mCheckBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalHost1 : WpfTreeItem
    {
        
        public LocalHost1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public Item1 Item1
        {
            get
            {
                if ((this.mItem1 == null))
                {
                    this.mItem1 = new Item1(this);
                }
                return this.mItem1;
            }
        }
        #endregion
        
        #region Fields
        private Item1 mItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Item1 : WpfTreeItem
    {
        
        public Item1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox CheckBox
        {
            get
            {
                if ((this.mCheckBox == null))
                {
                    this.mCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ResourceNameCheckBox";
                    this.mCheckBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCheckBox.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerSourceWizardTab : WpfTabPage
    {
        
        public ServerSourceWizardTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.IServerSource]";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext9 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext9(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfButton TabCloseButton
        {
            get
            {
                if ((this.mTabCloseButton == null))
                {
                    this.mTabCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTabCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mTabCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabCloseButton;
            }
        }
        
        public WpfImage NoAuthMessageText
        {
            get
            {
                if ((this.mNoAuthMessageText == null))
                {
                    this.mNoAuthMessageText = new WpfImage(this);
                    #region Search Criteria
                    this.mNoAuthMessageText.SearchProperties[WpfImage.PropertyNames.HelpText] = "You are not authorized to edit this resource";
                    this.mNoAuthMessageText.SearchProperties[WpfImage.PropertyNames.Instance] = "2";
                    this.mNoAuthMessageText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNoAuthMessageText;
            }
        }
        
        public WpfText NewServerTitleText
        {
            get
            {
                if ((this.mNewServerTitleText == null))
                {
                    this.mNewServerTitleText = new WpfText(this);
                    #region Search Criteria
                    this.mNewServerTitleText.SearchProperties[WpfText.PropertyNames.Name] = "New Server Source";
                    this.mNewServerTitleText.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mNewServerTitleText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewServerTitleText;
            }
        }
        
        public WpfImage NewServerBackground
        {
            get
            {
                if ((this.mNewServerBackground == null))
                {
                    this.mNewServerBackground = new WpfImage(this);
                    #region Search Criteria
                    this.mNewServerBackground.SearchProperties[WpfImage.PropertyNames.AutomationId] = "New Server Source";
                    this.mNewServerBackground.SearchProperties[WpfImage.PropertyNames.Instance] = "2";
                    this.mNewServerBackground.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewServerBackground;
            }
        }
        
        public WpfImage NoAuthImage
        {
            get
            {
                if ((this.mNoAuthImage == null))
                {
                    this.mNoAuthImage = new WpfImage(this);
                    #region Search Criteria
                    this.mNoAuthImage.SearchProperties[WpfImage.PropertyNames.HelpText] = "You are not authorized to edit this resource";
                    this.mNoAuthImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNoAuthImage;
            }
        }
        
        public WpfText AddressText
        {
            get
            {
                if ((this.mAddressText == null))
                {
                    this.mAddressText = new WpfText(this);
                    #region Search Criteria
                    this.mAddressText.SearchProperties[WpfText.PropertyNames.Name] = "New Server Source";
                    this.mAddressText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddressText;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext9 mWorkSurfaceContext;
        
        private WpfButton mTabCloseButton;
        
        private WpfImage mNoAuthMessageText;
        
        private WpfText mNewServerTitleText;
        
        private WpfImage mNewServerBackground;
        
        private WpfImage mNoAuthImage;
        
        private WpfText mAddressText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext9 : WpfCustom
    {
        
        public WorkSurfaceContext9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NewServerSourceWizard NewServerSourceWizard
        {
            get
            {
                if ((this.mNewServerSourceWizard == null))
                {
                    this.mNewServerSourceWizard = new NewServerSourceWizard(this);
                }
                return this.mNewServerSourceWizard;
            }
        }
        
        public ErrorText1 ErrorText
        {
            get
            {
                if ((this.mErrorText == null))
                {
                    this.mErrorText = new ErrorText1(this);
                }
                return this.mErrorText;
            }
        }
        
        public WpfRadioButton PublicRadioButton
        {
            get
            {
                if ((this.mPublicRadioButton == null))
                {
                    this.mPublicRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mPublicRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "PublicRadioButton";
                    this.mPublicRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublicRadioButton;
            }
        }
        
        public WpfImage NewServerTabIcon
        {
            get
            {
                if ((this.mNewServerTabIcon == null))
                {
                    this.mNewServerTabIcon = new WpfImage(this);
                    #region Search Criteria
                    this.mNewServerTabIcon.SearchProperties[WpfImage.PropertyNames.AutomationId] = "New Server Source";
                    this.mNewServerTabIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewServerTabIcon;
            }
        }
        
        public WpfRadioButton UserRadioButton
        {
            get
            {
                if ((this.mUserRadioButton == null))
                {
                    this.mUserRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUserRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UserRadioButton";
                    this.mUserRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserRadioButton;
            }
        }
        
        public WpfRadioButton WindowsRadioButton
        {
            get
            {
                if ((this.mWindowsRadioButton == null))
                {
                    this.mWindowsRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mWindowsRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "WindowsRadioButton";
                    this.mWindowsRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWindowsRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private NewServerSourceWizard mNewServerSourceWizard;
        
        private ErrorText1 mErrorText;
        
        private WpfRadioButton mPublicRadioButton;
        
        private WpfImage mNewServerTabIcon;
        
        private WpfRadioButton mUserRadioButton;
        
        private WpfRadioButton mWindowsRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewServerSourceWizard : WpfCustom
    {
        
        public NewServerSourceWizard(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ManageServerControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AuthTypeOptions AuthTypeOptions
        {
            get
            {
                if ((this.mAuthTypeOptions == null))
                {
                    this.mAuthTypeOptions = new AuthTypeOptions(this);
                }
                return this.mAuthTypeOptions;
            }
        }
        
        public ProtocolCombobox ProtocolCombobox
        {
            get
            {
                if ((this.mProtocolCombobox == null))
                {
                    this.mProtocolCombobox = new ProtocolCombobox(this);
                }
                return this.mProtocolCombobox;
            }
        }
        
        public AddressComboBox AddressComboBox
        {
            get
            {
                if ((this.mAddressComboBox == null))
                {
                    this.mAddressComboBox = new AddressComboBox(this);
                }
                return this.mAddressComboBox;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestConnectionButton";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public WpfText ErrorText
        {
            get
            {
                if ((this.mErrorText == null))
                {
                    this.mErrorText = new WpfText(this);
                    #region Search Criteria
                    this.mErrorText.SearchProperties[WpfText.PropertyNames.AutomationId] = "ErrorTextBlock";
                    this.mErrorText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorText;
            }
        }
        #endregion
        
        #region Fields
        private AuthTypeOptions mAuthTypeOptions;
        
        private ProtocolCombobox mProtocolCombobox;
        
        private AddressComboBox mAddressComboBox;
        
        private WpfButton mTestConnectionButton;
        
        private WpfCustom mSpinner;
        
        private WpfText mErrorText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AuthTypeOptions : WpfCustom
    {
        
        public AuthTypeOptions(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ProtocolItems";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton WindowsAuth
        {
            get
            {
                if ((this.mWindowsAuth == null))
                {
                    this.mWindowsAuth = new WpfButton(this);
                    #region Search Criteria
                    this.mWindowsAuth.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mWindowsAuth.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWindowsAuth;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mWindowsAuth;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ProtocolCombobox : WpfCustom
    {
        
        public ProtocolCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ProtocolItems";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToggleDropdown
        {
            get
            {
                if ((this.mToggleDropdown == null))
                {
                    this.mToggleDropdown = new WpfButton(this);
                    #region Search Criteria
                    this.mToggleDropdown.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mToggleDropdown.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToggleDropdown;
            }
        }
        
        public WpfText HttpSelectedItemText
        {
            get
            {
                if ((this.mHttpSelectedItemText == null))
                {
                    this.mHttpSelectedItemText = new WpfText(this);
                    #region Search Criteria
                    this.mHttpSelectedItemText.SearchProperties[WpfText.PropertyNames.Name] = "http";
                    this.mHttpSelectedItemText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHttpSelectedItemText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToggleDropdown;
        
        private WpfText mHttpSelectedItemText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddressComboBox : WpfComboBox
    {
        
        public AddressComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "AddressTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AddressEditBox
        {
            get
            {
                if ((this.mAddressEditBox == null))
                {
                    this.mAddressEditBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mAddressEditBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mAddressEditBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddressEditBox;
            }
        }
        
        public WpfListItem TSTCIREMOTE
        {
            get
            {
                if ((this.mTSTCIREMOTE == null))
                {
                    this.mTSTCIREMOTE = new WpfListItem(this);
                    #region Search Criteria
                    this.mTSTCIREMOTE.SearchProperties[WpfListItem.PropertyNames.Name] = "TST-CI-REMOTE";
                    this.mTSTCIREMOTE.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTSTCIREMOTE;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAddressEditBox;
        
        private WpfListItem mTSTCIREMOTE;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorText1 : WpfText
    {
        
        public ErrorText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "ErrorTextBlock";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SettingsTab : WpfTabPage
    {
        
        public SettingsTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Settings.SettingsViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorksurfaceContext10 WorksurfaceContext
        {
            get
            {
                if ((this.mWorksurfaceContext == null))
                {
                    this.mWorksurfaceContext = new WorksurfaceContext10(this);
                }
                return this.mWorksurfaceContext;
            }
        }
        
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WorksurfaceContext10 mWorksurfaceContext;
        
        private WpfButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorksurfaceContext10 : WpfCustom
    {
        
        public WorksurfaceContext10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SettingsView1 SettingsView
        {
            get
            {
                if ((this.mSettingsView == null))
                {
                    this.mSettingsView = new SettingsView1(this);
                }
                return this.mSettingsView;
            }
        }
        #endregion
        
        #region Fields
        private SettingsView1 mSettingsView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SettingsView1 : WpfCustom
    {
        
        public SettingsView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SettingsView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SettingsView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabList1 TabList
        {
            get
            {
                if ((this.mTabList == null))
                {
                    this.mTabList = new TabList1(this);
                }
                return this.mTabList;
            }
        }
        #endregion
        
        #region Fields
        private TabList1 mTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabList1 : WpfTabList
    {
        
        public TabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SecurityTab1 SecurityTab
        {
            get
            {
                if ((this.mSecurityTab == null))
                {
                    this.mSecurityTab = new SecurityTab1(this);
                }
                return this.mSecurityTab;
            }
        }
        
        public LoggingTab1 LoggingTab
        {
            get
            {
                if ((this.mLoggingTab == null))
                {
                    this.mLoggingTab = new LoggingTab1(this);
                }
                return this.mLoggingTab;
            }
        }
        
        public PerfomanceCounterTab1 PerfomanceCounterTab
        {
            get
            {
                if ((this.mPerfomanceCounterTab == null))
                {
                    this.mPerfomanceCounterTab = new PerfomanceCounterTab1(this);
                }
                return this.mPerfomanceCounterTab;
            }
        }
        #endregion
        
        #region Fields
        private SecurityTab1 mSecurityTab;
        
        private LoggingTab1 mLoggingTab;
        
        private PerfomanceCounterTab1 mPerfomanceCounterTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecurityTab1 : WpfTabPage
    {
        
        public SecurityTab1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SecurityWindow1 SecurityWindow
        {
            get
            {
                if ((this.mSecurityWindow == null))
                {
                    this.mSecurityWindow = new SecurityWindow1(this);
                }
                return this.mSecurityWindow;
            }
        }
        
        public WpfText SECURITY
        {
            get
            {
                if ((this.mSECURITY == null))
                {
                    this.mSECURITY = new WpfText(this);
                    #region Search Criteria
                    this.mSECURITY.SearchProperties[WpfText.PropertyNames.Name] = "SECURITY";
                    this.mSECURITY.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSECURITY;
            }
        }
        #endregion
        
        #region Fields
        private SecurityWindow1 mSecurityWindow;
        
        private WpfText mSECURITY;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecurityWindow1 : WpfCustom
    {
        
        public SecurityWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SecurityView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SecurityViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerPermissions1 ServerPermissions
        {
            get
            {
                if ((this.mServerPermissions == null))
                {
                    this.mServerPermissions = new ServerPermissions1(this);
                }
                return this.mServerPermissions;
            }
        }
        
        public ResourcePermissions1 ResourcePermissions
        {
            get
            {
                if ((this.mResourcePermissions == null))
                {
                    this.mResourcePermissions = new ResourcePermissions1(this);
                }
                return this.mResourcePermissions;
            }
        }
        #endregion
        
        #region Fields
        private ServerPermissions1 mServerPermissions;
        
        private ResourcePermissions1 mResourcePermissions;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPermissions1 : WpfTable
    {
        
        public ServerPermissions1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ServerPermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WarewolfAdminROW1 WarewolfAdminROW
        {
            get
            {
                if ((this.mWarewolfAdminROW == null))
                {
                    this.mWarewolfAdminROW = new WarewolfAdminROW1(this);
                }
                return this.mWarewolfAdminROW;
            }
        }
        
        public PublicROW1 PublicROW
        {
            get
            {
                if ((this.mPublicROW == null))
                {
                    this.mPublicROW = new PublicROW1(this);
                }
                return this.mPublicROW;
            }
        }
        #endregion
        
        #region Fields
        private WarewolfAdminROW1 mWarewolfAdminROW;
        
        private PublicROW1 mPublicROW;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WarewolfAdminROW1 : WpfPane
    {
        
        public WarewolfAdminROW1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "0";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DeleteCell3 DeleteCell
        {
            get
            {
                if ((this.mDeleteCell == null))
                {
                    this.mDeleteCell = new DeleteCell3(this);
                }
                return this.mDeleteCell;
            }
        }
        
        public DeployToCell1 DeployToCell
        {
            get
            {
                if ((this.mDeployToCell == null))
                {
                    this.mDeployToCell = new DeployToCell1(this);
                }
                return this.mDeployToCell;
            }
        }
        
        public DeployFromCell1 DeployFromCell
        {
            get
            {
                if ((this.mDeployFromCell == null))
                {
                    this.mDeployFromCell = new DeployFromCell1(this);
                }
                return this.mDeployFromCell;
            }
        }
        
        public AdministratorCell1 AdministratorCell
        {
            get
            {
                if ((this.mAdministratorCell == null))
                {
                    this.mAdministratorCell = new AdministratorCell1(this);
                }
                return this.mAdministratorCell;
            }
        }
        
        public ViewCell2 ViewCell
        {
            get
            {
                if ((this.mViewCell == null))
                {
                    this.mViewCell = new ViewCell2(this);
                }
                return this.mViewCell;
            }
        }
        
        public ExecuteCell2 ExecuteCell
        {
            get
            {
                if ((this.mExecuteCell == null))
                {
                    this.mExecuteCell = new ExecuteCell2(this);
                }
                return this.mExecuteCell;
            }
        }
        
        public ContributeCell2 ContributeCell
        {
            get
            {
                if ((this.mContributeCell == null))
                {
                    this.mContributeCell = new ContributeCell2(this);
                }
                return this.mContributeCell;
            }
        }
        #endregion
        
        #region Fields
        private DeleteCell3 mDeleteCell;
        
        private DeployToCell1 mDeployToCell;
        
        private DeployFromCell1 mDeployFromCell;
        
        private AdministratorCell1 mAdministratorCell;
        
        private ViewCell2 mViewCell;
        
        private ExecuteCell2 mExecuteCell;
        
        private ContributeCell2 mContributeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteCell3 : WpfCell
    {
        
        public DeleteCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "Dev2.Runtime.Configuration.ViewModels.Base.RelayCommand";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_AddRemovebtn_AutoID";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployToCell1 : WpfCell
    {
        
        public DeployToCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox DeployToCheckBox
        {
            get
            {
                if ((this.mDeployToCheckBox == null))
                {
                    this.mDeployToCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mDeployToCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_DeployToPermissionCheckBox_AutoID";
                    this.mDeployToCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Instance] = "1";
                    this.mDeployToCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeployToCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mDeployToCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeployFromCell1 : WpfCell
    {
        
        public DeployFromCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox DeployFromCheckBox
        {
            get
            {
                if ((this.mDeployFromCheckBox == null))
                {
                    this.mDeployFromCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mDeployFromCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_DeployFromPermissionCheckBox_AutoID";
                    this.mDeployFromCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeployFromCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mDeployFromCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AdministratorCell1 : WpfCell
    {
        
        public AdministratorCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox AdministratorCheckBox
        {
            get
            {
                if ((this.mAdministratorCheckBox == null))
                {
                    this.mAdministratorCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAdministratorCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_AdministratorPermissionCheckBox_AutoID";
                    this.mAdministratorCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAdministratorCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mAdministratorCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ViewCell2 : WpfCell
    {
        
        public ViewCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ViewCheckBox
        {
            get
            {
                if ((this.mViewCheckBox == null))
                {
                    this.mViewCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_ViewPermissionCheckBox_AutoID";
                    this.mViewCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mViewCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteCell2 : WpfCell
    {
        
        public ExecuteCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ExecuteCheckBox
        {
            get
            {
                if ((this.mExecuteCheckBox == null))
                {
                    this.mExecuteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExecuteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_ExecutePermissionCheckBox_AutoID";
                    this.mExecuteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mExecuteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContributeCell2 : WpfCell
    {
        
        public ContributeCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ContributeCheckBox
        {
            get
            {
                if ((this.mContributeCheckBox == null))
                {
                    this.mContributeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mContributeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Warewolf Administrators_ContributePermissionCheckBox_AutoID";
                    this.mContributeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mContributeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mContributeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PublicROW1 : WpfPane
    {
        
        public PublicROW1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Public_DeployToCell1 Public_DeployToCell
        {
            get
            {
                if ((this.mPublic_DeployToCell == null))
                {
                    this.mPublic_DeployToCell = new Public_DeployToCell1(this);
                }
                return this.mPublic_DeployToCell;
            }
        }
        
        public Public_DeployFromCell1 Public_DeployFromCell
        {
            get
            {
                if ((this.mPublic_DeployFromCell == null))
                {
                    this.mPublic_DeployFromCell = new Public_DeployFromCell1(this);
                }
                return this.mPublic_DeployFromCell;
            }
        }
        
        public Public_AdministratorCell1 Public_AdministratorCell
        {
            get
            {
                if ((this.mPublic_AdministratorCell == null))
                {
                    this.mPublic_AdministratorCell = new Public_AdministratorCell1(this);
                }
                return this.mPublic_AdministratorCell;
            }
        }
        
        public Public_ViewCell1 Public_ViewCell
        {
            get
            {
                if ((this.mPublic_ViewCell == null))
                {
                    this.mPublic_ViewCell = new Public_ViewCell1(this);
                }
                return this.mPublic_ViewCell;
            }
        }
        
        public Public_ExecuteCell1 Public_ExecuteCell
        {
            get
            {
                if ((this.mPublic_ExecuteCell == null))
                {
                    this.mPublic_ExecuteCell = new Public_ExecuteCell1(this);
                }
                return this.mPublic_ExecuteCell;
            }
        }
        
        public Public_ContributeCell1 Public_ContributeCell
        {
            get
            {
                if ((this.mPublic_ContributeCell == null))
                {
                    this.mPublic_ContributeCell = new Public_ContributeCell1(this);
                }
                return this.mPublic_ContributeCell;
            }
        }
        
        public WindowsGroup1 WindowsGroup
        {
            get
            {
                if ((this.mWindowsGroup == null))
                {
                    this.mWindowsGroup = new WindowsGroup1(this);
                }
                return this.mWindowsGroup;
            }
        }
        #endregion
        
        #region Fields
        private Public_DeployToCell1 mPublic_DeployToCell;
        
        private Public_DeployFromCell1 mPublic_DeployFromCell;
        
        private Public_AdministratorCell1 mPublic_AdministratorCell;
        
        private Public_ViewCell1 mPublic_ViewCell;
        
        private Public_ExecuteCell1 mPublic_ExecuteCell;
        
        private Public_ContributeCell1 mPublic_ContributeCell;
        
        private WindowsGroup1 mWindowsGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_DeployToCell1 : WpfCell
    {
        
        public Public_DeployToCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_DeployToCheckBox
        {
            get
            {
                if ((this.mPublic_DeployToCheckBox == null))
                {
                    this.mPublic_DeployToCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_DeployToCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_DeployToPermissionCheckBox_AutoID";
                    this.mPublic_DeployToCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_DeployToCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_DeployToCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_DeployFromCell1 : WpfCell
    {
        
        public Public_DeployFromCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_DeployFromCheckBox
        {
            get
            {
                if ((this.mPublic_DeployFromCheckBox == null))
                {
                    this.mPublic_DeployFromCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_DeployFromCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_DeployFromPermissionCheckBox_AutoID";
                    this.mPublic_DeployFromCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_DeployFromCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_DeployFromCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_AdministratorCell1 : WpfCell
    {
        
        public Public_AdministratorCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_AdministratorCheckBox
        {
            get
            {
                if ((this.mPublic_AdministratorCheckBox == null))
                {
                    this.mPublic_AdministratorCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_AdministratorCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_AdministratorPermissionCheckBox_AutoID";
                    this.mPublic_AdministratorCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_AdministratorCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_AdministratorCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_ViewCell1 : WpfCell
    {
        
        public Public_ViewCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_ViewCheckBox
        {
            get
            {
                if ((this.mPublic_ViewCheckBox == null))
                {
                    this.mPublic_ViewCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_ViewCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_ViewPermissionCheckBox_AutoID";
                    this.mPublic_ViewCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_ViewCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_ViewCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_ExecuteCell1 : WpfCell
    {
        
        public Public_ExecuteCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_ExecuteCheckBox
        {
            get
            {
                if ((this.mPublic_ExecuteCheckBox == null))
                {
                    this.mPublic_ExecuteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_ExecuteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_ExecutePermissionCheckBox_AutoID";
                    this.mPublic_ExecuteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_ExecuteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_ExecuteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Public_ContributeCell1 : WpfCell
    {
        
        public Public_ContributeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox Public_ContributeCheckBox
        {
            get
            {
                if ((this.mPublic_ContributeCheckBox == null))
                {
                    this.mPublic_ContributeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mPublic_ContributeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_Public_ContributePermissionCheckBox_AutoID";
                    this.mPublic_ContributeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPublic_ContributeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mPublic_ContributeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WindowsGroup1 : WpfCell
    {
        
        public WindowsGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "Public";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton Select_GroupButton
        {
            get
            {
                if ((this.mSelect_GroupButton == null))
                {
                    this.mSelect_GroupButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSelect_GroupButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Public_AddWindowsGroupButton_AutoID";
                    this.mSelect_GroupButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelect_GroupButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mSelect_GroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourcePermissions1 : WpfTable
    {
        
        public ResourcePermissions1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ResourcePermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfPane Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new WpfPane(this);
                    #region Search Criteria
                    this.mRow1.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
                    this.mRow1.SearchProperties[WpfPane.PropertyNames.Name] = "0";
                    this.mRow1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private WpfPane mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoggingTab1 : WpfTabPage
    {
        
        public LoggingTab1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LogSettingsViewConte1 LogSettingsViewConte
        {
            get
            {
                if ((this.mLogSettingsViewConte == null))
                {
                    this.mLogSettingsViewConte = new LogSettingsViewConte1(this);
                }
                return this.mLogSettingsViewConte;
            }
        }
        #endregion
        
        #region Fields
        private LogSettingsViewConte1 mLogSettingsViewConte;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LogSettingsViewConte1 : WpfCustom
    {
        
        public LogSettingsViewConte1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.LoggingView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LogSettingsViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public StudioLogs1 StudioLogs
        {
            get
            {
                if ((this.mStudioLogs == null))
                {
                    this.mStudioLogs = new StudioLogs1(this);
                }
                return this.mStudioLogs;
            }
        }
        
        public ServerLogs1 ServerLogs
        {
            get
            {
                if ((this.mServerLogs == null))
                {
                    this.mServerLogs = new ServerLogs1(this);
                }
                return this.mServerLogs;
            }
        }
        #endregion
        
        #region Fields
        private StudioLogs1 mStudioLogs;
        
        private ServerLogs1 mServerLogs;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StudioLogs1 : WpfPane
    {
        
        public StudioLogs1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public StudioLogFile1 StudioLogFile
        {
            get
            {
                if ((this.mStudioLogFile == null))
                {
                    this.mStudioLogFile = new StudioLogFile1(this);
                }
                return this.mStudioLogFile;
            }
        }
        #endregion
        
        #region Fields
        private StudioLogFile1 mStudioLogFile;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StudioLogFile1 : WpfText
    {
        
        public StudioLogFile1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "   ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ItemHyperlink
        {
            get
            {
                if ((this.mItemHyperlink == null))
                {
                    this.mItemHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mItemHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Instance] = "1";
                    this.mItemHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerLogs1 : WpfPane
    {
        
        public ServerLogs1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerLogFile1 ServerLogFile
        {
            get
            {
                if ((this.mServerLogFile == null))
                {
                    this.mServerLogFile = new ServerLogFile1(this);
                }
                return this.mServerLogFile;
            }
        }
        #endregion
        
        #region Fields
        private ServerLogFile1 mServerLogFile;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerLogFile1 : WpfText
    {
        
        public ServerLogFile1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "   ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ItemHyperlink
        {
            get
            {
                if ((this.mItemHyperlink == null))
                {
                    this.mItemHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mItemHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Instance] = "1";
                    this.mItemHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PerfomanceCounterTab1 : WpfTabPage
    {
        
        public PerfomanceCounterTab1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "System.Windows.Controls.TabItem Header: Content:";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PerfmonViewContent1 PerfmonViewContent
        {
            get
            {
                if ((this.mPerfmonViewContent == null))
                {
                    this.mPerfmonViewContent = new PerfmonViewContent1(this);
                }
                return this.mPerfmonViewContent;
            }
        }
        #endregion
        
        #region Fields
        private PerfmonViewContent1 mPerfmonViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PerfmonViewContent1 : WpfCustom
    {
        
        public PerfmonViewContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PerfCounterView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PerfmonViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceTable1 ResourceTable
        {
            get
            {
                if ((this.mResourceTable == null))
                {
                    this.mResourceTable = new ResourceTable1(this);
                }
                return this.mResourceTable;
            }
        }
        
        public ServerTable1 ServerTable
        {
            get
            {
                if ((this.mServerTable == null))
                {
                    this.mServerTable = new ServerTable1(this);
                }
                return this.mServerTable;
            }
        }
        
        public ResetCounter1 ResetCounter
        {
            get
            {
                if ((this.mResetCounter == null))
                {
                    this.mResetCounter = new ResetCounter1(this);
                }
                return this.mResetCounter;
            }
        }
        #endregion
        
        #region Fields
        private ResourceTable1 mResourceTable;
        
        private ServerTable1 mServerTable;
        
        private ResetCounter1 mResetCounter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceTable1 : WpfTable
    {
        
        public ResourceTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ResourcePermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row131 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row131(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row131 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row131 : WpfPane
    {
        
        public Row131(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "0";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TotalErrors2 TotalErrors
        {
            get
            {
                if ((this.mTotalErrors == null))
                {
                    this.mTotalErrors = new TotalErrors2(this);
                }
                return this.mTotalErrors;
            }
        }
        
        public ResourceCell2 ResourceCell
        {
            get
            {
                if ((this.mResourceCell == null))
                {
                    this.mResourceCell = new ResourceCell2(this);
                }
                return this.mResourceCell;
            }
        }
        
        public RequestPerSecond1 RequestPerSecond
        {
            get
            {
                if ((this.mRequestPerSecond == null))
                {
                    this.mRequestPerSecond = new RequestPerSecond1(this);
                }
                return this.mRequestPerSecond;
            }
        }
        
        public DeleteCell4 DeleteCell
        {
            get
            {
                if ((this.mDeleteCell == null))
                {
                    this.mDeleteCell = new DeleteCell4(this);
                }
                return this.mDeleteCell;
            }
        }
        
        public ConcurrentRequest1 ConcurrentRequest
        {
            get
            {
                if ((this.mConcurrentRequest == null))
                {
                    this.mConcurrentRequest = new ConcurrentRequest1(this);
                }
                return this.mConcurrentRequest;
            }
        }
        
        public AverageExecTime1 AverageExecTime
        {
            get
            {
                if ((this.mAverageExecTime == null))
                {
                    this.mAverageExecTime = new AverageExecTime1(this);
                }
                return this.mAverageExecTime;
            }
        }
        #endregion
        
        #region Fields
        private TotalErrors2 mTotalErrors;
        
        private ResourceCell2 mResourceCell;
        
        private RequestPerSecond1 mRequestPerSecond;
        
        private DeleteCell4 mDeleteCell;
        
        private ConcurrentRequest1 mConcurrentRequest;
        
        private AverageExecTime1 mAverageExecTime;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TotalErrors2 : WpfCell
    {
        
        public TotalErrors2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TotalErrorsCheckbox
        {
            get
            {
                if ((this.mTotalErrorsCheckbox == null))
                {
                    this.mTotalErrorsCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTotalErrorsCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTotalErrorsCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTotalErrorsCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceCell2 : WpfCell
    {
        
        public ResourceCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText ResourceTextBox
        {
            get
            {
                if ((this.mResourceTextBox == null))
                {
                    this.mResourceTextBox = new WpfText(this);
                    #region Search Criteria
                    this.mResourceTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceTextBox;
            }
        }
        
        public WpfButton ResourceButton
        {
            get
            {
                if ((this.mResourceButton == null))
                {
                    this.mResourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mResourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mResourceTextBox;
        
        private WpfButton mResourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RequestPerSecond1 : WpfCell
    {
        
        public RequestPerSecond1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox RequestPerSecondCheckbox
        {
            get
            {
                if ((this.mRequestPerSecondCheckbox == null))
                {
                    this.mRequestPerSecondCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequestPerSecondCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestPerSecondCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mRequestPerSecondCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteCell4 : WpfCell
    {
        
        public DeleteCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConcurrentRequest1 : WpfCell
    {
        
        public ConcurrentRequest1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ConcurrentRequestCheckbox
        {
            get
            {
                if ((this.mConcurrentRequestCheckbox == null))
                {
                    this.mConcurrentRequestCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mConcurrentRequestCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConcurrentRequestCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mConcurrentRequestCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AverageExecTime1 : WpfCell
    {
        
        public AverageExecTime1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox AverageExecTimeCheckbox
        {
            get
            {
                if ((this.mAverageExecTimeCheckbox == null))
                {
                    this.mAverageExecTimeCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAverageExecTimeCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAverageExecTimeCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mAverageExecTimeCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerTable1 : WpfTable
    {
        
        public ServerTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "ServerPermissionsDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AverageExecCounter1 AverageExecCounter
        {
            get
            {
                if ((this.mAverageExecCounter == null))
                {
                    this.mAverageExecCounter = new AverageExecCounter1(this);
                }
                return this.mAverageExecCounter;
            }
        }
        
        public ConcurrRequest1 ConcurrRequest
        {
            get
            {
                if ((this.mConcurrRequest == null))
                {
                    this.mConcurrRequest = new ConcurrRequest1(this);
                }
                return this.mConcurrRequest;
            }
        }
        
        public RequestPerSeccond1 RequestPerSeccond
        {
            get
            {
                if ((this.mRequestPerSeccond == null))
                {
                    this.mRequestPerSeccond = new RequestPerSeccond1(this);
                }
                return this.mRequestPerSeccond;
            }
        }
        
        public TotalErrors3 TotalErrors
        {
            get
            {
                if ((this.mTotalErrors == null))
                {
                    this.mTotalErrors = new TotalErrors3(this);
                }
                return this.mTotalErrors;
            }
        }
        
        public WorkflowsNotFound1 WorkflowsNotFound
        {
            get
            {
                if ((this.mWorkflowsNotFound == null))
                {
                    this.mWorkflowsNotFound = new WorkflowsNotFound1(this);
                }
                return this.mWorkflowsNotFound;
            }
        }
        
        public NotAuthorisedErrors1 NotAuthorisedErrors
        {
            get
            {
                if ((this.mNotAuthorisedErrors == null))
                {
                    this.mNotAuthorisedErrors = new NotAuthorisedErrors1(this);
                }
                return this.mNotAuthorisedErrors;
            }
        }
        #endregion
        
        #region Fields
        private AverageExecCounter1 mAverageExecCounter;
        
        private ConcurrRequest1 mConcurrRequest;
        
        private RequestPerSeccond1 mRequestPerSeccond;
        
        private TotalErrors3 mTotalErrors;
        
        private WorkflowsNotFound1 mWorkflowsNotFound;
        
        private NotAuthorisedErrors1 mNotAuthorisedErrors;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AverageExecCounter1 : WpfCell
    {
        
        public AverageExecCounter1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox AverageExecCounterCheckBox
        {
            get
            {
                if ((this.mAverageExecCounterCheckBox == null))
                {
                    this.mAverageExecCounterCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAverageExecCounterCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_New_DeployToPermissionCheckBox_AutoID";
                    this.mAverageExecCounterCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAverageExecCounterCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mAverageExecCounterCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConcurrRequest1 : WpfCell
    {
        
        public ConcurrRequest1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox ConcurrRequestCheckBox
        {
            get
            {
                if ((this.mConcurrRequestCheckBox == null))
                {
                    this.mConcurrRequestCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mConcurrRequestCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConcurrRequestCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mConcurrRequestCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RequestPerSeccond1 : WpfCell
    {
        
        public RequestPerSeccond1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox RequestPerSeccondCheckBox
        {
            get
            {
                if ((this.mRequestPerSeccondCheckBox == null))
                {
                    this.mRequestPerSeccondCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequestPerSeccondCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestPerSeccondCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mRequestPerSeccondCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TotalErrors3 : WpfCell
    {
        
        public TotalErrors3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TotalErrorsCheckBox
        {
            get
            {
                if ((this.mTotalErrorsCheckBox == null))
                {
                    this.mTotalErrorsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTotalErrorsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTotalErrorsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTotalErrorsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowsNotFound1 : WpfCell
    {
        
        public WorkflowsNotFound1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox WorkflowsNotFoundCheckBox
        {
            get
            {
                if ((this.mWorkflowsNotFoundCheckBox == null))
                {
                    this.mWorkflowsNotFoundCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mWorkflowsNotFoundCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflowsNotFoundCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mWorkflowsNotFoundCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NotAuthorisedErrors1 : WpfCell
    {
        
        public NotAuthorisedErrors1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Value] = "True";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox NotAuthorisedErrorsCheckBox
        {
            get
            {
                if ((this.mNotAuthorisedErrorsCheckBox == null))
                {
                    this.mNotAuthorisedErrorsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNotAuthorisedErrorsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNotAuthorisedErrorsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mNotAuthorisedErrorsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResetCounter1 : WpfText
    {
        
        public ResetCounter1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "   ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink ItemHyperlink
        {
            get
            {
                if ((this.mItemHyperlink == null))
                {
                    this.mItemHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mItemHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Instance] = "1";
                    this.mItemHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RabbitMqSourceTabPage : WpfTabPage
    {
        
        public RabbitMqSourceTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.IRabbitMQServiceSourceDe" +
                "finition]";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RabbitMQSourceCustom RabbitMQSourceCustom
        {
            get
            {
                if ((this.mRabbitMQSourceCustom == null))
                {
                    this.mRabbitMQSourceCustom = new RabbitMQSourceCustom(this);
                }
                return this.mRabbitMQSourceCustom;
            }
        }
        #endregion
        
        #region Fields
        private RabbitMQSourceCustom mRabbitMQSourceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RabbitMQSourceCustom : WpfCustom
    {
        
        public RabbitMQSourceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit HostTextBoxEdit
        {
            get
            {
                if ((this.mHostTextBoxEdit == null))
                {
                    this.mHostTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mHostTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "HostTextBox";
                    this.mHostTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHostTextBoxEdit;
            }
        }
        
        public WpfEdit PortTextBoxEdit
        {
            get
            {
                if ((this.mPortTextBoxEdit == null))
                {
                    this.mPortTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPortTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PortTextBox";
                    this.mPortTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPortTextBoxEdit;
            }
        }
        
        public WpfEdit UserNameTextBoxEdit
        {
            get
            {
                if ((this.mUserNameTextBoxEdit == null))
                {
                    this.mUserNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUserNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UserNameTextBox";
                    this.mUserNameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserNameTextBoxEdit;
            }
        }
        
        public WpfEdit PasswordTextBoxEdit
        {
            get
            {
                if ((this.mPasswordTextBoxEdit == null))
                {
                    this.mPasswordTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextBoxEdit;
            }
        }
        
        public WpfEdit VirtualHostTextBoxEdit
        {
            get
            {
                if ((this.mVirtualHostTextBoxEdit == null))
                {
                    this.mVirtualHostTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mVirtualHostTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "VirtualHostTextBox";
                    this.mVirtualHostTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVirtualHostTextBoxEdit;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestPublishCommand";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mHostTextBoxEdit;
        
        private WpfEdit mPortTextBoxEdit;
        
        private WpfEdit mUserNameTextBoxEdit;
        
        private WpfEdit mPasswordTextBoxEdit;
        
        private WpfEdit mVirtualHostTextBoxEdit;
        
        private WpfButton mTestConnectionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EmailSourceTabPage : WpfTabPage
    {
        
        public EmailSourceTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.IEmailServiceSource]";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SendTestModelsCustom SendTestModelsCustom
        {
            get
            {
                if ((this.mSendTestModelsCustom == null))
                {
                    this.mSendTestModelsCustom = new SendTestModelsCustom(this);
                }
                return this.mSendTestModelsCustom;
            }
        }
        
        public WpfButton EmailSourceTabCloseButton
        {
            get
            {
                if ((this.mEmailSourceTabCloseButton == null))
                {
                    this.mEmailSourceTabCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEmailSourceTabCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mEmailSourceTabCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEmailSourceTabCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private SendTestModelsCustom mSendTestModelsCustom;
        
        private WpfButton mEmailSourceTabCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SendTestModelsCustom : WpfCustom
    {
        
        public SendTestModelsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit FromTextBoxEdit
        {
            get
            {
                if ((this.mFromTextBoxEdit == null))
                {
                    this.mFromTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mFromTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "FromTextBox";
                    this.mFromTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFromTextBoxEdit;
            }
        }
        
        public WpfEdit ToTextBoxEdit
        {
            get
            {
                if ((this.mToTextBoxEdit == null))
                {
                    this.mToTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mToTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ToTextBox";
                    this.mToTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToTextBoxEdit;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestSendCommand";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public WpfEdit TimeoutTextBoxEdit
        {
            get
            {
                if ((this.mTimeoutTextBoxEdit == null))
                {
                    this.mTimeoutTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTimeoutTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TimeoutTextBox";
                    this.mTimeoutTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTimeoutTextBoxEdit;
            }
        }
        
        public WpfEdit PortTextBoxEdit
        {
            get
            {
                if ((this.mPortTextBoxEdit == null))
                {
                    this.mPortTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPortTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PortTextBox";
                    this.mPortTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPortTextBoxEdit;
            }
        }
        
        public WpfRadioButton EnableSSLYesRadioButton
        {
            get
            {
                if ((this.mEnableSSLYesRadioButton == null))
                {
                    this.mEnableSSLYesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mEnableSSLYesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "EnableSslYes";
                    this.mEnableSSLYesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEnableSSLYesRadioButton;
            }
        }
        
        public WpfRadioButton EnableSSLNORadioButton
        {
            get
            {
                if ((this.mEnableSSLNORadioButton == null))
                {
                    this.mEnableSSLNORadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mEnableSSLNORadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "EnableSslNo";
                    this.mEnableSSLNORadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEnableSSLNORadioButton;
            }
        }
        
        public WpfEdit PasswordTextBoxEdit
        {
            get
            {
                if ((this.mPasswordTextBoxEdit == null))
                {
                    this.mPasswordTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextBoxEdit;
            }
        }
        
        public WpfEdit UserNameTextBoxEdit
        {
            get
            {
                if ((this.mUserNameTextBoxEdit == null))
                {
                    this.mUserNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUserNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UserNameTextBox";
                    this.mUserNameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserNameTextBoxEdit;
            }
        }
        
        public WpfEdit HostTextBoxEdit
        {
            get
            {
                if ((this.mHostTextBoxEdit == null))
                {
                    this.mHostTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mHostTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "HostTextBox";
                    this.mHostTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHostTextBoxEdit;
            }
        }
        
        public WpfText PassedText
        {
            get
            {
                if ((this.mPassedText == null))
                {
                    this.mPassedText = new WpfText(this);
                    #region Search Criteria
                    this.mPassedText.SearchProperties[WpfText.PropertyNames.Name] = "Passed";
                    this.mPassedText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassedText;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mFromTextBoxEdit;
        
        private WpfEdit mToTextBoxEdit;
        
        private WpfButton mTestConnectionButton;
        
        private WpfEdit mTimeoutTextBoxEdit;
        
        private WpfEdit mPortTextBoxEdit;
        
        private WpfRadioButton mEnableSSLYesRadioButton;
        
        private WpfRadioButton mEnableSSLNORadioButton;
        
        private WpfEdit mPasswordTextBoxEdit;
        
        private WpfEdit mUserNameTextBoxEdit;
        
        private WpfEdit mHostTextBoxEdit;
        
        private WpfText mPassedText;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExchangeSourceTabPage : WpfTabPage
    {
        
        public ExchangeSourceTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.SourceViewModel`1[Dev2.Common.Interfaces.ToolBase.ExchangeEmail.I" +
                "ExchangeSource]";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfButton ExchangeSourceTabCloseButton
        {
            get
            {
                if ((this.mExchangeSourceTabCloseButton == null))
                {
                    this.mExchangeSourceTabCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExchangeSourceTabCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mExchangeSourceTabCloseButton.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mExchangeSourceTabCloseButton;
            }
        }
        
        public SendTestModelsCustom1 SendTestModelsCustom
        {
            get
            {
                if ((this.mSendTestModelsCustom == null))
                {
                    this.mSendTestModelsCustom = new SendTestModelsCustom1(this);
                }
                return this.mSendTestModelsCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mExchangeSourceTabCloseButton;
        
        private SendTestModelsCustom1 mSendTestModelsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SendTestModelsCustom1 : WpfCustom
    {
        
        public SendTestModelsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfEdit AutoDiscoverUrlTxtBox
        {
            get
            {
                if ((this.mAutoDiscoverUrlTxtBox == null))
                {
                    this.mAutoDiscoverUrlTxtBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mAutoDiscoverUrlTxtBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "AutoDiscoverUrlTxtBox";
                    this.mAutoDiscoverUrlTxtBox.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mAutoDiscoverUrlTxtBox;
            }
        }
        
        public WpfEdit UserNameTextBox
        {
            get
            {
                if ((this.mUserNameTextBox == null))
                {
                    this.mUserNameTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mUserNameTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UserNameTextBox";
                    this.mUserNameTextBox.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mUserNameTextBox;
            }
        }
        
        public WpfEdit ToTextBox
        {
            get
            {
                if ((this.mToTextBox == null))
                {
                    this.mToTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mToTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ToTextBox";
                    this.mToTextBox.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mToTextBox;
            }
        }
        
        public WpfEdit PasswordTextBox
        {
            get
            {
                if ((this.mPasswordTextBox == null))
                {
                    this.mPasswordTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBox.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mPasswordTextBox;
            }
        }
        
        public WpfButton TestConnectionButton
        {
            get
            {
                if ((this.mTestConnectionButton == null))
                {
                    this.mTestConnectionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestConnectionButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestSendCommand";
                    this.mTestConnectionButton.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mTestConnectionButton;
            }
        }
        
        public PassedText PassedText
        {
            get
            {
                if ((this.mPassedText == null))
                {
                    this.mPassedText = new PassedText(this);
                }
                return this.mPassedText;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAutoDiscoverUrlTxtBox;
        
        private WpfEdit mUserNameTextBox;
        
        private WpfEdit mToTextBox;
        
        private WpfEdit mPasswordTextBox;
        
        private WpfButton mTestConnectionButton;
        
        private PassedText mPassedText;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PassedText : WpfText
    {
        
        public PassedText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "Passed";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfImage UIItemImage
        {
            get
            {
                if ((this.mUIItemImage == null))
                {
                    this.mUIItemImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIItemImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemImage.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mUIItemImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUIItemImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Help1 : WpfCustom
    {
        
        public Help1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Help";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DocumentorUnpinBtn
        {
            get
            {
                if ((this.mDocumentorUnpinBtn == null))
                {
                    this.mDocumentorUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mDocumentorUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mDocumentorUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDocumentorUnpinBtn;
            }
        }
        
        public WpfControl HelpWindow
        {
            get
            {
                if ((this.mHelpWindow == null))
                {
                    this.mHelpWindow = new WpfControl(this);
                    #region Search Criteria
                    this.mHelpWindow.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mHelpWindow.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mHelpWindow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHelpWindow;
            }
        }
        
        public WpfCustom HelpTextEditor
        {
            get
            {
                if ((this.mHelpTextEditor == null))
                {
                    this.mHelpTextEditor = new WpfCustom(this);
                    #region Search Criteria
                    this.mHelpTextEditor.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamRichTextEditor";
                    this.mHelpTextEditor.SearchProperties[WpfControl.PropertyNames.AutomationId] = "XamRichTextEditor";
                    this.mHelpTextEditor.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHelpTextEditor;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDocumentorUnpinBtn;
        
        private WpfControl mHelpWindow;
        
        private WpfCustom mHelpTextEditor;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane1 : WpfCustom
    {
        
        public TabManSplitPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan1 TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan1(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan1 mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan1 : WpfTabList
    {
        
        public TabMan1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestsTabPage1 TestsTabPage
        {
            get
            {
                if ((this.mTestsTabPage == null))
                {
                    this.mTestsTabPage = new TestsTabPage1(this);
                }
                return this.mTestsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private TestsTabPage1 mTestsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestsTabPage1 : WpfTabPage
    {
        
        public TestsTabPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.ViewModels.StudioTestViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TabDescription
        {
            get
            {
                if ((this.mTabDescription == null))
                {
                    this.mTabDescription = new WpfText(this);
                    #region Search Criteria
                    this.mTabDescription.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabDescription;
            }
        }
        
        public WpfButton CloseTestTabButton
        {
            get
            {
                if ((this.mCloseTestTabButton == null))
                {
                    this.mCloseTestTabButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseTestTabButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseTestTabButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseTestTabButton;
            }
        }
        
        public WorkSurfaceContext11 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext11(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTabDescription;
        
        private WpfButton mCloseTestTabButton;
        
        private WorkSurfaceContext11 mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext11 : WpfCustom
    {
        
        public WorkSurfaceContext11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServiceTestView1 ServiceTestView
        {
            get
            {
                if ((this.mServiceTestView == null))
                {
                    this.mServiceTestView = new ServiceTestView1(this);
                }
                return this.mServiceTestView;
            }
        }
        #endregion
        
        #region Fields
        private ServiceTestView1 mServiceTestView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceTestView1 : WpfCustom
    {
        
        public ServiceTestView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceTestView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_ServiceTestView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UrlText1 UrlText
        {
            get
            {
                if ((this.mUrlText == null))
                {
                    this.mUrlText = new UrlText1(this);
                }
                return this.mUrlText;
            }
        }
        
        public WpfButton RunAllButton
        {
            get
            {
                if ((this.mRunAllButton == null))
                {
                    this.mRunAllButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunAllButton.SearchProperties[WpfButton.PropertyNames.Name] = "Run All";
                    this.mRunAllButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunAllButton;
            }
        }
        
        public TestsListboxList1 TestsListboxList
        {
            get
            {
                if ((this.mTestsListboxList == null))
                {
                    this.mTestsListboxList = new TestsListboxList1(this);
                }
                return this.mTestsListboxList;
            }
        }
        
        public WpfButton DuplicateButton
        {
            get
            {
                if ((this.mDuplicateButton == null))
                {
                    this.mDuplicateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDuplicateButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Duplicate this test";
                    this.mDuplicateButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDuplicateButton;
            }
        }
        
        public WpfRadioButton WindowsRadioButton
        {
            get
            {
                if ((this.mWindowsRadioButton == null))
                {
                    this.mWindowsRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mWindowsRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "WindowsRadioButton";
                    this.mWindowsRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWindowsRadioButton;
            }
        }
        
        public WpfText TestNameText
        {
            get
            {
                if ((this.mTestNameText == null))
                {
                    this.mTestNameText = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameText.SearchProperties[WpfText.PropertyNames.Name] = "Test Name";
                    this.mTestNameText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameText;
            }
        }
        
        public TestInputsTable2 TestInputsTable
        {
            get
            {
                if ((this.mTestInputsTable == null))
                {
                    this.mTestInputsTable = new TestInputsTable2(this);
                }
                return this.mTestInputsTable;
            }
        }
        
        public TestOutputsTable1 TestOutputsTable
        {
            get
            {
                if ((this.mTestOutputsTable == null))
                {
                    this.mTestOutputsTable = new TestOutputsTable1(this);
                }
                return this.mTestOutputsTable;
            }
        }
        
        public WpfRadioButton ErrorRadioButton
        {
            get
            {
                if ((this.mErrorRadioButton == null))
                {
                    this.mErrorRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mErrorRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ErrorRadioButton";
                    this.mErrorRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorRadioButton;
            }
        }
        
        public WpfRadioButton NoErrorRadioButton
        {
            get
            {
                if ((this.mNoErrorRadioButton == null))
                {
                    this.mNoErrorRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mNoErrorRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "NoErrorRadioButton";
                    this.mNoErrorRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNoErrorRadioButton;
            }
        }
        
        public WpfRadioButton UserRadioButton
        {
            get
            {
                if ((this.mUserRadioButton == null))
                {
                    this.mUserRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUserRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UserRadioButton";
                    this.mUserRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUserRadioButton;
            }
        }
        
        public WpfEdit PasswordTextBoxEdit
        {
            get
            {
                if ((this.mPasswordTextBoxEdit == null))
                {
                    this.mPasswordTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PasswordTextBox";
                    this.mPasswordTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordTextBoxEdit;
            }
        }
        
        public WpfEdit UsernameTextBoxEdit
        {
            get
            {
                if ((this.mUsernameTextBoxEdit == null))
                {
                    this.mUsernameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUsernameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UsernameTextBox";
                    this.mUsernameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUsernameTextBoxEdit;
            }
        }
        
        public WpfText TestUrlText
        {
            get
            {
                if ((this.mTestUrlText == null))
                {
                    this.mTestUrlText = new WpfText(this);
                    #region Search Criteria
                    this.mTestUrlText.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mTestUrlText.SearchProperties[WpfText.PropertyNames.Name] = " ";
                    this.mTestUrlText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestUrlText;
            }
        }
        
        public WpfEdit TestNameTextbox
        {
            get
            {
                if ((this.mTestNameTextbox == null))
                {
                    this.mTestNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTestNameTextbox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mTestNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameTextbox;
            }
        }
        
        public StepTestDataTreeTree1 StepTestDataTreeTree
        {
            get
            {
                if ((this.mStepTestDataTreeTree == null))
                {
                    this.mStepTestDataTreeTree = new StepTestDataTreeTree1(this);
                }
                return this.mStepTestDataTreeTree;
            }
        }
        
        public UserControl_1Custom1 UserControl_1Custom
        {
            get
            {
                if ((this.mUserControl_1Custom == null))
                {
                    this.mUserControl_1Custom = new UserControl_1Custom1(this);
                }
                return this.mUserControl_1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UrlText1 mUrlText;
        
        private WpfButton mRunAllButton;
        
        private TestsListboxList1 mTestsListboxList;
        
        private WpfButton mDuplicateButton;
        
        private WpfRadioButton mWindowsRadioButton;
        
        private WpfText mTestNameText;
        
        private TestInputsTable2 mTestInputsTable;
        
        private TestOutputsTable1 mTestOutputsTable;
        
        private WpfRadioButton mErrorRadioButton;
        
        private WpfRadioButton mNoErrorRadioButton;
        
        private WpfRadioButton mUserRadioButton;
        
        private WpfEdit mPasswordTextBoxEdit;
        
        private WpfEdit mUsernameTextBoxEdit;
        
        private WpfText mTestUrlText;
        
        private WpfEdit mTestNameTextbox;
        
        private StepTestDataTreeTree1 mStepTestDataTreeTree;
        
        private UserControl_1Custom1 mUserControl_1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UrlText1 : WpfText
    {
        
        public UrlText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Instance] = "1";
            this.SearchProperties[WpfText.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UrlHyperlink
        {
            get
            {
                if ((this.mUrlHyperlink == null))
                {
                    this.mUrlHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUrlHyperlink.SearchProperties[WpfHyperlink.PropertyNames.AutomationId] = "RunAllTestsUrl";
                    this.mUrlHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUrlHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUrlHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestsListboxList1 : WpfList
    {
        
        public TestsListboxList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "TestsListbox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public CreateTest1 CreateTest
        {
            get
            {
                if ((this.mCreateTest == null))
                {
                    this.mCreateTest = new CreateTest1(this);
                }
                return this.mCreateTest;
            }
        }
        
        public Test11 Test1
        {
            get
            {
                if ((this.mTest1 == null))
                {
                    this.mTest1 = new Test11(this);
                }
                return this.mTest1;
            }
        }
        
        public Test21 Test2
        {
            get
            {
                if ((this.mTest2 == null))
                {
                    this.mTest2 = new Test21(this);
                }
                return this.mTest2;
            }
        }
        
        public Test31 Test3
        {
            get
            {
                if ((this.mTest3 == null))
                {
                    this.mTest3 = new Test31(this);
                }
                return this.mTest3;
            }
        }
        
        public Test41 Test4
        {
            get
            {
                if ((this.mTest4 == null))
                {
                    this.mTest4 = new Test41(this);
                }
                return this.mTest4;
            }
        }
        
        public Test51 Test5
        {
            get
            {
                if ((this.mTest5 == null))
                {
                    this.mTest5 = new Test51(this);
                }
                return this.mTest5;
            }
        }
        #endregion
        
        #region Fields
        private CreateTest1 mCreateTest;
        
        private Test11 mTest1;
        
        private Test21 mTest2;
        
        private Test31 mTest3;
        
        private Test41 mTest4;
        
        private Test51 mTest5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateTest1 : WpfListItem
    {
        
        public CreateTest1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.DummyServiceTest";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CreateTestButton
        {
            get
            {
                if ((this.mCreateTestButton == null))
                {
                    this.mCreateTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCreateTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Create a new test";
                    this.mCreateTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateTestButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCreateTestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test11 : WpfListItem
    {
        
        public Test11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test21 : WpfListItem
    {
        
        public Test21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test31 : WpfListItem
    {
        
        public Test31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test41 : WpfListItem
    {
        
        public Test41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Test51 : WpfListItem
    {
        
        public Test51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestModel";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox TestEnabledSelector
        {
            get
            {
                if ((this.mTestEnabledSelector == null))
                {
                    this.mTestEnabledSelector = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mTestEnabledSelector.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Enable or Ignore this test";
                    this.mTestEnabledSelector.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestEnabledSelector;
            }
        }
        
        public WpfButton RunButton
        {
            get
            {
                if ((this.mRunButton == null))
                {
                    this.mRunButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRunButton.SearchProperties.Add(new PropertyExpression(WpfButton.PropertyNames.HelpText, "Run this test", PropertyExpressionOperator.Contains));
                    this.mRunButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunButton;
            }
        }
        
        public WpfButton StopButton
        {
            get
            {
                if ((this.mStopButton == null))
                {
                    this.mStopButton = new WpfButton(this);
                    #region Search Criteria
                    this.mStopButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Stop this test";
                    this.mStopButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStopButton;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this test";
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        
        public WpfButton DisabledDeleteButton
        {
            get
            {
                if ((this.mDisabledDeleteButton == null))
                {
                    this.mDisabledDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDisabledDeleteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Cannot delete an enabled test";
                    this.mDisabledDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisabledDeleteButton;
            }
        }
        
        public WpfText TestNameDisplay
        {
            get
            {
                if ((this.mTestNameDisplay == null))
                {
                    this.mTestNameDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mTestNameDisplay.SearchProperties[WpfText.PropertyNames.HelpText] = "Test Name";
                    this.mTestNameDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestNameDisplay;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.HelpText] = "Pending";
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Passing
        {
            get
            {
                if ((this.mPassing == null))
                {
                    this.mPassing = new WpfText(this);
                    #region Search Criteria
                    this.mPassing.SearchProperties[WpfText.PropertyNames.HelpText] = "Passed";
                    this.mPassing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassing;
            }
        }
        
        public WpfText Failing
        {
            get
            {
                if ((this.mFailing == null))
                {
                    this.mFailing = new WpfText(this);
                    #region Search Criteria
                    this.mFailing.SearchProperties[WpfText.PropertyNames.HelpText] = "Failed";
                    this.mFailing.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailing;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText NeverRunDisplay
        {
            get
            {
                if ((this.mNeverRunDisplay == null))
                {
                    this.mNeverRunDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mNeverRunDisplay.SearchProperties[WpfText.PropertyNames.Name] = "Never run";
                    this.mNeverRunDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNeverRunDisplay;
            }
        }
        
        public WpfText RunTimeDisplay
        {
            get
            {
                if ((this.mRunTimeDisplay == null))
                {
                    this.mRunTimeDisplay = new WpfText(this);
                    #region Search Criteria
                    this.mRunTimeDisplay.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRunTimeDisplay;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mTestEnabledSelector;
        
        private WpfButton mRunButton;
        
        private WpfButton mStopButton;
        
        private WpfButton mDeleteButton;
        
        private WpfButton mDisabledDeleteButton;
        
        private WpfText mTestNameDisplay;
        
        private WpfText mPending;
        
        private WpfText mPassing;
        
        private WpfText mFailing;
        
        private WpfText mInvalid;
        
        private WpfText mNeverRunDisplay;
        
        private WpfText mRunTimeDisplay;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInputsTable2 : WpfTable
    {
        
        public TestInputsTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "UI_TestInputsDev2DataGrid_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row132 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row132(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row132 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row132 : WpfRow
    {
        
        public Row132(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell5 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell5(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell5 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell5 : WpfCell
    {
        
        public Cell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseComboBox16 IntellisenseComboBox
        {
            get
            {
                if ((this.mIntellisenseComboBox == null))
                {
                    this.mIntellisenseComboBox = new IntellisenseComboBox16(this);
                }
                return this.mIntellisenseComboBox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseComboBox16 mIntellisenseComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseComboBox16 : WpfComboBox
    {
        
        public IntellisenseComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TestInputsValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "1";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestOutputsTable1 : WpfTable
    {
        
        public TestOutputsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "UI_TestOutputsDev2DataGrid_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row133 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row133(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row133 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row133 : WpfRow
    {
        
        public Row133(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell6 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell6(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell6 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell6 : WpfCell
    {
        
        public Cell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseComboBox17 IntellisenseComboBox
        {
            get
            {
                if ((this.mIntellisenseComboBox == null))
                {
                    this.mIntellisenseComboBox = new IntellisenseComboBox17(this);
                }
                return this.mIntellisenseComboBox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseComboBox17 mIntellisenseComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseComboBox17 : WpfComboBox
    {
        
        public IntellisenseComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TestOutputsValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "1";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StepTestDataTreeTree1 : WpfTree
    {
        
        public StepTestDataTreeTree1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "StepTestDataTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SetOutputTreeItem1 SetOutputTreeItem
        {
            get
            {
                if ((this.mSetOutputTreeItem == null))
                {
                    this.mSetOutputTreeItem = new SetOutputTreeItem1(this);
                }
                return this.mSetOutputTreeItem;
            }
        }
        
        public AssignToNameTreeItem1 AssignToNameTreeItem
        {
            get
            {
                if ((this.mAssignToNameTreeItem == null))
                {
                    this.mAssignToNameTreeItem = new AssignToNameTreeItem1(this);
                }
                return this.mAssignToNameTreeItem;
            }
        }
        
        public SequenceTreeItem2 SequenceTreeItem
        {
            get
            {
                if ((this.mSequenceTreeItem == null))
                {
                    this.mSequenceTreeItem = new SequenceTreeItem2(this);
                }
                return this.mSequenceTreeItem;
            }
        }
        
        public ForeachTreeItem1 ForeachTreeItem
        {
            get
            {
                if ((this.mForeachTreeItem == null))
                {
                    this.mForeachTreeItem = new ForeachTreeItem1(this);
                }
                return this.mForeachTreeItem;
            }
        }
        
        public DecisionTreeItem1 DecisionTreeItem
        {
            get
            {
                if ((this.mDecisionTreeItem == null))
                {
                    this.mDecisionTreeItem = new DecisionTreeItem1(this);
                }
                return this.mDecisionTreeItem;
            }
        }
        
        public RandomTreeItem1 RandomTreeItem
        {
            get
            {
                if ((this.mRandomTreeItem == null))
                {
                    this.mRandomTreeItem = new RandomTreeItem1(this);
                }
                return this.mRandomTreeItem;
            }
        }
        
        public DiceRollTreeItem1 DiceRollTreeItem
        {
            get
            {
                if ((this.mDiceRollTreeItem == null))
                {
                    this.mDiceRollTreeItem = new DiceRollTreeItem1(this);
                }
                return this.mDiceRollTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private SetOutputTreeItem1 mSetOutputTreeItem;
        
        private AssignToNameTreeItem1 mAssignToNameTreeItem;
        
        private SequenceTreeItem2 mSequenceTreeItem;
        
        private ForeachTreeItem1 mForeachTreeItem;
        
        private DecisionTreeItem1 mDecisionTreeItem;
        
        private RandomTreeItem1 mRandomTreeItem;
        
        private DiceRollTreeItem1 mDiceRollTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetOutputTreeItem1 : WpfTreeItem
    {
        
        public SetOutputTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OutputMessageAssert1 OutputMessageAssert
        {
            get
            {
                if ((this.mOutputMessageAssert == null))
                {
                    this.mOutputMessageAssert = new OutputMessageAssert1(this);
                }
                return this.mOutputMessageAssert;
            }
        }
        #endregion
        
        #region Fields
        private OutputMessageAssert1 mOutputMessageAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputMessageAssert1 : WpfExpander
    {
        
        public OutputMessageAssert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable14 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable14(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader6 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader6(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable14 mSmallDataGridTable;
        
        private AssertHeader6 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable14 : WpfTable
    {
        
        public SmallDataGridTable14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row134 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row134(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader5 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader5(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row134 mRow1;
        
        private ColumnHeadersPrHeader5 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row134 : WpfRow
    {
        
        public Row134(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell7 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell7(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell5 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell5(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public StatusViewCell5 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell5(this);
                }
                return this.mStatusViewCell;
            }
        }
        
        public AssertValueCell2 AssertValueCell
        {
            get
            {
                if ((this.mAssertValueCell == null))
                {
                    this.mAssertValueCell = new AssertValueCell2(this);
                }
                return this.mAssertValueCell;
            }
        }
        
        public Cell7 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell7(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell7 mResultCell;
        
        private AssertOperatorCell5 mAssertOperatorCell;
        
        private StatusViewCell5 mStatusViewCell;
        
        private AssertValueCell2 mAssertValueCell;
        
        private Cell7 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell7 : WpfCell
    {
        
        public ResultCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell5 : WpfCell
    {
        
        public AssertOperatorCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell5 : WpfCell
    {
        
        public StatusViewCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertValueCell2 : WpfCell
    {
        
        public AssertValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell7 : WpfCustom
    {
        
        public Cell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader5 : WpfControl
    {
        
        public ColumnHeadersPrHeader5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert5 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert5(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert5 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert5 : WpfControl
    {
        
        public MockOrAssert5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader6 : WpfButton
    {
        
        public AssertHeader6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignToNameTreeItem1 : WpfTreeItem
    {
        
        public AssignToNameTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignAssert1 AssignAssert
        {
            get
            {
                if ((this.mAssignAssert == null))
                {
                    this.mAssignAssert = new AssignAssert1(this);
                }
                return this.mAssignAssert;
            }
        }
        #endregion
        
        #region Fields
        private AssignAssert1 mAssignAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignAssert1 : WpfExpander
    {
        
        public AssignAssert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable15 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable15(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader7 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader7(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable15 mSmallDataGridTable;
        
        private AssertHeader7 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable15 : WpfTable
    {
        
        public SmallDataGridTable15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row135 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row135(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader6 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader6(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row135 mRow1;
        
        private ColumnHeadersPrHeader6 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row135 : WpfRow
    {
        
        public Row135(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell8 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell8(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell6 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell6(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell4 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell4(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell6 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell6(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell8 mResultCell;
        
        private AssertOperatorCell6 mAssertOperatorCell;
        
        private OptionsForValueCell4 mOptionsForValueCell;
        
        private StatusViewCell6 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell8 : WpfCell
    {
        
        public ResultCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell6 : WpfCell
    {
        
        public AssertOperatorCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell4 : WpfCell
    {
        
        public OptionsForValueCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox4 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox4(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox4 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox4 : WpfComboBox
    {
        
        public OptionsForValueComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell6 : WpfCell
    {
        
        public StatusViewCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader6 : WpfControl
    {
        
        public ColumnHeadersPrHeader6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert6 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert6(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert6 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert6 : WpfControl
    {
        
        public MockOrAssert6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader7 : WpfButton
    {
        
        public AssertHeader7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceTreeItem2 : WpfTreeItem
    {
        
        public SequenceTreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SequenceAssert1 SequenceAssert
        {
            get
            {
                if ((this.mSequenceAssert == null))
                {
                    this.mSequenceAssert = new SequenceAssert1(this);
                }
                return this.mSequenceAssert;
            }
        }
        #endregion
        
        #region Fields
        private SequenceAssert1 mSequenceAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceAssert1 : WpfExpander
    {
        
        public SequenceAssert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitNamesTreeItem1 SplitNamesTreeItem
        {
            get
            {
                if ((this.mSplitNamesTreeItem == null))
                {
                    this.mSplitNamesTreeItem = new SplitNamesTreeItem1(this);
                }
                return this.mSplitNamesTreeItem;
            }
        }
        
        public AssertHeader9 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader9(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SplitNamesTreeItem1 mSplitNamesTreeItem;
        
        private AssertHeader9 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitNamesTreeItem1 : WpfTreeItem
    {
        
        public SplitNamesTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitNamesAssert1 SplitNamesAssert
        {
            get
            {
                if ((this.mSplitNamesAssert == null))
                {
                    this.mSplitNamesAssert = new SplitNamesAssert1(this);
                }
                return this.mSplitNamesAssert;
            }
        }
        #endregion
        
        #region Fields
        private SplitNamesAssert1 mSplitNamesAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitNamesAssert1 : WpfExpander
    {
        
        public SplitNamesAssert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable16 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable16(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader8 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader8(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable16 mSmallDataGridTable;
        
        private AssertHeader8 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable16 : WpfTable
    {
        
        public SmallDataGridTable16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row136 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row136(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader7 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader7(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row136 mRow1;
        
        private ColumnHeadersPrHeader7 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row136 : WpfRow
    {
        
        public Row136(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell9 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell9(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell7 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell7(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell5 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell5(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell7 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell7(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell9 mResultCell;
        
        private AssertOperatorCell7 mAssertOperatorCell;
        
        private OptionsForValueCell5 mOptionsForValueCell;
        
        private StatusViewCell7 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell9 : WpfCell
    {
        
        public ResultCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell7 : WpfCell
    {
        
        public AssertOperatorCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell5 : WpfCell
    {
        
        public OptionsForValueCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox5 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox5(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox5 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox5 : WpfComboBox
    {
        
        public OptionsForValueComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell7 : WpfCell
    {
        
        public StatusViewCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader7 : WpfControl
    {
        
        public ColumnHeadersPrHeader7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert7 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert7(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert7 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert7 : WpfControl
    {
        
        public MockOrAssert7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader8 : WpfButton
    {
        
        public AssertHeader8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader9 : WpfButton
    {
        
        public AssertHeader9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForeachTreeItem1 : WpfTreeItem
    {
        
        public ForeachTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SequenceTreeItem3 SequenceTreeItem
        {
            get
            {
                if ((this.mSequenceTreeItem == null))
                {
                    this.mSequenceTreeItem = new SequenceTreeItem3(this);
                }
                return this.mSequenceTreeItem;
            }
        }
        
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private SequenceTreeItem3 mSequenceTreeItem;
        
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceTreeItem3 : WpfTreeItem
    {
        
        public SequenceTreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ConvertCaseToTitleCase1 ConvertCaseToTitleCase
        {
            get
            {
                if ((this.mConvertCaseToTitleCase == null))
                {
                    this.mConvertCaseToTitleCase = new ConvertCaseToTitleCase1(this);
                }
                return this.mConvertCaseToTitleCase;
            }
        }
        #endregion
        
        #region Fields
        private ConvertCaseToTitleCase1 mConvertCaseToTitleCase;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertCaseToTitleCase1 : WpfTreeItem
    {
        
        public ConvertCaseToTitleCase1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ConvertCase1 ConvertCase
        {
            get
            {
                if ((this.mConvertCase == null))
                {
                    this.mConvertCase = new ConvertCase1(this);
                }
                return this.mConvertCase;
            }
        }
        #endregion
        
        #region Fields
        private ConvertCase1 mConvertCase;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertCase1 : WpfExpander
    {
        
        public ConvertCase1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable17 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable17(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader10 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader10(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable17 mSmallDataGridTable;
        
        private AssertHeader10 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable17 : WpfTable
    {
        
        public SmallDataGridTable17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row137 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row137(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader8 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader8(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row137 mRow1;
        
        private ColumnHeadersPrHeader8 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row137 : WpfRow
    {
        
        public Row137(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell10 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell10(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell8 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell8(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell6 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell6(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell8 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell8(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell10 mResultCell;
        
        private AssertOperatorCell8 mAssertOperatorCell;
        
        private OptionsForValueCell6 mOptionsForValueCell;
        
        private StatusViewCell8 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell10 : WpfCell
    {
        
        public ResultCell10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell8 : WpfCell
    {
        
        public AssertOperatorCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell6 : WpfCell
    {
        
        public OptionsForValueCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox6 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox6(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox6 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox6 : WpfComboBox
    {
        
        public OptionsForValueComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell8 : WpfCell
    {
        
        public StatusViewCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader8 : WpfControl
    {
        
        public ColumnHeadersPrHeader8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert8 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert8(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert8 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert8 : WpfControl
    {
        
        public MockOrAssert8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader10 : WpfButton
    {
        
        public AssertHeader10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecisionTreeItem1 : WpfTreeItem
    {
        
        public DecisionTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DecisionAssert1 DecisionAssert
        {
            get
            {
                if ((this.mDecisionAssert == null))
                {
                    this.mDecisionAssert = new DecisionAssert1(this);
                }
                return this.mDecisionAssert;
            }
        }
        #endregion
        
        #region Fields
        private DecisionAssert1 mDecisionAssert;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecisionAssert1 : WpfExpander
    {
        
        public DecisionAssert1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchProperties[WpfExpander.PropertyNames.ClassName] = "Expander";
            this.SearchProperties[WpfExpander.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ServiceTestStep";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable18 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable18(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public AssertHeader11 AssertHeader
        {
            get
            {
                if ((this.mAssertHeader == null))
                {
                    this.mAssertHeader = new AssertHeader11(this);
                }
                return this.mAssertHeader;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable18 mSmallDataGridTable;
        
        private AssertHeader11 mAssertHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable18 : WpfTable
    {
        
        public SmallDataGridTable18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row138 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row138(this);
                }
                return this.mRow1;
            }
        }
        
        public ColumnHeadersPrHeader9 ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mColumnHeadersPrHeader == null))
                {
                    this.mColumnHeadersPrHeader = new ColumnHeadersPrHeader9(this);
                }
                return this.mColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private Row138 mRow1;
        
        private ColumnHeadersPrHeader9 mColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row138 : WpfRow
    {
        
        public Row138(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell11 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell11(this);
                }
                return this.mResultCell;
            }
        }
        
        public AssertOperatorCell9 AssertOperatorCell
        {
            get
            {
                if ((this.mAssertOperatorCell == null))
                {
                    this.mAssertOperatorCell = new AssertOperatorCell9(this);
                }
                return this.mAssertOperatorCell;
            }
        }
        
        public OptionsForValueCell7 OptionsForValueCell
        {
            get
            {
                if ((this.mOptionsForValueCell == null))
                {
                    this.mOptionsForValueCell = new OptionsForValueCell7(this);
                }
                return this.mOptionsForValueCell;
            }
        }
        
        public StatusViewCell9 StatusViewCell
        {
            get
            {
                if ((this.mStatusViewCell == null))
                {
                    this.mStatusViewCell = new StatusViewCell9(this);
                }
                return this.mStatusViewCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell11 mResultCell;
        
        private AssertOperatorCell9 mAssertOperatorCell;
        
        private OptionsForValueCell7 mOptionsForValueCell;
        
        private StatusViewCell9 mStatusViewCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell11 : WpfCell
    {
        
        public ResultCell11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Name] = "Item: Warewolf.Studio.ViewModels.ServiceTestOutput, Column Display Index: 1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValue
        {
            get
            {
                if ((this.mAssertValue == null))
                {
                    this.mAssertValue = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValue.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertOperatorCell9 : WpfCell
    {
        
        public AssertOperatorCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox AssertOperatorComboBox
        {
            get
            {
                if ((this.mAssertOperatorComboBox == null))
                {
                    this.mAssertOperatorComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAssertOperatorComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_AssertOps_AutoID";
                    this.mAssertOperatorComboBox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertOperatorComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertOperatorComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mAssertOperatorComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueCell7 : WpfCell
    {
        
        public OptionsForValueCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OptionsForValueComboBox7 OptionsForValueComboBox
        {
            get
            {
                if ((this.mOptionsForValueComboBox == null))
                {
                    this.mOptionsForValueComboBox = new OptionsForValueComboBox7(this);
                }
                return this.mOptionsForValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OptionsForValueComboBox7 mOptionsForValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OptionsForValueComboBox7 : WpfComboBox
    {
        
        public OptionsForValueComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_OptionsForValue_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NameInputListItem
        {
            get
            {
                if ((this.mNameInputListItem == null))
                {
                    this.mNameInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNameInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Name Input";
                    this.mNameInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mNameInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNameInputListItem;
            }
        }
        
        public WpfListItem BlankInputListItem
        {
            get
            {
                if ((this.mBlankInputListItem == null))
                {
                    this.mBlankInputListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mBlankInputListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Blank Input";
                    this.mBlankInputListItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBlankInputListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBlankInputListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNameInputListItem;
        
        private WpfListItem mBlankInputListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusViewCell9 : WpfCell
    {
        
        public StatusViewCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPending;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ColumnHeadersPrHeader9 : WpfControl
    {
        
        public ColumnHeadersPrHeader9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl HeaderItem
        {
            get
            {
                if ((this.mHeaderItem == null))
                {
                    this.mHeaderItem = new WpfControl(this);
                    #region Search Criteria
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mHeaderItem.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mHeaderItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mHeaderItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHeaderItem;
            }
        }
        
        public WpfControl Result
        {
            get
            {
                if ((this.mResult == null))
                {
                    this.mResult = new WpfControl(this);
                    #region Search Criteria
                    this.mResult.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mResult.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mResult.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResult.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResult;
            }
        }
        
        public MockOrAssert9 MockOrAssert
        {
            get
            {
                if ((this.mMockOrAssert == null))
                {
                    this.mMockOrAssert = new MockOrAssert9(this);
                }
                return this.mMockOrAssert;
            }
        }
        
        public WpfControl Value
        {
            get
            {
                if ((this.mValue == null))
                {
                    this.mValue = new WpfControl(this);
                    #region Search Criteria
                    this.mValue.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
                    this.mValue.SearchProperties[WpfControl.PropertyNames.Instance] = "4";
                    this.mValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mHeaderItem;
        
        private WpfControl mResult;
        
        private MockOrAssert9 mMockOrAssert;
        
        private WpfControl mValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MockOrAssert9 : WpfControl
    {
        
        public MockOrAssert9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton MockRadioButton
        {
            get
            {
                if ((this.mMockRadioButton == null))
                {
                    this.mMockRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_MockRadioButton_AutoID";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Mock";
                    this.mMockRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepMockRadioButtonTooltip";
                    this.mMockRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMockRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMockRadioButton;
            }
        }
        
        public WpfRadioButton AssertRadioButton
        {
            get
            {
                if ((this.mAssertRadioButton == null))
                {
                    this.mAssertRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI_AssertRadioButton_AutoID";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.HelpText] = "ServiceTestStepAssertRadioButtonTooltip";
                    this.mAssertRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Assert";
                    this.mAssertRadioButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mMockRadioButton;
        
        private WpfRadioButton mAssertRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertHeader11 : WpfButton
    {
        
        public AssertHeader11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteAssertButton
        {
            get
            {
                if ((this.mDeleteAssertButton == null))
                {
                    this.mDeleteAssertButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteAssertButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_TestStepDelete_AutoID";
                    this.mDeleteAssertButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteAssertButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteAssertButton;
            }
        }
        
        public WpfText Invalid
        {
            get
            {
                if ((this.mInvalid == null))
                {
                    this.mInvalid = new WpfText(this);
                    #region Search Criteria
                    this.mInvalid.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mInvalid.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInvalid.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInvalid;
            }
        }
        
        public WpfText Pending
        {
            get
            {
                if ((this.mPending == null))
                {
                    this.mPending = new WpfText(this);
                    #region Search Criteria
                    this.mPending.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPending.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPending.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPending;
            }
        }
        
        public WpfText Failed
        {
            get
            {
                if ((this.mFailed == null))
                {
                    this.mFailed = new WpfText(this);
                    #region Search Criteria
                    this.mFailed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mFailed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFailed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFailed;
            }
        }
        
        public WpfText Passed
        {
            get
            {
                if ((this.mPassed == null))
                {
                    this.mPassed = new WpfText(this);
                    #region Search Criteria
                    this.mPassed.SearchProperties[WpfText.PropertyNames.Name] = "?";
                    this.mPassed.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mPassed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPassed;
            }
        }
        
        public WpfButton ToolIcon
        {
            get
            {
                if ((this.mToolIcon == null))
                {
                    this.mToolIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mToolIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
                    this.mToolIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mToolIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToolIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteAssertButton;
        
        private WpfText mInvalid;
        
        private WpfText mPending;
        
        private WpfText mFailed;
        
        private WpfText mPassed;
        
        private WpfButton mToolIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RandomTreeItem1 : WpfTreeItem
    {
        
        public RandomTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RandomExpander1 RandomExpander
        {
            get
            {
                if ((this.mRandomExpander == null))
                {
                    this.mRandomExpander = new RandomExpander1(this);
                }
                return this.mRandomExpander;
            }
        }
        #endregion
        
        #region Fields
        private RandomExpander1 mRandomExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RandomExpander1 : WpfExpander
    {
        
        public RandomExpander1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton RandomExpanderHeader
        {
            get
            {
                if ((this.mRandomExpanderHeader == null))
                {
                    this.mRandomExpanderHeader = new WpfButton(this);
                    #region Search Criteria
                    this.mRandomExpanderHeader.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
                    this.mRandomExpanderHeader.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRandomExpanderHeader.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRandomExpanderHeader;
            }
        }
        
        public SmallDataGridTable19 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable19(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mRandomExpanderHeader;
        
        private SmallDataGridTable19 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable19 : WpfTable
    {
        
        public SmallDataGridTable19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row139 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row139(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row139 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row139 : WpfRow
    {
        
        public Row139(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssertValueCell3 AssertValueCell
        {
            get
            {
                if ((this.mAssertValueCell == null))
                {
                    this.mAssertValueCell = new AssertValueCell3(this);
                }
                return this.mAssertValueCell;
            }
        }
        #endregion
        
        #region Fields
        private AssertValueCell3 mAssertValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertValueCell3 : WpfCell
    {
        
        public AssertValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValueEdit
        {
            get
            {
                if ((this.mAssertValueEdit == null))
                {
                    this.mAssertValueEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValueEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValueEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValueEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValueEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValueEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DiceRollTreeItem1 : WpfTreeItem
    {
        
        public DiceRollTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DiceRollExpander1 DiceRollExpander
        {
            get
            {
                if ((this.mDiceRollExpander == null))
                {
                    this.mDiceRollExpander = new DiceRollExpander1(this);
                }
                return this.mDiceRollExpander;
            }
        }
        #endregion
        
        #region Fields
        private DiceRollExpander1 mDiceRollExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DiceRollExpander1 : WpfExpander
    {
        
        public DiceRollExpander1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ServiceTestTestStepExpander_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable20 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable20(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable20 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable20 : WpfTable
    {
        
        public SmallDataGridTable20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row140 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row140(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row140 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row140 : WpfRow
    {
        
        public Row140(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell12 ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell12(this);
                }
                return this.mResultCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell12 mResultCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell12 : WpfCell
    {
        
        public ResultCell12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Result";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit AssertValueResultEdit
        {
            get
            {
                if ((this.mAssertValueResultEdit == null))
                {
                    this.mAssertValueResultEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mAssertValueResultEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_AssertValue_AutoID";
                    this.mAssertValueResultEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssertValueResultEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssertValueResultEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mAssertValueResultEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserControl_1Custom1 : WpfCustom
    {
        
        public UserControl_1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane23 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane23(this);
                }
                return this.mScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane23 mScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane23 : WpfPane
    {
        
        public ScrollViewerPane23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityBuilderCustom1 ActivityBuilderCustom
        {
            get
            {
                if ((this.mActivityBuilderCustom == null))
                {
                    this.mActivityBuilderCustom = new ActivityBuilderCustom1(this);
                }
                return this.mActivityBuilderCustom;
            }
        }
        #endregion
        
        #region Fields
        private ActivityBuilderCustom1 mActivityBuilderCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityBuilderCustom1 : WpfCustom
    {
        
        public ActivityBuilderCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenteCustom1 WorkflowItemPresenteCustom
        {
            get
            {
                if ((this.mWorkflowItemPresenteCustom == null))
                {
                    this.mWorkflowItemPresenteCustom = new WorkflowItemPresenteCustom1(this);
                }
                return this.mWorkflowItemPresenteCustom;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenteCustom1 mWorkflowItemPresenteCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenteCustom1 : WpfCustom
    {
        
        public WorkflowItemPresenteCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FlowchartCustom1 FlowchartCustom
        {
            get
            {
                if ((this.mFlowchartCustom == null))
                {
                    this.mFlowchartCustom = new FlowchartCustom1(this);
                }
                return this.mFlowchartCustom;
            }
        }
        #endregion
        
        #region Fields
        private FlowchartCustom1 mFlowchartCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FlowchartCustom1 : WpfCustom
    {
        
        public FlowchartCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Hello World(FlowchartDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DsfMultiAssignActiviCustom1 DsfMultiAssignActiviCustom
        {
            get
            {
                if ((this.mDsfMultiAssignActiviCustom == null))
                {
                    this.mDsfMultiAssignActiviCustom = new DsfMultiAssignActiviCustom1(this);
                }
                return this.mDsfMultiAssignActiviCustom;
            }
        }
        #endregion
        
        #region Fields
        private DsfMultiAssignActiviCustom1 mDsfMultiAssignActiviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DsfMultiAssignActiviCustom1 : WpfCustom
    {
        
        public DsfMultiAssignActiviCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Assign a value to Name if blank (1)(MultiAssignDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DisplayNameEdit
        {
            get
            {
                if ((this.mDisplayNameEdit == null))
                {
                    this.mDisplayNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameBox";
                    this.mDisplayNameEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDisplayNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugInputDialog : WpfWindow
    {
        
        public DebugInputDialog(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Debug input data";
            this.SearchProperties[WpfWindow.PropertyNames.ClassName] = "Uia.Window";
            this.SearchProperties[WpfWindow.PropertyNames.AutomationId] = "UI_DebugInputWindow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabItemsTabList TabItemsTabList
        {
            get
            {
                if ((this.mTabItemsTabList == null))
                {
                    this.mTabItemsTabList = new TabItemsTabList(this);
                }
                return this.mTabItemsTabList;
            }
        }
        
        public WpfCheckBox RememberDebugInputCheckBox
        {
            get
            {
                if ((this.mRememberDebugInputCheckBox == null))
                {
                    this.mRememberDebugInputCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRememberDebugInputCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_RememberInputsCb_AutoID";
                    this.mRememberDebugInputCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRememberDebugInputCheckBox;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Cancelbtn_AutoID";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton DebugF6Button
        {
            get
            {
                if ((this.mDebugF6Button == null))
                {
                    this.mDebugF6Button = new WpfButton(this);
                    #region Search Criteria
                    this.mDebugF6Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Executebtn_AutoID";
                    this.mDebugF6Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDebugF6Button;
            }
        }
        
        public WpfButton ViewInBrowserF7Button
        {
            get
            {
                if ((this.mViewInBrowserF7Button == null))
                {
                    this.mViewInBrowserF7Button = new WpfButton(this);
                    #region Search Criteria
                    this.mViewInBrowserF7Button.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Browserbtn_AutoID";
                    this.mViewInBrowserF7Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewInBrowserF7Button;
            }
        }
        #endregion
        
        #region Fields
        private TabItemsTabList mTabItemsTabList;
        
        private WpfCheckBox mRememberDebugInputCheckBox;
        
        private WpfButton mCancelButton;
        
        private WpfButton mDebugF6Button;
        
        private WpfButton mViewInBrowserF7Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabItemsTabList : WpfTabList
    {
        
        public TabItemsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "TabItems";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputDataTab InputDataTab
        {
            get
            {
                if ((this.mInputDataTab == null))
                {
                    this.mInputDataTab = new InputDataTab(this);
                }
                return this.mInputDataTab;
            }
        }
        
        public XMLTab XMLTab
        {
            get
            {
                if ((this.mXMLTab == null))
                {
                    this.mXMLTab = new XMLTab(this);
                }
                return this.mXMLTab;
            }
        }
        
        public JSONTab JSONTab
        {
            get
            {
                if ((this.mJSONTab == null))
                {
                    this.mJSONTab = new JSONTab(this);
                }
                return this.mJSONTab;
            }
        }
        #endregion
        
        #region Fields
        private InputDataTab mInputDataTab;
        
        private XMLTab mXMLTab;
        
        private JSONTab mJSONTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputDataTab : WpfTabPage
    {
        
        public InputDataTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "UI_InputDataTab_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputsTable3 InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable3(this);
                }
                return this.mInputsTable;
            }
        }
        #endregion
        
        #region Fields
        private InputsTable3 mInputsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable3 : WpfTable
    {
        
        public InputsTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "DataListInputs";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row141 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row141(this);
                }
                return this.mRow1;
            }
        }
        
        public Row28 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row28(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row141 mRow1;
        
        private Row28 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row141 : WpfPane
    {
        
        public Row141(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "0";
            this.SearchProperties[WpfPane.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputValueCell InputValueCell
        {
            get
            {
                if ((this.mInputValueCell == null))
                {
                    this.mInputValueCell = new InputValueCell(this);
                }
                return this.mInputValueCell;
            }
        }
        #endregion
        
        #region Fields
        private InputValueCell mInputValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputValueCell : WpfCell
    {
        
        public InputValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputValueComboboxl InputValueComboboxl
        {
            get
            {
                if ((this.mInputValueComboboxl == null))
                {
                    this.mInputValueComboboxl = new InputValueComboboxl(this);
                }
                return this.mInputValueComboboxl;
            }
        }
        #endregion
        
        #region Fields
        private InputValueComboboxl mInputValueComboboxl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputValueComboboxl : WpfComboBox
    {
        
        public InputValueComboboxl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit InputValueText
        {
            get
            {
                if ((this.mInputValueText == null))
                {
                    this.mInputValueText = new WpfEdit(this);
                    #region Search Criteria
                    this.mInputValueText.SearchProperties[WpfEdit.PropertyNames.Instance] = "1";
                    this.mInputValueText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputValueText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mInputValueText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row28 : WpfPane
    {
        
        public Row28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.CellsPanel";
            this.SearchProperties[WpfPane.PropertyNames.Name] = "0";
            this.SearchProperties[WpfPane.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputValueCell1 InputValueCell
        {
            get
            {
                if ((this.mInputValueCell == null))
                {
                    this.mInputValueCell = new InputValueCell1(this);
                }
                return this.mInputValueCell;
            }
        }
        #endregion
        
        #region Fields
        private InputValueCell1 mInputValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputValueCell1 : WpfCell
    {
        
        public InputValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputValueComboboxl1 InputValueComboboxl
        {
            get
            {
                if ((this.mInputValueComboboxl == null))
                {
                    this.mInputValueComboboxl = new InputValueComboboxl1(this);
                }
                return this.mInputValueComboboxl;
            }
        }
        #endregion
        
        #region Fields
        private InputValueComboboxl1 mInputValueComboboxl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputValueComboboxl1 : WpfComboBox
    {
        
        public InputValueComboboxl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit InputValueText
        {
            get
            {
                if ((this.mInputValueText == null))
                {
                    this.mInputValueText = new WpfEdit(this);
                    #region Search Criteria
                    this.mInputValueText.SearchProperties[WpfEdit.PropertyNames.Instance] = "1";
                    this.mInputValueText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputValueText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mInputValueText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XMLTab : WpfTabPage
    {
        
        public XMLTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "UI_XMLTab_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom XMLWindow
        {
            get
            {
                if ((this.mXMLWindow == null))
                {
                    this.mXMLWindow = new WpfCustom(this);
                    #region Search Criteria
                    this.mXMLWindow.SearchProperties[WpfControl.PropertyNames.ClassName] = null;
                    this.mXMLWindow.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_XMLEditor_AutoID";
                    this.mXMLWindow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mXMLWindow;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mXMLWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class JSONTab : WpfTabPage
    {
        
        public JSONTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.AutomationId] = "UI_XMLTab_AutoID";
            this.SearchProperties[WpfTabPage.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom JSONWindow
        {
            get
            {
                if ((this.mJSONWindow == null))
                {
                    this.mJSONWindow = new WpfCustom(this);
                    #region Search Criteria
                    this.mJSONWindow.SearchProperties[WpfControl.PropertyNames.ClassName] = null;
                    this.mJSONWindow.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_JsonEditor_AutoID";
                    this.mJSONWindow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mJSONWindow;
            }
        }
        
        public CommentTreeItem1 CommentTreeItem
        {
            get
            {
                if ((this.mCommentTreeItem == null))
                {
                    this.mCommentTreeItem = new CommentTreeItem1(this);
                }
                return this.mCommentTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mJSONWindow;
        
        private CommentTreeItem1 mCommentTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentTreeItem1 : WpfTreeItem
    {
        
        public CommentTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CommentButton
        {
            get
            {
                if ((this.mCommentButton == null))
                {
                    this.mCommentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCommentButton.SearchProperties[WpfButton.PropertyNames.Name] = "Comment";
                    this.mCommentButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCommentButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCommentButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCommentButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemAsNewRemoteServer : WpfCustom
    {
        
        public ComboboxListItemAsNewRemoteServer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "New Remote Server...";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText NewRemoteServerItemText
        {
            get
            {
                if ((this.mNewRemoteServerItemText == null))
                {
                    this.mNewRemoteServerItemText = new WpfText(this);
                    #region Search Criteria
                    this.mNewRemoteServerItemText.SearchProperties[WpfText.PropertyNames.Name] = "New Remote Server...";
                    this.mNewRemoteServerItemText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewRemoteServerItemText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mNewRemoteServerItemText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemAsLocalhost : WpfText
    {
        
        public ComboboxListItemAsLocalhost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "localhost";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "localhost";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemAsLocalhostConnected : WpfCustom
    {
        
        public ComboboxListItemAsLocalhostConnected(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "localhost (Connected)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "localhost (Connected)";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemAsRemoteConnectionIntegrationConnected : WpfCustom
    {
        
        public ComboboxListItemAsRemoteConnectionIntegrationConnected(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Remote Connection Integration (Connected)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration (Connected)";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemAsMicrosoftSQLServer : WpfCustom
    {
        
        public ComboboxListItemAsMicrosoftSQLServer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Microsoft SQL Server";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText MicrosoftSQLServerText
        {
            get
            {
                if ((this.mMicrosoftSQLServerText == null))
                {
                    this.mMicrosoftSQLServerText = new WpfText(this);
                    #region Search Criteria
                    this.mMicrosoftSQLServerText.SearchProperties[WpfText.PropertyNames.Name] = "Microsoft SQL Server";
                    this.mMicrosoftSQLServerText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMicrosoftSQLServerText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mMicrosoftSQLServerText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemPostgreSqlDatabase : WpfCustom
    {
        
        public ComboboxListItemPostgreSqlDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "PostgreSQL Database";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText PostgreSQLDatabase
        {
            get
            {
                if ((this.mPostgreSQLDatabase == null))
                {
                    this.mPostgreSQLDatabase = new WpfText(this);
                    #region Search Criteria
                    this.mPostgreSQLDatabase.SearchProperties[WpfText.PropertyNames.Name] = "PostgreSQL Database";
                    this.mPostgreSQLDatabase.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPostgreSQLDatabase;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mPostgreSQLDatabase;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemODBCDatabase : WpfCustom
    {
        
        public ComboboxListItemODBCDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "ODBC Database";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText ODBCDatabaseText
        {
            get
            {
                if ((this.mODBCDatabaseText == null))
                {
                    this.mODBCDatabaseText = new WpfText(this);
                    #region Search Criteria
                    this.mODBCDatabaseText.SearchProperties[WpfText.PropertyNames.Name] = "ODBC Database";
                    this.mODBCDatabaseText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mODBCDatabaseText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mODBCDatabaseText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemMySqlDatabase : WpfCustom
    {
        
        public ComboboxListItemMySqlDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "MySql Database";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText MySqlDatabaseText
        {
            get
            {
                if ((this.mMySqlDatabaseText == null))
                {
                    this.mMySqlDatabaseText = new WpfText(this);
                    #region Search Criteria
                    this.mMySqlDatabaseText.SearchProperties[WpfText.PropertyNames.Name] = "MySql Database";
                    this.mMySqlDatabaseText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMySqlDatabaseText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mMySqlDatabaseText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnpinnedTab : WpfCustom
    {
        
        public UnpinnedTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ToolWindow";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPane SplitPane
        {
            get
            {
                if ((this.mSplitPane == null))
                {
                    this.mSplitPane = new SplitPane(this);
                }
                return this.mSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private SplitPane mSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPane : WpfCustom
    {
        
        public SplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext12 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext12(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext12 mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext12 : WpfCustom
    {
        
        public WorkSurfaceContext12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView1 WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView1(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        
        public TopScrollViewerPane1 TopScrollViewerPane
        {
            get
            {
                if ((this.mTopScrollViewerPane == null))
                {
                    this.mTopScrollViewerPane = new TopScrollViewerPane1(this);
                }
                return this.mTopScrollViewerPane;
            }
        }
        
        public SplitPaneRight1 SplitPaneRight
        {
            get
            {
                if ((this.mSplitPaneRight == null))
                {
                    this.mSplitPaneRight = new SplitPaneRight1(this);
                }
                return this.mSplitPaneRight;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView1 mWorkflowDesignerView;
        
        private TopScrollViewerPane1 mTopScrollViewerPane;
        
        private SplitPaneRight1 mSplitPaneRight;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView1 : WpfCustom
    {
        
        public WorkflowDesignerView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView1 DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView1(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView1 mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView1 : WpfCustom
    {
        
        public DesignerView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane24 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane24(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfToggleButton ExpandAllToggleButton
        {
            get
            {
                if ((this.mExpandAllToggleButton == null))
                {
                    this.mExpandAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mExpandAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "expandAllButton";
                    this.mExpandAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandAllToggleButton;
            }
        }
        
        public WpfToggleButton CollapseAllToggleButton
        {
            get
            {
                if ((this.mCollapseAllToggleButton == null))
                {
                    this.mCollapseAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mCollapseAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "collapseAllButton";
                    this.mCollapseAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCollapseAllToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane24 mScrollViewerPane;
        
        private WpfToggleButton mExpandAllToggleButton;
        
        private WpfToggleButton mCollapseAllToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane24 : WpfPane
    {
        
        public ScrollViewerPane24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner1 ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner1(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner1 mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner1 : WpfCustom
    {
        
        public ActivityTypeDesigner1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter1 WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter1(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter1 mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter1 : WpfCustom
    {
        
        public WorkflowItemPresenter1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart1 Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart1(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart1 mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart1 : WpfCustom
    {
        
        public Flowchart1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MultiAssign2 MultiAssign
        {
            get
            {
                if ((this.mMultiAssign == null))
                {
                    this.mMultiAssign = new MultiAssign2(this);
                }
                return this.mMultiAssign;
            }
        }
        
        public WpfCustom StartNode
        {
            get
            {
                if ((this.mStartNode == null))
                {
                    this.mStartNode = new WpfCustom(this);
                    #region Search Criteria
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.StartSymbol";
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.AutomationId] = "StartSymbol";
                    this.mStartNode.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStartNode;
            }
        }
        
        public WpfCustom Connector1
        {
            get
            {
                if ((this.mConnector1 == null))
                {
                    this.mConnector1 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mConnector1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector1;
            }
        }
        
        public Error11 Error1
        {
            get
            {
                if ((this.mError1 == null))
                {
                    this.mError1 = new Error11(this);
                }
                return this.mError1;
            }
        }
        #endregion
        
        #region Fields
        private MultiAssign2 mMultiAssign;
        
        private WpfCustom mStartNode;
        
        private WpfCustom mConnector1;
        
        private Error11 mError1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MultiAssign2 : WpfCustom
    {
        
        public MultiAssign2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "MultiAssignDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView21 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView21(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView32 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView32(this);
                }
                return this.mLargeView;
            }
        }
        
        public DoneButton1 DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new DoneButton1(this);
                }
                return this.mDoneButton;
            }
        }
        
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent4 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent4(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton AddButton
        {
            get
            {
                if ((this.mAddButton == null))
                {
                    this.mAddButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAddButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddModeButton";
                    this.mAddButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView21 mSmallView;
        
        private LargeView32 mLargeView;
        
        private DoneButton1 mDoneButton;
        
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent4 mQuickVariableInputContent;
        
        private WpfButton mAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView21 : WpfCustom
    {
        
        public SmallView21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid6 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid6(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid6 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid6 : WpfTable
    {
        
        public DataGrid6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row142 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row142(this);
                }
                return this.mRow1;
            }
        }
        
        public Row29 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row29(this);
                }
                return this.mRow2;
            }
        }
        
        public Row35 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row35(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row142 mRow1;
        
        private Row29 mRow2;
        
        private Row35 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row142 : WpfRow
    {
        
        public Row142(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell13 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell13(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell17 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell17(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell3 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell3(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell13 mVariableCell;
        
        private ValueCell17 mValueCell;
        
        private RowNumberCell3 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell13 : WpfCell
    {
        
        public VariableCell13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox18 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox18(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox18 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox18 : WpfComboBox
    {
        
        public IntellisenseCombobox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox3 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox3(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox3 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox3 : WpfEdit
    {
        
        public Textbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "[[Variable1]]";
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell17 : WpfCell
    {
        
        public ValueCell17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox19 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox19(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox19 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox19 : WpfComboBox
    {
        
        public IntellisenseCombobox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell3 : WpfCell
    {
        
        public RowNumberCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "1";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row29 : WpfRow
    {
        
        public Row29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell14 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell14(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell18 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell18(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell4 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell4(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell14 mVariableCell;
        
        private ValueCell18 mValueCell;
        
        private RowNumberCell4 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell14 : WpfCell
    {
        
        public VariableCell14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox20 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox20(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox20 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox20 : WpfComboBox
    {
        
        public IntellisenseCombobox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox4 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox4(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox4 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox4 : WpfEdit
    {
        
        public Textbox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell18 : WpfCell
    {
        
        public ValueCell18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox21 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox21(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox21 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox21 : WpfComboBox
    {
        
        public IntellisenseCombobox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell4 : WpfCell
    {
        
        public RowNumberCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "2";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row35 : WpfRow
    {
        
        public Row35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell15 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell15(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell19 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell19(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell5 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell5(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell15 mVariableCell;
        
        private ValueCell19 mValueCell;
        
        private RowNumberCell5 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell15 : WpfCell
    {
        
        public VariableCell15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox22 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox22(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox22 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox22 : WpfComboBox
    {
        
        public IntellisenseCombobox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox5 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox5(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox5 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox5 : WpfEdit
    {
        
        public Textbox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell19 : WpfCell
    {
        
        public ValueCell19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox23 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox23(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox23 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox23 : WpfComboBox
    {
        
        public IntellisenseCombobox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell5 : WpfCell
    {
        
        public RowNumberCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "3";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView32 : WpfCustom
    {
        
        public LargeView32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid7 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid7(this);
                }
                return this.mDataGrid;
            }
        }
        
        public OnErrorPane20 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane20(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid7 mDataGrid;
        
        private OnErrorPane20 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid7 : WpfTable
    {
        
        public DataGrid7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row143 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row143(this);
                }
                return this.mRow1;
            }
        }
        
        public Row210 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row210(this);
                }
                return this.mRow2;
            }
        }
        
        public Row36 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row36(this);
                }
                return this.mRow3;
            }
        }
        
        public Row42 Row4
        {
            get
            {
                if ((this.mRow4 == null))
                {
                    this.mRow4 = new Row42(this);
                }
                return this.mRow4;
            }
        }
        #endregion
        
        #region Fields
        private Row143 mRow1;
        
        private Row210 mRow2;
        
        private Row36 mRow3;
        
        private Row42 mRow4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row143 : WpfRow
    {
        
        public Row143(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfRow.PropertyNames.AutomationId, "UI_ActivityGridRow_0_AutoID", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell16 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell16(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell20 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell20(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell16 mVariableCell;
        
        private ValueCell20 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell16 : WpfCell
    {
        
        public VariableCell16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox24 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox24(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox24 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox24 : WpfComboBox
    {
        
        public IntellisenseCombobox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell20 : WpfCell
    {
        
        public ValueCell20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox25 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox25(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox25 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox25 : WpfComboBox
    {
        
        public IntellisenseCombobox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row210 : WpfRow
    {
        
        public Row210(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell17 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell17(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell21 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell21(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell17 mVariableCell;
        
        private ValueCell21 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell17 : WpfCell
    {
        
        public VariableCell17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox26 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox26(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox26 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox26 : WpfComboBox
    {
        
        public IntellisenseCombobox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell21 : WpfCell
    {
        
        public ValueCell21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox27 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox27(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox27 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox27 : WpfComboBox
    {
        
        public IntellisenseCombobox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row36 : WpfRow
    {
        
        public Row36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell18 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell18(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell22 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell22(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell18 mVariableCell;
        
        private ValueCell22 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell18 : WpfCell
    {
        
        public VariableCell18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox28 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox28(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox28 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox28 : WpfComboBox
    {
        
        public IntellisenseCombobox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell22 : WpfCell
    {
        
        public ValueCell22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox29 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox29(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox29 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox29 : WpfComboBox
    {
        
        public IntellisenseCombobox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row42 : WpfRow
    {
        
        public Row42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_3_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell19 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell19(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell23 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell23(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell19 mVariableCell;
        
        private ValueCell23 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell19 : WpfCell
    {
        
        public VariableCell19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox30 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox30(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox30 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox30 : WpfComboBox
    {
        
        public IntellisenseCombobox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell23 : WpfCell
    {
        
        public ValueCell23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox31 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox31(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox31 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox31 : WpfComboBox
    {
        
        public IntellisenseCombobox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane20 : WpfCustom
    {
        
        public OnErrorPane20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup61 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup61(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup61 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup61 : WpfGroup
    {
        
        public OnErrorGroup61(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox13 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox13(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox11 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox11(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox13 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox11 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox13 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox11 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DoneButton1 : WpfButton
    {
        
        public DoneButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl ItemIndicator
        {
            get
            {
                if ((this.mItemIndicator == null))
                {
                    this.mItemIndicator = new WpfControl(this);
                    #region Search Criteria
                    this.mItemIndicator.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemIndicator.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemIndicator.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemIndicator;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mItemIndicator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent4 : WpfCustom
    {
        
        public QuickVariableInputContent4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixEdit
        {
            get
            {
                if ((this.mPrefixEdit == null))
                {
                    this.mPrefixEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixEdit;
            }
        }
        
        public WpfEdit SuffixEdit
        {
            get
            {
                if ((this.mSuffixEdit == null))
                {
                    this.mSuffixEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSuffixEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSuffixEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuffixEdit;
            }
        }
        
        public PreviewCustom5 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom5(this);
                }
                return this.mPreviewCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixEdit;
        
        private WpfEdit mSuffixEdit;
        
        private PreviewCustom5 mPreviewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom5 : WpfCustom
    {
        
        public PreviewCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup5 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup5(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup5 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup5 : WpfGroup
    {
        
        public PreviewGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPreviewButton.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
                    this.mPreviewButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Error11 : WpfText
    {
        
        public Error11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TopScrollViewerPane1 : WpfPane
    {
        
        public TopScrollViewerPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ScrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnsavedWorkflowLinkText1 UnsavedWorkflowLinkText
        {
            get
            {
                if ((this.mUnsavedWorkflowLinkText == null))
                {
                    this.mUnsavedWorkflowLinkText = new UnsavedWorkflowLinkText1(this);
                }
                return this.mUnsavedWorkflowLinkText;
            }
        }
        #endregion
        
        #region Fields
        private UnsavedWorkflowLinkText1 mUnsavedWorkflowLinkText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnsavedWorkflowLinkText1 : WpfText
    {
        
        public UnsavedWorkflowLinkText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "Unassigned/Unsaved", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneRight1 : WpfCustom
    {
        
        public SplitPaneRight1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Variables1 Variables
        {
            get
            {
                if ((this.mVariables == null))
                {
                    this.mVariables = new Variables1(this);
                }
                return this.mVariables;
            }
        }
        
        public DebugOutput1 DebugOutput
        {
            get
            {
                if ((this.mDebugOutput == null))
                {
                    this.mDebugOutput = new DebugOutput1(this);
                }
                return this.mDebugOutput;
            }
        }
        #endregion
        
        #region Fields
        private Variables1 mVariables;
        
        private DebugOutput1 mDebugOutput;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Variables1 : WpfCustom
    {
        
        public Variables1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Variables";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton VariableUnpinBtn
        {
            get
            {
                if ((this.mVariableUnpinBtn == null))
                {
                    this.mVariableUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mVariableUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mVariableUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableUnpinBtn;
            }
        }
        
        public DatalistView1 DatalistView
        {
            get
            {
                if ((this.mDatalistView == null))
                {
                    this.mDatalistView = new DatalistView1(this);
                }
                return this.mDatalistView;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mVariableUnpinBtn;
        
        private DatalistView1 mDatalistView;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatalistView1 : WpfCustom
    {
        
        public DatalistView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataListView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_DataListView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTree1 VariableTree
        {
            get
            {
                if ((this.mVariableTree == null))
                {
                    this.mVariableTree = new VariableTree1(this);
                }
                return this.mVariableTree;
            }
        }
        
        public SearchTextbox3 SearchTextbox
        {
            get
            {
                if ((this.mSearchTextbox == null))
                {
                    this.mSearchTextbox = new SearchTextbox3(this);
                }
                return this.mSearchTextbox;
            }
        }
        
        public WpfButton RemoveUnused
        {
            get
            {
                if ((this.mRemoveUnused == null))
                {
                    this.mRemoveUnused = new WpfButton(this);
                    #region Search Criteria
                    this.mRemoveUnused.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_AddRemovebtn_AutoID";
                    this.mRemoveUnused.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRemoveUnused;
            }
        }
        
        public WpfButton Sort
        {
            get
            {
                if ((this.mSort == null))
                {
                    this.mSort = new WpfButton(this);
                    #region Search Criteria
                    this.mSort.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Sortbtn_AutoID";
                    this.mSort.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSort;
            }
        }
        #endregion
        
        #region Fields
        private VariableTree1 mVariableTree;
        
        private SearchTextbox3 mSearchTextbox;
        
        private WpfButton mRemoveUnused;
        
        private WpfButton mSort;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTree1 : WpfTree
    {
        
        public VariableTree1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "UI_VariableTreeView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTreeItem1 VariableTreeItem
        {
            get
            {
                if ((this.mVariableTreeItem == null))
                {
                    this.mVariableTreeItem = new VariableTreeItem1(this);
                }
                return this.mVariableTreeItem;
            }
        }
        
        public RecordsetTreeItem1 RecordsetTreeItem
        {
            get
            {
                if ((this.mRecordsetTreeItem == null))
                {
                    this.mRecordsetTreeItem = new RecordsetTreeItem1(this);
                }
                return this.mRecordsetTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private VariableTreeItem1 mVariableTreeItem;
        
        private RecordsetTreeItem1 mRecordsetTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTreeItem1 : WpfTreeItem
    {
        
        public VariableTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Variable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem12 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem12(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem22 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem22(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem32 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem32(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem42 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem42(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem52 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem52(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem12 mTreeItem1;
        
        private TreeItem22 mTreeItem2;
        
        private TreeItem32 mTreeItem3;
        
        private TreeItem42 mTreeItem4;
        
        private TreeItem52 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem12 : WpfTreeItem
    {
        
        public TreeItem12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane25 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane25(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane25 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane25 : WpfPane
    {
        
        public ScrollViewerPane25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox21 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox21(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox21 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox21 : WpfEdit
    {
        
        public NameTextbox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public DeleteButton1 DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new DeleteButton1(this);
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private DeleteButton1 mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteButton1 : WpfButton
    {
        
        public DeleteButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteVar";
                    this.mImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem22 : WpfTreeItem
    {
        
        public TreeItem22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane26 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane26(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane26 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane26 : WpfPane
    {
        
        public ScrollViewerPane26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox22 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox22(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox22 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox22 : WpfEdit
    {
        
        public NameTextbox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem32 : WpfTreeItem
    {
        
        public TreeItem32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane27 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane27(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane27 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane27 : WpfPane
    {
        
        public ScrollViewerPane27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox23 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox23(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox23 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox23 : WpfEdit
    {
        
        public NameTextbox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem42 : WpfTreeItem
    {
        
        public TreeItem42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane28 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane28(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane28 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane28 : WpfPane
    {
        
        public ScrollViewerPane28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox24 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox24(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox24 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox24 : WpfEdit
    {
        
        public NameTextbox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem52 : WpfTreeItem
    {
        
        public TreeItem52(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane29 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane29(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane29 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane29 : WpfPane
    {
        
        public ScrollViewerPane29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox25 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox25(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox25 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox25 : WpfEdit
    {
        
        public NameTextbox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetTreeItem1 : WpfTreeItem
    {
        
        public RecordsetTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Recordset";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem13 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem13(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem23 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem23(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem33 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem33(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem43 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem43(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem53 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem53(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem13 mTreeItem1;
        
        private TreeItem23 mTreeItem2;
        
        private TreeItem33 mTreeItem3;
        
        private TreeItem43 mTreeItem4;
        
        private TreeItem53 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem13 : WpfTreeItem
    {
        
        public TreeItem13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane30 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane30(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field12 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field12(this);
                }
                return this.mField1;
            }
        }
        
        public Field22 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field22(this);
                }
                return this.mField2;
            }
        }
        
        public Field32 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field32(this);
                }
                return this.mField3;
            }
        }
        
        public Field42 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field42(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane30 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field12 mField1;
        
        private Field22 mField2;
        
        private Field32 mField3;
        
        private Field42 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane30 : WpfPane
    {
        
        public ScrollViewerPane30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox26 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox26(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox26 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox26 : WpfEdit
    {
        
        public NameTextbox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field12 : WpfTreeItem
    {
        
        public Field12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane31 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane31(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane31 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane31 : WpfPane
    {
        
        public ScrollViewerPane31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox27 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox27(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox27 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox27 : WpfEdit
    {
        
        public NameTextbox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field22 : WpfTreeItem
    {
        
        public Field22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane32 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane32(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane32 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane32 : WpfPane
    {
        
        public ScrollViewerPane32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox28 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox28(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox28 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox28 : WpfEdit
    {
        
        public NameTextbox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field32 : WpfTreeItem
    {
        
        public Field32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane33 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane33(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane33 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane33 : WpfPane
    {
        
        public ScrollViewerPane33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox29 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox29(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox29 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox29 : WpfEdit
    {
        
        public NameTextbox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field42 : WpfTreeItem
    {
        
        public Field42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane34 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane34(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane34 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane34 : WpfPane
    {
        
        public ScrollViewerPane34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox30 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox30(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox30 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox30 : WpfEdit
    {
        
        public NameTextbox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem23 : WpfTreeItem
    {
        
        public TreeItem23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane35 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane35(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field13 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field13(this);
                }
                return this.mField1;
            }
        }
        
        public Field23 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field23(this);
                }
                return this.mField2;
            }
        }
        
        public Field33 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field33(this);
                }
                return this.mField3;
            }
        }
        
        public Field43 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field43(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane35 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field13 mField1;
        
        private Field23 mField2;
        
        private Field33 mField3;
        
        private Field43 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane35 : WpfPane
    {
        
        public ScrollViewerPane35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox31 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox31(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox31 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox31 : WpfEdit
    {
        
        public NameTextbox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field13 : WpfTreeItem
    {
        
        public Field13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane36 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane36(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane36 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane36 : WpfPane
    {
        
        public ScrollViewerPane36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox32 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox32(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox32 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox32 : WpfEdit
    {
        
        public NameTextbox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field23 : WpfTreeItem
    {
        
        public Field23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane37 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane37(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane37 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane37 : WpfPane
    {
        
        public ScrollViewerPane37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox33 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox33(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox33 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox33 : WpfEdit
    {
        
        public NameTextbox33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field33 : WpfTreeItem
    {
        
        public Field33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane38 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane38(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane38 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane38 : WpfPane
    {
        
        public ScrollViewerPane38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox34 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox34(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox34 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox34 : WpfEdit
    {
        
        public NameTextbox34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field43 : WpfTreeItem
    {
        
        public Field43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane39 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane39(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane39 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane39 : WpfPane
    {
        
        public ScrollViewerPane39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox35 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox35(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox35 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox35 : WpfEdit
    {
        
        public NameTextbox35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem33 : WpfTreeItem
    {
        
        public TreeItem33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane40 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane40(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field7 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field7(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane40 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field7 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane40 : WpfPane
    {
        
        public ScrollViewerPane40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox36 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox36(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox36 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox36 : WpfEdit
    {
        
        public NameTextbox36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field7 : WpfTreeItem
    {
        
        public Field7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane41 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane41(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane41 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane41 : WpfPane
    {
        
        public ScrollViewerPane41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox37 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox37(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox37 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox37 : WpfEdit
    {
        
        public NameTextbox37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem43 : WpfTreeItem
    {
        
        public TreeItem43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane42 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane42(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field8 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field8(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane42 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field8 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane42 : WpfPane
    {
        
        public ScrollViewerPane42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox38 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox38(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox38 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox38 : WpfEdit
    {
        
        public NameTextbox38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field8 : WpfTreeItem
    {
        
        public Field8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane43 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane43(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane43 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane43 : WpfPane
    {
        
        public ScrollViewerPane43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox39 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox39(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox39 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox39 : WpfEdit
    {
        
        public NameTextbox39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem53 : WpfTreeItem
    {
        
        public TreeItem53(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane44 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane44(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field9 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field9(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane44 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field9 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane44 : WpfPane
    {
        
        public ScrollViewerPane44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox40 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox40(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox40 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox40 : WpfEdit
    {
        
        public NameTextbox40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field9 : WpfTreeItem
    {
        
        public Field9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane45 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane45(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane45 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane45 : WpfPane
    {
        
        public ScrollViewerPane45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox41 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox41(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox41 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox41 : WpfEdit
    {
        
        public NameTextbox41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextbox3 : WpfEdit
    {
        
        public SearchTextbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfImage ClearSearchDisabled
        {
            get
            {
                if ((this.mClearSearchDisabled == null))
                {
                    this.mClearSearchDisabled = new WpfImage(this);
                    #region Search Criteria
                    this.mClearSearchDisabled.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ClearSearchDisabled";
                    this.mClearSearchDisabled.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchDisabled;
            }
        }
        
        public WpfButton ClearSearchButton
        {
            get
            {
                if ((this.mClearSearchButton == null))
                {
                    this.mClearSearchButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearSearchButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearSearchButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mFilterText;
        
        private WpfImage mClearSearchDisabled;
        
        private WpfButton mClearSearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutput1 : WpfCustom
    {
        
        public DebugOutput1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DebugOutputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DebugOutput";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DebugOutputUnpinBtn
        {
            get
            {
                if ((this.mDebugOutputUnpinBtn == null))
                {
                    this.mDebugOutputUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mDebugOutputUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mDebugOutputUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDebugOutputUnpinBtn;
            }
        }
        
        public WpfEdit SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mSearchTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton SettingsButton
        {
            get
            {
                if ((this.mSettingsButton == null))
                {
                    this.mSettingsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSettingsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputOptionsButton_AutoID";
                    this.mSettingsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSettingsButton;
            }
        }
        
        public WpfButton ExpandCollapseButton
        {
            get
            {
                if ((this.mExpandCollapseButton == null))
                {
                    this.mExpandCollapseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpandCollapseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputExpandAllMode_AutoID";
                    this.mExpandCollapseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandCollapseButton;
            }
        }
        
        public DebugOutputTree1 DebugOutputTree
        {
            get
            {
                if ((this.mDebugOutputTree == null))
                {
                    this.mDebugOutputTree = new DebugOutputTree1(this);
                }
                return this.mDebugOutputTree;
            }
        }
        
        public StatusBar1 StatusBar
        {
            get
            {
                if ((this.mStatusBar == null))
                {
                    this.mStatusBar = new StatusBar1(this);
                }
                return this.mStatusBar;
            }
        }
        
        public CommentTreeItem2 CommentTreeItem
        {
            get
            {
                if ((this.mCommentTreeItem == null))
                {
                    this.mCommentTreeItem = new CommentTreeItem2(this);
                }
                return this.mCommentTreeItem;
            }
        }
        
        public WpfButton CreateTestFromDebugButton
        {
            get
            {
                if ((this.mCreateTestFromDebugButton == null))
                {
                    this.mCreateTestFromDebugButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCreateTestFromDebugButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputAddNewTestMode_AutoID";
                    this.mCreateTestFromDebugButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateTestFromDebugButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDebugOutputUnpinBtn;
        
        private WpfEdit mSearchTextBox;
        
        private WpfButton mSettingsButton;
        
        private WpfButton mExpandCollapseButton;
        
        private DebugOutputTree1 mDebugOutputTree;
        
        private StatusBar1 mStatusBar;
        
        private CommentTreeItem2 mCommentTreeItem;
        
        private WpfButton mCreateTestFromDebugButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutputTree1 : WpfTree
    {
        
        public DebugOutputTree1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "DebugOutputTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Step11 Step1
        {
            get
            {
                if ((this.mStep1 == null))
                {
                    this.mStep1 = new Step11(this);
                }
                return this.mStep1;
            }
        }
        
        public SubWorkflow1 SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new SubWorkflow1(this);
                }
                return this.mSubWorkflow;
            }
        }
        
        public ServiceTreeItem1 ServiceTreeItem
        {
            get
            {
                if ((this.mServiceTreeItem == null))
                {
                    this.mServiceTreeItem = new ServiceTreeItem1(this);
                }
                return this.mServiceTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private Step11 mStep1;
        
        private SubWorkflow1 mSubWorkflow;
        
        private ServiceTreeItem1 mServiceTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Step11 : WpfTreeItem
    {
        
        public Step11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText VariableTextbox2
        {
            get
            {
                if ((this.mVariableTextbox2 == null))
                {
                    this.mVariableTextbox2 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mVariableTextbox2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox2;
            }
        }
        
        public WpfButton Assign1Button
        {
            get
            {
                if ((this.mAssign1Button == null))
                {
                    this.mAssign1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mAssign1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Assign (1)";
                    this.mAssign1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssign1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssign1Button;
            }
        }
        
        public WpfButton BaseConversion1Button
        {
            get
            {
                if ((this.mBaseConversion1Button == null))
                {
                    this.mBaseConversion1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mBaseConversion1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Base Conversion (1)";
                    this.mBaseConversion1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBaseConversion1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBaseConversion1Button;
            }
        }
        
        public WpfButton CalculateButton
        {
            get
            {
                if ((this.mCalculateButton == null))
                {
                    this.mCalculateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCalculateButton.SearchProperties[WpfButton.PropertyNames.Name] = "Calculate";
                    this.mCalculateButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCalculateButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCalculateButton;
            }
        }
        
        public RecordsetGroup1 RecordsetGroup
        {
            get
            {
                if ((this.mRecordsetGroup == null))
                {
                    this.mRecordsetGroup = new RecordsetGroup1(this);
                }
                return this.mRecordsetGroup;
            }
        }
        
        public WpfText ValueTextbox5
        {
            get
            {
                if ((this.mValueTextbox5 == null))
                {
                    this.mValueTextbox5 = new WpfText(this);
                    #region Search Criteria
                    this.mValueTextbox5.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mValueTextbox5.SearchProperties[WpfText.PropertyNames.Instance] = "5";
                    this.mValueTextbox5.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValueTextbox5.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox5;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mVariableTextbox2;
        
        private WpfButton mAssign1Button;
        
        private WpfButton mBaseConversion1Button;
        
        private WpfButton mCalculateButton;
        
        private RecordsetGroup1 mRecordsetGroup;
        
        private WpfText mValueTextbox5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetGroup1 : WpfExpander
    {
        
        public RecordsetGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_DefaultRecordSetIOTemplate_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText RecordsetName
        {
            get
            {
                if ((this.mRecordsetName == null))
                {
                    this.mRecordsetName = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetName.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mRecordsetName.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetName.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetName;
            }
        }
        
        public WpfText RecordsetValue
        {
            get
            {
                if ((this.mRecordsetValue == null))
                {
                    this.mRecordsetValue = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetValue.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mRecordsetValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mRecordsetName;
        
        private WpfText mRecordsetValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubWorkflow1 : WpfTreeItem
    {
        
        public SubWorkflow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIHelloWorldTreeItem11 UIHelloWorldTreeItem1
        {
            get
            {
                if ((this.mUIHelloWorldTreeItem1 == null))
                {
                    this.mUIHelloWorldTreeItem1 = new UIHelloWorldTreeItem11(this);
                }
                return this.mUIHelloWorldTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIHelloWorldTreeItem11 mUIHelloWorldTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHelloWorldTreeItem11 : WpfTreeItem
    {
        
        public UIHelloWorldTreeItem11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Start";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton UIHelloWorldButton
        {
            get
            {
                if ((this.mUIHelloWorldButton == null))
                {
                    this.mUIHelloWorldButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHelloWorldButton.SearchProperties[WpfButton.PropertyNames.Name] = "Hello World";
                    this.mUIHelloWorldButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIHelloWorldButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIHelloWorldButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIHelloWorldButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceTreeItem1 : WpfTreeItem
    {
        
        public ServiceTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton Workflow1Button
        {
            get
            {
                if ((this.mWorkflow1Button == null))
                {
                    this.mWorkflow1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mWorkflow1Button.SearchProperties[WpfButton.PropertyNames.Name] = "workflow1";
                    this.mWorkflow1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mWorkflow1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflow1Button;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mWorkflow1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusBar1 : WpfEdit
    {
        
        public StatusBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Dev2StatusBarAutomationID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentTreeItem2 : WpfTreeItem
    {
        
        public CommentTreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CommentButton
        {
            get
            {
                if ((this.mCommentButton == null))
                {
                    this.mCommentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCommentButton.SearchProperties[WpfButton.PropertyNames.Name] = "Comment";
                    this.mCommentButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCommentButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCommentButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCommentButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnpinnedTabContextMenu : WpfMenu
    {
        
        public UnpinnedTabContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem Floating
        {
            get
            {
                if ((this.mFloating == null))
                {
                    this.mFloating = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mFloating.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Floating";
                    this.mFloating.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFloating;
            }
        }
        
        public WpfMenuItem Dockable
        {
            get
            {
                if ((this.mDockable == null))
                {
                    this.mDockable = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDockable.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Dockable";
                    this.mDockable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDockable;
            }
        }
        
        public WpfMenuItem TabbedDocument
        {
            get
            {
                if ((this.mTabbedDocument == null))
                {
                    this.mTabbedDocument = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mTabbedDocument.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Tabbed Document";
                    this.mTabbedDocument.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabbedDocument;
            }
        }
        
        public WpfMenuItem AutoHide
        {
            get
            {
                if ((this.mAutoHide == null))
                {
                    this.mAutoHide = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mAutoHide.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Auto Hide";
                    this.mAutoHide.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAutoHide;
            }
        }
        
        public WpfMenuItem Hide
        {
            get
            {
                if ((this.mHide == null))
                {
                    this.mHide = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mHide.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Hide";
                    this.mHide.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHide;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mFloating;
        
        private WpfMenuItem mDockable;
        
        private WpfMenuItem mTabbedDocument;
        
        private WpfMenuItem mAutoHide;
        
        private WpfMenuItem mHide;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComboboxListItemAsRemoteConnectionIntegration : WpfCustom
    {
        
        public ComboboxListItemAsRemoteConnectionIntegration(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComboEditorItemControl";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Remote Connection Integration";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MessageBoxWindow : WpfWindow
    {
        
        public MessageBoxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "WarewolfMessageBox";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("WarewolfMessageBox");
            #endregion
        }
        
        #region Properties
        public YesButton YesButton
        {
            get
            {
                if ((this.mYesButton == null))
                {
                    this.mYesButton = new YesButton(this);
                }
                return this.mYesButton;
            }
        }
        
        public NoButton NoButton
        {
            get
            {
                if ((this.mNoButton == null))
                {
                    this.mNoButton = new NoButton(this);
                }
                return this.mNoButton;
            }
        }
        
        public CancelButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new CancelButton(this);
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mOKButton.SearchProperties[WpfButton.PropertyNames.Name] = "OK";
                    this.mOKButton.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        
        public WpfText UIPleasesavecurrentlyeText
        {
            get
            {
                if ((this.mUIPleasesavecurrentlyeText == null))
                {
                    this.mUIPleasesavecurrentlyeText = new WpfText(this);
                    #region Search Criteria
                    this.mUIPleasesavecurrentlyeText.SearchProperties[WpfText.PropertyNames.Name] = "Please save currently edited Test(s) before running the tests.";
                    this.mUIPleasesavecurrentlyeText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mUIPleasesavecurrentlyeText;
            }
        }
        
        public WpfText UIThefollowingerroroccText
        {
            get
            {
                if ((this.mUIThefollowingerroroccText == null))
                {
                    this.mUIThefollowingerroroccText = new WpfText(this);
                    #region Search Criteria
                    this.mUIThefollowingerroroccText.SearchProperties[WpfText.PropertyNames.Name] = "The following error occurred on save:\r\nError while saving: This task requires tha" +
                        "t the user account specified has \'Log On As Batch\' job rights";
                    this.mUIThefollowingerroroccText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mUIThefollowingerroroccText;
            }
        }
        
        public WpfText DropnotallowedText
        {
            get
            {
                if ((this.mDropnotallowedText == null))
                {
                    this.mDropnotallowedText = new WpfText(this);
                    #region Search Criteria
                    this.mDropnotallowedText.SearchProperties[WpfText.PropertyNames.Name] = "Drop not allowed";
                    this.mDropnotallowedText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mDropnotallowedText;
            }
        }
        
        public WpfText ResourcesDeployedSucText
        {
            get
            {
                if ((this.mResourcesDeployedSucText == null))
                {
                    this.mResourcesDeployedSucText = new WpfText(this);
                    #region Search Criteria
                    this.mResourcesDeployedSucText.SearchProperties[WpfText.PropertyNames.Name] = "Resource(s) Deployed Successfully";
                    this.mResourcesDeployedSucText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mResourcesDeployedSucText;
            }
        }
        
        public WpfText SaveBeforeAddingTest
        {
            get
            {
                if ((this.mSaveBeforeAddingTest == null))
                {
                    this.mSaveBeforeAddingTest = new WpfText(this);
                    #region Search Criteria
                    this.mSaveBeforeAddingTest.SearchProperties[WpfText.PropertyNames.Name] = "Please save currently edited Test(s) before creating a new one.";
                    this.mSaveBeforeAddingTest.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mSaveBeforeAddingTest;
            }
        }
        
        public WpfText DeployVersionConflicText
        {
            get
            {
                if ((this.mDeployVersionConflicText == null))
                {
                    this.mDeployVersionConflicText = new WpfText(this);
                    #region Search Criteria
                    this.mDeployVersionConflicText.SearchProperties[WpfText.PropertyNames.Name] = "Deploy Version Conflicts";
                    this.mDeployVersionConflicText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mDeployVersionConflicText;
            }
        }
        
        public WpfText DeployConflictsText
        {
            get
            {
                if ((this.mDeployConflictsText == null))
                {
                    this.mDeployConflictsText = new WpfText(this);
                    #region Search Criteria
                    this.mDeployConflictsText.SearchProperties[WpfText.PropertyNames.Name] = "Deploy Conflicts";
                    this.mDeployConflictsText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mDeployConflictsText;
            }
        }
        
        public WpfText DeleteConfirmation
        {
            get
            {
                if ((this.mDeleteConfirmation == null))
                {
                    this.mDeleteConfirmation = new WpfText(this);
                    #region Search Criteria
                    this.mDeleteConfirmation.SearchProperties[WpfText.PropertyNames.Name] = "Are you sure?";
                    this.mDeleteConfirmation.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mDeleteConfirmation;
            }
        }
        #endregion
        
        #region Fields
        private YesButton mYesButton;
        
        private NoButton mNoButton;
        
        private CancelButton mCancelButton;
        
        private WpfButton mOKButton;
        
        private WpfText mUIPleasesavecurrentlyeText;
        
        private WpfText mUIThefollowingerroroccText;
        
        private WpfText mDropnotallowedText;
        
        private WpfText mResourcesDeployedSucText;
        
        private WpfText mSaveBeforeAddingTest;
        
        private WpfText mDeployVersionConflicText;
        
        private WpfText mDeployConflictsText;
        
        private WpfText mDeleteConfirmation;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class YesButton : WpfButton
    {
        
        public YesButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Yes";
            this.WindowTitles.Add("WarewolfMessageBox");
            #endregion
        }
        
        #region Properties
        public WpfText YesButtonText
        {
            get
            {
                if ((this.mYesButtonText == null))
                {
                    this.mYesButtonText = new WpfText(this);
                    #region Search Criteria
                    this.mYesButtonText.SearchProperties[WpfText.PropertyNames.Name] = "Yes";
                    this.mYesButtonText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mYesButtonText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mYesButtonText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NoButton : WpfButton
    {
        
        public NoButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "No";
            this.WindowTitles.Add("WarewolfMessageBox");
            #endregion
        }
        
        #region Properties
        public WpfText NOButtonText
        {
            get
            {
                if ((this.mNOButtonText == null))
                {
                    this.mNOButtonText = new WpfText(this);
                    #region Search Criteria
                    this.mNOButtonText.SearchProperties[WpfText.PropertyNames.Name] = "No";
                    this.mNOButtonText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mNOButtonText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mNOButtonText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CancelButton : WpfButton
    {
        
        public CancelButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
            this.WindowTitles.Add("WarewolfMessageBox");
            #endregion
        }
        
        #region Properties
        public WpfText CancelButtonText
        {
            get
            {
                if ((this.mCancelButtonText == null))
                {
                    this.mCancelButtonText = new WpfText(this);
                    #region Search Criteria
                    this.mCancelButtonText.SearchProperties[WpfText.PropertyNames.Name] = "Cancel";
                    this.mCancelButtonText.WindowTitles.Add("WarewolfMessageBox");
                    #endregion
                }
                return this.mCancelButtonText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mCancelButtonText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SaveDialogWindow : WpfWindow
    {
        
        public SaveDialogWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "SaveDialogView";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SaveDialogView");
            #endregion
        }
        
        #region Properties
        public ExplorerView ExplorerView
        {
            get
            {
                if ((this.mExplorerView == null))
                {
                    this.mExplorerView = new ExplorerView(this);
                }
                return this.mExplorerView;
            }
        }
        
        public WpfText NameLabel
        {
            get
            {
                if ((this.mNameLabel == null))
                {
                    this.mNameLabel = new WpfText(this);
                    #region Search Criteria
                    this.mNameLabel.SearchProperties[WpfText.PropertyNames.Name] = "Name:";
                    this.mNameLabel.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mNameLabel;
            }
        }
        
        public WpfEdit ServiceNameTextBox
        {
            get
            {
                if ((this.mServiceNameTextBox == null))
                {
                    this.mServiceNameTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mServiceNameTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ServiceNameTextBox";
                    this.mServiceNameTextBox.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mServiceNameTextBox;
            }
        }
        
        public WpfText ErrorLabel
        {
            get
            {
                if ((this.mErrorLabel == null))
                {
                    this.mErrorLabel = new WpfText(this);
                    #region Search Criteria
                    this.mErrorLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "ErrorMessageTextBlock";
                    this.mErrorLabel.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mErrorLabel;
            }
        }
        
        public WpfButton SaveButton
        {
            get
            {
                if ((this.mSaveButton == null))
                {
                    this.mSaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSaveButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "OkButton";
                    this.mSaveButton.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mSaveButton;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CancelButton";
                    this.mCancelButton.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton DuplicateButton
        {
            get
            {
                if ((this.mDuplicateButton == null))
                {
                    this.mDuplicateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDuplicateButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DuplicateButton";
                    this.mDuplicateButton.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mDuplicateButton;
            }
        }
        
        public WpfCheckBox UpdateDuplicatedRelat
        {
            get
            {
                if ((this.mUpdateDuplicatedRelat == null))
                {
                    this.mUpdateDuplicatedRelat = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUpdateDuplicatedRelat.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Update duplicated relationships?";
                    this.mUpdateDuplicatedRelat.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mUpdateDuplicatedRelat;
            }
        }
        
        public SaveDialogContextMenu SaveDialogContextMenu
        {
            get
            {
                if ((this.mSaveDialogContextMenu == null))
                {
                    this.mSaveDialogContextMenu = new SaveDialogContextMenu(this);
                }
                return this.mSaveDialogContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private ExplorerView mExplorerView;
        
        private WpfText mNameLabel;
        
        private WpfEdit mServiceNameTextBox;
        
        private WpfText mErrorLabel;
        
        private WpfButton mSaveButton;
        
        private WpfButton mCancelButton;
        
        private WpfButton mDuplicateButton;
        
        private WpfCheckBox mUpdateDuplicatedRelat;
        
        private SaveDialogContextMenu mSaveDialogContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerView : WpfCustom
    {
        
        public ExplorerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExplorerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ExplorerView";
            this.WindowTitles.Add("SaveDialogView");
            #endregion
        }
        
        #region Properties
        public WpfEdit SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mSearchTextBox.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public ExplorerTree3 ExplorerTree
        {
            get
            {
                if ((this.mExplorerTree == null))
                {
                    this.mExplorerTree = new ExplorerTree3(this);
                }
                return this.mExplorerTree;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mSearchTextBox;
        
        private WpfButton mRefreshButton;
        
        private ExplorerTree3 mExplorerTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerTree3 : WpfTree
    {
        
        public ExplorerTree3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("SaveDialogView");
            #endregion
        }
        
        #region Properties
        public localhost2 localhost
        {
            get
            {
                if ((this.mlocalhost == null))
                {
                    this.mlocalhost = new localhost2(this);
                }
                return this.mlocalhost;
            }
        }
        
        public WpfTreeItem UIWarewolfStudioViewMoTreeItem
        {
            get
            {
                if ((this.mUIWarewolfStudioViewMoTreeItem == null))
                {
                    this.mUIWarewolfStudioViewMoTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIWarewolfStudioViewMoTreeItem.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
                    this.mUIWarewolfStudioViewMoTreeItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mUIWarewolfStudioViewMoTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private localhost2 mlocalhost;
        
        private WpfTreeItem mUIWarewolfStudioViewMoTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class localhost2 : WpfTreeItem
    {
        
        public localhost2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Checkbox2 Checkbox
        {
            get
            {
                if ((this.mCheckbox == null))
                {
                    this.mCheckbox = new Checkbox2(this);
                }
                return this.mCheckbox;
            }
        }
        
        public FirstItem3 FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem3(this);
                }
                return this.mFirstItem;
            }
        }
        
        public WpfTreeItem SecondItem
        {
            get
            {
                if ((this.mSecondItem == null))
                {
                    this.mSecondItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mSecondItem.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
                    this.mSecondItem.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mSecondItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSecondItem;
            }
        }
        
        public NinethItem NinethItem
        {
            get
            {
                if ((this.mNinethItem == null))
                {
                    this.mNinethItem = new NinethItem(this);
                }
                return this.mNinethItem;
            }
        }
        
        public WpfTreeItem ThirdItem
        {
            get
            {
                if ((this.mThirdItem == null))
                {
                    this.mThirdItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mThirdItem.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
                    this.mThirdItem.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
                    this.mThirdItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mThirdItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mThirdItem;
            }
        }
        #endregion
        
        #region Fields
        private Checkbox2 mCheckbox;
        
        private FirstItem3 mFirstItem;
        
        private WpfTreeItem mSecondItem;
        
        private NinethItem mNinethItem;
        
        private WpfTreeItem mThirdItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Checkbox2 : WpfCheckBox
    {
        
        public Checkbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Checkbox";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton IconButton
        {
            get
            {
                if ((this.mIconButton == null))
                {
                    this.mIconButton = new WpfButton(this);
                    #region Search Criteria
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mIconButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIconButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mIconButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem3 : WpfTreeItem
    {
        
        public FirstItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage9 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage9(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItemEdit.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public FirstSubItem3 FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem3(this);
                }
                return this.mFirstSubItem;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage9 mResourceImageImage;
        
        private WpfEdit mUIItemEdit;
        
        private FirstSubItem3 mFirstSubItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage9 : WpfImage
    {
        
        public ResourceImageImage9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem3 : WpfTreeItem
    {
        
        public FirstSubItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("SaveDialogView");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItemEdit.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NinethItem : WpfTreeItem
    {
        
        public NinethItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "9";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("SaveDialogView");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItemEdit.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SaveDialogContextMenu : WpfMenu
    {
        
        public SaveDialogContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            this.WindowTitles.Add("SaveDialogView");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem NewFolderMenuItem
        {
            get
            {
                if ((this.mNewFolderMenuItem == null))
                {
                    this.mNewFolderMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mNewFolderMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewFolder";
                    this.mNewFolderMenuItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mNewFolderMenuItem;
            }
        }
        
        public WpfMenuItem RenameMenuItem
        {
            get
            {
                if ((this.mRenameMenuItem == null))
                {
                    this.mRenameMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mRenameMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Rename";
                    this.mRenameMenuItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mRenameMenuItem;
            }
        }
        
        public WpfMenuItem DeleteMenuItem
        {
            get
            {
                if ((this.mDeleteMenuItem == null))
                {
                    this.mDeleteMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeleteMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Delete";
                    this.mDeleteMenuItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mDeleteMenuItem;
            }
        }
        
        public WpfMenuItem UINewFolderMenuItem
        {
            get
            {
                if ((this.mUINewFolderMenuItem == null))
                {
                    this.mUINewFolderMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUINewFolderMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "NewFolderFromItem";
                    this.mUINewFolderMenuItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mUINewFolderMenuItem;
            }
        }
        
        public WpfMenuItem SourcesMenuItem
        {
            get
            {
                if ((this.mSourcesMenuItem == null))
                {
                    this.mSourcesMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mSourcesMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Sources";
                    this.mSourcesMenuItem.WindowTitles.Add("SaveDialogView");
                    #endregion
                }
                return this.mSourcesMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mNewFolderMenuItem;
        
        private WpfMenuItem mRenameMenuItem;
        
        private WpfMenuItem mDeleteMenuItem;
        
        private WpfMenuItem mUINewFolderMenuItem;
        
        private WpfMenuItem mSourcesMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplashPageWindow : WpfWindow
    {
        
        public SplashPageWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "SplashPage";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SplashPage");
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecisionOrSwitchDialog : WpfWindow
    {
        
        public DecisionOrSwitchDialog()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "ActivityDefaultWindow";
            #endregion
        }
        
        #region Properties
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CancelButton";
                    this.mCancelButton.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public OnErrorGroup62 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup62(this);
                }
                return this.mOnErrorGroup;
            }
        }
        
        public LargeView33 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView33(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfListItem ComboboxListItemAsStartsWith
        {
            get
            {
                if ((this.mComboboxListItemAsStartsWith == null))
                {
                    this.mComboboxListItemAsStartsWith = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsStartsWith.SearchProperties[WpfListItem.PropertyNames.Name] = "Starts With";
                    this.mComboboxListItemAsStartsWith.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsStartsWith;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotEqual
        {
            get
            {
                if ((this.mComboboxListItemAsNotEqual == null))
                {
                    this.mComboboxListItemAsNotEqual = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotEqual.SearchProperties[WpfListItem.PropertyNames.Name] = "<> (Not Equal)";
                    this.mComboboxListItemAsNotEqual.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotEqual;
            }
        }
        
        public WpfListItem ComboboxListItemAsLessThanOrEqualTo
        {
            get
            {
                if ((this.mComboboxListItemAsLessThanOrEqualTo == null))
                {
                    this.mComboboxListItemAsLessThanOrEqualTo = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsLessThanOrEqualTo.SearchProperties[WpfListItem.PropertyNames.Name] = "<=";
                    this.mComboboxListItemAsLessThanOrEqualTo.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsLessThanOrEqualTo;
            }
        }
        
        public WpfListItem ComboboxListItemAsLessThan
        {
            get
            {
                if ((this.mComboboxListItemAsLessThan == null))
                {
                    this.mComboboxListItemAsLessThan = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsLessThan.SearchProperties[WpfListItem.PropertyNames.Name] = "<";
                    this.mComboboxListItemAsLessThan.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsLessThan;
            }
        }
        
        public WpfListItem ComboboxListItemAsGreaterThanOrEqualTo
        {
            get
            {
                if ((this.mComboboxListItemAsGreaterThanOrEqualTo == null))
                {
                    this.mComboboxListItemAsGreaterThanOrEqualTo = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsGreaterThanOrEqualTo.SearchProperties[WpfListItem.PropertyNames.Name] = ">=";
                    this.mComboboxListItemAsGreaterThanOrEqualTo.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsGreaterThanOrEqualTo;
            }
        }
        
        public WpfListItem ComboboxListItemAsGreaterThan
        {
            get
            {
                if ((this.mComboboxListItemAsGreaterThan == null))
                {
                    this.mComboboxListItemAsGreaterThan = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsGreaterThan.SearchProperties[WpfListItem.PropertyNames.Name] = ">";
                    this.mComboboxListItemAsGreaterThan.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsGreaterThan;
            }
        }
        
        public WpfListItem ComboboxListItemAsEndsWith
        {
            get
            {
                if ((this.mComboboxListItemAsEndsWith == null))
                {
                    this.mComboboxListItemAsEndsWith = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsEndsWith.SearchProperties[WpfListItem.PropertyNames.Name] = "Ends With";
                    this.mComboboxListItemAsEndsWith.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsEndsWith;
            }
        }
        
        public WpfListItem ComboboxListItemAsContains
        {
            get
            {
                if ((this.mComboboxListItemAsContains == null))
                {
                    this.mComboboxListItemAsContains = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsContains.SearchProperties[WpfListItem.PropertyNames.Name] = "Contains";
                    this.mComboboxListItemAsContains.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsContains;
            }
        }
        
        public WpfListItem ComboboxListItemAsDoesntContain
        {
            get
            {
                if ((this.mComboboxListItemAsDoesntContain == null))
                {
                    this.mComboboxListItemAsDoesntContain = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsDoesntContain.SearchProperties[WpfListItem.PropertyNames.Name] = "Doesn\'t Contain";
                    this.mComboboxListItemAsDoesntContain.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsDoesntContain;
            }
        }
        
        public WpfListItem ComboboxListItemAsDoesntEndWith
        {
            get
            {
                if ((this.mComboboxListItemAsDoesntEndWith == null))
                {
                    this.mComboboxListItemAsDoesntEndWith = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsDoesntEndWith.SearchProperties[WpfListItem.PropertyNames.Name] = "Doesn\'t End With";
                    this.mComboboxListItemAsDoesntEndWith.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsDoesntEndWith;
            }
        }
        
        public WpfListItem ComboboxListItemAsDoesntStartWith
        {
            get
            {
                if ((this.mComboboxListItemAsDoesntStartWith == null))
                {
                    this.mComboboxListItemAsDoesntStartWith = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsDoesntStartWith.SearchProperties[WpfListItem.PropertyNames.Name] = "Doesn\'t Start With";
                    this.mComboboxListItemAsDoesntStartWith.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsDoesntStartWith;
            }
        }
        
        public WpfListItem ComboboxListItemAsEquals
        {
            get
            {
                if ((this.mComboboxListItemAsEquals == null))
                {
                    this.mComboboxListItemAsEquals = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsEquals.SearchProperties[WpfListItem.PropertyNames.Name] = "=";
                    this.mComboboxListItemAsEquals.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsEquals;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsAlphanumeric
        {
            get
            {
                if ((this.mComboboxListItemAsIsAlphanumeric == null))
                {
                    this.mComboboxListItemAsIsAlphanumeric = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsAlphanumeric.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Alphanumeric";
                    this.mComboboxListItemAsIsAlphanumeric.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsAlphanumeric;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsBase64
        {
            get
            {
                if ((this.mComboboxListItemAsIsBase64 == null))
                {
                    this.mComboboxListItemAsIsBase64 = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsBase64.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Base64";
                    this.mComboboxListItemAsIsBase64.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsBase64;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsBetween
        {
            get
            {
                if ((this.mComboboxListItemAsIsBetween == null))
                {
                    this.mComboboxListItemAsIsBetween = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsBetween.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Between";
                    this.mComboboxListItemAsIsBetween.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsBetween;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsBinary
        {
            get
            {
                if ((this.mComboboxListItemAsIsBinary == null))
                {
                    this.mComboboxListItemAsIsBinary = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsBinary.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Binary";
                    this.mComboboxListItemAsIsBinary.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsBinary;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsDate
        {
            get
            {
                if ((this.mComboboxListItemAsIsDate == null))
                {
                    this.mComboboxListItemAsIsDate = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsDate.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Date";
                    this.mComboboxListItemAsIsDate.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsDate;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsEmail
        {
            get
            {
                if ((this.mComboboxListItemAsIsEmail == null))
                {
                    this.mComboboxListItemAsIsEmail = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsEmail.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Email";
                    this.mComboboxListItemAsIsEmail.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsEmail;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsHex
        {
            get
            {
                if ((this.mComboboxListItemAsIsHex == null))
                {
                    this.mComboboxListItemAsIsHex = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsHex.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Hex";
                    this.mComboboxListItemAsIsHex.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsHex;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsNotNULL
        {
            get
            {
                if ((this.mComboboxListItemAsIsNotNULL == null))
                {
                    this.mComboboxListItemAsIsNotNULL = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsNotNULL.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Not NULL";
                    this.mComboboxListItemAsIsNotNULL.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsNotNULL;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsNULL
        {
            get
            {
                if ((this.mComboboxListItemAsIsNULL == null))
                {
                    this.mComboboxListItemAsIsNULL = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsNULL.SearchProperties[WpfListItem.PropertyNames.Name] = "Is NULL";
                    this.mComboboxListItemAsIsNULL.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsNULL;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsNumeric
        {
            get
            {
                if ((this.mComboboxListItemAsIsNumeric == null))
                {
                    this.mComboboxListItemAsIsNumeric = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsNumeric.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Numeric";
                    this.mComboboxListItemAsIsNumeric.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsNumeric;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsRegex
        {
            get
            {
                if ((this.mComboboxListItemAsIsRegex == null))
                {
                    this.mComboboxListItemAsIsRegex = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsRegex.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Regex";
                    this.mComboboxListItemAsIsRegex.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsRegex;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsText
        {
            get
            {
                if ((this.mComboboxListItemAsIsText == null))
                {
                    this.mComboboxListItemAsIsText = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsText.SearchProperties[WpfListItem.PropertyNames.Name] = "Is Text";
                    this.mComboboxListItemAsIsText.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsText;
            }
        }
        
        public WpfListItem ComboboxListItemAsIsXML
        {
            get
            {
                if ((this.mComboboxListItemAsIsXML == null))
                {
                    this.mComboboxListItemAsIsXML = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsIsXML.SearchProperties[WpfListItem.PropertyNames.Name] = "Is XML";
                    this.mComboboxListItemAsIsXML.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsIsXML;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotAlphanumeric
        {
            get
            {
                if ((this.mComboboxListItemAsNotAlphanumeric == null))
                {
                    this.mComboboxListItemAsNotAlphanumeric = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotAlphanumeric.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Alphanumeric";
                    this.mComboboxListItemAsNotAlphanumeric.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotAlphanumeric;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotBase64
        {
            get
            {
                if ((this.mComboboxListItemAsNotBase64 == null))
                {
                    this.mComboboxListItemAsNotBase64 = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotBase64.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Base64";
                    this.mComboboxListItemAsNotBase64.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotBase64;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotBetween
        {
            get
            {
                if ((this.mComboboxListItemAsNotBetween == null))
                {
                    this.mComboboxListItemAsNotBetween = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotBetween.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Between";
                    this.mComboboxListItemAsNotBetween.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotBetween;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotBinary
        {
            get
            {
                if ((this.mComboboxListItemAsNotBinary == null))
                {
                    this.mComboboxListItemAsNotBinary = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotBinary.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Binary";
                    this.mComboboxListItemAsNotBinary.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotBinary;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotDate
        {
            get
            {
                if ((this.mComboboxListItemAsNotDate == null))
                {
                    this.mComboboxListItemAsNotDate = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotDate.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Date";
                    this.mComboboxListItemAsNotDate.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotDate;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotEmail
        {
            get
            {
                if ((this.mComboboxListItemAsNotEmail == null))
                {
                    this.mComboboxListItemAsNotEmail = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotEmail.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Email";
                    this.mComboboxListItemAsNotEmail.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotEmail;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotHex
        {
            get
            {
                if ((this.mComboboxListItemAsNotHex == null))
                {
                    this.mComboboxListItemAsNotHex = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotHex.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Hex";
                    this.mComboboxListItemAsNotHex.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotHex;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotNumeric
        {
            get
            {
                if ((this.mComboboxListItemAsNotNumeric == null))
                {
                    this.mComboboxListItemAsNotNumeric = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotNumeric.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Numeric";
                    this.mComboboxListItemAsNotNumeric.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotNumeric;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotRegex
        {
            get
            {
                if ((this.mComboboxListItemAsNotRegex == null))
                {
                    this.mComboboxListItemAsNotRegex = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotRegex.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Regex";
                    this.mComboboxListItemAsNotRegex.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotRegex;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotText
        {
            get
            {
                if ((this.mComboboxListItemAsNotText == null))
                {
                    this.mComboboxListItemAsNotText = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotText.SearchProperties[WpfListItem.PropertyNames.Name] = "Not Text";
                    this.mComboboxListItemAsNotText.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotText;
            }
        }
        
        public WpfListItem ComboboxListItemAsNotXML
        {
            get
            {
                if ((this.mComboboxListItemAsNotXML == null))
                {
                    this.mComboboxListItemAsNotXML = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsNotXML.SearchProperties[WpfListItem.PropertyNames.Name] = "Not XML";
                    this.mComboboxListItemAsNotXML.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsNotXML;
            }
        }
        
        public WpfListItem ComboboxListItemAsThereisAnError
        {
            get
            {
                if ((this.mComboboxListItemAsThereisAnError == null))
                {
                    this.mComboboxListItemAsThereisAnError = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsThereisAnError.SearchProperties[WpfListItem.PropertyNames.Name] = "There is An Error";
                    this.mComboboxListItemAsThereisAnError.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsThereisAnError;
            }
        }
        
        public WpfListItem ComboboxListItemAsThereisNoError
        {
            get
            {
                if ((this.mComboboxListItemAsThereisNoError == null))
                {
                    this.mComboboxListItemAsThereisNoError = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsThereisNoError.SearchProperties[WpfListItem.PropertyNames.Name] = "There is No Error";
                    this.mComboboxListItemAsThereisNoError.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mComboboxListItemAsThereisNoError;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCancelButton;
        
        private WpfButton mDoneButton;
        
        private OnErrorGroup62 mOnErrorGroup;
        
        private LargeView33 mLargeView;
        
        private WpfListItem mComboboxListItemAsStartsWith;
        
        private WpfListItem mComboboxListItemAsNotEqual;
        
        private WpfListItem mComboboxListItemAsLessThanOrEqualTo;
        
        private WpfListItem mComboboxListItemAsLessThan;
        
        private WpfListItem mComboboxListItemAsGreaterThanOrEqualTo;
        
        private WpfListItem mComboboxListItemAsGreaterThan;
        
        private WpfListItem mComboboxListItemAsEndsWith;
        
        private WpfListItem mComboboxListItemAsContains;
        
        private WpfListItem mComboboxListItemAsDoesntContain;
        
        private WpfListItem mComboboxListItemAsDoesntEndWith;
        
        private WpfListItem mComboboxListItemAsDoesntStartWith;
        
        private WpfListItem mComboboxListItemAsEquals;
        
        private WpfListItem mComboboxListItemAsIsAlphanumeric;
        
        private WpfListItem mComboboxListItemAsIsBase64;
        
        private WpfListItem mComboboxListItemAsIsBetween;
        
        private WpfListItem mComboboxListItemAsIsBinary;
        
        private WpfListItem mComboboxListItemAsIsDate;
        
        private WpfListItem mComboboxListItemAsIsEmail;
        
        private WpfListItem mComboboxListItemAsIsHex;
        
        private WpfListItem mComboboxListItemAsIsNotNULL;
        
        private WpfListItem mComboboxListItemAsIsNULL;
        
        private WpfListItem mComboboxListItemAsIsNumeric;
        
        private WpfListItem mComboboxListItemAsIsRegex;
        
        private WpfListItem mComboboxListItemAsIsText;
        
        private WpfListItem mComboboxListItemAsIsXML;
        
        private WpfListItem mComboboxListItemAsNotAlphanumeric;
        
        private WpfListItem mComboboxListItemAsNotBase64;
        
        private WpfListItem mComboboxListItemAsNotBetween;
        
        private WpfListItem mComboboxListItemAsNotBinary;
        
        private WpfListItem mComboboxListItemAsNotDate;
        
        private WpfListItem mComboboxListItemAsNotEmail;
        
        private WpfListItem mComboboxListItemAsNotHex;
        
        private WpfListItem mComboboxListItemAsNotNumeric;
        
        private WpfListItem mComboboxListItemAsNotRegex;
        
        private WpfListItem mComboboxListItemAsNotText;
        
        private WpfListItem mComboboxListItemAsNotXML;
        
        private WpfListItem mComboboxListItemAsThereisAnError;
        
        private WpfListItem mComboboxListItemAsThereisNoError;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup62 : WpfGroup
    {
        
        public OnErrorGroup62(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox6 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox6(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorServiceIntellisenseCombobox ErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorServiceIntellisenseCombobox == null))
                {
                    this.mErrorServiceIntellisenseCombobox = new ErrorServiceIntellisenseCombobox(this);
                }
                return this.mErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox6 mErrorVariableIntellisenseCombobox;
        
        private ErrorServiceIntellisenseCombobox mErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox6 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorServiceIntellisenseCombobox : WpfComboBox
    {
        
        public ErrorServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView33 : WpfCustom
    {
        
        public LargeView33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public Table4 Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table4(this);
                }
                return this.mTable;
            }
        }
        
        public WpfCheckBox RequireAllDecisionsToBeTrueCheckbox
        {
            get
            {
                if ((this.mRequireAllDecisionsToBeTrueCheckbox == null))
                {
                    this.mRequireAllDecisionsToBeTrueCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequireAllDecisionsToBeTrueCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequireAllDecisionsToBeTrueCheckbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mRequireAllDecisionsToBeTrueCheckbox;
            }
        }
        
        public WpfEdit DisplayTextbox
        {
            get
            {
                if ((this.mDisplayTextbox == null))
                {
                    this.mDisplayTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Result_AutoID";
                    this.mDisplayTextbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mDisplayTextbox;
            }
        }
        
        public WpfEdit TrueArmTextbox
        {
            get
            {
                if ((this.mTrueArmTextbox == null))
                {
                    this.mTrueArmTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTrueArmTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Result_AutoID";
                    this.mTrueArmTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mTrueArmTextbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mTrueArmTextbox;
            }
        }
        
        public WpfEdit FalseArmTextbox
        {
            get
            {
                if ((this.mFalseArmTextbox == null))
                {
                    this.mFalseArmTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mFalseArmTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Result_AutoID";
                    this.mFalseArmTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "3";
                    this.mFalseArmTextbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mFalseArmTextbox;
            }
        }
        #endregion
        
        #region Fields
        private Table4 mTable;
        
        private WpfCheckBox mRequireAllDecisionsToBeTrueCheckbox;
        
        private WpfEdit mDisplayTextbox;
        
        private WpfEdit mTrueArmTextbox;
        
        private WpfEdit mFalseArmTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table4 : WpfTable
    {
        
        public Table4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public Row144 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row144(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row144 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row144 : WpfRow
    {
        
        public Row144(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public MatchValueCell MatchValueCell
        {
            get
            {
                if ((this.mMatchValueCell == null))
                {
                    this.mMatchValueCell = new MatchValueCell(this);
                }
                return this.mMatchValueCell;
            }
        }
        
        public DeleteRowCell DeleteRowCell
        {
            get
            {
                if ((this.mDeleteRowCell == null))
                {
                    this.mDeleteRowCell = new DeleteRowCell(this);
                }
                return this.mDeleteRowCell;
            }
        }
        
        public MatchTypeCell6 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell6(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public WpfCell MatchCell
        {
            get
            {
                if ((this.mMatchCell == null))
                {
                    this.mMatchCell = new WpfCell(this);
                    #region Search Criteria
                    this.mMatchCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match";
                    this.mMatchCell.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
                    this.mMatchCell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
                    this.mMatchCell.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mMatchCell;
            }
        }
        #endregion
        
        #region Fields
        private MatchValueCell mMatchValueCell;
        
        private DeleteRowCell mDeleteRowCell;
        
        private MatchTypeCell6 mMatchTypeCell;
        
        private WpfCell mMatchCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchValueCell : WpfCell
    {
        
        public MatchValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public MatchValueIntellisenseCombobox MatchValueIntellisenseCombobox
        {
            get
            {
                if ((this.mMatchValueIntellisenseCombobox == null))
                {
                    this.mMatchValueIntellisenseCombobox = new MatchValueIntellisenseCombobox(this);
                }
                return this.mMatchValueIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private MatchValueIntellisenseCombobox mMatchValueIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchValueIntellisenseCombobox : WpfComboBox
    {
        
        public MatchValueIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteRowCell : WpfCell
    {
        
        public DeleteRowCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "#";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton DeleteRowButton
        {
            get
            {
                if ((this.mDeleteRowButton == null))
                {
                    this.mDeleteRowButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteRowButton.SearchProperties[WpfButton.PropertyNames.Name] = "?";
                    this.mDeleteRowButton.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mDeleteRowButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDeleteRowButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell6 : WpfCell
    {
        
        public MatchTypeCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "MatchType";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("ActivityDefaultWindow");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeCombobox
        {
            get
            {
                if ((this.mMatchTypeCombobox == null))
                {
                    this.mMatchTypeCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeCombobox.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mMatchTypeCombobox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectWindowsGroupDialog : WinWindow
    {
        
        public SelectWindowsGroupDialog()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Select Group";
            this.WindowTitles.Add("Select Group");
            #endregion
        }
        
        #region Properties
        public ItemPanel ItemPanel
        {
            get
            {
                if ((this.mItemPanel == null))
                {
                    this.mItemPanel = new ItemPanel(this);
                }
                return this.mItemPanel;
            }
        }
        
        public OKPanel OKPanel
        {
            get
            {
                if ((this.mOKPanel == null))
                {
                    this.mOKPanel = new OKPanel(this);
                }
                return this.mOKPanel;
            }
        }
        
        public CancelPanel CancelPanel
        {
            get
            {
                if ((this.mCancelPanel == null))
                {
                    this.mCancelPanel = new CancelPanel(this);
                }
                return this.mCancelPanel;
            }
        }
        #endregion
        
        #region Fields
        private ItemPanel mItemPanel;
        
        private OKPanel mOKPanel;
        
        private CancelPanel mCancelPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemPanel : WinWindow
    {
        
        public ItemPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "214";
            this.WindowTitles.Add("Select Group");
            #endregion
        }
        
        #region Properties
        public WinEdit ObjectNameTextbox
        {
            get
            {
                if ((this.mObjectNameTextbox == null))
                {
                    this.mObjectNameTextbox = new WinEdit(this);
                    #region Search Criteria
                    this.mObjectNameTextbox.SearchProperties.Add(new PropertyExpression(WinEdit.PropertyNames.Name, "Enter the object name to select", PropertyExpressionOperator.Contains));
                    this.mObjectNameTextbox.WindowTitles.Add("Select Group");
                    #endregion
                }
                return this.mObjectNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mObjectNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OKPanel : WinWindow
    {
        
        public OKPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Select Group");
            #endregion
        }
        
        #region Properties
        public WinButton OK
        {
            get
            {
                if ((this.mOK == null))
                {
                    this.mOK = new WinButton(this);
                    #region Search Criteria
                    this.mOK.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mOK.WindowTitles.Add("Select Group");
                    #endregion
                }
                return this.mOK;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mOK;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CancelPanel : WinWindow
    {
        
        public CancelPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Select Group");
            #endregion
        }
        
        #region Properties
        public WinButton Cancel
        {
            get
            {
                if ((this.mCancel == null))
                {
                    this.mCancel = new WinButton(this);
                    #region Search Criteria
                    this.mCancel.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mCancel.WindowTitles.Add("Select Group");
                    #endregion
                }
                return this.mCancel;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mCancel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServicePickerDialog : WpfWindow
    {
        
        public ServicePickerDialog()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Select A Service";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfWindow.PropertyNames.AutomationId] = "UI_SelectServiceWindow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Explorer1 Explorer
        {
            get
            {
                if ((this.mExplorer == null))
                {
                    this.mExplorer = new Explorer1(this);
                }
                return this.mExplorer;
            }
        }
        
        public WpfButton OK
        {
            get
            {
                if ((this.mOK == null))
                {
                    this.mOK = new WpfButton(this);
                    #region Search Criteria
                    this.mOK.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SelectServiceOKButton_AutoID";
                    this.mOK.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOK;
            }
        }
        
        public WpfButton Cancel
        {
            get
            {
                if ((this.mCancel == null))
                {
                    this.mCancel = new WpfButton(this);
                    #region Search Criteria
                    this.mCancel.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_SelectServiceCancelButton_AutoID";
                    this.mCancel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancel;
            }
        }
        #endregion
        
        #region Fields
        private Explorer1 mExplorer;
        
        private WpfButton mOK;
        
        private WpfButton mCancel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Explorer1 : WpfCustom
    {
        
        public Explorer1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExplorerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ExplorerView";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit FilterTextbox
        {
            get
            {
                if ((this.mFilterTextbox == null))
                {
                    this.mFilterTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mFilterTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mFilterTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterTextbox;
            }
        }
        
        public WpfButton Refresh
        {
            get
            {
                if ((this.mRefresh == null))
                {
                    this.mRefresh = new WpfButton(this);
                    #region Search Criteria
                    this.mRefresh.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefresh;
            }
        }
        
        public ExplorerTree4 ExplorerTree
        {
            get
            {
                if ((this.mExplorerTree == null))
                {
                    this.mExplorerTree = new ExplorerTree4(this);
                }
                return this.mExplorerTree;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mFilterTextbox;
        
        private WpfButton mRefresh;
        
        private ExplorerTree4 mExplorerTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerTree4 : WpfTree
    {
        
        public ExplorerTree4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Localhost3 Localhost
        {
            get
            {
                if ((this.mLocalhost == null))
                {
                    this.mLocalhost = new Localhost3(this);
                }
                return this.mLocalhost;
            }
        }
        #endregion
        
        #region Fields
        private Localhost3 mLocalhost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Localhost3 : WpfTreeItem
    {
        
        public Localhost3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem14 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem14(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem24 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem24(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public Checkbox3 Checkbox
        {
            get
            {
                if ((this.mCheckbox == null))
                {
                    this.mCheckbox = new Checkbox3(this);
                }
                return this.mCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem14 mTreeItem1;
        
        private TreeItem24 mTreeItem2;
        
        private Checkbox3 mCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem14 : WpfTreeItem
    {
        
        public TreeItem14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem TreeItem11
        {
            get
            {
                if ((this.mTreeItem11 == null))
                {
                    this.mTreeItem11 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mTreeItem11.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
                    this.mTreeItem11.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeItem11.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeItem11.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTreeItem11;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mTreeItem11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem24 : WpfTreeItem
    {
        
        public TreeItem24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mTreeItem1.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
                    this.mTreeItem1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mTreeItem1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mTreeItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Checkbox3 : WpfCheckBox
    {
        
        public Checkbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Checkbox";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StartNodePopupWindow : WpfWindow
    {
        
        public StartNodePopupWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfWindow.PropertyNames.Name] = null;
            this.SearchProperties[WpfWindow.PropertyNames.AutomationId] = null;
            #endregion
        }
        
        #region Properties
        public CustomWindow CustomWindow
        {
            get
            {
                if ((this.mCustomWindow == null))
                {
                    this.mCustomWindow = new CustomWindow(this);
                }
                return this.mCustomWindow;
            }
        }
        
        public FloatingWindowCustom FloatingWindowCustom
        {
            get
            {
                if ((this.mFloatingWindowCustom == null))
                {
                    this.mFloatingWindowCustom = new FloatingWindowCustom(this);
                }
                return this.mFloatingWindowCustom;
            }
        }
        
        public ItemMenu ItemMenu
        {
            get
            {
                if ((this.mItemMenu == null))
                {
                    this.mItemMenu = new ItemMenu(this);
                }
                return this.mItemMenu;
            }
        }
        
        public DesignSurfaceMenu DesignSurfaceMenu
        {
            get
            {
                if ((this.mDesignSurfaceMenu == null))
                {
                    this.mDesignSurfaceMenu = new DesignSurfaceMenu(this);
                }
                return this.mDesignSurfaceMenu;
            }
        }
        #endregion
        
        #region Fields
        private CustomWindow mCustomWindow;
        
        private FloatingWindowCustom mFloatingWindowCustom;
        
        private ItemMenu mItemMenu;
        
        private DesignSurfaceMenu mDesignSurfaceMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CustomWindow : WpfWindow
    {
        
        public CustomWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public StartNodeItemMenu StartNodeItemMenu
        {
            get
            {
                if ((this.mStartNodeItemMenu == null))
                {
                    this.mStartNodeItemMenu = new StartNodeItemMenu(this);
                }
                return this.mStartNodeItemMenu;
            }
        }
        #endregion
        
        #region Fields
        private StartNodeItemMenu mStartNodeItemMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StartNodeItemMenu : WpfMenu
    {
        
        public StartNodeItemMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            #endregion
        }
        
        #region Properties
        public WpfMenuItem DebugInputsMenuItem
        {
            get
            {
                if ((this.mDebugInputsMenuItem == null))
                {
                    this.mDebugInputsMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDebugInputsMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DebugInputs";
                    #endregion
                }
                return this.mDebugInputsMenuItem;
            }
        }
        
        public WpfMenuItem DebugStudioMenuItem
        {
            get
            {
                if ((this.mDebugStudioMenuItem == null))
                {
                    this.mDebugStudioMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDebugStudioMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DebugStudio";
                    #endregion
                }
                return this.mDebugStudioMenuItem;
            }
        }
        
        public WpfMenuItem DebugBrowserMenuItem
        {
            get
            {
                if ((this.mDebugBrowserMenuItem == null))
                {
                    this.mDebugBrowserMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDebugBrowserMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DebugBrowser";
                    #endregion
                }
                return this.mDebugBrowserMenuItem;
            }
        }
        
        public WpfMenuItem ScheduleMenuItem
        {
            get
            {
                if ((this.mScheduleMenuItem == null))
                {
                    this.mScheduleMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mScheduleMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Schedule";
                    #endregion
                }
                return this.mScheduleMenuItem;
            }
        }
        
        public WpfMenuItem TestEditorMenuItem
        {
            get
            {
                if ((this.mTestEditorMenuItem == null))
                {
                    this.mTestEditorMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mTestEditorMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "TestEditor";
                    #endregion
                }
                return this.mTestEditorMenuItem;
            }
        }
        
        public WpfMenuItem RunAllTestsMenuItem
        {
            get
            {
                if ((this.mRunAllTestsMenuItem == null))
                {
                    this.mRunAllTestsMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mRunAllTestsMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "RunAllTests";
                    #endregion
                }
                return this.mRunAllTestsMenuItem;
            }
        }
        
        public WpfMenuItem DuplicateMenuItem
        {
            get
            {
                if ((this.mDuplicateMenuItem == null))
                {
                    this.mDuplicateMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDuplicateMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Duplicate";
                    #endregion
                }
                return this.mDuplicateMenuItem;
            }
        }
        
        public WpfMenuItem DeployMenuItem
        {
            get
            {
                if ((this.mDeployMenuItem == null))
                {
                    this.mDeployMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeployMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Deploy";
                    #endregion
                }
                return this.mDeployMenuItem;
            }
        }
        
        public WpfMenuItem ShowDependenciesMenuItem
        {
            get
            {
                if ((this.mShowDependenciesMenuItem == null))
                {
                    this.mShowDependenciesMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mShowDependenciesMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "Dependencies";
                    #endregion
                }
                return this.mShowDependenciesMenuItem;
            }
        }
        
        public WpfMenuItem ViewSwaggerMenuItem
        {
            get
            {
                if ((this.mViewSwaggerMenuItem == null))
                {
                    this.mViewSwaggerMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mViewSwaggerMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "ViewSwagger";
                    #endregion
                }
                return this.mViewSwaggerMenuItem;
            }
        }
        
        public WpfMenuItem CopyURLtoClipboardMenuItem
        {
            get
            {
                if ((this.mCopyURLtoClipboardMenuItem == null))
                {
                    this.mCopyURLtoClipboardMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mCopyURLtoClipboardMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "CopyUrl";
                    #endregion
                }
                return this.mCopyURLtoClipboardMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mDebugInputsMenuItem;
        
        private WpfMenuItem mDebugStudioMenuItem;
        
        private WpfMenuItem mDebugBrowserMenuItem;
        
        private WpfMenuItem mScheduleMenuItem;
        
        private WpfMenuItem mTestEditorMenuItem;
        
        private WpfMenuItem mRunAllTestsMenuItem;
        
        private WpfMenuItem mDuplicateMenuItem;
        
        private WpfMenuItem mDeployMenuItem;
        
        private WpfMenuItem mShowDependenciesMenuItem;
        
        private WpfMenuItem mViewSwaggerMenuItem;
        
        private WpfMenuItem mCopyURLtoClipboardMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FloatingWindowCustom : WpfCustom
    {
        
        public FloatingWindowCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ToolWindow";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "FloatingWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.HelpText, "Floating window for -", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfControl.PropertyNames.Name] = null;
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext13 WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext13(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext13 mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext13 : WpfCustom
    {
        
        public WorkSurfaceContext13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView2 WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView2(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView2 mWorkflowDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView2 : WpfCustom
    {
        
        public WorkflowDesignerView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView2 DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView2(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView2 mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView2 : WpfCustom
    {
        
        public DesignerView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane46 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane46(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfToggleButton ExpandAllToggleButton
        {
            get
            {
                if ((this.mExpandAllToggleButton == null))
                {
                    this.mExpandAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mExpandAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "expandAllButton";
                    this.mExpandAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandAllToggleButton;
            }
        }
        
        public WpfToggleButton CollapseAllToggleButton
        {
            get
            {
                if ((this.mCollapseAllToggleButton == null))
                {
                    this.mCollapseAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mCollapseAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "collapseAllButton";
                    this.mCollapseAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCollapseAllToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane46 mScrollViewerPane;
        
        private WpfToggleButton mExpandAllToggleButton;
        
        private WpfToggleButton mCollapseAllToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane46 : WpfPane
    {
        
        public ScrollViewerPane46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner2 ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner2(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner2 mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner2 : WpfCustom
    {
        
        public ActivityTypeDesigner2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter2 WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter2(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter2 mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter2 : WpfCustom
    {
        
        public WorkflowItemPresenter2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart2 Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart2(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart2 mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart2 : WpfCustom
    {
        
        public Flowchart2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MultiAssign3 MultiAssign
        {
            get
            {
                if ((this.mMultiAssign == null))
                {
                    this.mMultiAssign = new MultiAssign3(this);
                }
                return this.mMultiAssign;
            }
        }
        #endregion
        
        #region Fields
        private MultiAssign3 mMultiAssign;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MultiAssign3 : WpfCustom
    {
        
        public MultiAssign3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "MultiAssignDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView22 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView22(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView34 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView34(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        #endregion
        
        #region Fields
        private SmallView22 mSmallView;
        
        private LargeView34 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView22 : WpfCustom
    {
        
        public SmallView22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid8 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid8(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid8 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid8 : WpfTable
    {
        
        public DataGrid8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row145 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row145(this);
                }
                return this.mRow1;
            }
        }
        
        public Row211 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row211(this);
                }
                return this.mRow2;
            }
        }
        
        public Row37 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row37(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row145 mRow1;
        
        private Row211 mRow2;
        
        private Row37 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row145 : WpfRow
    {
        
        public Row145(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell20 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell20(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell24 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell24(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell6 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell6(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell20 mVariableCell;
        
        private ValueCell24 mValueCell;
        
        private RowNumberCell6 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell20 : WpfCell
    {
        
        public VariableCell20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox4 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox4(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox4 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox4 : WpfComboBox
    {
        
        public Listbox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox6 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox6(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox6 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox6 : WpfEdit
    {
        
        public Textbox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "[[Variable1]]";
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell24 : WpfCell
    {
        
        public ValueCell24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox5 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox5(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox5 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox5 : WpfComboBox
    {
        
        public Listbox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell6 : WpfCell
    {
        
        public RowNumberCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "1";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row211 : WpfRow
    {
        
        public Row211(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell21 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell21(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell25 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell25(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell7 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell7(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell21 mVariableCell;
        
        private ValueCell25 mValueCell;
        
        private RowNumberCell7 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell21 : WpfCell
    {
        
        public VariableCell21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox6 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox6(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox6 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox6 : WpfComboBox
    {
        
        public Listbox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox7 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox7(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox7 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox7 : WpfEdit
    {
        
        public Textbox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell25 : WpfCell
    {
        
        public ValueCell25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox7 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox7(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox7 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox7 : WpfComboBox
    {
        
        public Listbox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell7 : WpfCell
    {
        
        public RowNumberCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "2";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row37 : WpfRow
    {
        
        public Row37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell22 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell22(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell26 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell26(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell8 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell8(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell22 mVariableCell;
        
        private ValueCell26 mValueCell;
        
        private RowNumberCell8 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell22 : WpfCell
    {
        
        public VariableCell22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox8 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox8(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox8 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox8 : WpfComboBox
    {
        
        public Listbox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox8 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox8(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox8 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox8 : WpfEdit
    {
        
        public Textbox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell26 : WpfCell
    {
        
        public ValueCell26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox9 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox9(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox9 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox9 : WpfComboBox
    {
        
        public Listbox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell8 : WpfCell
    {
        
        public RowNumberCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "3";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView34 : WpfCustom
    {
        
        public LargeView34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid9 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid9(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid9 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid9 : WpfTable
    {
        
        public DataGrid9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row146 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row146(this);
                }
                return this.mRow1;
            }
        }
        
        public Row212 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row212(this);
                }
                return this.mRow2;
            }
        }
        
        public Row38 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row38(this);
                }
                return this.mRow3;
            }
        }
        
        public Row43 Row4
        {
            get
            {
                if ((this.mRow4 == null))
                {
                    this.mRow4 = new Row43(this);
                }
                return this.mRow4;
            }
        }
        #endregion
        
        #region Fields
        private Row146 mRow1;
        
        private Row212 mRow2;
        
        private Row38 mRow3;
        
        private Row43 mRow4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row146 : WpfRow
    {
        
        public Row146(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfRow.PropertyNames.AutomationId, "UI_ActivityGridRow_0_AutoID", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell23 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell23(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell27 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell27(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell23 mVariableCell;
        
        private ValueCell27 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell23 : WpfCell
    {
        
        public VariableCell23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox10 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox10(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox10 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox10 : WpfComboBox
    {
        
        public Listbox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell27 : WpfCell
    {
        
        public ValueCell27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignValueCombobox AssignValueCombobox
        {
            get
            {
                if ((this.mAssignValueCombobox == null))
                {
                    this.mAssignValueCombobox = new AssignValueCombobox(this);
                }
                return this.mAssignValueCombobox;
            }
        }
        #endregion
        
        #region Fields
        private AssignValueCombobox mAssignValueCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignValueCombobox : WpfComboBox
    {
        
        public AssignValueCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row212 : WpfRow
    {
        
        public Row212(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell24 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell24(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell28 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell28(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell24 mVariableCell;
        
        private ValueCell28 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell24 : WpfCell
    {
        
        public VariableCell24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox11 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox11(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox11 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox11 : WpfComboBox
    {
        
        public Listbox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell28 : WpfCell
    {
        
        public ValueCell28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignValueCombobox1 AssignValueCombobox
        {
            get
            {
                if ((this.mAssignValueCombobox == null))
                {
                    this.mAssignValueCombobox = new AssignValueCombobox1(this);
                }
                return this.mAssignValueCombobox;
            }
        }
        #endregion
        
        #region Fields
        private AssignValueCombobox1 mAssignValueCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignValueCombobox1 : WpfComboBox
    {
        
        public AssignValueCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row38 : WpfRow
    {
        
        public Row38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell25 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell25(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell29 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell29(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell25 mVariableCell;
        
        private ValueCell29 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell25 : WpfCell
    {
        
        public VariableCell25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox12 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox12(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox12 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox12 : WpfComboBox
    {
        
        public Listbox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell29 : WpfCell
    {
        
        public ValueCell29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignValueCombobox2 AssignValueCombobox
        {
            get
            {
                if ((this.mAssignValueCombobox == null))
                {
                    this.mAssignValueCombobox = new AssignValueCombobox2(this);
                }
                return this.mAssignValueCombobox;
            }
        }
        #endregion
        
        #region Fields
        private AssignValueCombobox2 mAssignValueCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignValueCombobox2 : WpfComboBox
    {
        
        public AssignValueCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row43 : WpfRow
    {
        
        public Row43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_3_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell26 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell26(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell30 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell30(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell26 mVariableCell;
        
        private ValueCell30 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell26 : WpfCell
    {
        
        public VariableCell26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox13 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox13(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox13 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox13 : WpfComboBox
    {
        
        public Listbox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell30 : WpfCell
    {
        
        public ValueCell30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AssignValueCombobox3 AssignValueCombobox
        {
            get
            {
                if ((this.mAssignValueCombobox == null))
                {
                    this.mAssignValueCombobox = new AssignValueCombobox3(this);
                }
                return this.mAssignValueCombobox;
            }
        }
        #endregion
        
        #region Fields
        private AssignValueCombobox3 mAssignValueCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignValueCombobox3 : WpfComboBox
    {
        
        public AssignValueCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemMenu : WpfMenu
    {
        
        public ItemMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            #endregion
        }
        
        #region Properties
        public WpfMenuItem TabbedMenuItem
        {
            get
            {
                if ((this.mTabbedMenuItem == null))
                {
                    this.mTabbedMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mTabbedMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Tabbed Document";
                    #endregion
                }
                return this.mTabbedMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mTabbedMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignSurfaceMenu : WpfMenu
    {
        
        public DesignSurfaceMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.ClassName] = "Uia.ContextMenu";
            #endregion
        }
        
        #region Properties
        public WpfMenuItem DeleteMenuItem
        {
            get
            {
                if ((this.mDeleteMenuItem == null))
                {
                    this.mDeleteMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeleteMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DeleteMenuItem";
                    #endregion
                }
                return this.mDeleteMenuItem;
            }
        }
        
        public WpfMenuItem DeleteRowMenuItem
        {
            get
            {
                if ((this.mDeleteRowMenuItem == null))
                {
                    this.mDeleteRowMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mDeleteRowMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "UI_DeleteRowMenuItem_AutoID";
                    this.mDeleteRowMenuItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteRowMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mDeleteMenuItem;
        
        private WpfMenuItem mDeleteRowMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWindow : WinWindow
    {
        
        public ErrorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Error";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Error");
            #endregion
        }
        
        #region Properties
        public WinButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mCloseButton.WindowTitles.Add("Error");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CriticalErrorWindow : WinWindow
    {
        
        public CriticalErrorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Critical Error";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Critical Error");
            #endregion
        }
        
        #region Properties
        public WinButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mCloseButton.WindowTitles.Add("Critical Error");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebBrowserErrorWindow : WinWindow
    {
        
        public WebBrowserErrorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Web Browser";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Web Browser");
            #endregion
        }
        
        #region Properties
        public Pane Pane
        {
            get
            {
                if ((this.mPane == null))
                {
                    this.mPane = new Pane(this);
                }
                return this.mPane;
            }
        }
        #endregion
        
        #region Fields
        private Pane mPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Pane : WinPane
    {
        
        public Pane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Web Browser";
            this.WindowTitles.Add("Web Browser");
            #endregion
        }
        
        #region Properties
        public WinButton OKButton
        {
            get
            {
                if ((this.mOKButton == null))
                {
                    this.mOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mOKButton.WindowTitles.Add("Web Browser");
                    #endregion
                }
                return this.mOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWarewolfDEV2SANELEMTWindow : WpfWindow
    {
        
        public UIWarewolfDEV2SANELEMTWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Warewolf (DEV2\\SANELE.MTHEMBU)";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIUI_SplitPane_AutoIDCustom UIUI_SplitPane_AutoIDCustom
        {
            get
            {
                if ((this.mUIUI_SplitPane_AutoIDCustom == null))
                {
                    this.mUIUI_SplitPane_AutoIDCustom = new UIUI_SplitPane_AutoIDCustom(this);
                }
                return this.mUIUI_SplitPane_AutoIDCustom;
            }
        }
        
        public UIUI_ExplorerControl_ACustom UIUI_ExplorerControl_ACustom
        {
            get
            {
                if ((this.mUIUI_ExplorerControl_ACustom == null))
                {
                    this.mUIUI_ExplorerControl_ACustom = new UIUI_ExplorerControl_ACustom(this);
                }
                return this.mUIUI_ExplorerControl_ACustom;
            }
        }
        #endregion
        
        #region Fields
        private UIUI_SplitPane_AutoIDCustom mUIUI_SplitPane_AutoIDCustom;
        
        private UIUI_ExplorerControl_ACustom mUIUI_ExplorerControl_ACustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUI_SplitPane_AutoIDCustom : WpfCustom
    {
        
        public UIUI_SplitPane_AutoIDCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIUI_TabManager_AutoIDTabList UIUI_TabManager_AutoIDTabList
        {
            get
            {
                if ((this.mUIUI_TabManager_AutoIDTabList == null))
                {
                    this.mUIUI_TabManager_AutoIDTabList = new UIUI_TabManager_AutoIDTabList(this);
                }
                return this.mUIUI_TabManager_AutoIDTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIUI_TabManager_AutoIDTabList mUIUI_TabManager_AutoIDTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUI_TabManager_AutoIDTabList : WpfTabList
    {
        
        public UIUI_TabManager_AutoIDTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfTabPage UIDev2StudioViewModelsTabPage
        {
            get
            {
                if ((this.mUIDev2StudioViewModelsTabPage == null))
                {
                    this.mUIDev2StudioViewModelsTabPage = new WpfTabPage(this);
                    #region Search Criteria
                    this.mUIDev2StudioViewModelsTabPage.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
                    this.mUIDev2StudioViewModelsTabPage.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUIDev2StudioViewModelsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WpfTabPage mUIDev2StudioViewModelsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUI_ExplorerControl_ACustom : WpfCustom
    {
        
        public UIUI_ExplorerControl_ACustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExplorerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_ExplorerControl_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIExplorerTreeTree UIExplorerTreeTree
        {
            get
            {
                if ((this.mUIExplorerTreeTree == null))
                {
                    this.mUIExplorerTreeTree = new UIExplorerTreeTree(this);
                }
                return this.mUIExplorerTreeTree;
            }
        }
        #endregion
        
        #region Fields
        private UIExplorerTreeTree mUIExplorerTreeTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIExplorerTreeTree : WpfTree
    {
        
        public UIExplorerTreeTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public localhost4 localhost
        {
            get
            {
                if ((this.mlocalhost == null))
                {
                    this.mlocalhost = new localhost4(this);
                }
                return this.mlocalhost;
            }
        }
        #endregion
        
        #region Fields
        private localhost4 mlocalhost;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class localhost4 : WpfTreeItem
    {
        
        public localhost4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem item1
        {
            get
            {
                if ((this.mitem1 == null))
                {
                    this.mitem1 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mitem1.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Infragistics.Controls.Menus.XamDataTreeNodeDataContext";
                    this.mitem1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mitem1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mitem1.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mitem1;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mitem1;
        #endregion
    }
}
