// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.ExplorerUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class ExplorerUIMap
    {
        
        #region Properties
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneLeft SplitPaneLeft
        {
            get
            {
                if ((this.mSplitPaneLeft == null))
                {
                    this.mSplitPaneLeft = new SplitPaneLeft(this);
                }
                return this.mSplitPaneLeft;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneLeft mSplitPaneLeft;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneLeft : WpfCustom
    {
        
        public SplitPaneLeft(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Explorer Explorer
        {
            get
            {
                if ((this.mExplorer == null))
                {
                    this.mExplorer = new Explorer(this);
                }
                return this.mExplorer;
            }
        }
        #endregion
        
        #region Fields
        private Explorer mExplorer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Explorer : WpfCustom
    {
        
        public Explorer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExplorerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_ExplorerControl_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ExplorerUnpinBtn
        {
            get
            {
                if ((this.mExplorerUnpinBtn == null))
                {
                    this.mExplorerUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mExplorerUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mExplorerUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExplorerUnpinBtn;
            }
        }
        
        public ConnectControl ConnectControl
        {
            get
            {
                if ((this.mConnectControl == null))
                {
                    this.mConnectControl = new ConnectControl(this);
                }
                return this.mConnectControl;
            }
        }
        
        public SearchTextBox SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new SearchTextBox(this);
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton ExplorerRefreshButton
        {
            get
            {
                if ((this.mExplorerRefreshButton == null))
                {
                    this.mExplorerRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExplorerRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExplorerRefreshButton;
            }
        }
        
        public ExplorerTree ExplorerTree
        {
            get
            {
                if ((this.mExplorerTree == null))
                {
                    this.mExplorerTree = new ExplorerTree(this);
                }
                return this.mExplorerTree;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mExplorerUnpinBtn;
        
        private ConnectControl mConnectControl;
        
        private SearchTextBox mSearchTextBox;
        
        private WpfButton mExplorerRefreshButton;
        
        private ExplorerTree mExplorerTree;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConnectControl : WpfCustom
    {
        
        public ConnectControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ConnectControl";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerComboBox ServerComboBox
        {
            get
            {
                if ((this.mServerComboBox == null))
                {
                    this.mServerComboBox = new ServerComboBox(this);
                }
                return this.mServerComboBox;
            }
        }
        
        public WpfButton EditServerButton
        {
            get
            {
                if ((this.mEditServerButton == null))
                {
                    this.mEditServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_ServerEditBtn_AutoID";
                    this.mEditServerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditServerButton;
            }
        }
        
        public WpfButton ConnectServerButton
        {
            get
            {
                if ((this.mConnectServerButton == null))
                {
                    this.mConnectServerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mConnectServerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_ConnectServerBtn_AutoID";
                    this.mConnectServerButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnectServerButton;
            }
        }
        #endregion
        
        #region Fields
        private ServerComboBox mServerComboBox;
        
        private WpfButton mEditServerButton;
        
        private WpfButton mConnectServerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerComboBox : WpfCustom
    {
        
        public ServerComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamComboEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "TheServerComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ToggleButton
        {
            get
            {
                if ((this.mToggleButton == null))
                {
                    this.mToggleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mToggleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ToggleButton";
                    this.mToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToggleButton;
            }
        }
        
        public WpfEdit TextBox
        {
            get
            {
                if ((this.mTextBox == null))
                {
                    this.mTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TextBoxPresenter";
                    this.mTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextBox;
            }
        }
        
        public WpfText SelectedItemAsRemoteConnectionIntegration
        {
            get
            {
                if ((this.mSelectedItemAsRemoteConnectionIntegration == null))
                {
                    this.mSelectedItemAsRemoteConnectionIntegration = new WpfText(this);
                    #region Search Criteria
                    this.mSelectedItemAsRemoteConnectionIntegration.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration";
                    this.mSelectedItemAsRemoteConnectionIntegration.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectedItemAsRemoteConnectionIntegration;
            }
        }
        
        public WpfText SelectedItemAsRemoteConnectionIntegrationConnected
        {
            get
            {
                if ((this.mSelectedItemAsRemoteConnectionIntegrationConnected == null))
                {
                    this.mSelectedItemAsRemoteConnectionIntegrationConnected = new WpfText(this);
                    #region Search Criteria
                    this.mSelectedItemAsRemoteConnectionIntegrationConnected.SearchProperties[WpfText.PropertyNames.Name] = "Remote Connection Integration (Connected)";
                    this.mSelectedItemAsRemoteConnectionIntegrationConnected.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectedItemAsRemoteConnectionIntegrationConnected;
            }
        }
        
        public WpfText SelectedItemAsLocalhost
        {
            get
            {
                if ((this.mSelectedItemAsLocalhost == null))
                {
                    this.mSelectedItemAsLocalhost = new WpfText(this);
                    #region Search Criteria
                    this.mSelectedItemAsLocalhost.SearchProperties[WpfText.PropertyNames.Name] = "localhost";
                    this.mSelectedItemAsLocalhost.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSelectedItemAsLocalhost;
            }
        }
        
        public WpfText LocalhostConnectedText
        {
            get
            {
                if ((this.mLocalhostConnectedText == null))
                {
                    this.mLocalhostConnectedText = new WpfText(this);
                    #region Search Criteria
                    this.mLocalhostConnectedText.SearchProperties[WpfText.PropertyNames.Name] = "localhost (Connected)";
                    this.mLocalhostConnectedText.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mLocalhostConnectedText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mToggleButton;
        
        private WpfEdit mTextBox;
        
        private WpfText mSelectedItemAsRemoteConnectionIntegration;
        
        private WpfText mSelectedItemAsRemoteConnectionIntegrationConnected;
        
        private WpfText mSelectedItemAsLocalhost;
        
        private WpfText mLocalhostConnectedText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextBox : WpfEdit
    {
        
        public SearchTextBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfButton ClearFilterButton
        {
            get
            {
                if ((this.mClearFilterButton == null))
                {
                    this.mClearFilterButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearFilterButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearFilterButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearFilterButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mFilterText;
        
        private WpfButton mClearFilterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExplorerTree : WpfTree
    {
        
        public ExplorerTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "ExplorerTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public localhost localhost
        {
            get
            {
                if ((this.mlocalhost == null))
                {
                    this.mlocalhost = new localhost(this);
                }
                return this.mlocalhost;
            }
        }
        
        public FirstRemoteServer FirstRemoteServer
        {
            get
            {
                if ((this.mFirstRemoteServer == null))
                {
                    this.mFirstRemoteServer = new FirstRemoteServer(this);
                }
                return this.mFirstRemoteServer;
            }
        }
        #endregion
        
        #region Fields
        private localhost mlocalhost;
        
        private FirstRemoteServer mFirstRemoteServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class localhost : WpfTreeItem
    {
        
        public localhost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public Checkbox Checkbox
        {
            get
            {
                if ((this.mCheckbox == null))
                {
                    this.mCheckbox = new Checkbox(this);
                }
                return this.mCheckbox;
            }
        }
        
        public FirstItem FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem(this);
                }
                return this.mFirstItem;
            }
        }
        
        public SecondItem SecondItem
        {
            get
            {
                if ((this.mSecondItem == null))
                {
                    this.mSecondItem = new SecondItem(this);
                }
                return this.mSecondItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        
        private Checkbox mCheckbox;
        
        private FirstItem mFirstItem;
        
        private SecondItem mSecondItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Checkbox : WpfCheckBox
    {
        
        public Checkbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Checkbox";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton IconButton
        {
            get
            {
                if ((this.mIconButton == null))
                {
                    this.mIconButton = new WpfButton(this);
                    #region Search Criteria
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mIconButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIconButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mIconButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem : WpfTreeItem
    {
        
        public FirstItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.ExplorerItemViewModel";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public FirstSubItem FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem(this);
                }
                return this.mFirstSubItem;
            }
        }
        
        public SecondSubItem1 SecondSubItem
        {
            get
            {
                if ((this.mSecondSubItem == null))
                {
                    this.mSecondSubItem = new SecondSubItem1(this);
                }
                return this.mSecondSubItem;
            }
        }
        
        public ThirdSubItem1 ThirdSubItem
        {
            get
            {
                if ((this.mThirdSubItem == null))
                {
                    this.mThirdSubItem = new ThirdSubItem1(this);
                }
                return this.mThirdSubItem;
            }
        }
        
        public WpfCheckBox ExpansionToggleButton
        {
            get
            {
                if ((this.mExpansionToggleButton == null))
                {
                    this.mExpansionToggleButton = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExpansionToggleButton.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "ExpansionIndicator";
                    this.mExpansionToggleButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpansionToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpansionToggleButton;
            }
        }
        
        public WpfText FolderCount
        {
            get
            {
                if ((this.mFolderCount == null))
                {
                    this.mFolderCount = new WpfText(this);
                    #region Search Criteria
                    this.mFolderCount.SearchProperties[WpfText.PropertyNames.Name] = "( 277 )";
                    this.mFolderCount.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mFolderCount.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFolderCount;
            }
        }
        
        public WpfText DisplayName
        {
            get
            {
                if ((this.mDisplayName == null))
                {
                    this.mDisplayName = new WpfText(this);
                    #region Search Criteria
                    this.mDisplayName.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mDisplayName.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDisplayName.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDisplayName;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage mResourceImageImage;
        
        private WpfButton mExecuteIcon;
        
        private WpfEdit mItemEdit;
        
        private FirstSubItem mFirstSubItem;
        
        private SecondSubItem1 mSecondSubItem;
        
        private ThirdSubItem1 mThirdSubItem;
        
        private WpfCheckBox mExpansionToggleButton;
        
        private WpfText mFolderCount;
        
        private WpfText mDisplayName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage : WpfImage
    {
        
        public ResourceImageImage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem : WpfTreeItem
    {
        
        public FirstSubItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage1 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage1(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        
        public FirstItem1 FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem1(this);
                }
                return this.mFirstItem;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage1 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        
        private FirstItem1 mFirstItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage1 : WpfImage
    {
        
        public ResourceImageImage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem1 : WpfTreeItem
    {
        
        public FirstItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage2 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage2(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        
        public FirstSubItem1 FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem1(this);
                }
                return this.mFirstSubItem;
            }
        }
        
        public SecondSubItem SecondSubItem
        {
            get
            {
                if ((this.mSecondSubItem == null))
                {
                    this.mSecondSubItem = new SecondSubItem(this);
                }
                return this.mSecondSubItem;
            }
        }
        
        public ThirdSubItem ThirdSubItem
        {
            get
            {
                if ((this.mThirdSubItem == null))
                {
                    this.mThirdSubItem = new ThirdSubItem(this);
                }
                return this.mThirdSubItem;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage2 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        
        private FirstSubItem1 mFirstSubItem;
        
        private SecondSubItem mSecondSubItem;
        
        private ThirdSubItem mThirdSubItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage2 : WpfImage
    {
        
        public ResourceImageImage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem1 : WpfTreeItem
    {
        
        public FirstSubItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage3 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage3(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage3 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage3 : WpfImage
    {
        
        public ResourceImageImage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecondSubItem : WpfTreeItem
    {
        
        public SecondSubItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage4 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage4(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage4 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage4 : WpfImage
    {
        
        public ResourceImageImage4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ThirdSubItem : WpfTreeItem
    {
        
        public ThirdSubItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage5 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage5(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage5 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage5 : WpfImage
    {
        
        public ResourceImageImage5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecondSubItem1 : WpfTreeItem
    {
        
        public SecondSubItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage6 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage6(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage6 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage6 : WpfImage
    {
        
        public ResourceImageImage6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ThirdSubItem1 : WpfTreeItem
    {
        
        public ThirdSubItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage7 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage7(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        
        public WpfText ResourceNameTextBlock
        {
            get
            {
                if ((this.mResourceNameTextBlock == null))
                {
                    this.mResourceNameTextBlock = new WpfText(this);
                    #region Search Criteria
                    this.mResourceNameTextBlock.SearchProperties[WpfText.PropertyNames.AutomationId] = "ResourceNameTextBlock";
                    this.mResourceNameTextBlock.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mResourceNameTextBlock.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResourceNameTextBlock;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage7 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        
        private WpfText mResourceNameTextBlock;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage7 : WpfImage
    {
        
        public ResourceImageImage7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SecondItem : WpfTreeItem
    {
        
        public SecondItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FirstSubItem2 FirstSubItem
        {
            get
            {
                if ((this.mFirstSubItem == null))
                {
                    this.mFirstSubItem = new FirstSubItem2(this);
                }
                return this.mFirstSubItem;
            }
        }
        #endregion
        
        #region Fields
        private FirstSubItem2 mFirstSubItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstSubItem2 : WpfTreeItem
    {
        
        public FirstSubItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResourceImageImage8 ResourceImageImage
        {
            get
            {
                if ((this.mResourceImageImage == null))
                {
                    this.mResourceImageImage = new ResourceImageImage8(this);
                }
                return this.mResourceImageImage;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private ResourceImageImage8 mResourceImageImage;
        
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResourceImageImage8 : WpfImage
    {
        
        public ResourceImageImage8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ResourceImage";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ViewIcon
        {
            get
            {
                if ((this.mViewIcon == null))
                {
                    this.mViewIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mViewIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "EditButton";
                    this.mViewIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mViewIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mViewIcon;
            }
        }
        
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mViewIcon;
        
        private WpfButton mExecuteIcon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstRemoteServer : WpfTreeItem
    {
        
        public FirstRemoteServer(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Warewolf.Studio.ViewModels.EnvironmentViewModel";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public Checkbox1 Checkbox
        {
            get
            {
                if ((this.mCheckbox == null))
                {
                    this.mCheckbox = new Checkbox1(this);
                }
                return this.mCheckbox;
            }
        }
        
        public FirstItem2 FirstItem
        {
            get
            {
                if ((this.mFirstItem == null))
                {
                    this.mFirstItem = new FirstItem2(this);
                }
                return this.mFirstItem;
            }
        }
        
        public WpfTreeItem SecondItem
        {
            get
            {
                if ((this.mSecondItem == null))
                {
                    this.mSecondItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mSecondItem.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSecondItem.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mSecondItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSecondItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        
        private Checkbox1 mCheckbox;
        
        private FirstItem2 mFirstItem;
        
        private WpfTreeItem mSecondItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Checkbox1 : WpfCheckBox
    {
        
        public Checkbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Checkbox";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton IconButton
        {
            get
            {
                if ((this.mIconButton == null))
                {
                    this.mIconButton = new WpfButton(this);
                    #region Search Criteria
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mIconButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mIconButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIconButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mIconButton;
        
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FirstItem2 : WpfTreeItem
    {
        
        public FirstItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton ExecuteIcon
        {
            get
            {
                if ((this.mExecuteIcon == null))
                {
                    this.mExecuteIcon = new WpfButton(this);
                    #region Search Criteria
                    this.mExecuteIcon.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ExecuteButton";
                    this.mExecuteIcon.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExecuteIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExecuteIcon;
            }
        }
        
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mItemEdit.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mExecuteIcon;
        
        private WpfEdit mItemEdit;
        #endregion
    }
}
