// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.Tools.ToolsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
using Warewolf.UITests.Tools.ToolsUIMapClasses;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class ToolsUIMap
    {
        
        /// <summary>
        /// Open_Tools_UI_Map_Designer_To_Flowchart - Use 'Open_Tools_UI_Map_Designer_To_FlowchartParams' to pass parameters into this method.
        /// </summary>
        public void Open_Tools_UI_Map_Designer_To_Flowchart()
        {
            #region Variable Declarations
            WpfCustom flowchart = this.MainStudioWindow.DockManager.SplitPaneMiddle.TabManSplitPane.TabMan.WorkflowTab.WorkSurfaceContext.WorkflowDesignerView.DesignerView.ScrollViewerPane.ActivityTypeDesigner.WorkflowItemPresenter.Flowchart;
            #endregion

            // Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
            Assert.AreEqual(this.Open_Tools_UI_Map_Designer_To_FlowchartParams.FlowchartExists, flowchart.Exists, "Flowchart does not exist.");
        }
        
        #region Properties
        public virtual Open_Tools_UI_Map_Designer_To_FlowchartParams Open_Tools_UI_Map_Designer_To_FlowchartParams
        {
            get
            {
                if ((this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams == null))
                {
                    this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams = new Open_Tools_UI_Map_Designer_To_FlowchartParams();
                }
                return this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
            }
        }
        
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_Tools_UI_Map_Designer_To_FlowchartParams mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
        
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_Tools_UI_Map_Designer_To_Flowchart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_Tools_UI_Map_Designer_To_FlowchartParams
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
        /// </summary>
        public bool FlowchartExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneMiddle mSplitPaneMiddle;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowTab WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab(this);
                }
                return this.mWorkflowTab;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowTab mWorkflowTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab : WpfTabPage
    {
        
        public WorkflowTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        
        public WorkSurfaceContext WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfText Workflow1ciremoteText
        {
            get
            {
                if ((this.mWorkflow1ciremoteText == null))
                {
                    this.mWorkflow1ciremoteText = new WpfText(this);
                    #region Search Criteria
                    this.mWorkflow1ciremoteText.SearchProperties[WpfText.PropertyNames.Name] = "GenericResource";
                    this.mWorkflow1ciremoteText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflow1ciremoteText;
            }
        }
        
        public ContentPane ContentPane
        {
            get
            {
                if ((this.mContentPane == null))
                {
                    this.mContentPane = new ContentPane(this);
                }
                return this.mContentPane;
            }
        }
        
        public WpfText TabDescription
        {
            get
            {
                if ((this.mTabDescription == null))
                {
                    this.mTabDescription = new WpfText(this);
                    #region Search Criteria
                    this.mTabDescription.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabDescription;
            }
        }
        
        public WpfText UIUnsaved1Text
        {
            get
            {
                if ((this.mUIUnsaved1Text == null))
                {
                    this.mUIUnsaved1Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved1Text.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 1";
                    this.mUIUnsaved1Text.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIUnsaved1Text;
            }
        }
        
        public WpfText UIUnsaved2Text
        {
            get
            {
                if ((this.mUIUnsaved2Text == null))
                {
                    this.mUIUnsaved2Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved2Text.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 2";
                    this.mUIUnsaved2Text.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIUnsaved2Text;
            }
        }
        
        public WpfText UIUnsaved1TextWithAsterisk
        {
            get
            {
                if ((this.mUIUnsaved1TextWithAsterisk == null))
                {
                    this.mUIUnsaved1TextWithAsterisk = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved1TextWithAsterisk.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 1 *";
                    this.mUIUnsaved1TextWithAsterisk.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIUnsaved1TextWithAsterisk;
            }
        }
        
        public WpfText UIHelloWorldText
        {
            get
            {
                if ((this.mUIHelloWorldText == null))
                {
                    this.mUIHelloWorldText = new WpfText(this);
                    #region Search Criteria
                    this.mUIHelloWorldText.SearchProperties[WpfText.PropertyNames.Name] = "Hello World";
                    this.mUIHelloWorldText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIHelloWorldText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCloseButton;
        
        private WorkSurfaceContext mWorkSurfaceContext;
        
        private WpfText mWorkflow1ciremoteText;
        
        private ContentPane mContentPane;
        
        private WpfText mTabDescription;
        
        private WpfText mUIUnsaved1Text;
        
        private WpfText mUIUnsaved2Text;
        
        private WpfText mUIUnsaved1TextWithAsterisk;
        
        private WpfText mUIHelloWorldText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext : WpfCustom
    {
        
        public WorkSurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        
        public TopScrollViewerPane TopScrollViewerPane
        {
            get
            {
                if ((this.mTopScrollViewerPane == null))
                {
                    this.mTopScrollViewerPane = new TopScrollViewerPane(this);
                }
                return this.mTopScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView mWorkflowDesignerView;
        
        private TopScrollViewerPane mTopScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView : WpfCustom
    {
        
        public WorkflowDesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView : WpfCustom
    {
        
        public DesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfToggleButton ExpandAllToggleButton
        {
            get
            {
                if ((this.mExpandAllToggleButton == null))
                {
                    this.mExpandAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mExpandAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "expandAllButton";
                    this.mExpandAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandAllToggleButton;
            }
        }
        
        public WpfToggleButton CollapseAllToggleButton
        {
            get
            {
                if ((this.mCollapseAllToggleButton == null))
                {
                    this.mCollapseAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mCollapseAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "collapseAllButton";
                    this.mCollapseAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCollapseAllToggleButton;
            }
        }
        
        public BreadcrumbbarList BreadcrumbbarList
        {
            get
            {
                if ((this.mBreadcrumbbarList == null))
                {
                    this.mBreadcrumbbarList = new BreadcrumbbarList(this);
                }
                return this.mBreadcrumbbarList;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane mScrollViewerPane;
        
        private WpfToggleButton mExpandAllToggleButton;
        
        private WpfToggleButton mCollapseAllToggleButton;
        
        private BreadcrumbbarList mBreadcrumbbarList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane : WpfPane
    {
        
        public ScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner : WpfCustom
    {
        
        public ActivityTypeDesigner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter : WpfCustom
    {
        
        public WorkflowItemPresenter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart : WpfCustom
    {
        
        public Flowchart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom StackoverflowWorkflow
        {
            get
            {
                if ((this.mStackoverflowWorkflow == null))
                {
                    this.mStackoverflowWorkflow = new WpfCustom(this);
                    #region Search Criteria
                    this.mStackoverflowWorkflow.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignObjectDesigner";
                    this.mStackoverflowWorkflow.SearchProperties[WpfControl.PropertyNames.AutomationId] = "stackoverflowTestWorkflow(ServiceDesigner)";
                    this.mStackoverflowWorkflow.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mStackoverflowWorkflow;
            }
        }
        
        public RabbitMQPublish RabbitMQPublish
        {
            get
            {
                if ((this.mRabbitMQPublish == null))
                {
                    this.mRabbitMQPublish = new RabbitMQPublish(this);
                }
                return this.mRabbitMQPublish;
            }
        }
        
        public RabbitMQConsume RabbitMQConsume
        {
            get
            {
                if ((this.mRabbitMQConsume == null))
                {
                    this.mRabbitMQConsume = new RabbitMQConsume(this);
                }
                return this.mRabbitMQConsume;
            }
        }
        
        public WebPut WebPut
        {
            get
            {
                if ((this.mWebPut == null))
                {
                    this.mWebPut = new WebPut(this);
                }
                return this.mWebPut;
            }
        }
        
        public WebDelete WebDelete
        {
            get
            {
                if ((this.mWebDelete == null))
                {
                    this.mWebDelete = new WebDelete(this);
                }
                return this.mWebDelete;
            }
        }
        
        public AssignObject AssignObject
        {
            get
            {
                if ((this.mAssignObject == null))
                {
                    this.mAssignObject = new AssignObject(this);
                }
                return this.mAssignObject;
            }
        }
        
        public WebRequest WebRequest
        {
            get
            {
                if ((this.mWebRequest == null))
                {
                    this.mWebRequest = new WebRequest(this);
                }
                return this.mWebRequest;
            }
        }
        
        public DotNetDll DotNetDll
        {
            get
            {
                if ((this.mDotNetDll == null))
                {
                    this.mDotNetDll = new DotNetDll(this);
                }
                return this.mDotNetDll;
            }
        }
        
        public DataMerge DataMerge
        {
            get
            {
                if ((this.mDataMerge == null))
                {
                    this.mDataMerge = new DataMerge(this);
                }
                return this.mDataMerge;
            }
        }
        
        public DataSplit DataSplit
        {
            get
            {
                if ((this.mDataSplit == null))
                {
                    this.mDataSplit = new DataSplit(this);
                }
                return this.mDataSplit;
            }
        }
        
        public MySqlDatabase MySqlDatabase
        {
            get
            {
                if ((this.mMySqlDatabase == null))
                {
                    this.mMySqlDatabase = new MySqlDatabase(this);
                }
                return this.mMySqlDatabase;
            }
        }
        
        public SqlServerDatabase SqlServerDatabase
        {
            get
            {
                if ((this.mSqlServerDatabase == null))
                {
                    this.mSqlServerDatabase = new SqlServerDatabase(this);
                }
                return this.mSqlServerDatabase;
            }
        }
        
        public ODBCDatabaseActivCustom ODBCDatabaseActivCustom
        {
            get
            {
                if ((this.mODBCDatabaseActivCustom == null))
                {
                    this.mODBCDatabaseActivCustom = new ODBCDatabaseActivCustom(this);
                }
                return this.mODBCDatabaseActivCustom;
            }
        }
        
        public OracleDatabaseActCustom OracleDatabaseActCustom
        {
            get
            {
                if ((this.mOracleDatabaseActCustom == null))
                {
                    this.mOracleDatabaseActCustom = new OracleDatabaseActCustom(this);
                }
                return this.mOracleDatabaseActCustom;
            }
        }
        
        public PostgreSqlActivitCustom PostgreSqlActivitCustom
        {
            get
            {
                if ((this.mPostgreSqlActivitCustom == null))
                {
                    this.mPostgreSqlActivitCustom = new PostgreSqlActivitCustom(this);
                }
                return this.mPostgreSqlActivitCustom;
            }
        }
        
        public BaseConvert BaseConvert
        {
            get
            {
                if ((this.mBaseConvert == null))
                {
                    this.mBaseConvert = new BaseConvert(this);
                }
                return this.mBaseConvert;
            }
        }
        
        public CaseConvert CaseConvert
        {
            get
            {
                if ((this.mCaseConvert == null))
                {
                    this.mCaseConvert = new CaseConvert(this);
                }
                return this.mCaseConvert;
            }
        }
        
        public WpfCustom SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new WpfCustom(this);
                    #region Search Criteria
                    this.mSubWorkflow.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mSubWorkflow.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "GenericResource(ServiceDesigner)", PropertyExpressionOperator.Contains));
                    this.mSubWorkflow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSubWorkflow;
            }
        }
        
        public ForEach ForEach
        {
            get
            {
                if ((this.mForEach == null))
                {
                    this.mForEach = new ForEach(this);
                }
                return this.mForEach;
            }
        }
        
        public Length Length
        {
            get
            {
                if ((this.mLength == null))
                {
                    this.mLength = new Length(this);
                }
                return this.mLength;
            }
        }
        
        public FindRecordsIndex FindRecordsIndex
        {
            get
            {
                if ((this.mFindRecordsIndex == null))
                {
                    this.mFindRecordsIndex = new FindRecordsIndex(this);
                }
                return this.mFindRecordsIndex;
            }
        }
        
        public DeleteRecord DeleteRecord
        {
            get
            {
                if ((this.mDeleteRecord == null))
                {
                    this.mDeleteRecord = new DeleteRecord(this);
                }
                return this.mDeleteRecord;
            }
        }
        
        public SortRecords SortRecords
        {
            get
            {
                if ((this.mSortRecords == null))
                {
                    this.mSortRecords = new SortRecords(this);
                }
                return this.mSortRecords;
            }
        }
        
        public CountRecordset CountRecordset
        {
            get
            {
                if ((this.mCountRecordset == null))
                {
                    this.mCountRecordset = new CountRecordset(this);
                }
                return this.mCountRecordset;
            }
        }
        
        public SqlBulkInsert SqlBulkInsert
        {
            get
            {
                if ((this.mSqlBulkInsert == null))
                {
                    this.mSqlBulkInsert = new SqlBulkInsert(this);
                }
                return this.mSqlBulkInsert;
            }
        }
        
        public Unique Unique
        {
            get
            {
                if ((this.mUnique == null))
                {
                    this.mUnique = new Unique(this);
                }
                return this.mUnique;
            }
        }
        
        public CreateJson CreateJson
        {
            get
            {
                if ((this.mCreateJson == null))
                {
                    this.mCreateJson = new CreateJson(this);
                }
                return this.mCreateJson;
            }
        }
        
        public ExecuteCommandLine ExecuteCommandLine
        {
            get
            {
                if ((this.mExecuteCommandLine == null))
                {
                    this.mExecuteCommandLine = new ExecuteCommandLine(this);
                }
                return this.mExecuteCommandLine;
            }
        }
        
        public SharepointMoveFile SharepointMoveFile
        {
            get
            {
                if ((this.mSharepointMoveFile == null))
                {
                    this.mSharepointMoveFile = new SharepointMoveFile(this);
                }
                return this.mSharepointMoveFile;
            }
        }
        
        public SharepointCreateListItem SharepointCreateListItem
        {
            get
            {
                if ((this.mSharepointCreateListItem == null))
                {
                    this.mSharepointCreateListItem = new SharepointCreateListItem(this);
                }
                return this.mSharepointCreateListItem;
            }
        }
        
        public SharepointCopyFile SharepointCopyFile
        {
            get
            {
                if ((this.mSharepointCopyFile == null))
                {
                    this.mSharepointCopyFile = new SharepointCopyFile(this);
                }
                return this.mSharepointCopyFile;
            }
        }
        
        public SharepointDeleteListItem SharepointDeleteListItem
        {
            get
            {
                if ((this.mSharepointDeleteListItem == null))
                {
                    this.mSharepointDeleteListItem = new SharepointDeleteListItem(this);
                }
                return this.mSharepointDeleteListItem;
            }
        }
        
        public SharepointReadListItem SharepointReadListItem
        {
            get
            {
                if ((this.mSharepointReadListItem == null))
                {
                    this.mSharepointReadListItem = new SharepointReadListItem(this);
                }
                return this.mSharepointReadListItem;
            }
        }
        
        public SharepointUpdateListItem SharepointUpdateListItem
        {
            get
            {
                if ((this.mSharepointUpdateListItem == null))
                {
                    this.mSharepointUpdateListItem = new SharepointUpdateListItem(this);
                }
                return this.mSharepointUpdateListItem;
            }
        }
        
        public SharepointUploadFile SharepointUploadFile
        {
            get
            {
                if ((this.mSharepointUploadFile == null))
                {
                    this.mSharepointUploadFile = new SharepointUploadFile(this);
                }
                return this.mSharepointUploadFile;
            }
        }
        
        public SharepointDownloadFile SharepointDownloadFile
        {
            get
            {
                if ((this.mSharepointDownloadFile == null))
                {
                    this.mSharepointDownloadFile = new SharepointDownloadFile(this);
                }
                return this.mSharepointDownloadFile;
            }
        }
        
        public SharepointReadFolder SharepointReadFolder
        {
            get
            {
                if ((this.mSharepointReadFolder == null))
                {
                    this.mSharepointReadFolder = new SharepointReadFolder(this);
                }
                return this.mSharepointReadFolder;
            }
        }
        
        public Calculate Calculate
        {
            get
            {
                if ((this.mCalculate == null))
                {
                    this.mCalculate = new Calculate(this);
                }
                return this.mCalculate;
            }
        }
        
        public AggregateCalculat AggregateCalculat
        {
            get
            {
                if ((this.mAggregateCalculat == null))
                {
                    this.mAggregateCalculat = new AggregateCalculat(this);
                }
                return this.mAggregateCalculat;
            }
        }
        
        public DateTime DateTime
        {
            get
            {
                if ((this.mDateTime == null))
                {
                    this.mDateTime = new DateTime(this);
                }
                return this.mDateTime;
            }
        }
        
        public DateTimeDifference DateTimeDifference
        {
            get
            {
                if ((this.mDateTimeDifference == null))
                {
                    this.mDateTimeDifference = new DateTimeDifference(this);
                }
                return this.mDateTimeDifference;
            }
        }
        
        public GatherSystemInfo GatherSystemInfo
        {
            get
            {
                if ((this.mGatherSystemInfo == null))
                {
                    this.mGatherSystemInfo = new GatherSystemInfo(this);
                }
                return this.mGatherSystemInfo;
            }
        }
        
        public FormatNumber FormatNumber
        {
            get
            {
                if ((this.mFormatNumber == null))
                {
                    this.mFormatNumber = new FormatNumber(this);
                }
                return this.mFormatNumber;
            }
        }
        
        public Random Random
        {
            get
            {
                if ((this.mRandom == null))
                {
                    this.mRandom = new Random(this);
                }
                return this.mRandom;
            }
        }
        
        public SMTPEmail SMTPEmail
        {
            get
            {
                if ((this.mSMTPEmail == null))
                {
                    this.mSMTPEmail = new SMTPEmail(this);
                }
                return this.mSMTPEmail;
            }
        }
        
        public ExchangeEmail ExchangeEmail
        {
            get
            {
                if ((this.mExchangeEmail == null))
                {
                    this.mExchangeEmail = new ExchangeEmail(this);
                }
                return this.mExchangeEmail;
            }
        }
        
        public Comment Comment
        {
            get
            {
                if ((this.mComment == null))
                {
                    this.mComment = new Comment(this);
                }
                return this.mComment;
            }
        }
        
        public XPath XPath
        {
            get
            {
                if ((this.mXPath == null))
                {
                    this.mXPath = new XPath(this);
                }
                return this.mXPath;
            }
        }
        
        public DropboxDownload DropboxDownload
        {
            get
            {
                if ((this.mDropboxDownload == null))
                {
                    this.mDropboxDownload = new DropboxDownload(this);
                }
                return this.mDropboxDownload;
            }
        }
        
        public DropboxUpload DropboxUpload
        {
            get
            {
                if ((this.mDropboxUpload == null))
                {
                    this.mDropboxUpload = new DropboxUpload(this);
                }
                return this.mDropboxUpload;
            }
        }
        
        public DropboxDelete DropboxDelete
        {
            get
            {
                if ((this.mDropboxDelete == null))
                {
                    this.mDropboxDelete = new DropboxDelete(this);
                }
                return this.mDropboxDelete;
            }
        }
        
        public DropboxFileList DropboxFileList
        {
            get
            {
                if ((this.mDropboxFileList == null))
                {
                    this.mDropboxFileList = new DropboxFileList(this);
                }
                return this.mDropboxFileList;
            }
        }
        
        public PathCreate PathCreate
        {
            get
            {
                if ((this.mPathCreate == null))
                {
                    this.mPathCreate = new PathCreate(this);
                }
                return this.mPathCreate;
            }
        }
        
        public PathCopy PathCopy
        {
            get
            {
                if ((this.mPathCopy == null))
                {
                    this.mPathCopy = new PathCopy(this);
                }
                return this.mPathCopy;
            }
        }
        
        public PathDelete PathDelete
        {
            get
            {
                if ((this.mPathDelete == null))
                {
                    this.mPathDelete = new PathDelete(this);
                }
                return this.mPathDelete;
            }
        }
        
        public PathMove PathMove
        {
            get
            {
                if ((this.mPathMove == null))
                {
                    this.mPathMove = new PathMove(this);
                }
                return this.mPathMove;
            }
        }
        
        public FolderRead FolderRead
        {
            get
            {
                if ((this.mFolderRead == null))
                {
                    this.mFolderRead = new FolderRead(this);
                }
                return this.mFolderRead;
            }
        }
        
        public FileRead FileRead
        {
            get
            {
                if ((this.mFileRead == null))
                {
                    this.mFileRead = new FileRead(this);
                }
                return this.mFileRead;
            }
        }
        
        public FileWrite FileWrite
        {
            get
            {
                if ((this.mFileWrite == null))
                {
                    this.mFileWrite = new FileWrite(this);
                }
                return this.mFileWrite;
            }
        }
        
        public PathRename PathRename
        {
            get
            {
                if ((this.mPathRename == null))
                {
                    this.mPathRename = new PathRename(this);
                }
                return this.mPathRename;
            }
        }
        
        public UnZip UnZip
        {
            get
            {
                if ((this.mUnZip == null))
                {
                    this.mUnZip = new UnZip(this);
                }
                return this.mUnZip;
            }
        }
        
        public Zip Zip
        {
            get
            {
                if ((this.mZip == null))
                {
                    this.mZip = new Zip(this);
                }
                return this.mZip;
            }
        }
        
        public FindIndex FindIndex
        {
            get
            {
                if ((this.mFindIndex == null))
                {
                    this.mFindIndex = new FindIndex(this);
                }
                return this.mFindIndex;
            }
        }
        
        public Replace Replace
        {
            get
            {
                if ((this.mReplace == null))
                {
                    this.mReplace = new Replace(this);
                }
                return this.mReplace;
            }
        }
        
        public Decision Decision
        {
            get
            {
                if ((this.mDecision == null))
                {
                    this.mDecision = new Decision(this);
                }
                return this.mDecision;
            }
        }
        
        public WpfCustom Switch
        {
            get
            {
                if ((this.mSwitch == null))
                {
                    this.mSwitch = new WpfCustom(this);
                    #region Search Criteria
                    this.mSwitch.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowSwitchDesigner";
                    this.mSwitch.SearchProperties[WpfControl.PropertyNames.AutomationId] = "FlowSwitchDesigner";
                    this.mSwitch.WindowTitles.Add("ActivityDefaultWindow");
                    #endregion
                }
                return this.mSwitch;
            }
        }
        
        public Sequence Sequence
        {
            get
            {
                if ((this.mSequence == null))
                {
                    this.mSequence = new Sequence(this);
                }
                return this.mSequence;
            }
        }
        
        public MultiAssign MultiAssign
        {
            get
            {
                if ((this.mMultiAssign == null))
                {
                    this.mMultiAssign = new MultiAssign(this);
                }
                return this.mMultiAssign;
            }
        }
        
        public WpfCustom StartNode
        {
            get
            {
                if ((this.mStartNode == null))
                {
                    this.mStartNode = new WpfCustom(this);
                    #region Search Criteria
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.StartSymbol";
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.AutomationId] = "StartSymbol";
                    this.mStartNode.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStartNode;
            }
        }
        
        public WebPost WebPost
        {
            get
            {
                if ((this.mWebPost == null))
                {
                    this.mWebPost = new WebPost(this);
                }
                return this.mWebPost;
            }
        }
        
        public WpfCustom Connector1
        {
            get
            {
                if ((this.mConnector1 == null))
                {
                    this.mConnector1 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mConnector1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector1;
            }
        }
        
        public WpfCustom Connector2
        {
            get
            {
                if ((this.mConnector2 == null))
                {
                    this.mConnector2 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector2.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector2.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mConnector2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector2;
            }
        }
        
        public WpfCustom Connector3
        {
            get
            {
                if ((this.mConnector3 == null))
                {
                    this.mConnector3 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector3.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector3.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
                    this.mConnector3.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector3;
            }
        }
        
        public Error1 Error1
        {
            get
            {
                if ((this.mError1 == null))
                {
                    this.mError1 = new Error1(this);
                }
                return this.mError1;
            }
        }
        
        public WebGet WebGet
        {
            get
            {
                if ((this.mWebGet == null))
                {
                    this.mWebGet = new WebGet(this);
                }
                return this.mWebGet;
            }
        }
        
        public ExternalWorkFlow ExternalWorkFlow
        {
            get
            {
                if ((this.mExternalWorkFlow == null))
                {
                    this.mExternalWorkFlow = new ExternalWorkFlow(this);
                }
                return this.mExternalWorkFlow;
            }
        }
        
        public Javascript Javascript
        {
            get
            {
                if ((this.mJavascript == null))
                {
                    this.mJavascript = new Javascript(this);
                }
                return this.mJavascript;
            }
        }
        
        public Python Python
        {
            get
            {
                if ((this.mPython == null))
                {
                    this.mPython = new Python(this);
                }
                return this.mPython;
            }
        }
        
        public Ruby Ruby
        {
            get
            {
                if ((this.mRuby == null))
                {
                    this.mRuby = new Ruby(this);
                }
                return this.mRuby;
            }
        }
        
        public SelectAndApply SelectAndApply
        {
            get
            {
                if ((this.mSelectAndApply == null))
                {
                    this.mSelectAndApply = new SelectAndApply(this);
                }
                return this.mSelectAndApply;
            }
        }
        
        public HelloWorldWorkFlow HelloWorldWorkFlow
        {
            get
            {
                if ((this.mHelloWorldWorkFlow == null))
                {
                    this.mHelloWorldWorkFlow = new HelloWorldWorkFlow(this);
                }
                return this.mHelloWorldWorkFlow;
            }
        }
        
        public WpfText Errors
        {
            get
            {
                if ((this.mErrors == null))
                {
                    this.mErrors = new WpfText(this);
                    #region Search Criteria
                    this.mErrors.SearchProperties[WpfText.PropertyNames.Name] = "Errors";
                    this.mErrors.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrors;
            }
        }
        
        public PrefixcontainsinvaliText PrefixcontainsinvaliText
        {
            get
            {
                if ((this.mPrefixcontainsinvaliText == null))
                {
                    this.mPrefixcontainsinvaliText = new PrefixcontainsinvaliText(this);
                }
                return this.mPrefixcontainsinvaliText;
            }
        }
        
        public DsfWebDeleteOutputsLargeView DsfWebDeleteOutputsLargeView
        {
            get
            {
                if ((this.mDsfWebDeleteOutputsLargeView == null))
                {
                    this.mDsfWebDeleteOutputsLargeView = new DsfWebDeleteOutputsLargeView(this);
                }
                return this.mDsfWebDeleteOutputsLargeView;
            }
        }
        
        public ComDll ComDll
        {
            get
            {
                if ((this.mComDll == null))
                {
                    this.mComDll = new ComDll(this);
                }
                return this.mComDll;
            }
        }
        
        public WcfService WcfService
        {
            get
            {
                if ((this.mWcfService == null))
                {
                    this.mWcfService = new WcfService(this);
                }
                return this.mWcfService;
            }
        }
        
        public Adornert_numbernText Adornert_numbernText
        {
            get
            {
                if ((this.mAdornert_numbernText == null))
                {
                    this.mAdornert_numbernText = new Adornert_numbernText(this);
                }
                return this.mAdornert_numbernText;
            }
        }
        
        public WpfCustom stackOverflowTestWF
        {
            get
            {
                if ((this.mstackOverflowTestWF == null))
                {
                    this.mstackOverflowTestWF = new WpfCustom(this);
                    #region Search Criteria
                    this.mstackOverflowTestWF.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mstackOverflowTestWF.SearchProperties[WpfControl.PropertyNames.AutomationId] = "stackoverflowTestWorkflow(ServiceDesigner)";
                    this.mstackOverflowTestWF.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mstackOverflowTestWF;
            }
        }
        
        public SharepointDeleteFile SharepointDeleteFile
        {
            get
            {
                if ((this.mSharepointDeleteFile == null))
                {
                    this.mSharepointDeleteFile = new SharepointDeleteFile(this);
                }
                return this.mSharepointDeleteFile;
            }
        }
        
        public WpfCustom HelloWordFlowChartName
        {
            get
            {
                if ((this.mHelloWordFlowChartName == null))
                {
                    this.mHelloWordFlowChartName = new WpfCustom(this);
                    #region Search Criteria
                    this.mHelloWordFlowChartName.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UserControl";
                    this.mHelloWordFlowChartName.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DisplayNameReadOnlyControl";
                    this.mHelloWordFlowChartName.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mHelloWordFlowChartName;
            }
        }
        
        public KeepNewNameFlowChartName KeepNewNameFlowChartName
        {
            get
            {
                if ((this.mKeepNewNameFlowChartName == null))
                {
                    this.mKeepNewNameFlowChartName = new KeepNewNameFlowChartName(this);
                }
                return this.mKeepNewNameFlowChartName;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mStackoverflowWorkflow;
        
        private RabbitMQPublish mRabbitMQPublish;
        
        private RabbitMQConsume mRabbitMQConsume;
        
        private WebPut mWebPut;
        
        private WebDelete mWebDelete;
        
        private AssignObject mAssignObject;
        
        private WebRequest mWebRequest;
        
        private DotNetDll mDotNetDll;
        
        private DataMerge mDataMerge;
        
        private DataSplit mDataSplit;
        
        private MySqlDatabase mMySqlDatabase;
        
        private SqlServerDatabase mSqlServerDatabase;
        
        private ODBCDatabaseActivCustom mODBCDatabaseActivCustom;
        
        private OracleDatabaseActCustom mOracleDatabaseActCustom;
        
        private PostgreSqlActivitCustom mPostgreSqlActivitCustom;
        
        private BaseConvert mBaseConvert;
        
        private CaseConvert mCaseConvert;
        
        private WpfCustom mSubWorkflow;
        
        private ForEach mForEach;
        
        private Length mLength;
        
        private FindRecordsIndex mFindRecordsIndex;
        
        private DeleteRecord mDeleteRecord;
        
        private SortRecords mSortRecords;
        
        private CountRecordset mCountRecordset;
        
        private SqlBulkInsert mSqlBulkInsert;
        
        private Unique mUnique;
        
        private CreateJson mCreateJson;
        
        private ExecuteCommandLine mExecuteCommandLine;
        
        private SharepointMoveFile mSharepointMoveFile;
        
        private SharepointCreateListItem mSharepointCreateListItem;
        
        private SharepointCopyFile mSharepointCopyFile;
        
        private SharepointDeleteListItem mSharepointDeleteListItem;
        
        private SharepointReadListItem mSharepointReadListItem;
        
        private SharepointUpdateListItem mSharepointUpdateListItem;
        
        private SharepointUploadFile mSharepointUploadFile;
        
        private SharepointDownloadFile mSharepointDownloadFile;
        
        private SharepointReadFolder mSharepointReadFolder;
        
        private Calculate mCalculate;
        
        private AggregateCalculat mAggregateCalculat;
        
        private DateTime mDateTime;
        
        private DateTimeDifference mDateTimeDifference;
        
        private GatherSystemInfo mGatherSystemInfo;
        
        private FormatNumber mFormatNumber;
        
        private Random mRandom;
        
        private SMTPEmail mSMTPEmail;
        
        private ExchangeEmail mExchangeEmail;
        
        private Comment mComment;
        
        private XPath mXPath;
        
        private DropboxDownload mDropboxDownload;
        
        private DropboxUpload mDropboxUpload;
        
        private DropboxDelete mDropboxDelete;
        
        private DropboxFileList mDropboxFileList;
        
        private PathCreate mPathCreate;
        
        private PathCopy mPathCopy;
        
        private PathDelete mPathDelete;
        
        private PathMove mPathMove;
        
        private FolderRead mFolderRead;
        
        private FileRead mFileRead;
        
        private FileWrite mFileWrite;
        
        private PathRename mPathRename;
        
        private UnZip mUnZip;
        
        private Zip mZip;
        
        private FindIndex mFindIndex;
        
        private Replace mReplace;
        
        private Decision mDecision;
        
        private WpfCustom mSwitch;
        
        private Sequence mSequence;
        
        private MultiAssign mMultiAssign;
        
        private WpfCustom mStartNode;
        
        private WebPost mWebPost;
        
        private WpfCustom mConnector1;
        
        private WpfCustom mConnector2;
        
        private WpfCustom mConnector3;
        
        private Error1 mError1;
        
        private WebGet mWebGet;
        
        private ExternalWorkFlow mExternalWorkFlow;
        
        private Javascript mJavascript;
        
        private Python mPython;
        
        private Ruby mRuby;
        
        private SelectAndApply mSelectAndApply;
        
        private HelloWorldWorkFlow mHelloWorldWorkFlow;
        
        private WpfText mErrors;
        
        private PrefixcontainsinvaliText mPrefixcontainsinvaliText;
        
        private DsfWebDeleteOutputsLargeView mDsfWebDeleteOutputsLargeView;
        
        private ComDll mComDll;
        
        private WcfService mWcfService;
        
        private Adornert_numbernText mAdornert_numbernText;
        
        private WpfCustom mstackOverflowTestWF;
        
        private SharepointDeleteFile mSharepointDeleteFile;
        
        private WpfCustom mHelloWordFlowChartName;
        
        private KeepNewNameFlowChartName mKeepNewNameFlowChartName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RabbitMQPublish : WpfCustom
    {
        
        public RabbitMQPublish(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RabbitMQPublishDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RabbitMQ Publish(RabbitMQPublishDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallViewContentCustom SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private SmallViewContentCustom mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom : WpfCustom
    {
        
        public LargeViewContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceComboBox SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new SourceComboBox(this);
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public QueueNameComboBox QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public WpfCheckBox ExclusiveCheckBox
        {
            get
            {
                if ((this.mExclusiveCheckBox == null))
                {
                    this.mExclusiveCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mExclusiveCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Exclusive";
                    this.mExclusiveCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExclusiveCheckBox;
            }
        }
        
        public WpfCheckBox DurableCheckBox
        {
            get
            {
                if ((this.mDurableCheckBox == null))
                {
                    this.mDurableCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mDurableCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Durable";
                    this.mDurableCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDurableCheckBox;
            }
        }
        
        public WpfCheckBox AutoDeleteCheckBox
        {
            get
            {
                if ((this.mAutoDeleteCheckBox == null))
                {
                    this.mAutoDeleteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAutoDeleteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Auto Delete";
                    this.mAutoDeleteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAutoDeleteCheckBox;
            }
        }
        
        public MessageComboBox MessageComboBox
        {
            get
            {
                if ((this.mMessageComboBox == null))
                {
                    this.mMessageComboBox = new MessageComboBox(this);
                }
                return this.mMessageComboBox;
            }
        }
        
        public ResultsComboBox ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox(this);
                }
                return this.mResultsComboBox;
            }
        }
        
        public OnErrorCustom OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourceComboBox mSourceComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private QueueNameComboBox mQueueNameComboBox;
        
        private WpfCheckBox mExclusiveCheckBox;
        
        private WpfCheckBox mDurableCheckBox;
        
        private WpfCheckBox mAutoDeleteCheckBox;
        
        private MessageComboBox mMessageComboBox;
        
        private ResultsComboBox mResultsComboBox;
        
        private OnErrorCustom mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceComboBox : WpfComboBox
    {
        
        public SourceComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RabbitMQPublishSourceToEditListItem
        {
            get
            {
                if ((this.mRabbitMQPublishSourceToEditListItem == null))
                {
                    this.mRabbitMQPublishSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mRabbitMQPublishSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.RabbitMQServiceSourceDefinition";
                    this.mRabbitMQPublishSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRabbitMQPublishSourceToEditListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRabbitMQPublishSourceToEditListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox : WpfComboBox
    {
        
        public QueueNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MessageComboBox : WpfComboBox
    {
        
        public MessageComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox : WpfComboBox
    {
        
        public ResultsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom : WpfCustom
    {
        
        public OnErrorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup : WpfGroup
    {
        
        public OnErrorGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox mErrorVariableComboBox;
        
        private WebServiceComboBox mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox : WpfComboBox
    {
        
        public ErrorVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox : WpfComboBox
    {
        
        public WebServiceComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom : WpfCustom
    {
        
        public SmallViewContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceComboBox1 SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new SourceComboBox1(this);
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public QueueNameComboBox1 QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox1(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public MessageComboBox1 MessageComboBox
        {
            get
            {
                if ((this.mMessageComboBox == null))
                {
                    this.mMessageComboBox = new MessageComboBox1(this);
                }
                return this.mMessageComboBox;
            }
        }
        
        public ResultsComboBox1 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox1(this);
                }
                return this.mResultsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SourceComboBox1 mSourceComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private QueueNameComboBox1 mQueueNameComboBox;
        
        private MessageComboBox1 mMessageComboBox;
        
        private ResultsComboBox1 mResultsComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceComboBox1 : WpfComboBox
    {
        
        public SourceComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RabbitMQPublishSourceToEditListItem
        {
            get
            {
                if ((this.mRabbitMQPublishSourceToEditListItem == null))
                {
                    this.mRabbitMQPublishSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mRabbitMQPublishSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.RabbitMQServiceSourceDefinition";
                    this.mRabbitMQPublishSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRabbitMQPublishSourceToEditListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRabbitMQPublishSourceToEditListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox1 : WpfComboBox
    {
        
        public QueueNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MessageComboBox1 : WpfComboBox
    {
        
        public MessageComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox1 : WpfComboBox
    {
        
        public ResultsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RabbitMQConsume : WpfCustom
    {
        
        public RabbitMQConsume(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RabbitMQConsumeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "RabbitMQ Consume(RabbitMQConsumeDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom1 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom1(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallViewContentCustom1 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom1(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom1 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private SmallViewContentCustom1 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom1 : WpfCustom
    {
        
        public LargeViewContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceComboBox2 SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new SourceComboBox2(this);
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public QueueNameComboBox2 QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox2(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public ResponseComboBox ResponseComboBox
        {
            get
            {
                if ((this.mResponseComboBox == null))
                {
                    this.mResponseComboBox = new ResponseComboBox(this);
                }
                return this.mResponseComboBox;
            }
        }
        
        public PrefetchComboBox PrefetchComboBox
        {
            get
            {
                if ((this.mPrefetchComboBox == null))
                {
                    this.mPrefetchComboBox = new PrefetchComboBox(this);
                }
                return this.mPrefetchComboBox;
            }
        }
        
        public TimeOutComboBox TimeOutComboBox
        {
            get
            {
                if ((this.mTimeOutComboBox == null))
                {
                    this.mTimeOutComboBox = new TimeOutComboBox(this);
                }
                return this.mTimeOutComboBox;
            }
        }
        
        public WpfCheckBox AcknowledgeCheckBox
        {
            get
            {
                if ((this.mAcknowledgeCheckBox == null))
                {
                    this.mAcknowledgeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mAcknowledgeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Acknowledge";
                    this.mAcknowledgeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAcknowledgeCheckBox;
            }
        }
        
        public WpfCheckBox ReQueueCheckBox
        {
            get
            {
                if ((this.mReQueueCheckBox == null))
                {
                    this.mReQueueCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mReQueueCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "ReQueue";
                    this.mReQueueCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReQueueCheckBox;
            }
        }
        
        public ResultsComboBox2 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox2(this);
                }
                return this.mResultsComboBox;
            }
        }
        
        public OnErrorCustom1 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom1(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourceComboBox2 mSourceComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private QueueNameComboBox2 mQueueNameComboBox;
        
        private ResponseComboBox mResponseComboBox;
        
        private PrefetchComboBox mPrefetchComboBox;
        
        private TimeOutComboBox mTimeOutComboBox;
        
        private WpfCheckBox mAcknowledgeCheckBox;
        
        private WpfCheckBox mReQueueCheckBox;
        
        private ResultsComboBox2 mResultsComboBox;
        
        private OnErrorCustom1 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceComboBox2 : WpfComboBox
    {
        
        public SourceComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RabbitMQSourceFromToolListItem
        {
            get
            {
                if ((this.mRabbitMQSourceFromToolListItem == null))
                {
                    this.mRabbitMQSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mRabbitMQSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRabbitMQSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRabbitMQSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox2 : WpfComboBox
    {
        
        public QueueNameComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResponseComboBox : WpfComboBox
    {
        
        public ResponseComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrefetchComboBox : WpfComboBox
    {
        
        public PrefetchComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeOutComboBox : WpfComboBox
    {
        
        public TimeOutComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox2 : WpfComboBox
    {
        
        public ResultsComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom1 : WpfCustom
    {
        
        public OnErrorCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup1 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup1(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup1 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup1 : WpfGroup
    {
        
        public OnErrorGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox1 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox1(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox1 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox1(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox1 mErrorVariableComboBox;
        
        private WebServiceComboBox1 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox1 : WpfComboBox
    {
        
        public ErrorVariableComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox1 : WpfComboBox
    {
        
        public WebServiceComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom1 : WpfCustom
    {
        
        public SmallViewContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceComboBox3 SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new SourceComboBox3(this);
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditRabbitMQSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "New";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public QueueNameComboBox3 QueueNameComboBox
        {
            get
            {
                if ((this.mQueueNameComboBox == null))
                {
                    this.mQueueNameComboBox = new QueueNameComboBox3(this);
                }
                return this.mQueueNameComboBox;
            }
        }
        
        public ResponseComboBox1 ResponseComboBox
        {
            get
            {
                if ((this.mResponseComboBox == null))
                {
                    this.mResponseComboBox = new ResponseComboBox1(this);
                }
                return this.mResponseComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SourceComboBox3 mSourceComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private QueueNameComboBox3 mQueueNameComboBox;
        
        private ResponseComboBox1 mResponseComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceComboBox3 : WpfComboBox
    {
        
        public SourceComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RabbitMQConsumeSourceToEditListItem
        {
            get
            {
                if ((this.mRabbitMQConsumeSourceToEditListItem == null))
                {
                    this.mRabbitMQConsumeSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mRabbitMQConsumeSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.RabbitMQServiceSourceDefinition";
                    this.mRabbitMQConsumeSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRabbitMQConsumeSourceToEditListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRabbitMQConsumeSourceToEditListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueueNameComboBox3 : WpfComboBox
    {
        
        public QueueNameComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResponseComboBox1 : WpfComboBox
    {
        
        public ResponseComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebPut : WpfCustom
    {
        
        public WebPut(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "PUT Web Method", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServicePutDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfEdit ResponseTextbox
        {
            get
            {
                if ((this.mResponseTextbox == null))
                {
                    this.mResponseTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ResponseTextbox";
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mResponseTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResponseTextbox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView mLargeView;
        
        private WpfEdit mResponseTextbox;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView : WpfCustom
    {
        
        public LargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        
        public Table Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table(this);
                }
                return this.mTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public SourcesComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfEdit RequestBody
        {
            get
            {
                if ((this.mRequestBody == null))
                {
                    this.mRequestBody = new WpfEdit(this);
                    #region Search Criteria
                    this.mRequestBody.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RequestBody";
                    this.mRequestBody.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestBody;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public InputsTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        
        private Table mTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private SourcesComboBox mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText mQueryStringText;
        
        private WpfEdit mRequestBody;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mDoneButton;
        
        private InputsTable mInputsTable;
        
        private WpfButton mTestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table : WpfTable
    {
        
        public Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow1 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow1(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow1 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow1 : WpfRow
    {
        
        public ItemRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell mItemValueCell;
        
        private HeaderCell mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell : WpfCell
    {
        
        public ItemValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox : WpfComboBox
    {
        
        public ValueComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell : WpfCell
    {
        
        public HeaderCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox : WpfComboBox
    {
        
        public HeaderComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox : WpfComboBox
    {
        
        public SourcesComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ComboboxListItemAsTestingReturnText
        {
            get
            {
                if ((this.mComboboxListItemAsTestingReturnText == null))
                {
                    this.mComboboxListItemAsTestingReturnText = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxListItemAsTestingReturnText.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.WebServiceSourceDefinition";
                    this.mComboboxListItemAsTestingReturnText.SearchProperties[WpfListItem.PropertyNames.Instance] = "9";
                    this.mComboboxListItemAsTestingReturnText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxListItemAsTestingReturnText;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mComboboxListItemAsTestingReturnText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText : WpfText
    {
        
        public QueryStringText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable : WpfTable
    {
        
        public InputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SuccessImage
        {
            get
            {
                if ((this.mSuccessImage == null))
                {
                    this.mSuccessImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSuccessImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSuccessImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuccessImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSuccessImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebDelete : WpfCustom
    {
        
        public WebDelete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DELETE Web Method", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView1 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView1(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView1 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView1 : WpfCustom
    {
        
        public LargeView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfTable InputDataGridTable
        {
            get
            {
                if ((this.mInputDataGridTable == null))
                {
                    this.mInputDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputDataGridTable;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Paste a customized response instead";
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        
        public Table1 Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table1(this);
                }
                return this.mTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public SourcesComboBox1 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox1(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText1 QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText1(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Test the procedure or function";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfTable mInputDataGridTable;
        
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        
        private Table1 mTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private SourcesComboBox1 mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText1 mQueryStringText;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mTestButton;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table1 : WpfTable
    {
        
        public Table1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow11 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow11(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow11 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow11 : WpfRow
    {
        
        public ItemRow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell1 ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell1(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell1 HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell1(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell1 mItemValueCell;
        
        private HeaderCell1 mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell1 : WpfCell
    {
        
        public ItemValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox1 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox1(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox1 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox1 : WpfComboBox
    {
        
        public ValueComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell1 : WpfCell
    {
        
        public HeaderCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox1 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox1(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox1 mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox1 : WpfComboBox
    {
        
        public HeaderComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox1 : WpfComboBox
    {
        
        public SourcesComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UITesting
        {
            get
            {
                if ((this.mUITesting == null))
                {
                    this.mUITesting = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITesting.SearchProperties[WpfListItem.PropertyNames.Instance] = "8";
                    this.mUITesting.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITesting;
            }
        }
        
        public WpfListItem WebServiceSourceFromToolListItem
        {
            get
            {
                if ((this.mWebServiceSourceFromToolListItem == null))
                {
                    this.mWebServiceSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mWebServiceSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "5";
                    this.mWebServiceSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mWebServiceSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUITesting;
        
        private WpfListItem mWebServiceSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText1 : WpfText
    {
        
        public QueryStringText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssignObject : WpfCustom
    {
        
        public AssignObject(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignObjectDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Assign Object (0)(MultiAssignObjectDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInput
        {
            get
            {
                if ((this.mOpenQuickVariableInput == null))
                {
                    this.mOpenQuickVariableInput = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInput.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInput.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInput;
            }
        }
        
        public WpfEdit DisplayNameTextbox
        {
            get
            {
                if ((this.mDisplayNameTextbox == null))
                {
                    this.mDisplayNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameBox";
                    this.mDisplayNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayNameTextbox;
            }
        }
        
        public SmallView SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView2 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView2(this);
                }
                return this.mLargeView;
            }
        }
        
        public QuickVariableInputContent QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInput;
        
        private WpfEdit mDisplayNameTextbox;
        
        private SmallView mSmallView;
        
        private LargeView2 mLargeView;
        
        private QuickVariableInputContent mQuickVariableInputContent;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView : WpfCustom
    {
        
        public SmallView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid : WpfTable
    {
        
        public DataGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row1(this);
                }
                return this.mRow1;
            }
        }
        
        public Row2 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row2(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row1 mRow1;
        
        private Row2 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1 : WpfRow
    {
        
        public Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell mVariableCell;
        
        private ValueCell mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell : WpfCell
    {
        
        public VariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTextbox VariableTextbox
        {
            get
            {
                if ((this.mVariableTextbox == null))
                {
                    this.mVariableTextbox = new VariableTextbox(this);
                }
                return this.mVariableTextbox;
            }
        }
        #endregion
        
        #region Fields
        private VariableTextbox mVariableTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTextbox : WpfEdit
    {
        
        public VariableTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText VariableTextboxFloatingText
        {
            get
            {
                if ((this.mVariableTextboxFloatingText == null))
                {
                    this.mVariableTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextboxFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "[[Variable1]]";
                    this.mVariableTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mVariableTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell : WpfCell
    {
        
        public ValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2 : WpfRow
    {
        
        public Row2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell1 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell1(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell1 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell1(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell1 mVariableCell;
        
        private ValueCell1 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell1 : WpfCell
    {
        
        public VariableCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit VariableTextbox
        {
            get
            {
                if ((this.mVariableTextbox == null))
                {
                    this.mVariableTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mVariableTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
                    this.mVariableTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mVariableTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell1 : WpfCell
    {
        
        public ValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView2 : WpfCustom
    {
        
        public LargeView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid1 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid1(this);
                }
                return this.mDataGrid;
            }
        }
        
        public WpfText AddRowsMessage
        {
            get
            {
                if ((this.mAddRowsMessage == null))
                {
                    this.mAddRowsMessage = new WpfText(this);
                    #region Search Criteria
                    this.mAddRowsMessage.SearchProperties[WpfText.PropertyNames.Name] = "Type in the empty rows to add new rows.";
                    this.mAddRowsMessage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddRowsMessage;
            }
        }
        
        public WpfText InsertDeleteRowsMessage
        {
            get
            {
                if ((this.mInsertDeleteRowsMessage == null))
                {
                    this.mInsertDeleteRowsMessage = new WpfText(this);
                    #region Search Criteria
                    this.mInsertDeleteRowsMessage.SearchProperties[WpfText.PropertyNames.Name] = "Right click to insert or delete rows.";
                    this.mInsertDeleteRowsMessage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInsertDeleteRowsMessage;
            }
        }
        
        public OnError OnError
        {
            get
            {
                if ((this.mOnError == null))
                {
                    this.mOnError = new OnError(this);
                }
                return this.mOnError;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid1 mDataGrid;
        
        private WpfText mAddRowsMessage;
        
        private WpfText mInsertDeleteRowsMessage;
        
        private OnError mOnError;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid1 : WpfTable
    {
        
        public DataGrid1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row11 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row11(this);
                }
                return this.mRow1;
            }
        }
        
        public Row21 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row21(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row11 mRow1;
        
        private Row21 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row11 : WpfRow
    {
        
        public Row11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldCell FieldCell
        {
            get
            {
                if ((this.mFieldCell == null))
                {
                    this.mFieldCell = new FieldCell(this);
                }
                return this.mFieldCell;
            }
        }
        
        public FieldValueCell FieldValueCell
        {
            get
            {
                if ((this.mFieldValueCell == null))
                {
                    this.mFieldValueCell = new FieldValueCell(this);
                }
                return this.mFieldValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FieldCell mFieldCell;
        
        private FieldValueCell mFieldValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldCell : WpfCell
    {
        
        public FieldCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldNameComboBox FieldNameComboBox
        {
            get
            {
                if ((this.mFieldNameComboBox == null))
                {
                    this.mFieldNameComboBox = new FieldNameComboBox(this);
                }
                return this.mFieldNameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldNameComboBox mFieldNameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldNameComboBox : WpfComboBox
    {
        
        public FieldNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueCell : WpfCell
    {
        
        public FieldValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldValueComboBox FieldValueComboBox
        {
            get
            {
                if ((this.mFieldValueComboBox == null))
                {
                    this.mFieldValueComboBox = new FieldValueComboBox(this);
                }
                return this.mFieldValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldValueComboBox mFieldValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueComboBox : WpfComboBox
    {
        
        public FieldValueComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row21 : WpfRow
    {
        
        public Row21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldValueCell1 FieldValueCell
        {
            get
            {
                if ((this.mFieldValueCell == null))
                {
                    this.mFieldValueCell = new FieldValueCell1(this);
                }
                return this.mFieldValueCell;
            }
        }
        
        public FieldCell1 FieldCell
        {
            get
            {
                if ((this.mFieldCell == null))
                {
                    this.mFieldCell = new FieldCell1(this);
                }
                return this.mFieldCell;
            }
        }
        #endregion
        
        #region Fields
        private FieldValueCell1 mFieldValueCell;
        
        private FieldCell1 mFieldCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueCell1 : WpfCell
    {
        
        public FieldValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldValueComboBox1 FieldValueComboBox
        {
            get
            {
                if ((this.mFieldValueComboBox == null))
                {
                    this.mFieldValueComboBox = new FieldValueComboBox1(this);
                }
                return this.mFieldValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldValueComboBox1 mFieldValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldValueComboBox1 : WpfComboBox
    {
        
        public FieldValueComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldCell1 : WpfCell
    {
        
        public FieldCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldNameComboBox1 FieldNameComboBox
        {
            get
            {
                if ((this.mFieldNameComboBox == null))
                {
                    this.mFieldNameComboBox = new FieldNameComboBox1(this);
                }
                return this.mFieldNameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldNameComboBox1 mFieldNameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldNameComboBox1 : WpfComboBox
    {
        
        public FieldNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnError : WpfCustom
    {
        
        public OnError(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup2 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup2(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup2 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup2 : WpfGroup
    {
        
        public OnErrorGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ErrorVariable
        {
            get
            {
                if ((this.mErrorVariable == null))
                {
                    this.mErrorVariable = new WpfEdit(this);
                    #region Search Criteria
                    this.mErrorVariable.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Variable_AutoID";
                    this.mErrorVariable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorVariable;
            }
        }
        
        public WpfEdit ErrorWebservice
        {
            get
            {
                if ((this.mErrorWebservice == null))
                {
                    this.mErrorWebservice = new WpfEdit(this);
                    #region Search Criteria
                    this.mErrorWebservice.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
                    this.mErrorWebservice.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrorWebservice;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mErrorVariable;
        
        private WpfEdit mErrorWebservice;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent : WpfCustom
    {
        
        public QuickVariableInputContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixWithEdit
        {
            get
            {
                if ((this.mPrefixWithEdit == null))
                {
                    this.mPrefixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixWithEdit;
            }
        }
        
        public PreviewCustom PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfEdit SurfixWithEdit
        {
            get
            {
                if ((this.mSurfixWithEdit == null))
                {
                    this.mSurfixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSurfixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSurfixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSurfixWithEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixWithEdit;
        
        private PreviewCustom mPreviewCustom;
        
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfEdit mSurfixWithEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom : WpfCustom
    {
        
        public PreviewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup : WpfGroup
    {
        
        public PreviewGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton : WpfButton
    {
        
        public PreviewButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebRequest : WpfCustom
    {
        
        public WebRequest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.GetWebRequestWithTimeOutDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Web Request(GetWebRequestWithTimeOutDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom2 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom2(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom2 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom2(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom2 mLargeViewContentCustom;
        
        private SmallViewContentCustom2 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom2 : WpfCustom
    {
        
        public LargeViewContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public HeaderComboBox2 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox2(this);
                }
                return this.mHeaderComboBox;
            }
        }
        
        public TimeOutComboBox1 TimeOutComboBox
        {
            get
            {
                if ((this.mTimeOutComboBox == null))
                {
                    this.mTimeOutComboBox = new TimeOutComboBox1(this);
                }
                return this.mTimeOutComboBox;
            }
        }
        
        public ResultComboBox ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public PreviewCustom1 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom1(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public OnErrorCustom2 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom2(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox mInputComboBox;
        
        private HeaderComboBox2 mHeaderComboBox;
        
        private TimeOutComboBox1 mTimeOutComboBox;
        
        private ResultComboBox mResultComboBox;
        
        private PreviewCustom1 mPreviewCustom;
        
        private OnErrorCustom2 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox : WpfComboBox
    {
        
        public InputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox2 : WpfComboBox
    {
        
        public HeaderComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeOutComboBox1 : WpfComboBox
    {
        
        public TimeOutComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "The length of time to wait for a web request to complete before failing";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox : WpfComboBox
    {
        
        public ResultComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom1 : WpfCustom
    {
        
        public PreviewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup1 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup1(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup1 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup1 : WpfGroup
    {
        
        public PreviewGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton1 PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton1(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton1 mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton1 : WpfButton
    {
        
        public PreviewButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom2 : WpfCustom
    {
        
        public OnErrorCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup3 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup3(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup3 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup3 : WpfGroup
    {
        
        public OnErrorGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox2 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox2(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebSerciveComboBox WebSerciveComboBox
        {
            get
            {
                if ((this.mWebSerciveComboBox == null))
                {
                    this.mWebSerciveComboBox = new WebSerciveComboBox(this);
                }
                return this.mWebSerciveComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox2 mErrorVariableComboBox;
        
        private WebSerciveComboBox mWebSerciveComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox2 : WpfComboBox
    {
        
        public ErrorVariableComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebSerciveComboBox : WpfComboBox
    {
        
        public WebSerciveComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom2 : WpfCustom
    {
        
        public SmallViewContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox1 InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox1(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public ResultComboBox1 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox1(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox1 mInputComboBox;
        
        private ResultComboBox1 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox1 : WpfComboBox
    {
        
        public InputComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox1 : WpfComboBox
    {
        
        public ResultComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DotNetDll : WpfCustom
    {
        
        public DotNetDll(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DotNetDllDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DotNet DLL", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView3 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView3(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView3 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView3 : WpfCustom
    {
        
        public LargeView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox2 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox2(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public ClassNameComboBox ClassNameComboBox
        {
            get
            {
                if ((this.mClassNameComboBox == null))
                {
                    this.mClassNameComboBox = new ClassNameComboBox(this);
                }
                return this.mClassNameComboBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public LargeDataGridTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton ActionRefreshButton
        {
            get
            {
                if ((this.mActionRefreshButton == null))
                {
                    this.mActionRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mActionRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mActionRefreshButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mActionRefreshButton;
            }
        }
        
        public WpfButton ClassNameRefreshButton
        {
            get
            {
                if ((this.mClassNameRefreshButton == null))
                {
                    this.mClassNameRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClassNameRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NamespaceRefreshButton";
                    this.mClassNameRefreshButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mClassNameRefreshButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfCustom OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new WpfCustom(this);
                    #region Search Criteria
                    this.mOnErrorPane.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
                    this.mOnErrorPane.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
                    this.mOnErrorPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfTable OutputsMappingDataGrid
        {
            get
            {
                if ((this.mOutputsMappingDataGrid == null))
                {
                    this.mOutputsMappingDataGrid = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrid.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrid.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOutputsMappingDataGrid;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckBox
        {
            get
            {
                if ((this.mOutputToObjectCheckBox == null))
                {
                    this.mOutputToObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOutputToObjectCheckBox;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public CtorExpander CtorExpander
        {
            get
            {
                if ((this.mCtorExpander == null))
                {
                    this.mCtorExpander = new CtorExpander(this);
                }
                return this.mCtorExpander;
            }
        }
        
        public OneParamCtorExpander OneParamCtorExpander
        {
            get
            {
                if ((this.mOneParamCtorExpander == null))
                {
                    this.mOneParamCtorExpander = new OneParamCtorExpander(this);
                }
                return this.mOneParamCtorExpander;
            }
        }
        
        public ActionMethodListBoxList ActionMethodListBoxList
        {
            get
            {
                if ((this.mActionMethodListBoxList == null))
                {
                    this.mActionMethodListBoxList = new ActionMethodListBoxList(this);
                }
                return this.mActionMethodListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox2 mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mInputsTable;
        
        private ClassNameComboBox mClassNameComboBox;
        
        private WpfButton mDoneButton;
        
        private WpfButton mNewSourceButton;
        
        private LargeDataGridTable mLargeDataGridTable;
        
        private WpfButton mActionRefreshButton;
        
        private WpfButton mClassNameRefreshButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfCustom mOnErrorPane;
        
        private WpfTable mOutputsMappingDataGrid;
        
        private WpfCheckBox mOutputToObjectCheckBox;
        
        private WpfEdit mRecordSetTextBox;
        
        private CtorExpander mCtorExpander;
        
        private OneParamCtorExpander mOneParamCtorExpander;
        
        private ActionMethodListBoxList mActionMethodListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox2 : WpfComboBox
    {
        
        public SourcesComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ListItem1
        {
            get
            {
                if ((this.mListItem1 == null))
                {
                    this.mListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem1.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mListItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem1;
            }
        }
        
        public WpfListItem DotNetSource
        {
            get
            {
                if ((this.mDotNetSource == null))
                {
                    this.mDotNetSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetSource.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mDotNetSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDotNetSource;
            }
        }
        
        public WpfListItem DotNetPluginSource
        {
            get
            {
                if ((this.mDotNetPluginSource == null))
                {
                    this.mDotNetPluginSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetPluginSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDotNetPluginSource;
            }
        }
        
        public WpfListItem NewDotNetPluginSource
        {
            get
            {
                if ((this.mNewDotNetPluginSource == null))
                {
                    this.mNewDotNetPluginSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDotNetPluginSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewDotNetPluginSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewDotNetPluginSource;
            }
        }
        
        public WpfListItem DotNetPluginSourceToEditListItem
        {
            get
            {
                if ((this.mDotNetPluginSourceToEditListItem == null))
                {
                    this.mDotNetPluginSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetPluginSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mDotNetPluginSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDotNetPluginSourceToEditListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mListItem1;
        
        private WpfListItem mDotNetSource;
        
        private WpfListItem mDotNetPluginSource;
        
        private WpfListItem mNewDotNetPluginSource;
        
        private WpfListItem mDotNetPluginSourceToEditListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ClassNameComboBox : WpfComboBox
    {
        
        public ClassNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "NamespaceComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ComboboxlistItemAsSystemObject
        {
            get
            {
                if ((this.mComboboxlistItemAsSystemObject == null))
                {
                    this.mComboboxlistItemAsSystemObject = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxlistItemAsSystemObject.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mComboboxlistItemAsSystemObject.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxlistItemAsSystemObject;
            }
        }
        
        public WpfListItem SystemRandomListItem
        {
            get
            {
                if ((this.mSystemRandomListItem == null))
                {
                    this.mSystemRandomListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSystemRandomListItem.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "System.Random", PropertyExpressionOperator.Contains));
                    this.mSystemRandomListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSystemRandomListItem;
            }
        }
        
        public WpfListItem AssemblyLocationGACCListItem
        {
            get
            {
                if ((this.mAssemblyLocationGACCListItem == null))
                {
                    this.mAssemblyLocationGACCListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mAssemblyLocationGACCListItem.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""AssemblyLocation"":""GAC:CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=AMD64"",""AssemblyName"":""CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=AMD64"",""FullName"":""ReplacesCorHdrNumericDefines"",""MethodName"":null}";
                    this.mAssemblyLocationGACCListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssemblyLocationGACCListItem;
            }
        }
        
        public WpfListItem HumalClassListItem
        {
            get
            {
                if ((this.mHumalClassListItem == null))
                {
                    this.mHumalClassListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mHumalClassListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "5";
                    this.mHumalClassListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mHumalClassListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mComboboxlistItemAsSystemObject;
        
        private WpfListItem mSystemRandomListItem;
        
        private WpfListItem mAssemblyLocationGACCListItem;
        
        private WpfListItem mHumalClassListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable : WpfTable
    {
        
        public LargeDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row12 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row12(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row12 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row12 : WpfRow
    {
        
        public Row12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputVariableCell InputVariableCell
        {
            get
            {
                if ((this.mInputVariableCell == null))
                {
                    this.mInputVariableCell = new InputVariableCell(this);
                }
                return this.mInputVariableCell;
            }
        }
        
        public EmptyIsNullCell EmptyIsNullCell
        {
            get
            {
                if ((this.mEmptyIsNullCell == null))
                {
                    this.mEmptyIsNullCell = new EmptyIsNullCell(this);
                }
                return this.mEmptyIsNullCell;
            }
        }
        #endregion
        
        #region Fields
        private InputVariableCell mInputVariableCell;
        
        private EmptyIsNullCell mEmptyIsNullCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputVariableCell : WpfCell
    {
        
        public InputVariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputVariableComboBox InputVariableComboBox
        {
            get
            {
                if ((this.mInputVariableComboBox == null))
                {
                    this.mInputVariableComboBox = new InputVariableComboBox(this);
                }
                return this.mInputVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputVariableComboBox mInputVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputVariableComboBox : WpfComboBox
    {
        
        public InputVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EmptyIsNullCell : WpfCell
    {
        
        public EmptyIsNullCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Empty Is Null";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox EmptyIsNullCheckBox
        {
            get
            {
                if ((this.mEmptyIsNullCheckBox == null))
                {
                    this.mEmptyIsNullCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEmptyIsNullCheckBox.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Use NULL when empty.";
                    this.mEmptyIsNullCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEmptyIsNullCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mEmptyIsNullCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CtorExpander : WpfExpander
    {
        
        public CtorExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ConstructorExpander_.ctor _AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton : WpfButton
    {
        
        public ActivitiesDesignButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ConstructorsComboBox ConstructorsComboBox
        {
            get
            {
                if ((this.mConstructorsComboBox == null))
                {
                    this.mConstructorsComboBox = new ConstructorsComboBox(this);
                }
                return this.mConstructorsComboBox;
            }
        }
        
        public WpfText ExpanderIcon
        {
            get
            {
                if ((this.mExpanderIcon == null))
                {
                    this.mExpanderIcon = new WpfText(this);
                    #region Search Criteria
                    this.mExpanderIcon.SearchProperties[WpfText.PropertyNames.AutomationId] = "iconExpand";
                    this.mExpanderIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderIcon;
            }
        }
        
        public WpfText ConstructorLabel
        {
            get
            {
                if ((this.mConstructorLabel == null))
                {
                    this.mConstructorLabel = new WpfText(this);
                    #region Search Criteria
                    this.mConstructorLabel.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mConstructorLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConstructorLabel;
            }
        }
        #endregion
        
        #region Fields
        private ConstructorsComboBox mConstructorsComboBox;
        
        private WpfText mExpanderIcon;
        
        private WpfText mConstructorLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConstructorsComboBox : WpfComboBox
    {
        
        public ConstructorsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConstructorsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public CtorListItem CtorListItem
        {
            get
            {
                if ((this.mCtorListItem == null))
                {
                    this.mCtorListItem = new CtorListItem(this);
                }
                return this.mCtorListItem;
            }
        }
        
        public WpfListItem CtorSystemStringListItem
        {
            get
            {
                if ((this.mCtorSystemStringListItem == null))
                {
                    this.mCtorSystemStringListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String)";
                    this.mCtorSystemStringListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringListItem;
            }
        }
        
        public WpfListItem CtorSystemStringSystListItem
        {
            get
            {
                if ((this.mCtorSystemStringSystListItem == null))
                {
                    this.mCtorSystemStringSystListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringSystListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String,System.String,TestingDotnetDllCascading.Food)";
                    this.mCtorSystemStringSystListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringSystListItem;
            }
        }
        #endregion
        
        #region Fields
        private CtorListItem mCtorListItem;
        
        private WpfListItem mCtorSystemStringListItem;
        
        private WpfListItem mCtorSystemStringSystListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CtorListItem : WpfListItem
    {
        
        public CtorListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor ";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfText UICtorText
        {
            get
            {
                if ((this.mUICtorText == null))
                {
                    this.mUICtorText = new WpfText(this);
                    #region Search Criteria
                    this.mUICtorText.SearchProperties[WpfText.PropertyNames.Name] = ".ctor ";
                    this.mUICtorText.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUICtorText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUICtorText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OneParamCtorExpander : WpfExpander
    {
        
        public OneParamCtorExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ConstructorExpander_.ctor (System.String)_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton1 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton1(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton1 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton1 : WpfButton
    {
        
        public ActivitiesDesignButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ConstructorsComboBox1 ConstructorsComboBox
        {
            get
            {
                if ((this.mConstructorsComboBox == null))
                {
                    this.mConstructorsComboBox = new ConstructorsComboBox1(this);
                }
                return this.mConstructorsComboBox;
            }
        }
        
        public WpfText ExpanderIcon
        {
            get
            {
                if ((this.mExpanderIcon == null))
                {
                    this.mExpanderIcon = new WpfText(this);
                    #region Search Criteria
                    this.mExpanderIcon.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mExpanderIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderIcon;
            }
        }
        
        public WpfText ConstructorLabel
        {
            get
            {
                if ((this.mConstructorLabel == null))
                {
                    this.mConstructorLabel = new WpfText(this);
                    #region Search Criteria
                    this.mConstructorLabel.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mConstructorLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConstructorLabel;
            }
        }
        #endregion
        
        #region Fields
        private ConstructorsComboBox1 mConstructorsComboBox;
        
        private WpfText mExpanderIcon;
        
        private WpfText mConstructorLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConstructorsComboBox1 : WpfComboBox
    {
        
        public ConstructorsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConstructorsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public CtorListItem1 CtorListItem
        {
            get
            {
                if ((this.mCtorListItem == null))
                {
                    this.mCtorListItem = new CtorListItem1(this);
                }
                return this.mCtorListItem;
            }
        }
        
        public WpfListItem CtorSystemStringListItem
        {
            get
            {
                if ((this.mCtorSystemStringListItem == null))
                {
                    this.mCtorSystemStringListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String)";
                    this.mCtorSystemStringListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringListItem;
            }
        }
        
        public WpfListItem CtorSystemStringSystListItem
        {
            get
            {
                if ((this.mCtorSystemStringSystListItem == null))
                {
                    this.mCtorSystemStringSystListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringSystListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String,System.String,TestingDotnetDllCascading.Food)";
                    this.mCtorSystemStringSystListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringSystListItem;
            }
        }
        #endregion
        
        #region Fields
        private CtorListItem1 mCtorListItem;
        
        private WpfListItem mCtorSystemStringListItem;
        
        private WpfListItem mCtorSystemStringSystListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CtorListItem1 : WpfListItem
    {
        
        public CtorListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor ";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfText UICtorText
        {
            get
            {
                if ((this.mUICtorText == null))
                {
                    this.mUICtorText = new WpfText(this);
                    #region Search Criteria
                    this.mUICtorText.SearchProperties[WpfText.PropertyNames.Name] = ".ctor ";
                    this.mUICtorText.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUICtorText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUICtorText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionMethodListBoxList : WpfList
    {
        
        public ActionMethodListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "MethodListBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignListItem ActivitiesDesignListItem
        {
            get
            {
                if ((this.mActivitiesDesignListItem == null))
                {
                    this.mActivitiesDesignListItem = new ActivitiesDesignListItem(this);
                }
                return this.mActivitiesDesignListItem;
            }
        }
        
        public ActivitiesDesignListItem2 ActivitiesDesignListItem2
        {
            get
            {
                if ((this.mActivitiesDesignListItem2 == null))
                {
                    this.mActivitiesDesignListItem2 = new ActivitiesDesignListItem2(this);
                }
                return this.mActivitiesDesignListItem2;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignListItem mActivitiesDesignListItem;
        
        private ActivitiesDesignListItem2 mActivitiesDesignListItem2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignListItem : WpfListItem
    {
        
        public ActivitiesDesignListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Activities.Designers2.Core.ActionRegion.DotNetMethodRegion";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesExpander ActivitiesExpander
        {
            get
            {
                if ((this.mActivitiesExpander == null))
                {
                    this.mActivitiesExpander = new ActivitiesExpander(this);
                }
                return this.mActivitiesExpander;
            }
        }
        
        public GetActivitiesExpander GetActivitiesExpander
        {
            get
            {
                if ((this.mGetActivitiesExpander == null))
                {
                    this.mGetActivitiesExpander = new GetActivitiesExpander(this);
                }
                return this.mGetActivitiesExpander;
            }
        }
        
        public SetActivitiesExpander SetActivitiesExpander
        {
            get
            {
                if ((this.mSetActivitiesExpander == null))
                {
                    this.mSetActivitiesExpander = new SetActivitiesExpander(this);
                }
                return this.mSetActivitiesExpander;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesExpander mActivitiesExpander;
        
        private GetActivitiesExpander mGetActivitiesExpander;
        
        private SetActivitiesExpander mSetActivitiesExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesExpander : WpfExpander
    {
        
        public ActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander__AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionOneLargeDataGridTable ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        
        public ActivitiesDesignButton2 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton2(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionOneLargeDataGridTable mActionOneLargeDataGridTable;
        
        private ActivitiesDesignButton2 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable : WpfTable
    {
        
        public ActionOneLargeDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow : WpfRow
    {
        
        public UIItemRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell : WpfCell
    {
        
        public UIItemWarewolfCoreServCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton2 : WpfButton
    {
        
        public ActivitiesDesignButton2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox : WpfComboBox
    {
        
        public ActionsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GetActivitiesExpander : WpfExpander
    {
        
        public GetActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander_get_Name_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionOneLargeDataGridTable1 ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable1(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        
        public ActivitiesDesignButton3 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton3(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionOneLargeDataGridTable1 mActionOneLargeDataGridTable;
        
        private ActivitiesDesignButton3 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable1 : WpfTable
    {
        
        public ActionOneLargeDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow1 UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow1(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow1 mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow1 : WpfRow
    {
        
        public UIItemRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell1 UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell1(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell1 mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell1 : WpfCell
    {
        
        public UIItemWarewolfCoreServCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox1 UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox1(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox1 mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox1 : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton3 : WpfButton
    {
        
        public ActivitiesDesignButton3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox1 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox1(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox1 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox1 : WpfComboBox
    {
        
        public ActionsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetActivitiesExpander : WpfExpander
    {
        
        public SetActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander_set_Name_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton4 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton4(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        
        public ActionOneLargeDataGridTable2 ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable2(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton4 mActivitiesDesignButton;
        
        private ActionOneLargeDataGridTable2 mActionOneLargeDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton4 : WpfButton
    {
        
        public ActivitiesDesignButton4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox2 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox2(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox2 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox2 : WpfComboBox
    {
        
        public ActionsComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable2 : WpfTable
    {
        
        public ActionOneLargeDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow2 UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow2(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow2 mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow2 : WpfRow
    {
        
        public UIItemRow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell2 UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell2(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell2 mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell2 : WpfCell
    {
        
        public UIItemWarewolfCoreServCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox2 UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox2(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox2 mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox2 : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignListItem2 : WpfListItem
    {
        
        public ActivitiesDesignListItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Activities.Designers2.Core.ActionRegion.DotNetMethodRegion";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public SetActivitiesExpander1 SetActivitiesExpander
        {
            get
            {
                if ((this.mSetActivitiesExpander == null))
                {
                    this.mSetActivitiesExpander = new SetActivitiesExpander1(this);
                }
                return this.mSetActivitiesExpander;
            }
        }
        
        public ActivitiesExpander1 ActivitiesExpander
        {
            get
            {
                if ((this.mActivitiesExpander == null))
                {
                    this.mActivitiesExpander = new ActivitiesExpander1(this);
                }
                return this.mActivitiesExpander;
            }
        }
        #endregion
        
        #region Fields
        private SetActivitiesExpander1 mSetActivitiesExpander;
        
        private ActivitiesExpander1 mActivitiesExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetActivitiesExpander1 : WpfExpander
    {
        
        public SetActivitiesExpander1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander_set_Name_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton5 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton5(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        
        public ActionOneLargeDataGridTable3 ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable3(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton5 mActivitiesDesignButton;
        
        private ActionOneLargeDataGridTable3 mActionOneLargeDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton5 : WpfButton
    {
        
        public ActivitiesDesignButton5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox3 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox3(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this Action";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox3 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox3 : WpfComboBox
    {
        
        public ActionsComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable3 : WpfTable
    {
        
        public ActionOneLargeDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow3 UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow3(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow3 mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow3 : WpfRow
    {
        
        public UIItemRow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell3 UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell3(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell3 mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell3 : WpfCell
    {
        
        public UIItemWarewolfCoreServCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox3 UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox3(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox3 mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox3 : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesExpander1 : WpfExpander
    {
        
        public ActivitiesExpander1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander__AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton6 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton6(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton6 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton6 : WpfButton
    {
        
        public ActivitiesDesignButton6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox4 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox4(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox4 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox4 : WpfComboBox
    {
        
        public ActionsComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataMerge : WpfCustom
    {
        
        public DataMerge(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataMergeDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DataMergeDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton QVIToggleButton
        {
            get
            {
                if ((this.mQVIToggleButton == null))
                {
                    this.mQVIToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mQVIToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mQVIToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQVIToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfEdit DisplayName
        {
            get
            {
                if ((this.mDisplayName == null))
                {
                    this.mDisplayName = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayName.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameBox";
                    this.mDisplayName.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayName;
            }
        }
        
        public SmallView1 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView1(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView4 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView4(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mQVIToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private WpfEdit mDisplayName;
        
        private SmallView1 mSmallView;
        
        private LargeView4 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView1 : WpfCustom
    {
        
        public SmallView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid2 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid2(this);
                }
                return this.mDataGrid;
            }
        }
        
        public ResultTextbox ResultTextbox
        {
            get
            {
                if ((this.mResultTextbox == null))
                {
                    this.mResultTextbox = new ResultTextbox(this);
                }
                return this.mResultTextbox;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid2 mDataGrid;
        
        private ResultTextbox mResultTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid2 : WpfTable
    {
        
        public DataGrid2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row Row
        {
            get
            {
                if ((this.mRow == null))
                {
                    this.mRow = new Row(this);
                }
                return this.mRow;
            }
        }
        
        public Row22 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row22(this);
                }
                return this.mRow2;
            }
        }
        
        public Row3 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row3(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row mRow;
        
        private Row22 mRow2;
        
        private Row3 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row : WpfRow
    {
        
        public Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell mInputCell;
        
        private UsingCell mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell : WpfCell
    {
        
        public InputCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1InputVariabComboBox Row1InputVariabComboBox
        {
            get
            {
                if ((this.mRow1InputVariabComboBox == null))
                {
                    this.mRow1InputVariabComboBox = new Row1InputVariabComboBox(this);
                }
                return this.mRow1InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1InputVariabComboBox mRow1InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1InputVariabComboBox : WpfComboBox
    {
        
        public Row1InputVariabComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell : WpfCell
    {
        
        public UsingCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1UsingDComboBox Row1UsingDComboBox
        {
            get
            {
                if ((this.mRow1UsingDComboBox == null))
                {
                    this.mRow1UsingDComboBox = new Row1UsingDComboBox(this);
                }
                return this.mRow1UsingDComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1UsingDComboBox mRow1UsingDComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1UsingDComboBox : WpfComboBox
    {
        
        public Row1UsingDComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row22 : WpfRow
    {
        
        public Row22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell1 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell1(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell1 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell1(this);
                }
                return this.mUsingCell;
            }
        }
        
        public WpfCell MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new WpfCell(this);
                    #region Search Criteria
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
                    this.mMergeTypeCell.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell1 mInputCell;
        
        private UsingCell1 mUsingCell;
        
        private WpfCell mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell1 : WpfCell
    {
        
        public InputCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2InputVariabComboBox Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2InputVariabComboBox mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox : WpfComboBox
    {
        
        public Row2InputVariabComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell1 : WpfCell
    {
        
        public UsingCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2UsingComboBox Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2UsingComboBox mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox : WpfComboBox
    {
        
        public Row2UsingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row3 : WpfRow
    {
        
        public Row3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MergeTypeCell MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell(this);
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private MergeTypeCell mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell : WpfCell
    {
        
        public MergeTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow4MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
                    this.mRow4MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultTextbox : WpfComboBox
    {
        
        public ResultTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView4 : WpfCustom
    {
        
        public LargeView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid3 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid3(this);
                }
                return this.mDataGrid;
            }
        }
        
        public OnErrorGroup4 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup4(this);
                }
                return this.mOnErrorGroup;
            }
        }
        
        public ResultTextbox1 ResultTextbox
        {
            get
            {
                if ((this.mResultTextbox == null))
                {
                    this.mResultTextbox = new ResultTextbox1(this);
                }
                return this.mResultTextbox;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid3 mDataGrid;
        
        private OnErrorGroup4 mOnErrorGroup;
        
        private ResultTextbox1 mResultTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid3 : WpfTable
    {
        
        public DataGrid3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row4 Row
        {
            get
            {
                if ((this.mRow == null))
                {
                    this.mRow = new Row4(this);
                }
                return this.mRow;
            }
        }
        
        public Row23 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row23(this);
                }
                return this.mRow2;
            }
        }
        
        public Row31 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row31(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row4 mRow;
        
        private Row23 mRow2;
        
        private Row31 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row4 : WpfRow
    {
        
        public Row4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell2 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell2(this);
                }
                return this.mInputCell;
            }
        }
        
        public MergeTypeCell1 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell1(this);
                }
                return this.mMergeTypeCell;
            }
        }
        
        public UsingCell2 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell2(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell2 mInputCell;
        
        private MergeTypeCell1 mMergeTypeCell;
        
        private UsingCell2 mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell2 : WpfCell
    {
        
        public InputCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1InputVariabComboBox1 Row1InputVariabComboBox
        {
            get
            {
                if ((this.mRow1InputVariabComboBox == null))
                {
                    this.mRow1InputVariabComboBox = new Row1InputVariabComboBox1(this);
                }
                return this.mRow1InputVariabComboBox;
            }
        }
        
        public Row2InputVariabComboBox1 Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox1(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1InputVariabComboBox1 mRow1InputVariabComboBox;
        
        private Row2InputVariabComboBox1 mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1InputVariabComboBox1 : WpfComboBox
    {
        
        public Row1InputVariabComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox1 : WpfComboBox
    {
        
        public Row2InputVariabComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell1 : WpfCell
    {
        
        public MergeTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row1MergeTypeComboBox
        {
            get
            {
                if ((this.mRow1MergeTypeComboBox == null))
                {
                    this.mRow1MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow1MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_MergeType_AutoID";
                    this.mRow1MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow1MergeTypeComboBox;
            }
        }
        
        public WpfComboBox Row2MergeTypeComboBox
        {
            get
            {
                if ((this.mRow2MergeTypeComboBox == null))
                {
                    this.mRow2MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow2MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_MergeType_AutoID";
                    this.mRow2MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow2MergeTypeComboBox;
            }
        }
        
        public Row4MergeTypeComboBox Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new Row4MergeTypeComboBox(this);
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow1MergeTypeComboBox;
        
        private WpfComboBox mRow2MergeTypeComboBox;
        
        private Row4MergeTypeComboBox mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row4MergeTypeComboBox : WpfComboBox
    {
        
        public Row4MergeTypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewLineListItem
        {
            get
            {
                if ((this.mNewLineListItem == null))
                {
                    this.mNewLineListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewLineListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "New Line";
                    this.mNewLineListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewLineListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewLineListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell2 : WpfCell
    {
        
        public UsingCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Using";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1UsingComboBox Row1UsingComboBox
        {
            get
            {
                if ((this.mRow1UsingComboBox == null))
                {
                    this.mRow1UsingComboBox = new Row1UsingComboBox(this);
                }
                return this.mRow1UsingComboBox;
            }
        }
        
        public Row2UsingComboBox1 Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox1(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1UsingComboBox mRow1UsingComboBox;
        
        private Row2UsingComboBox1 mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1UsingComboBox : WpfComboBox
    {
        
        public Row1UsingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox1 : WpfComboBox
    {
        
        public Row2UsingComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row23 : WpfRow
    {
        
        public Row23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell3 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell3(this);
                }
                return this.mInputCell;
            }
        }
        
        public MergeTypeCell2 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell2(this);
                }
                return this.mMergeTypeCell;
            }
        }
        
        public UsingCell3 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell3(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell3 mInputCell;
        
        private MergeTypeCell2 mMergeTypeCell;
        
        private UsingCell3 mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell3 : WpfCell
    {
        
        public InputCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2InputVariabComboBox2 Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox2(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2InputVariabComboBox2 mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox2 : WpfComboBox
    {
        
        public Row2InputVariabComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell2 : WpfCell
    {
        
        public MergeTypeCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row2MergeTypeComboBox
        {
            get
            {
                if ((this.mRow2MergeTypeComboBox == null))
                {
                    this.mRow2MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow2MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_MergeType_AutoID";
                    this.mRow2MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow2MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow2MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell3 : WpfCell
    {
        
        public UsingCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Using";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2UsingComboBox2 Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox2(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2UsingComboBox2 mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox2 : WpfComboBox
    {
        
        public Row2UsingComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row31 : WpfRow
    {
        
        public Row31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MergeTypeCell3 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell3(this);
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private MergeTypeCell3 mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell3 : WpfCell
    {
        
        public MergeTypeCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row4MergeTypeComboBox1 Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new Row4MergeTypeComboBox1(this);
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row4MergeTypeComboBox1 mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row4MergeTypeComboBox1 : WpfComboBox
    {
        
        public Row4MergeTypeComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewLineListItem
        {
            get
            {
                if ((this.mNewLineListItem == null))
                {
                    this.mNewLineListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewLineListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "New Line";
                    this.mNewLineListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewLineListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewLineListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup4 : WpfGroup
    {
        
        public OnErrorGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit VariableTextbox
        {
            get
            {
                if ((this.mVariableTextbox == null))
                {
                    this.mVariableTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mVariableTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Variable_AutoID";
                    this.mVariableTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mVariableTextbox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultTextbox1 : WpfComboBox
    {
        
        public ResultTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataSplit : WpfCustom
    {
        
        public DataSplit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataSplitDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DataSplitDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent1 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent1(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public LargeViewContentCustom3 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom3(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom3 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom3(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent1 mQuickVariableInputContent;
        
        private LargeViewContentCustom3 mLargeViewContentCustom;
        
        private SmallViewContentCustom3 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent1 : WpfCustom
    {
        
        public QuickVariableInputContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixWithEdit
        {
            get
            {
                if ((this.mPrefixWithEdit == null))
                {
                    this.mPrefixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixWithEdit;
            }
        }
        
        public PreviewCustom2 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom2(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfEdit SurfixWithEdit
        {
            get
            {
                if ((this.mSurfixWithEdit == null))
                {
                    this.mSurfixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSurfixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSurfixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSurfixWithEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixWithEdit;
        
        private PreviewCustom2 mPreviewCustom;
        
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfEdit mSurfixWithEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom2 : WpfCustom
    {
        
        public PreviewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup2 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup2(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup2 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup2 : WpfGroup
    {
        
        public PreviewGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton2 PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton2(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton2 mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton2 : WpfButton
    {
        
        public PreviewButton2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom3 : WpfCustom
    {
        
        public LargeViewContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public WpfRadioButton ForwardRadioButton
        {
            get
            {
                if ((this.mForwardRadioButton == null))
                {
                    this.mForwardRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mForwardRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI__ProcessDirectionForward_AutoID";
                    this.mForwardRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mForwardRadioButton;
            }
        }
        
        public WpfRadioButton BackwardRadioButton
        {
            get
            {
                if ((this.mBackwardRadioButton == null))
                {
                    this.mBackwardRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mBackwardRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "UI__ProcessDirectionBackward_AutoID";
                    this.mBackwardRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBackwardRadioButton;
            }
        }
        
        public WpfCheckBox SkipblankrowsCheckBox
        {
            get
            {
                if ((this.mSkipblankrowsCheckBox == null))
                {
                    this.mSkipblankrowsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mSkipblankrowsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__SkipBlankRows_AutoID";
                    this.mSkipblankrowsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSkipblankrowsCheckBox;
            }
        }
        
        public LargeDataGridTable1 LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable1(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox mSourceStringComboBox;
        
        private WpfRadioButton mForwardRadioButton;
        
        private WpfRadioButton mBackwardRadioButton;
        
        private WpfCheckBox mSkipblankrowsCheckBox;
        
        private LargeDataGridTable1 mLargeDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox : WpfComboBox
    {
        
        public SourceStringComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable1 : WpfTable
    {
        
        public LargeDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row13 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row13(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row13 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row13 : WpfRow
    {
        
        public Row13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultCell ResultCell
        {
            get
            {
                if ((this.mResultCell == null))
                {
                    this.mResultCell = new ResultCell(this);
                }
                return this.mResultCell;
            }
        }
        
        public SplitTypeCell SplitTypeCell
        {
            get
            {
                if ((this.mSplitTypeCell == null))
                {
                    this.mSplitTypeCell = new SplitTypeCell(this);
                }
                return this.mSplitTypeCell;
            }
        }
        
        public UsingCell4 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell4(this);
                }
                return this.mUsingCell;
            }
        }
        
        public IncludeCell IncludeCell
        {
            get
            {
                if ((this.mIncludeCell == null))
                {
                    this.mIncludeCell = new IncludeCell(this);
                }
                return this.mIncludeCell;
            }
        }
        
        public EscapeCharCell EscapeCharCell
        {
            get
            {
                if ((this.mEscapeCharCell == null))
                {
                    this.mEscapeCharCell = new EscapeCharCell(this);
                }
                return this.mEscapeCharCell;
            }
        }
        #endregion
        
        #region Fields
        private ResultCell mResultCell;
        
        private SplitTypeCell mSplitTypeCell;
        
        private UsingCell4 mUsingCell;
        
        private IncludeCell mIncludeCell;
        
        private EscapeCharCell mEscapeCharCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCell : WpfCell
    {
        
        public ResultCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Results";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultComboBox2 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox2(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ResultComboBox2 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox2 : WpfComboBox
    {
        
        public ResultComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitTypeCell : WpfCell
    {
        
        public SplitTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "With";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SplitTypeComboBox
        {
            get
            {
                if ((this.mSplitTypeComboBox == null))
                {
                    this.mSplitTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSplitTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SplitType_AutoID";
                    this.mSplitTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSplitTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSplitTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell4 : WpfCell
    {
        
        public UsingCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Using";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UsingComboBox UsingComboBox
        {
            get
            {
                if ((this.mUsingComboBox == null))
                {
                    this.mUsingComboBox = new UsingComboBox(this);
                }
                return this.mUsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UsingComboBox mUsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingComboBox : WpfComboBox
    {
        
        public UsingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IncludeCell : WpfCell
    {
        
        public IncludeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Include";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox IncludeCheckBox
        {
            get
            {
                if ((this.mIncludeCheckBox == null))
                {
                    this.mIncludeCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mIncludeCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__Include_Row1_AutoID";
                    this.mIncludeCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIncludeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mIncludeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EscapeCharCell : WpfCell
    {
        
        public EscapeCharCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Escape";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public EscapeCharComboBox EscapeCharComboBox
        {
            get
            {
                if ((this.mEscapeCharComboBox == null))
                {
                    this.mEscapeCharComboBox = new EscapeCharComboBox(this);
                }
                return this.mEscapeCharComboBox;
            }
        }
        #endregion
        
        #region Fields
        private EscapeCharComboBox mEscapeCharComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EscapeCharComboBox : WpfComboBox
    {
        
        public EscapeCharComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__EscapeChar_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom3 : WpfCustom
    {
        
        public SmallViewContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox1 SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox1(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public SmallDataGridTable SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox1 mSourceStringComboBox;
        
        private SmallDataGridTable mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox1 : WpfComboBox
    {
        
        public SourceStringComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable : WpfTable
    {
        
        public SmallDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row14 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row14(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row14 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row14 : WpfRow
    {
        
        public Row14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueCell2 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell2(this);
                }
                return this.mValueCell;
            }
        }
        
        public SplitTypeCell1 SplitTypeCell
        {
            get
            {
                if ((this.mSplitTypeCell == null))
                {
                    this.mSplitTypeCell = new SplitTypeCell1(this);
                }
                return this.mSplitTypeCell;
            }
        }
        
        public AtIndexCell AtIndexCell
        {
            get
            {
                if ((this.mAtIndexCell == null))
                {
                    this.mAtIndexCell = new AtIndexCell(this);
                }
                return this.mAtIndexCell;
            }
        }
        #endregion
        
        #region Fields
        private ValueCell2 mValueCell;
        
        private SplitTypeCell1 mSplitTypeCell;
        
        private AtIndexCell mAtIndexCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell2 : WpfCell
    {
        
        public ValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox2 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox2(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox2 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox2 : WpfComboBox
    {
        
        public ValueComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitTypeCell1 : WpfCell
    {
        
        public SplitTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SplitTypeComboBox
        {
            get
            {
                if ((this.mSplitTypeComboBox == null))
                {
                    this.mSplitTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSplitTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SplitType_AutoID";
                    this.mSplitTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSplitTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSplitTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AtIndexCell : WpfCell
    {
        
        public AtIndexCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AtIndexComboBox AtIndexComboBox
        {
            get
            {
                if ((this.mAtIndexComboBox == null))
                {
                    this.mAtIndexComboBox = new AtIndexComboBox(this);
                }
                return this.mAtIndexComboBox;
            }
        }
        #endregion
        
        #region Fields
        private AtIndexComboBox mAtIndexComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AtIndexComboBox : WpfComboBox
    {
        
        public AtIndexComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MySqlDatabase : WpfCustom
    {
        
        public MySqlDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MySqlDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MySql Database(MySqlDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView5 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView5(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView5 mLargeView;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView5 : WpfCustom
    {
        
        public LargeView5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox3 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox3(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfTable InputLargeDataGridTable
        {
            get
            {
                if ((this.mInputLargeDataGridTable == null))
                {
                    this.mInputLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputLargeDataGridTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom3 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom3(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox3 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mActionsComboBox;
        
        private WpfButton mRefreshButton;
        
        private WpfTable mInputLargeDataGridTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom3 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox3 : WpfComboBox
    {
        
        public SourcesComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem MySQLSourceFromToolListItem
        {
            get
            {
                if ((this.mMySQLSourceFromToolListItem == null))
                {
                    this.mMySQLSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mMySQLSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "MySQLSourceFromTool";
                    this.mMySQLSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mMySQLSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mMySQLSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom3 : WpfCustom
    {
        
        public OnErrorCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup5 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup5(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup5 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup5 : WpfGroup
    {
        
        public OnErrorGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox3 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox3(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox2 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox2(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox3 mErrorVariableComboBox;
        
        private WebServiceComboBox2 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox3 : WpfComboBox
    {
        
        public ErrorVariableComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox2 : WpfComboBox
    {
        
        public WebServiceComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SqlServerDatabase : WpfCustom
    {
        
        public SqlServerDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SqlServerDatabaseDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SQL Server Database", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView6 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView6(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView6 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView6 : WpfCustom
    {
        
        public LargeView6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActionsCombobox5 ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new ActionsCombobox5(this);
                }
                return this.mActionsCombobox;
            }
        }
        
        public SourcesCombobox4 SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new SourcesCombobox4(this);
                }
                return this.mSourcesCombobox;
            }
        }
        
        public InputsTable1 InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable1(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public TestInputsTable TestInputsTable
        {
            get
            {
                if ((this.mTestInputsTable == null))
                {
                    this.mTestInputsTable = new TestInputsTable(this);
                }
                return this.mTestInputsTable;
            }
        }
        
        public WpfButton TestInputsButton
        {
            get
            {
                if ((this.mTestInputsButton == null))
                {
                    this.mTestInputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestInputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestInputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestInputsButton;
            }
        }
        
        public WpfButton TestInputsDoneButton
        {
            get
            {
                if ((this.mTestInputsDoneButton == null))
                {
                    this.mTestInputsDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestInputsDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mTestInputsDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestInputsDoneButton;
            }
        }
        
        public WpfButton NewDbSourceButton
        {
            get
            {
                if ((this.mNewDbSourceButton == null))
                {
                    this.mNewDbSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewDbSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewDbSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDbSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public OnErrorCustom4 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom4(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private ActionsCombobox5 mActionsCombobox;
        
        private SourcesCombobox4 mSourcesCombobox;
        
        private InputsTable1 mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private TestInputsTable mTestInputsTable;
        
        private WpfButton mTestInputsButton;
        
        private WpfButton mTestInputsDoneButton;
        
        private WpfButton mNewDbSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private OnErrorCustom4 mOnErrorCustom;
        
        private WpfButton mRefreshButton;
        
        private WpfEdit mRecordSetTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsCombobox5 : WpfComboBox
    {
        
        public ActionsCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem GetCountriesListItem
        {
            get
            {
                if ((this.mGetCountriesListItem == null))
                {
                    this.mGetCountriesListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGetCountriesListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "dbo.GetCountries";
                    this.mGetCountriesListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGetCountriesListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mGetCountriesListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesCombobox4 : WpfComboBox
    {
        
        public SourcesCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UITestingDBSourceListItem
        {
            get
            {
                if ((this.mUITestingDBSourceListItem == null))
                {
                    this.mUITestingDBSourceListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITestingDBSourceListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "UITestingDBSource";
                    this.mUITestingDBSourceListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITestingDBSourceListItem;
            }
        }
        
        public WpfListItem SQLServerSourceFromTListItem
        {
            get
            {
                if ((this.mSQLServerSourceFromTListItem == null))
                {
                    this.mSQLServerSourceFromTListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSQLServerSourceFromTListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "SQLServerSourceFromTool";
                    this.mSQLServerSourceFromTListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSQLServerSourceFromTListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUITestingDBSourceListItem;
        
        private WpfListItem mSQLServerSourceFromTListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable1 : WpfTable
    {
        
        public InputsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row15 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row15(this);
                }
                return this.mRow1;
            }
        }
        
        public Row24 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row24(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row15 mRow1;
        
        private Row24 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row15 : WpfRow
    {
        
        public Row15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCell DataCell
        {
            get
            {
                if ((this.mDataCell == null))
                {
                    this.mDataCell = new DataCell(this);
                }
                return this.mDataCell;
            }
        }
        #endregion
        
        #region Fields
        private DataCell mDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCell : WpfCell
    {
        
        public DataCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCombobox DataCombobox
        {
            get
            {
                if ((this.mDataCombobox == null))
                {
                    this.mDataCombobox = new DataCombobox(this);
                }
                return this.mDataCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DataCombobox mDataCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCombobox : WpfComboBox
    {
        
        public DataCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DataTextbox
        {
            get
            {
                if ((this.mDataTextbox == null))
                {
                    this.mDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row24 : WpfRow
    {
        
        public Row24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCell1 DataCell
        {
            get
            {
                if ((this.mDataCell == null))
                {
                    this.mDataCell = new DataCell1(this);
                }
                return this.mDataCell;
            }
        }
        #endregion
        
        #region Fields
        private DataCell1 mDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCell1 : WpfCell
    {
        
        public DataCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCombobox1 DataCombobox
        {
            get
            {
                if ((this.mDataCombobox == null))
                {
                    this.mDataCombobox = new DataCombobox1(this);
                }
                return this.mDataCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DataCombobox1 mDataCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCombobox1 : WpfComboBox
    {
        
        public DataCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DataTextbox
        {
            get
            {
                if ((this.mDataTextbox == null))
                {
                    this.mDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInputsTable : WpfTable
    {
        
        public TestInputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.SearchProperties[WpfTable.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row16 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row16(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row16 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row16 : WpfRow
    {
        
        public Row16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestDataCell TestDataCell
        {
            get
            {
                if ((this.mTestDataCell == null))
                {
                    this.mTestDataCell = new TestDataCell(this);
                }
                return this.mTestDataCell;
            }
        }
        #endregion
        
        #region Fields
        private TestDataCell mTestDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestDataCell : WpfCell
    {
        
        public TestDataCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Test Data";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestDataComboBox TestDataComboBox
        {
            get
            {
                if ((this.mTestDataComboBox == null))
                {
                    this.mTestDataComboBox = new TestDataComboBox(this);
                }
                return this.mTestDataComboBox;
            }
        }
        #endregion
        
        #region Fields
        private TestDataComboBox mTestDataComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestDataComboBox : WpfComboBox
    {
        
        public TestDataComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "This data is used for testing and not at run time.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TestDataTextbox
        {
            get
            {
                if ((this.mTestDataTextbox == null))
                {
                    this.mTestDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTestDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTestDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTestDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom4 : WpfCustom
    {
        
        public OnErrorCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup6 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup6(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup6 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup6 : WpfGroup
    {
        
        public OnErrorGroup6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox4 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox4(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox4 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox4 : WpfComboBox
    {
        
        public ErrorVariableComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ODBCDatabaseActivCustom : WpfCustom
    {
        
        public ODBCDatabaseActivCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ODBCDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ODBC Data Source(ODBCDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView7 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView7(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView7 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView7 : WpfCustom
    {
        
        public LargeView7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox5 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox5(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EdistSourceButton
        {
            get
            {
                if ((this.mEdistSourceButton == null))
                {
                    this.mEdistSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEdistSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEdistSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEdistSourceButton;
            }
        }
        
        public ActionCommandComboBox ActionCommandComboBox
        {
            get
            {
                if ((this.mActionCommandComboBox == null))
                {
                    this.mActionCommandComboBox = new ActionCommandComboBox(this);
                }
                return this.mActionCommandComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom5 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom5(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox5 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEdistSourceButton;
        
        private ActionCommandComboBox mActionCommandComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom5 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox5 : WpfComboBox
    {
        
        public SourcesComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ODBCSourceFromToolListItem
        {
            get
            {
                if ((this.mODBCSourceFromToolListItem == null))
                {
                    this.mODBCSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mODBCSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "ODBCSourceFromTool";
                    this.mODBCSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mODBCSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mODBCSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionCommandComboBox : WpfComboBox
    {
        
        public ActionCommandComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom5 : WpfCustom
    {
        
        public OnErrorCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup7 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup7(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup7 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup7 : WpfGroup
    {
        
        public OnErrorGroup7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox5 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox5(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox3 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox3(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox5 mErrorVariableComboBox;
        
        private WebServiceComboBox3 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox5 : WpfComboBox
    {
        
        public ErrorVariableComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox3 : WpfComboBox
    {
        
        public WebServiceComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OracleDatabaseActCustom : WpfCustom
    {
        
        public OracleDatabaseActCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OracleDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Oracle Database(OracleDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView8 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView8(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView8 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView8 : WpfCustom
    {
        
        public LargeView8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox6 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox6(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom6 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom6(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox6 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mActionsComboBox;
        
        private WpfTable mLargeDataGridTable;
        
        private WpfButton mRefreshButton;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom6 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox6 : WpfComboBox
    {
        
        public SourcesComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem OracleSourceFromToolListItem
        {
            get
            {
                if ((this.mOracleSourceFromToolListItem == null))
                {
                    this.mOracleSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mOracleSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "OracleSourceFromTool";
                    this.mOracleSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOracleSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mOracleSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom6 : WpfCustom
    {
        
        public OnErrorCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup8 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup8(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup8 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup8 : WpfGroup
    {
        
        public OnErrorGroup8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox6 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox6(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox4 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox4(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox6 mErrorVariableComboBox;
        
        private WebServiceComboBox4 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox6 : WpfComboBox
    {
        
        public ErrorVariableComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox4 : WpfComboBox
    {
        
        public WebServiceComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PostgreSqlActivitCustom : WpfCustom
    {
        
        public PostgreSqlActivitCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PostgreSqlDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PostgreSQL Database(PostgreSqlDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView9 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView9(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView9 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView9 : WpfCustom
    {
        
        public LargeView9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox7 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox7(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ActionsComboBox6 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox6(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom7 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom7(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox7 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private ActionsComboBox6 mActionsComboBox;
        
        private WpfButton mRefreshButton;
        
        private WpfTable mLargeDataGridTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom7 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox7 : WpfComboBox
    {
        
        public SourcesComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem PostgreSourceTest
        {
            get
            {
                if ((this.mPostgreSourceTest == null))
                {
                    this.mPostgreSourceTest = new WpfListItem(this);
                    #region Search Criteria
                    this.mPostgreSourceTest.SearchProperties[WpfListItem.PropertyNames.Name] = "PostgreSourceTest";
                    this.mPostgreSourceTest.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPostgreSourceTest;
            }
        }
        
        public WpfListItem PostgreSQLSourceFromListItem
        {
            get
            {
                if ((this.mPostgreSQLSourceFromListItem == null))
                {
                    this.mPostgreSQLSourceFromListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mPostgreSQLSourceFromListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "PostgreSQLSourceFromTool";
                    this.mPostgreSQLSourceFromListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mPostgreSQLSourceFromListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mPostgreSourceTest;
        
        private WpfListItem mPostgreSQLSourceFromListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox6 : WpfComboBox
    {
        
        public ActionsComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem GetCountries
        {
            get
            {
                if ((this.mGetCountries == null))
                {
                    this.mGetCountries = new WpfListItem(this);
                    #region Search Criteria
                    this.mGetCountries.SearchProperties[WpfListItem.PropertyNames.Name] = "get_countries";
                    this.mGetCountries.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGetCountries;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mGetCountries;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom7 : WpfCustom
    {
        
        public OnErrorCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup9 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup9(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup9 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup9 : WpfGroup
    {
        
        public OnErrorGroup9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox7 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox7(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox5 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox5(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox7 mErrorVariableComboBox;
        
        private WebServiceComboBox5 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox7 : WpfComboBox
    {
        
        public ErrorVariableComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox5 : WpfComboBox
    {
        
        public WebServiceComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BaseConvert : WpfCustom
    {
        
        public BaseConvert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.BaseConvertDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "BaseConvertDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public LargeView10 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView10(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallView2 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView2(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private LargeView10 mLargeView;
        
        private WpfButton mDoneButton;
        
        private SmallView2 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView10 : WpfCustom
    {
        
        public LargeView10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid4 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid4(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid4 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid4 : WpfTable
    {
        
        public DataGrid4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row17 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row17(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row17 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row17 : WpfRow
    {
        
        public Row17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell : WpfCell
    {
        
        public Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox : WpfControl
    {
        
        public Listbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Combobox";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView2 : WpfCustom
    {
        
        public SmallView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid5 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid5(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid5 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid5 : WpfTable
    {
        
        public DataGrid5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row18 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row18(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row18 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row18 : WpfRow
    {
        
        public Row18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Cell1 Cell
        {
            get
            {
                if ((this.mCell == null))
                {
                    this.mCell = new Cell1(this);
                }
                return this.mCell;
            }
        }
        #endregion
        
        #region Fields
        private Cell1 mCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Cell1 : WpfCell
    {
        
        public Cell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Listbox1 Listbox
        {
            get
            {
                if ((this.mListbox == null))
                {
                    this.mListbox = new Listbox1(this);
                }
                return this.mListbox;
            }
        }
        #endregion
        
        #region Fields
        private Listbox1 mListbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Listbox1 : WpfControl
    {
        
        public Listbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Combobox";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ValueTextbox
        {
            get
            {
                if ((this.mValueTextbox == null))
                {
                    this.mValueTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mValueTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mValueTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mValueTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CaseConvert : WpfCustom
    {
        
        public CaseConvert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CaseConvertDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "CaseConvertDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent2 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent2(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public SmallViewContentCustom4 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom4(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom4 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom4(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent2 mQuickVariableInputContent;
        
        private SmallViewContentCustom4 mSmallViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom4 mLargeViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent2 : WpfCustom
    {
        
        public QuickVariableInputContent2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixWithEdit
        {
            get
            {
                if ((this.mPrefixWithEdit == null))
                {
                    this.mPrefixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixWithEdit;
            }
        }
        
        public PreviewCustom3 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom3(this);
                }
                return this.mPreviewCustom;
            }
        }
        
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfEdit SurfixWithEdit
        {
            get
            {
                if ((this.mSurfixWithEdit == null))
                {
                    this.mSurfixWithEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSurfixWithEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSurfixWithEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSurfixWithEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixWithEdit;
        
        private PreviewCustom3 mPreviewCustom;
        
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfEdit mSurfixWithEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom3 : WpfCustom
    {
        
        public PreviewCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup3 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup3(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup3 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup3 : WpfGroup
    {
        
        public PreviewGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewButton3 PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new PreviewButton3(this);
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private PreviewButton3 mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewButton3 : WpfButton
    {
        
        public PreviewButton3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom4 : WpfCustom
    {
        
        public SmallViewContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable1 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable1(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable1 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable1 : WpfTable
    {
        
        public SmallDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row19 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row19(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row19 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row19 : WpfRow
    {
        
        public Row19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueCell3 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell3(this);
                }
                return this.mValueCell;
            }
        }
        
        public ConvertFuncCell ConvertFuncCell
        {
            get
            {
                if ((this.mConvertFuncCell == null))
                {
                    this.mConvertFuncCell = new ConvertFuncCell(this);
                }
                return this.mConvertFuncCell;
            }
        }
        #endregion
        
        #region Fields
        private ValueCell3 mValueCell;
        
        private ConvertFuncCell mConvertFuncCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell3 : WpfCell
    {
        
        public ValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox3 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox3(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox3 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox3 : WpfComboBox
    {
        
        public ValueComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertFuncCell : WpfCell
    {
        
        public ConvertFuncCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ConverFuncComboBox
        {
            get
            {
                if ((this.mConverFuncComboBox == null))
                {
                    this.mConverFuncComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mConverFuncComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
                    this.mConverFuncComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConverFuncComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mConverFuncComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom4 : WpfCustom
    {
        
        public LargeViewContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable2 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable2(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public OnErrorCustom8 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom8(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable2 mSmallDataGridTable;
        
        private OnErrorCustom8 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable2 : WpfTable
    {
        
        public SmallDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row110 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row110(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row110 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row110 : WpfRow
    {
        
        public Row110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OutputVariableCell OutputVariableCell
        {
            get
            {
                if ((this.mOutputVariableCell == null))
                {
                    this.mOutputVariableCell = new OutputVariableCell(this);
                }
                return this.mOutputVariableCell;
            }
        }
        
        public ConvertToCell ConvertToCell
        {
            get
            {
                if ((this.mConvertToCell == null))
                {
                    this.mConvertToCell = new ConvertToCell(this);
                }
                return this.mConvertToCell;
            }
        }
        #endregion
        
        #region Fields
        private OutputVariableCell mOutputVariableCell;
        
        private ConvertToCell mConvertToCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputVariableCell : WpfCell
    {
        
        public OutputVariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OutputVariableComboBox OutputVariableComboBox
        {
            get
            {
                if ((this.mOutputVariableComboBox == null))
                {
                    this.mOutputVariableComboBox = new OutputVariableComboBox(this);
                }
                return this.mOutputVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private OutputVariableComboBox mOutputVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputVariableComboBox : WpfComboBox
    {
        
        public OutputVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConvertToCell : WpfCell
    {
        
        public ConvertToCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ConvertToComboBox
        {
            get
            {
                if ((this.mConvertToComboBox == null))
                {
                    this.mConvertToComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mConvertToComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
                    this.mConvertToComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConvertToComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mConvertToComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom8 : WpfCustom
    {
        
        public OnErrorCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup10 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup10(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup10 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup10 : WpfGroup
    {
        
        public OnErrorGroup10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox8 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox8(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox6 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox6(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox8 mErrorVariableComboBox;
        
        private WebServiceComboBox6 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox8 : WpfComboBox
    {
        
        public ErrorVariableComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox6 : WpfComboBox
    {
        
        public WebServiceComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForEach : WpfCustom
    {
        
        public ForEach(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ForeachDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "For Each(ForeachDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView3 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView3(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView11 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView11(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView3 mSmallView;
        
        private LargeView11 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView3 : WpfCustom
    {
        
        public SmallView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox ForEachTypeComboBox
        {
            get
            {
                if ((this.mForEachTypeComboBox == null))
                {
                    this.mForEachTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mForEachTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachType_AutoID";
                    this.mForEachTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mForEachTypeComboBox;
            }
        }
        
        public FromIntellisenseTextbox FromIntellisenseTextbox
        {
            get
            {
                if ((this.mFromIntellisenseTextbox == null))
                {
                    this.mFromIntellisenseTextbox = new FromIntellisenseTextbox(this);
                }
                return this.mFromIntellisenseTextbox;
            }
        }
        
        public ToIntellisenseTextbox ToIntellisenseTextbox
        {
            get
            {
                if ((this.mToIntellisenseTextbox == null))
                {
                    this.mToIntellisenseTextbox = new ToIntellisenseTextbox(this);
                }
                return this.mToIntellisenseTextbox;
            }
        }
        
        public WpfCustom DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new WpfCustom(this);
                    #region Search Criteria
                    this.mDropActivityHere.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
                    this.mDropActivityHere.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
                    this.mDropActivityHere.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHere;
            }
        }
        
        public DropActivityHereCustom DropActivityHereCustom
        {
            get
            {
                if ((this.mDropActivityHereCustom == null))
                {
                    this.mDropActivityHereCustom = new DropActivityHereCustom(this);
                }
                return this.mDropActivityHereCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mForEachTypeComboBox;
        
        private FromIntellisenseTextbox mFromIntellisenseTextbox;
        
        private ToIntellisenseTextbox mToIntellisenseTextbox;
        
        private WpfCustom mDropActivityHere;
        
        private DropActivityHereCustom mDropActivityHereCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromIntellisenseTextbox : WpfComboBox
    {
        
        public FromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachFromTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToIntellisenseTextbox : WpfComboBox
    {
        
        public ToIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachToTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHereCustom : WpfCustom
    {
        
        public DropActivityHereCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereText
        {
            get
            {
                if ((this.mDropActivityHereText == null))
                {
                    this.mDropActivityHereText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView11 : WpfCustom
    {
        
        public LargeView11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeCombobox
        {
            get
            {
                if ((this.mTypeCombobox == null))
                {
                    this.mTypeCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachType_AutoID";
                    this.mTypeCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeCombobox;
            }
        }
        
        public ForEachFromIntellisenseTextbox ForEachFromIntellisenseTextbox
        {
            get
            {
                if ((this.mForEachFromIntellisenseTextbox == null))
                {
                    this.mForEachFromIntellisenseTextbox = new ForEachFromIntellisenseTextbox(this);
                }
                return this.mForEachFromIntellisenseTextbox;
            }
        }
        
        public ToIntellisenseTextbox1 ToIntellisenseTextbox
        {
            get
            {
                if ((this.mToIntellisenseTextbox == null))
                {
                    this.mToIntellisenseTextbox = new ToIntellisenseTextbox1(this);
                }
                return this.mToIntellisenseTextbox;
            }
        }
        
        public DropActivityHere DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new DropActivityHere(this);
                }
                return this.mDropActivityHere;
            }
        }
        
        public OnErrorPane OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeCombobox;
        
        private ForEachFromIntellisenseTextbox mForEachFromIntellisenseTextbox;
        
        private ToIntellisenseTextbox1 mToIntellisenseTextbox;
        
        private DropActivityHere mDropActivityHere;
        
        private OnErrorPane mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ForEachFromIntellisenseTextbox : WpfComboBox
    {
        
        public ForEachFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachFromTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToIntellisenseTextbox1 : WpfComboBox
    {
        
        public ToIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ForEachToTextbox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHere : WpfCustom
    {
        
        public DropActivityHere(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereFloatingText
        {
            get
            {
                if ((this.mDropActivityHereFloatingText == null))
                {
                    this.mDropActivityHereFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane : WpfCustom
    {
        
        public OnErrorPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup11 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup11(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup11 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup11 : WpfGroup
    {
        
        public OnErrorGroup11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseTextbox ErrorVariableIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseTextbox == null))
                {
                    this.mErrorVariableIntellisenseTextbox = new ErrorVariableIntellisenseTextbox(this);
                }
                return this.mErrorVariableIntellisenseTextbox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseTextbox mErrorVariableIntellisenseTextbox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseTextbox : WpfComboBox
    {
        
        public ErrorVariableIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Length : WpfCustom
    {
        
        public Length(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RecordsLengthDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Length(RecordsLengthDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom5 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom5(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallViewContentCustom5 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom5(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom5 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private SmallViewContentCustom5 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom5 : WpfCustom
    {
        
        public LargeViewContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecordsetComboBox RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        
        public WpfCheckBox NullAsZeroCheckBox
        {
            get
            {
                if ((this.mNullAsZeroCheckBox == null))
                {
                    this.mNullAsZeroCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNullAsZeroCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__NullAsCheckBox_AutoID";
                    this.mNullAsZeroCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNullAsZeroCheckBox;
            }
        }
        
        public ResultComboBox3 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox3(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom9 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom9(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private RecordsetComboBox mRecordsetComboBox;
        
        private WpfCheckBox mNullAsZeroCheckBox;
        
        private ResultComboBox3 mResultComboBox;
        
        private OnErrorCustom9 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox : WpfComboBox
    {
        
        public RecordsetComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox3 : WpfComboBox
    {
        
        public ResultComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom9 : WpfCustom
    {
        
        public OnErrorCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup12 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup12(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup12 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup12 : WpfGroup
    {
        
        public OnErrorGroup12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox(this);
                }
                return this.mVariableComboBox;
            }
        }
        
        public WebServiceComboBox7 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox7(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox mVariableComboBox;
        
        private WebServiceComboBox7 mWebServiceComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox : WpfComboBox
    {
        
        public VariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox7 : WpfComboBox
    {
        
        public WebServiceComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom5 : WpfCustom
    {
        
        public SmallViewContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultComboBox4 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox4(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public RecordsetComboBox1 RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox1(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ResultComboBox4 mResultComboBox;
        
        private RecordsetComboBox1 mRecordsetComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox4 : WpfComboBox
    {
        
        public ResultComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox1 : WpfComboBox
    {
        
        public RecordsetComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindRecordsIndex : WpfCustom
    {
        
        public FindRecordsIndex(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FindRecordsMultipleCriteriaDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "FindRecordsMultipleCriteriaDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom6 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom6(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom6 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom6(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom6 mSmallViewContentCustom;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom6 mLargeViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom6 : WpfCustom
    {
        
        public SmallViewContentCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldsToSearchComboBox FieldsToSearchComboBox
        {
            get
            {
                if ((this.mFieldsToSearchComboBox == null))
                {
                    this.mFieldsToSearchComboBox = new FieldsToSearchComboBox(this);
                }
                return this.mFieldsToSearchComboBox;
            }
        }
        
        public SmallDataGridTable3 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable3(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public ResultComboBox5 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox5(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FieldsToSearchComboBox mFieldsToSearchComboBox;
        
        private SmallDataGridTable3 mSmallDataGridTable;
        
        private ResultComboBox5 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldsToSearchComboBox : WpfComboBox
    {
        
        public FieldsToSearchComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FieldsToSearch_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable3 : WpfTable
    {
        
        public SmallDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row111 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row111(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row111 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row111 : WpfRow
    {
        
        public Row111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchTypeCell SearchTypeCell
        {
            get
            {
                if ((this.mSearchTypeCell == null))
                {
                    this.mSearchTypeCell = new SearchTypeCell(this);
                }
                return this.mSearchTypeCell;
            }
        }
        
        public SearchCriteriaCell SearchCriteriaCell
        {
            get
            {
                if ((this.mSearchCriteriaCell == null))
                {
                    this.mSearchCriteriaCell = new SearchCriteriaCell(this);
                }
                return this.mSearchCriteriaCell;
            }
        }
        #endregion
        
        #region Fields
        private SearchTypeCell mSearchTypeCell;
        
        private SearchCriteriaCell mSearchCriteriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTypeCell : WpfCell
    {
        
        public SearchTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SearchTypeComboBox
        {
            get
            {
                if ((this.mSearchTypeComboBox == null))
                {
                    this.mSearchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSearchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mSearchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSearchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaCell : WpfCell
    {
        
        public SearchCriteriaCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchCriteriaComboBox SearchCriteriaComboBox
        {
            get
            {
                if ((this.mSearchCriteriaComboBox == null))
                {
                    this.mSearchCriteriaComboBox = new SearchCriteriaComboBox(this);
                }
                return this.mSearchCriteriaComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SearchCriteriaComboBox mSearchCriteriaComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaComboBox : WpfComboBox
    {
        
        public SearchCriteriaComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox5 : WpfComboBox
    {
        
        public ResultComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom6 : WpfCustom
    {
        
        public LargeViewContentCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FieldsToSearchComboBox1 FieldsToSearchComboBox
        {
            get
            {
                if ((this.mFieldsToSearchComboBox == null))
                {
                    this.mFieldsToSearchComboBox = new FieldsToSearchComboBox1(this);
                }
                return this.mFieldsToSearchComboBox;
            }
        }
        
        public LargeDataGridTable2 LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable2(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfCheckBox RequireAllMatchesTruCheckBox
        {
            get
            {
                if ((this.mRequireAllMatchesTruCheckBox == null))
                {
                    this.mRequireAllMatchesTruCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequireAllMatchesTruCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequireAllMatchesTruCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequireAllMatchesTruCheckBox;
            }
        }
        
        public WpfCheckBox RequireAllFieldsToMatchCheckBox
        {
            get
            {
                if ((this.mRequireAllFieldsToMatchCheckBox == null))
                {
                    this.mRequireAllFieldsToMatchCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequireAllFieldsToMatchCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllFieldsToMatch_AutoID";
                    this.mRequireAllFieldsToMatchCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequireAllFieldsToMatchCheckBox;
            }
        }
        
        public ResultComboBox6 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox6(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom10 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom10(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FieldsToSearchComboBox1 mFieldsToSearchComboBox;
        
        private LargeDataGridTable2 mLargeDataGridTable;
        
        private WpfCheckBox mRequireAllMatchesTruCheckBox;
        
        private WpfCheckBox mRequireAllFieldsToMatchCheckBox;
        
        private ResultComboBox6 mResultComboBox;
        
        private OnErrorCustom10 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FieldsToSearchComboBox1 : WpfComboBox
    {
        
        public FieldsToSearchComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FieldsToSearchtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable2 : WpfTable
    {
        
        public LargeDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row112 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row112(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row112 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row112 : WpfRow
    {
        
        public Row112(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchTypeCell1 SearchTypeCell
        {
            get
            {
                if ((this.mSearchTypeCell == null))
                {
                    this.mSearchTypeCell = new SearchTypeCell1(this);
                }
                return this.mSearchTypeCell;
            }
        }
        
        public SearchCriteriaCell1 SearchCriteriaCell
        {
            get
            {
                if ((this.mSearchCriteriaCell == null))
                {
                    this.mSearchCriteriaCell = new SearchCriteriaCell1(this);
                }
                return this.mSearchCriteriaCell;
            }
        }
        #endregion
        
        #region Fields
        private SearchTypeCell1 mSearchTypeCell;
        
        private SearchCriteriaCell1 mSearchCriteriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTypeCell1 : WpfCell
    {
        
        public SearchTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "MatchType";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SearchTypeComboBox
        {
            get
            {
                if ((this.mSearchTypeComboBox == null))
                {
                    this.mSearchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSearchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mSearchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSearchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaCell1 : WpfCell
    {
        
        public SearchCriteriaCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SearchCriteriaComboBox1 SearchCriteriaComboBox
        {
            get
            {
                if ((this.mSearchCriteriaComboBox == null))
                {
                    this.mSearchCriteriaComboBox = new SearchCriteriaComboBox1(this);
                }
                return this.mSearchCriteriaComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SearchCriteriaComboBox1 mSearchCriteriaComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchCriteriaComboBox1 : WpfComboBox
    {
        
        public SearchCriteriaComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox6 : WpfComboBox
    {
        
        public ResultComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom10 : WpfCustom
    {
        
        public OnErrorCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup13 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup13(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup13 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup13 : WpfGroup
    {
        
        public OnErrorGroup13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox9 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox9(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox8 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox8(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox9 mErrorVariableComboBox;
        
        private WebServiceComboBox8 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox9 : WpfComboBox
    {
        
        public ErrorVariableComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox8 : WpfComboBox
    {
        
        public WebServiceComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteRecord : WpfCustom
    {
        
        public DeleteRecord(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DeleteRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Delete Record(DeleteRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom7 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom7(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public LargeViewContentCustom7 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom7(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom7 mSmallViewContentCustom;
        
        private LargeViewContentCustom7 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom7 : WpfCustom
    {
        
        public SmallViewContentCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecordsetComboBox2 RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox2(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        
        public ResultComboBox7 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox7(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private RecordsetComboBox2 mRecordsetComboBox;
        
        private ResultComboBox7 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox2 : WpfComboBox
    {
        
        public RecordsetComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox7 : WpfComboBox
    {
        
        public ResultComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom7 : WpfCustom
    {
        
        public LargeViewContentCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecordsetComboBox3 RecordsetComboBox
        {
            get
            {
                if ((this.mRecordsetComboBox == null))
                {
                    this.mRecordsetComboBox = new RecordsetComboBox3(this);
                }
                return this.mRecordsetComboBox;
            }
        }
        
        public WpfCheckBox NullAsZeroCheckBoxCheckBox
        {
            get
            {
                if ((this.mNullAsZeroCheckBoxCheckBox == null))
                {
                    this.mNullAsZeroCheckBoxCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNullAsZeroCheckBoxCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__NullAsCheckBox_AutoID";
                    this.mNullAsZeroCheckBoxCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNullAsZeroCheckBoxCheckBox;
            }
        }
        
        public ResultComboBox8 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox8(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom11 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom11(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private RecordsetComboBox3 mRecordsetComboBox;
        
        private WpfCheckBox mNullAsZeroCheckBoxCheckBox;
        
        private ResultComboBox8 mResultComboBox;
        
        private OnErrorCustom11 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetComboBox3 : WpfComboBox
    {
        
        public RecordsetComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox8 : WpfComboBox
    {
        
        public ResultComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom11 : WpfCustom
    {
        
        public OnErrorCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup14 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup14(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup14 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup14 : WpfGroup
    {
        
        public OnErrorGroup14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox10 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox10(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox9 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox9(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox10 mErrorVariableComboBox;
        
        private WebServiceComboBox9 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox10 : WpfComboBox
    {
        
        public ErrorVariableComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox9 : WpfComboBox
    {
        
        public WebServiceComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SortRecords : WpfCustom
    {
        
        public SortRecords(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SortRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sort Records(SortRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom8 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom8(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public LargeViewContentCustom8 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom8(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom8 mSmallViewContentCustom;
        
        private LargeViewContentCustom8 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom8 : WpfCustom
    {
        
        public SmallViewContentCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SortFieldComboBox SortFieldComboBox
        {
            get
            {
                if ((this.mSortFieldComboBox == null))
                {
                    this.mSortFieldComboBox = new SortFieldComboBox(this);
                }
                return this.mSortFieldComboBox;
            }
        }
        
        public WpfComboBox SortOrderComboBox
        {
            get
            {
                if ((this.mSortOrderComboBox == null))
                {
                    this.mSortOrderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSortOrderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortOrdercbx_AutoID";
                    this.mSortOrderComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSortOrderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SortFieldComboBox mSortFieldComboBox;
        
        private WpfComboBox mSortOrderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SortFieldComboBox : WpfComboBox
    {
        
        public SortFieldComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom8 : WpfCustom
    {
        
        public LargeViewContentCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SortFieldComboBox1 SortFieldComboBox
        {
            get
            {
                if ((this.mSortFieldComboBox == null))
                {
                    this.mSortFieldComboBox = new SortFieldComboBox1(this);
                }
                return this.mSortFieldComboBox;
            }
        }
        
        public WpfComboBox SortOrderComboBox
        {
            get
            {
                if ((this.mSortOrderComboBox == null))
                {
                    this.mSortOrderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSortOrderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortOrdercbx_AutoID";
                    this.mSortOrderComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSortOrderComboBox;
            }
        }
        
        public OnErrorCustom12 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom12(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SortFieldComboBox1 mSortFieldComboBox;
        
        private WpfComboBox mSortOrderComboBox;
        
        private OnErrorCustom12 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SortFieldComboBox1 : WpfComboBox
    {
        
        public SortFieldComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SortFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom12 : WpfCustom
    {
        
        public OnErrorCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup15 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup15(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup15 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup15 : WpfGroup
    {
        
        public OnErrorGroup15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox11 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox11(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox10 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox10(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox11 mErrorVariableComboBox;
        
        private WebServiceComboBox10 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox11 : WpfComboBox
    {
        
        public ErrorVariableComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox10 : WpfComboBox
    {
        
        public WebServiceComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CountRecordset : WpfCustom
    {
        
        public CountRecordset(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CountRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Count Records(CountRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom9 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom9(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom9 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom9(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom9 mLargeViewContentCustom;
        
        private SmallViewContentCustom9 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom9 : WpfCustom
    {
        
        public LargeViewContentCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecorsetComboBox RecorsetComboBox
        {
            get
            {
                if ((this.mRecorsetComboBox == null))
                {
                    this.mRecorsetComboBox = new RecorsetComboBox(this);
                }
                return this.mRecorsetComboBox;
            }
        }
        
        public WpfCheckBox NullAsZeroCheckBoxCheckBox
        {
            get
            {
                if ((this.mNullAsZeroCheckBoxCheckBox == null))
                {
                    this.mNullAsZeroCheckBoxCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mNullAsZeroCheckBoxCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__NullAsCheckBox_AutoID";
                    this.mNullAsZeroCheckBoxCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNullAsZeroCheckBoxCheckBox;
            }
        }
        
        public ResultComboBox9 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox9(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom13 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom13(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private RecorsetComboBox mRecorsetComboBox;
        
        private WpfCheckBox mNullAsZeroCheckBoxCheckBox;
        
        private ResultComboBox9 mResultComboBox;
        
        private OnErrorCustom13 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecorsetComboBox : WpfComboBox
    {
        
        public RecorsetComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox9 : WpfComboBox
    {
        
        public ResultComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom13 : WpfCustom
    {
        
        public OnErrorCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup16 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup16(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup16 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup16 : WpfGroup
    {
        
        public OnErrorGroup16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox12 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox12(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox11 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox11(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox12 mErrorVariableComboBox;
        
        private WebServiceComboBox11 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox12 : WpfComboBox
    {
        
        public ErrorVariableComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox11 : WpfComboBox
    {
        
        public WebServiceComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom9 : WpfCustom
    {
        
        public SmallViewContentCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public RecorsetComboBox1 RecorsetComboBox
        {
            get
            {
                if ((this.mRecorsetComboBox == null))
                {
                    this.mRecorsetComboBox = new RecorsetComboBox1(this);
                }
                return this.mRecorsetComboBox;
            }
        }
        
        public ResultComboBox10 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox10(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private RecorsetComboBox1 mRecorsetComboBox;
        
        private ResultComboBox10 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecorsetComboBox1 : WpfComboBox
    {
        
        public RecorsetComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Recorsettxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox10 : WpfComboBox
    {
        
        public ResultComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SqlBulkInsert : WpfCustom
    {
        
        public SqlBulkInsert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SqlBulkInsertDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SQL Bulk Insert(SqlBulkInsertDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton QVIToggleButton
        {
            get
            {
                if ((this.mQVIToggleButton == null))
                {
                    this.mQVIToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mQVIToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mQVIToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQVIToggleButton;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom10 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom10(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom10 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom10(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public WpfCustom QuickVariableInputContentPane
        {
            get
            {
                if ((this.mQuickVariableInputContentPane == null))
                {
                    this.mQuickVariableInputContentPane = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContentPane.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContentPane.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContentPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mQuickVariableInputContentPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mQVIToggleButton;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom10 mLargeViewContentCustom;
        
        private SmallViewContentCustom10 mSmallViewContentCustom;
        
        private WpfCustom mQuickVariableInputContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom10 : WpfCustom
    {
        
        public LargeViewContentCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatabaseComboBox DatabaseComboBox
        {
            get
            {
                if ((this.mDatabaseComboBox == null))
                {
                    this.mDatabaseComboBox = new DatabaseComboBox(this);
                }
                return this.mDatabaseComboBox;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mItemButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        
        public TableNameComboBox TableNameComboBox
        {
            get
            {
                if ((this.mTableNameComboBox == null))
                {
                    this.mTableNameComboBox = new TableNameComboBox(this);
                }
                return this.mTableNameComboBox;
            }
        }
        
        public WpfButton RfreshTableButton
        {
            get
            {
                if ((this.mRfreshTableButton == null))
                {
                    this.mRfreshTableButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRfreshTableButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRfreshTableButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRfreshTableButton;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public BatchSizeComboBox BatchSizeComboBox
        {
            get
            {
                if ((this.mBatchSizeComboBox == null))
                {
                    this.mBatchSizeComboBox = new BatchSizeComboBox(this);
                }
                return this.mBatchSizeComboBox;
            }
        }
        
        public TimeoutComboBox2 TimeoutComboBox
        {
            get
            {
                if ((this.mTimeoutComboBox == null))
                {
                    this.mTimeoutComboBox = new TimeoutComboBox2(this);
                }
                return this.mTimeoutComboBox;
            }
        }
        
        public WpfCheckBox CheckConstraintsCheckBox
        {
            get
            {
                if ((this.mCheckConstraintsCheckBox == null))
                {
                    this.mCheckConstraintsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mCheckConstraintsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__CheckConstraints_AutoID";
                    this.mCheckConstraintsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCheckConstraintsCheckBox;
            }
        }
        
        public WpfCheckBox KeepTableLockCheckBox
        {
            get
            {
                if ((this.mKeepTableLockCheckBox == null))
                {
                    this.mKeepTableLockCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mKeepTableLockCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__KeepTableLock_AutoID";
                    this.mKeepTableLockCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKeepTableLockCheckBox;
            }
        }
        
        public WpfCheckBox FireTriggersCheckBox
        {
            get
            {
                if ((this.mFireTriggersCheckBox == null))
                {
                    this.mFireTriggersCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mFireTriggersCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__FireTriggers_AutoID";
                    this.mFireTriggersCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFireTriggersCheckBox;
            }
        }
        
        public WpfCheckBox UseInternalTransactiCheckBox
        {
            get
            {
                if ((this.mUseInternalTransactiCheckBox == null))
                {
                    this.mUseInternalTransactiCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUseInternalTransactiCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__UseInternalTransaction_AutoID";
                    this.mUseInternalTransactiCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUseInternalTransactiCheckBox;
            }
        }
        
        public WpfCheckBox SkipblankrowsCheckBox
        {
            get
            {
                if ((this.mSkipblankrowsCheckBox == null))
                {
                    this.mSkipblankrowsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mSkipblankrowsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IgnoreBlankRows_AutoID";
                    this.mSkipblankrowsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSkipblankrowsCheckBox;
            }
        }
        
        public WpfCheckBox KeepIdentityCheckBox
        {
            get
            {
                if ((this.mKeepIdentityCheckBox == null))
                {
                    this.mKeepIdentityCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mKeepIdentityCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__KeepIdentity_AutoID";
                    this.mKeepIdentityCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKeepIdentityCheckBox;
            }
        }
        
        public ResultComboBox11 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox11(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom14 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom14(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private DatabaseComboBox mDatabaseComboBox;
        
        private WpfButton mItemButton;
        
        private TableNameComboBox mTableNameComboBox;
        
        private WpfButton mRfreshTableButton;
        
        private WpfTable mLargeDataGridTable;
        
        private BatchSizeComboBox mBatchSizeComboBox;
        
        private TimeoutComboBox2 mTimeoutComboBox;
        
        private WpfCheckBox mCheckConstraintsCheckBox;
        
        private WpfCheckBox mKeepTableLockCheckBox;
        
        private WpfCheckBox mFireTriggersCheckBox;
        
        private WpfCheckBox mUseInternalTransactiCheckBox;
        
        private WpfCheckBox mSkipblankrowsCheckBox;
        
        private WpfCheckBox mKeepIdentityCheckBox;
        
        private ResultComboBox11 mResultComboBox;
        
        private OnErrorCustom14 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseComboBox : WpfComboBox
    {
        
        public DatabaseComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem TestingDB
        {
            get
            {
                if ((this.mTestingDB == null))
                {
                    this.mTestingDB = new WpfListItem(this);
                    #region Search Criteria
                    this.mTestingDB.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mTestingDB.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTestingDB;
            }
        }
        
        public WpfListItem NewDatabaseSource
        {
            get
            {
                if ((this.mNewDatabaseSource == null))
                {
                    this.mNewDatabaseSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDatabaseSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mNewDatabaseSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewDatabaseSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mTestingDB;
        
        private WpfListItem mNewDatabaseSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TableNameComboBox : WpfComboBox
    {
        
        public TableNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem DboBig
        {
            get
            {
                if ((this.mDboBig == null))
                {
                    this.mDboBig = new WpfListItem(this);
                    #region Search Criteria
                    this.mDboBig.SearchProperties[WpfListItem.PropertyNames.Name] = "dbo.[Big]";
                    this.mDboBig.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDboBig;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mDboBig;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BatchSizeComboBox : WpfComboBox
    {
        
        public BatchSizeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__BatchSize_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeoutComboBox2 : WpfComboBox
    {
        
        public TimeoutComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Timeout_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox11 : WpfComboBox
    {
        
        public ResultComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom14 : WpfCustom
    {
        
        public OnErrorCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup17 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup17(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup17 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup17 : WpfGroup
    {
        
        public OnErrorGroup17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox13 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox13(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox12 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox12(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox13 mErrorVariableComboBox;
        
        private WebServiceComboBox12 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox13 : WpfComboBox
    {
        
        public ErrorVariableComboBox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox12 : WpfComboBox
    {
        
        public WebServiceComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom10 : WpfCustom
    {
        
        public SmallViewContentCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatabaseComboBox1 DatabaseComboBox
        {
            get
            {
                if ((this.mDatabaseComboBox == null))
                {
                    this.mDatabaseComboBox = new DatabaseComboBox1(this);
                }
                return this.mDatabaseComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox TableNameComboBox
        {
            get
            {
                if ((this.mTableNameComboBox == null))
                {
                    this.mTableNameComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTableNameComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mTableNameComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTableNameComboBox;
            }
        }
        
        public WpfTable SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mSmallDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
                    this.mSmallDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public ResultComboBox12 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox12(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfButton RefreshTableButton
        {
            get
            {
                if ((this.mRefreshTableButton == null))
                {
                    this.mRefreshTableButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshTableButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshTableButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshTableButton;
            }
        }
        #endregion
        
        #region Fields
        private DatabaseComboBox1 mDatabaseComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mTableNameComboBox;
        
        private WpfTable mSmallDataGridTable;
        
        private ResultComboBox12 mResultComboBox;
        
        private WpfButton mRefreshTableButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseComboBox1 : WpfComboBox
    {
        
        public DatabaseComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewDataBaseSource
        {
            get
            {
                if ((this.mNewDataBaseSource == null))
                {
                    this.mNewDataBaseSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDataBaseSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":null,""DatabaseName"":null,""Port"":0,""AuthenticationType"":""Windows"",""UserID"":null,""Password"":null,""DataList"":null,""ConnectionString"":""Data Source=;Initial Catalog=;Integrated Security=SSPI;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""4bc4d063-c49c-4fcc-829a-9d6efd41ce68"",""ResourceType"":""DbSource"",""ResourceName"":""New Database Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewDataBaseSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDataBaseSource;
            }
        }
        
        public WpfListItem GenDev
        {
            get
            {
                if ((this.mGenDev == null))
                {
                    this.mGenDev = new WpfListItem(this);
                    #region Search Criteria
                    this.mGenDev.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":"""",""DatabaseName"":"""",""Port"":1433,""AuthenticationType"":""Windows"",""UserID"":null,""Password"":null,""DataList"":"""",""ConnectionString"":""Data Source=,1433;Initial Catalog=;Integrated Security=SSPI;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""62505a00-b304-4ac0-a55c-50ce85111f16"",""ResourceType"":""DbSource"",""ResourceName"":""GenDev"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mGenDev.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenDev;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewDataBaseSource;
        
        private WpfListItem mGenDev;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox12 : WpfComboBox
    {
        
        public ResultComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Unique : WpfCustom
    {
        
        public Unique(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UniqueRecordsDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Unique Records(UniqueRecordsDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom11 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom11(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom11 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom11(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom11 mLargeViewContentCustom;
        
        private SmallViewContentCustom11 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom11 : WpfCustom
    {
        
        public LargeViewContentCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFieldsComboBox InFieldsComboBox
        {
            get
            {
                if ((this.mInFieldsComboBox == null))
                {
                    this.mInFieldsComboBox = new InFieldsComboBox(this);
                }
                return this.mInFieldsComboBox;
            }
        }
        
        public ReturnFieldsComboBox ReturnFieldsComboBox
        {
            get
            {
                if ((this.mReturnFieldsComboBox == null))
                {
                    this.mReturnFieldsComboBox = new ReturnFieldsComboBox(this);
                }
                return this.mReturnFieldsComboBox;
            }
        }
        
        public ResultsComboBox3 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox3(this);
                }
                return this.mResultsComboBox;
            }
        }
        
        public OnErrorCustom15 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom15(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InFieldsComboBox mInFieldsComboBox;
        
        private ReturnFieldsComboBox mReturnFieldsComboBox;
        
        private ResultsComboBox3 mResultsComboBox;
        
        private OnErrorCustom15 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldsComboBox : WpfComboBox
    {
        
        public InFieldsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtInFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReturnFieldsComboBox : WpfComboBox
    {
        
        public ReturnFieldsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtReturnFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox3 : WpfComboBox
    {
        
        public ResultsComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtResults_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom15 : WpfCustom
    {
        
        public OnErrorCustom15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup18 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup18(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup18 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup18 : WpfGroup
    {
        
        public OnErrorGroup18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox1 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox1(this);
                }
                return this.mVariableComboBox;
            }
        }
        
        public WebServiceComboBox13 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox13(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox1 mVariableComboBox;
        
        private WebServiceComboBox13 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox1 : WpfComboBox
    {
        
        public VariableComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox13 : WpfComboBox
    {
        
        public WebServiceComboBox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom11 : WpfCustom
    {
        
        public SmallViewContentCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFieldsComboBox1 InFieldsComboBox
        {
            get
            {
                if ((this.mInFieldsComboBox == null))
                {
                    this.mInFieldsComboBox = new InFieldsComboBox1(this);
                }
                return this.mInFieldsComboBox;
            }
        }
        
        public ReturnFieldsComboBox1 ReturnFieldsComboBox
        {
            get
            {
                if ((this.mReturnFieldsComboBox == null))
                {
                    this.mReturnFieldsComboBox = new ReturnFieldsComboBox1(this);
                }
                return this.mReturnFieldsComboBox;
            }
        }
        
        public ResultsComboBox4 ResultsComboBox
        {
            get
            {
                if ((this.mResultsComboBox == null))
                {
                    this.mResultsComboBox = new ResultsComboBox4(this);
                }
                return this.mResultsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InFieldsComboBox1 mInFieldsComboBox;
        
        private ReturnFieldsComboBox1 mReturnFieldsComboBox;
        
        private ResultsComboBox4 mResultsComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldsComboBox1 : WpfComboBox
    {
        
        public InFieldsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtInFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReturnFieldsComboBox1 : WpfComboBox
    {
        
        public ReturnFieldsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtReturnFields_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsComboBox4 : WpfComboBox
    {
        
        public ResultsComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtResults_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateJson : WpfCustom
    {
        
        public CreateJson(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CreateJsonDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "CreateJsonDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteCommandLine : WpfCustom
    {
        
        public ExecuteCommandLine(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CommandLineDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Execute Command Line(CommandLineDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent mLargeViewContent;
        
        private SmallViewContent mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent : WpfCustom
    {
        
        public LargeViewContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseTextbox ScriptIntellisenseTextbox
        {
            get
            {
                if ((this.mScriptIntellisenseTextbox == null))
                {
                    this.mScriptIntellisenseTextbox = new ScriptIntellisenseTextbox(this);
                }
                return this.mScriptIntellisenseTextbox;
            }
        }
        
        public WpfComboBox PriorityComboBox
        {
            get
            {
                if ((this.mPriorityComboBox == null))
                {
                    this.mPriorityComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mPriorityComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__CmdPriority_AutoID";
                    this.mPriorityComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPriorityComboBox;
            }
        }
        
        public ResultIntellisenseTextbox ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        
        public OnError1 OnError
        {
            get
            {
                if ((this.mOnError == null))
                {
                    this.mOnError = new OnError1(this);
                }
                return this.mOnError;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseTextbox mScriptIntellisenseTextbox;
        
        private WpfComboBox mPriorityComboBox;
        
        private ResultIntellisenseTextbox mResultIntellisenseTextbox;
        
        private OnError1 mOnError;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseTextbox : WpfComboBox
    {
        
        public ScriptIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Cmdtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox : WpfComboBox
    {
        
        public ResultIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnError1 : WpfCustom
    {
        
        public OnError1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup19 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup19(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup19 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup19 : WpfGroup
    {
        
        public OnErrorGroup19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseTextbox1 ErrorVariableIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseTextbox == null))
                {
                    this.mErrorVariableIntellisenseTextbox = new ErrorVariableIntellisenseTextbox1(this);
                }
                return this.mErrorVariableIntellisenseTextbox;
            }
        }
        
        public OnErrorWorkflow OnErrorWorkflow
        {
            get
            {
                if ((this.mOnErrorWorkflow == null))
                {
                    this.mOnErrorWorkflow = new OnErrorWorkflow(this);
                }
                return this.mOnErrorWorkflow;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseTextbox1 mErrorVariableIntellisenseTextbox;
        
        private OnErrorWorkflow mOnErrorWorkflow;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseTextbox1 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWorkflow : WpfComboBox
    {
        
        public OnErrorWorkflow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent : WpfCustom
    {
        
        public SmallViewContent(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseTextbox1 ScriptIntellisenseTextbox
        {
            get
            {
                if ((this.mScriptIntellisenseTextbox == null))
                {
                    this.mScriptIntellisenseTextbox = new ScriptIntellisenseTextbox1(this);
                }
                return this.mScriptIntellisenseTextbox;
            }
        }
        
        public ResultIntellisenseTextbox1 ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox1(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseTextbox1 mScriptIntellisenseTextbox;
        
        private ResultIntellisenseTextbox1 mResultIntellisenseTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseTextbox1 : WpfComboBox
    {
        
        public ScriptIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Cmdtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox1 : WpfComboBox
    {
        
        public ResultIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointMoveFile : WpfCustom
    {
        
        public SharepointMoveFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointMoveFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Move File(SharePointMoveFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView12 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView12(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView4 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView4(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView12 mLargeView;
        
        private SmallView4 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView12 : WpfCustom
    {
        
        public LargeView12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox13 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox13(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorPane1 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane1(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server mServer;
        
        private FromDirectoryComboBox mFromDirectoryComboBox;
        
        private PathDirectoryComboBox mPathDirectoryComboBox;
        
        private ResultComboBox13 mResultComboBox;
        
        private OnErrorPane1 mOnErrorPane;
        
        private WpfCheckBox mOverwriteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server : WpfComboBox
    {
        
        public Server(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox : WpfComboBox
    {
        
        public FromDirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox : WpfComboBox
    {
        
        public PathDirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox13 : WpfComboBox
    {
        
        public ResultComboBox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane1 : WpfCustom
    {
        
        public OnErrorPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup20 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup20(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup20 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup20 : WpfGroup
    {
        
        public OnErrorGroup20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView4 : WpfCustom
    {
        
        public SmallView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server1 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server1(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox1 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox1(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox1 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox1(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox14 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox14(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server1 mServer;
        
        private FromDirectoryComboBox1 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox1 mPathDirectoryComboBox;
        
        private ResultComboBox14 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server1 : WpfComboBox
    {
        
        public Server1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox1 : WpfComboBox
    {
        
        public FromDirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox1 : WpfComboBox
    {
        
        public PathDirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox14 : WpfComboBox
    {
        
        public ResultComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointCreateListItem : WpfCustom
    {
        
        public SharepointCreateListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListCreateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sharepoint Create List Item(SharepointListCreateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView13 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView13(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView5 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView5(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView13 mLargeView;
        
        private SmallView5 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView13 : WpfCustom
    {
        
        public LargeView13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server2 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server2(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTable DataGridTable
        {
            get
            {
                if ((this.mDataGridTable == null))
                {
                    this.mDataGridTable = new DataGridTable(this);
                }
                return this.mDataGridTable;
            }
        }
        
        public OnErrorPane2 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane2(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public ResultComboBox15 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox15(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server2 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTable mDataGridTable;
        
        private OnErrorPane2 mOnErrorPane;
        
        private ResultComboBox15 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server2 : WpfComboBox
    {
        
        public Server2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList : WpfComboBox
    {
        
        public MethodList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTable : WpfTable
    {
        
        public DataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ContentTypeRow ContentTypeRow
        {
            get
            {
                if ((this.mContentTypeRow == null))
                {
                    this.mContentTypeRow = new ContentTypeRow(this);
                }
                return this.mContentTypeRow;
            }
        }
        
        public TitleRow TitleRow
        {
            get
            {
                if ((this.mTitleRow == null))
                {
                    this.mTitleRow = new TitleRow(this);
                }
                return this.mTitleRow;
            }
        }
        
        public AttachmentsRow AttachmentsRow
        {
            get
            {
                if ((this.mAttachmentsRow == null))
                {
                    this.mAttachmentsRow = new AttachmentsRow(this);
                }
                return this.mAttachmentsRow;
            }
        }
        #endregion
        
        #region Fields
        private ContentTypeRow mContentTypeRow;
        
        private TitleRow mTitleRow;
        
        private AttachmentsRow mAttachmentsRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentTypeRow : WpfRow
    {
        
        public ContentTypeRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Content Type";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemContentTypeCell ItemContentTypeCell
        {
            get
            {
                if ((this.mItemContentTypeCell == null))
                {
                    this.mItemContentTypeCell = new ItemContentTypeCell(this);
                }
                return this.mItemContentTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemContentTypeCell mItemContentTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemContentTypeCell : WpfCell
    {
        
        public ItemContentTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText ContentTypeText
        {
            get
            {
                if ((this.mContentTypeText == null))
                {
                    this.mContentTypeText = new WpfText(this);
                    #region Search Criteria
                    this.mContentTypeText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mContentTypeText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mContentTypeText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mContentTypeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TitleRow : WpfRow
    {
        
        public TitleRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Title";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TitleColumnCell TitleColumnCell
        {
            get
            {
                if ((this.mTitleColumnCell == null))
                {
                    this.mTitleColumnCell = new TitleColumnCell(this);
                }
                return this.mTitleColumnCell;
            }
        }
        #endregion
        
        #region Fields
        private TitleColumnCell mTitleColumnCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TitleColumnCell : WpfCell
    {
        
        public TitleColumnCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TitleText
        {
            get
            {
                if ((this.mTitleText == null))
                {
                    this.mTitleText = new WpfText(this);
                    #region Search Criteria
                    this.mTitleText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mTitleText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTitleText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTitleText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsRow : WpfRow
    {
        
        public AttachmentsRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Attachments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemAttachmentsCell ItemAttachmentsCell
        {
            get
            {
                if ((this.mItemAttachmentsCell == null))
                {
                    this.mItemAttachmentsCell = new ItemAttachmentsCell(this);
                }
                return this.mItemAttachmentsCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemAttachmentsCell mItemAttachmentsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemAttachmentsCell : WpfCell
    {
        
        public ItemAttachmentsCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText AttachmentsText
        {
            get
            {
                if ((this.mAttachmentsText == null))
                {
                    this.mAttachmentsText = new WpfText(this);
                    #region Search Criteria
                    this.mAttachmentsText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mAttachmentsText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachmentsText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mAttachmentsText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane2 : WpfCustom
    {
        
        public OnErrorPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup21 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup21(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup21 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup21 : WpfGroup
    {
        
        public OnErrorGroup21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox1 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox1(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox1 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox1(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox1 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox1 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox15 : WpfComboBox
    {
        
        public ResultComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView5 : WpfCustom
    {
        
        public SmallView5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server3 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server3(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList1 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList1(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public ResultComboBox16 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox16(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server3 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList1 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private ResultComboBox16 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server3 : WpfComboBox
    {
        
        public Server3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList1 : WpfComboBox
    {
        
        public MethodList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox16 : WpfComboBox
    {
        
        public ResultComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointCopyFile : WpfCustom
    {
        
        public SharepointCopyFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointCopyFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Copy File(SharePointCopyFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView14 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView14(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView6 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView6(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView14 mLargeView;
        
        private SmallView6 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView14 : WpfCustom
    {
        
        public LargeView14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public FromDirectoryComboBox2 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox2(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox2 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox2(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox17 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox17(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorPane3 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane3(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public Server4 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server4(this);
                }
                return this.mServer;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private FromDirectoryComboBox2 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox2 mPathDirectoryComboBox;
        
        private ResultComboBox17 mResultComboBox;
        
        private OnErrorPane3 mOnErrorPane;
        
        private Server4 mServer;
        
        private WpfCheckBox mOverwriteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox2 : WpfComboBox
    {
        
        public FromDirectoryComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox2 : WpfComboBox
    {
        
        public PathDirectoryComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox17 : WpfComboBox
    {
        
        public ResultComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane3 : WpfCustom
    {
        
        public OnErrorPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup22 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup22(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup22 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup22 : WpfGroup
    {
        
        public OnErrorGroup22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox2 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox2(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox2 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox2(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox2 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox2 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox2 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox2 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server4 : WpfComboBox
    {
        
        public Server4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointSourceFromToolListItem
        {
            get
            {
                if ((this.mSharepointSourceFromToolListItem == null))
                {
                    this.mSharepointSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mSharepointSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSharepointSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView6 : WpfCustom
    {
        
        public SmallView6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server5 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server5(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox3 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox3(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox3 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox3(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox18 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox18(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server5 mServer;
        
        private FromDirectoryComboBox3 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox3 mPathDirectoryComboBox;
        
        private ResultComboBox18 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server5 : WpfComboBox
    {
        
        public Server5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox3 : WpfComboBox
    {
        
        public FromDirectoryComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox3 : WpfComboBox
    {
        
        public PathDirectoryComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox18 : WpfComboBox
    {
        
        public ResultComboBox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDeleteListItem : WpfCustom
    {
        
        public SharepointDeleteListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListDeleteDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListDeleteDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView15 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView15(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView7 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView7(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView15 mLargeView;
        
        private SmallView7 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView15 : WpfCustom
    {
        
        public LargeView15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server6 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server6(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList2 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList2(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTable1 DataGridTable
        {
            get
            {
                if ((this.mDataGridTable == null))
                {
                    this.mDataGridTable = new DataGridTable1(this);
                }
                return this.mDataGridTable;
            }
        }
        
        public OnErrorPane4 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane4(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox RequirementCheckBox
        {
            get
            {
                if ((this.mRequirementCheckBox == null))
                {
                    this.mRequirementCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequirementCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequirementCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRequirementCheckBox;
            }
        }
        
        public ResultComboBox19 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox19(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server6 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList2 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTable1 mDataGridTable;
        
        private OnErrorPane4 mOnErrorPane;
        
        private WpfCheckBox mRequirementCheckBox;
        
        private ResultComboBox19 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server6 : WpfComboBox
    {
        
        public Server6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList2 : WpfComboBox
    {
        
        public MethodList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTable1 : WpfTable
    {
        
        public DataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow12 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow12(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow12 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow12 : WpfRow
    {
        
        public ItemRow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell4 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell4(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell mFileNameCell;
        
        private MatchTypeCell mMatchTypeCell;
        
        private ValueCell4 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell : WpfCell
    {
        
        public FileNameCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell : WpfCell
    {
        
        public MatchTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell4 : WpfCell
    {
        
        public ValueCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox4 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox4(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox4 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox4 : WpfComboBox
    {
        
        public ValueComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane4 : WpfCustom
    {
        
        public OnErrorPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup23 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup23(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup23 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup23 : WpfGroup
    {
        
        public OnErrorGroup23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox3 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox3(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox3 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox3(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox3 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox3 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox3 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox3 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox19 : WpfComboBox
    {
        
        public ResultComboBox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView7 : WpfCustom
    {
        
        public SmallView7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server7 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server7(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList3 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList3(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public ResultComboBox20 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox20(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server7 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList3 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private ResultComboBox20 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server7 : WpfComboBox
    {
        
        public Server7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList3 : WpfComboBox
    {
        
        public MethodList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox20 : WpfComboBox
    {
        
        public ResultComboBox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointReadListItem : WpfCustom
    {
        
        public SharepointReadListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListReadDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListReadDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView16 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView16(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView8 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView8(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView16 mLargeView;
        
        private SmallView8 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView16 : WpfCustom
    {
        
        public LargeView16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server8 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server8(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList4 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList4(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTableVariables DataGridTableVariables
        {
            get
            {
                if ((this.mDataGridTableVariables == null))
                {
                    this.mDataGridTableVariables = new DataGridTableVariables(this);
                }
                return this.mDataGridTableVariables;
            }
        }
        
        public DataGridTableValues DataGridTableValues
        {
            get
            {
                if ((this.mDataGridTableValues == null))
                {
                    this.mDataGridTableValues = new DataGridTableValues(this);
                }
                return this.mDataGridTableValues;
            }
        }
        
        public OnErrorPane5 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane5(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox RequirementCheckBox
        {
            get
            {
                if ((this.mRequirementCheckBox == null))
                {
                    this.mRequirementCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequirementCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequirementCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRequirementCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private Server8 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList4 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTableVariables mDataGridTableVariables;
        
        private DataGridTableValues mDataGridTableValues;
        
        private OnErrorPane5 mOnErrorPane;
        
        private WpfCheckBox mRequirementCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server8 : WpfComboBox
    {
        
        public Server8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList4 : WpfComboBox
    {
        
        public MethodList4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableVariables : WpfTable
    {
        
        public DataGridTableVariables(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow13 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow13(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow13 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow13 : WpfRow
    {
        
        public ItemRow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell1 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell1(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell1 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell1(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell5 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell5(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell1 mFileNameCell;
        
        private MatchTypeCell1 mMatchTypeCell;
        
        private ValueCell5 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell1 : WpfCell
    {
        
        public FileNameCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell1 : WpfCell
    {
        
        public MatchTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell5 : WpfCell
    {
        
        public ValueCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox5 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox5(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox5 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox5 : WpfComboBox
    {
        
        public ValueComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableValues : WpfTable
    {
        
        public DataGridTableValues(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow14 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow14(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow14 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow14 : WpfRow
    {
        
        public ItemRow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell2 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell2(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell2 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell2(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell6 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell6(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell2 mFileNameCell;
        
        private MatchTypeCell2 mMatchTypeCell;
        
        private ValueCell6 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell2 : WpfCell
    {
        
        public FileNameCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell2 : WpfCell
    {
        
        public MatchTypeCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell6 : WpfCell
    {
        
        public ValueCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox6 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox6(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox6 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox6 : WpfComboBox
    {
        
        public ValueComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane5 : WpfCustom
    {
        
        public OnErrorPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup24 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup24(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup24 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup24 : WpfGroup
    {
        
        public OnErrorGroup24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox4 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox4(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox4 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox4(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox4 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox4 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox4 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox4 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView8 : WpfCustom
    {
        
        public SmallView8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server9 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server9(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList5 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList5(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        #endregion
        
        #region Fields
        private Server9 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList5 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private WpfComboBox mSourceCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server9 : WpfComboBox
    {
        
        public Server9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList5 : WpfComboBox
    {
        
        public MethodList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointUpdateListItem : WpfCustom
    {
        
        public SharepointUpdateListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListUpdateDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListUpdateDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView17 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView17(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView9 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView9(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView17 mLargeView;
        
        private SmallView9 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView17 : WpfCustom
    {
        
        public LargeView17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server10 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server10(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList6 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList6(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTableVariables1 DataGridTableVariables
        {
            get
            {
                if ((this.mDataGridTableVariables == null))
                {
                    this.mDataGridTableVariables = new DataGridTableVariables1(this);
                }
                return this.mDataGridTableVariables;
            }
        }
        
        public DataGridTableValues1 DataGridTableValues
        {
            get
            {
                if ((this.mDataGridTableValues == null))
                {
                    this.mDataGridTableValues = new DataGridTableValues1(this);
                }
                return this.mDataGridTableValues;
            }
        }
        
        public OnErrorPane6 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane6(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox RequirementCheckBox
        {
            get
            {
                if ((this.mRequirementCheckBox == null))
                {
                    this.mRequirementCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequirementCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequirementCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRequirementCheckBox;
            }
        }
        
        public ResultComboBox21 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox21(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server10 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList6 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTableVariables1 mDataGridTableVariables;
        
        private DataGridTableValues1 mDataGridTableValues;
        
        private OnErrorPane6 mOnErrorPane;
        
        private WpfCheckBox mRequirementCheckBox;
        
        private ResultComboBox21 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server10 : WpfComboBox
    {
        
        public Server10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList6 : WpfComboBox
    {
        
        public MethodList6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableVariables1 : WpfTable
    {
        
        public DataGridTableVariables1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow15 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow15(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow15 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow15 : WpfRow
    {
        
        public ItemRow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell3 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell3(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell3 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell3(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell7 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell7(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell3 mFileNameCell;
        
        private MatchTypeCell3 mMatchTypeCell;
        
        private ValueCell7 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell3 : WpfCell
    {
        
        public FileNameCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell3 : WpfCell
    {
        
        public MatchTypeCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell7 : WpfCell
    {
        
        public ValueCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox7 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox7(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox7 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox7 : WpfComboBox
    {
        
        public ValueComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableValues1 : WpfTable
    {
        
        public DataGridTableValues1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow16 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow16(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow16 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow16 : WpfRow
    {
        
        public ItemRow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell4 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell4(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell4 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell4(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell8 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell8(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell4 mFileNameCell;
        
        private MatchTypeCell4 mMatchTypeCell;
        
        private ValueCell8 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell4 : WpfCell
    {
        
        public FileNameCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell4 : WpfCell
    {
        
        public MatchTypeCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell8 : WpfCell
    {
        
        public ValueCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox8 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox8(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox8 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox8 : WpfComboBox
    {
        
        public ValueComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane6 : WpfCustom
    {
        
        public OnErrorPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup25 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup25(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup25 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup25 : WpfGroup
    {
        
        public OnErrorGroup25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox5 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox5(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox5 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox5(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox5 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox5 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox5 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox5 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox21 : WpfComboBox
    {
        
        public ResultComboBox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView9 : WpfCustom
    {
        
        public SmallView9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server11 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server11(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList7 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList7(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public ResultComboBox22 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox22(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server11 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList7 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private ResultComboBox22 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server11 : WpfComboBox
    {
        
        public Server11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList7 : WpfComboBox
    {
        
        public MethodList7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox22 : WpfComboBox
    {
        
        public ResultComboBox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointUploadFile : WpfCustom
    {
        
        public SharepointUploadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.ClassName, "SharePointFileUploadDesigner", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Upload File(SharePointFileUploadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView18 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView18(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView10 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView10(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView18 mLargeView;
        
        private SmallView10 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView18 : WpfCustom
    {
        
        public LargeView18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server12 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server12(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public LocalPathFromIntellisenseCombobox LocalPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathFromIntellisenseCombobox == null))
                {
                    this.mLocalPathFromIntellisenseCombobox = new LocalPathFromIntellisenseCombobox(this);
                }
                return this.mLocalPathFromIntellisenseCombobox;
            }
        }
        
        public ServerPathToIntellisenseCombobox ServerPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathToIntellisenseCombobox == null))
                {
                    this.mServerPathToIntellisenseCombobox = new ServerPathToIntellisenseCombobox(this);
                }
                return this.mServerPathToIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public OnErrorPane7 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane7(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server12 mServer;
        
        private WpfButton mEditSourceButton;
        
        private LocalPathFromIntellisenseCombobox mLocalPathFromIntellisenseCombobox;
        
        private ServerPathToIntellisenseCombobox mServerPathToIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox mResultsIntellisenseCombobox;
        
        private OnErrorPane7 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server12 : WpfComboBox
    {
        
        public Server12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "SharePoint Test Server", PropertyExpressionOperator.Contains));
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathFromIntellisenseCombobox : WpfComboBox
    {
        
        public LocalPathFromIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathToIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathToIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane7 : WpfCustom
    {
        
        public OnErrorPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup26 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup26(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup26 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup26 : WpfGroup
    {
        
        public OnErrorGroup26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox6 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox6(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox6 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox6(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox6 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox6 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox6 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox6 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView10 : WpfCustom
    {
        
        public SmallView10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server13 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server13(this);
                }
                return this.mServer;
            }
        }
        
        public LocalPathFromIntellisenseCombobox1 LocalPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathFromIntellisenseCombobox == null))
                {
                    this.mLocalPathFromIntellisenseCombobox = new LocalPathFromIntellisenseCombobox1(this);
                }
                return this.mLocalPathFromIntellisenseCombobox;
            }
        }
        
        public ServerPathToIntellisenseCombobox1 ServerPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathToIntellisenseCombobox == null))
                {
                    this.mServerPathToIntellisenseCombobox = new ServerPathToIntellisenseCombobox1(this);
                }
                return this.mServerPathToIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox1 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox1(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        #endregion
        
        #region Fields
        private Server13 mServer;
        
        private LocalPathFromIntellisenseCombobox1 mLocalPathFromIntellisenseCombobox;
        
        private ServerPathToIntellisenseCombobox1 mServerPathToIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox1 mResultsIntellisenseCombobox;
        
        private WpfButton mEditSourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server13 : WpfComboBox
    {
        
        public Server13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "New Sharepoint Server Source...", PropertyExpressionOperator.Contains));
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "SharePoint Test Server", PropertyExpressionOperator.Contains));
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathFromIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalPathFromIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathToIntellisenseCombobox1 : WpfComboBox
    {
        
        public ServerPathToIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox1 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDownloadFile : WpfCustom
    {
        
        public SharepointDownloadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointFileDownLoadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Download File(SharePointFileDownLoadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView11 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView11(this);
                }
                return this.mSmallView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView19 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView19(this);
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private SmallView11 mSmallView;
        
        private WpfButton mDoneButton;
        
        private LargeView19 mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView11 : WpfCustom
    {
        
        public SmallView11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerPathFromIntellisenseCombobox ServerPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathFromIntellisenseCombobox == null))
                {
                    this.mServerPathFromIntellisenseCombobox = new ServerPathFromIntellisenseCombobox(this);
                }
                return this.mServerPathFromIntellisenseCombobox;
            }
        }
        
        public LocalPathToIntellisenseCombobox LocalPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathToIntellisenseCombobox == null))
                {
                    this.mLocalPathToIntellisenseCombobox = new LocalPathToIntellisenseCombobox(this);
                }
                return this.mLocalPathToIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server14 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server14(this);
                }
                return this.mServer;
            }
        }
        #endregion
        
        #region Fields
        private ServerPathFromIntellisenseCombobox mServerPathFromIntellisenseCombobox;
        
        private LocalPathToIntellisenseCombobox mLocalPathToIntellisenseCombobox;
        
        private ResultIntellisenseCombobox mResultIntellisenseCombobox;
        
        private WpfButton mEditSourceButton;
        
        private Server14 mServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathFromIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathFromIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathToIntellisenseCombobox : WpfComboBox
    {
        
        public LocalPathToIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox : WpfComboBox
    {
        
        public ResultIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server14 : WpfComboBox
    {
        
        public Server14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""9872fb6a-87a8-4082-874e-3c9bff8100a0"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView19 : WpfCustom
    {
        
        public LargeView19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server15 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server15(this);
                }
                return this.mServer;
            }
        }
        
        public ServerPathFromIntellisenseTextbox ServerPathFromIntellisenseTextbox
        {
            get
            {
                if ((this.mServerPathFromIntellisenseTextbox == null))
                {
                    this.mServerPathFromIntellisenseTextbox = new ServerPathFromIntellisenseTextbox(this);
                }
                return this.mServerPathFromIntellisenseTextbox;
            }
        }
        
        public LocalPathToIntellisenseCombobox1 LocalPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathToIntellisenseCombobox == null))
                {
                    this.mLocalPathToIntellisenseCombobox = new LocalPathToIntellisenseCombobox1(this);
                }
                return this.mLocalPathToIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public OnErrorPane8 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane8(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ResultComboBox23 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox23(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server15 mServer;
        
        private ServerPathFromIntellisenseTextbox mServerPathFromIntellisenseTextbox;
        
        private LocalPathToIntellisenseCombobox1 mLocalPathToIntellisenseCombobox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private OnErrorPane8 mOnErrorPane;
        
        private WpfButton mEditSourceButton;
        
        private ResultComboBox23 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server15 : WpfComboBox
    {
        
        public Server15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathFromIntellisenseTextbox : WpfComboBox
    {
        
        public ServerPathFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathToIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalPathToIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane8 : WpfCustom
    {
        
        public OnErrorPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup27 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup27(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup27 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup27 : WpfGroup
    {
        
        public OnErrorGroup27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox7 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox7(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox7 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox7(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox7 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox7 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox7 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox7 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox23 : WpfComboBox
    {
        
        public ResultComboBox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointReadFolder : WpfCustom
    {
        
        public SharepointReadFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointReadFolderDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Read Folder Items(SharePointReadFolderDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView12 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView12(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView20 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView20(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView12 mSmallView;
        
        private LargeView20 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView12 : WpfCustom
    {
        
        public SmallView12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathIntellisenseCombobox ServerPathIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathIntellisenseCombobox == null))
                {
                    this.mServerPathIntellisenseCombobox = new ServerPathIntellisenseCombobox(this);
                }
                return this.mServerPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesAndFoldersRadioButton
        {
            get
            {
                if ((this.mFilesAndFoldersRadioButton == null))
                {
                    this.mFilesAndFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesAndFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesAndFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesAndFoldersRadioButton;
            }
        }
        
        public ResultIntellisenseCombobox1 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox1(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public Server16 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server16(this);
                }
                return this.mServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private ServerPathIntellisenseCombobox mServerPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesAndFoldersRadioButton;
        
        private ResultIntellisenseCombobox1 mResultIntellisenseCombobox;
        
        private Server16 mServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox1 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server16 : WpfComboBox
    {
        
        public Server16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""9872fb6a-87a8-4082-874e-3c9bff8100a0"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView20 : WpfCustom
    {
        
        public LargeView20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server17 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server17(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathIntellisenseCombobox1 ServerPathIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathIntellisenseCombobox == null))
                {
                    this.mServerPathIntellisenseCombobox = new ServerPathIntellisenseCombobox1(this);
                }
                return this.mServerPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesAndFoldersRadioButton
        {
            get
            {
                if ((this.mFilesAndFoldersRadioButton == null))
                {
                    this.mFilesAndFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesAndFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesAndFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesAndFoldersRadioButton;
            }
        }
        
        public ResultIntellisenseTextbox2 ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox2(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        
        public OnErrorPane9 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane9(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server17 mServer;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathIntellisenseCombobox1 mServerPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesAndFoldersRadioButton;
        
        private ResultIntellisenseTextbox2 mResultIntellisenseTextbox;
        
        private OnErrorPane9 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server17 : WpfComboBox
    {
        
        public Server17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathIntellisenseCombobox1 : WpfComboBox
    {
        
        public ServerPathIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox2 : WpfComboBox
    {
        
        public ResultIntellisenseTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane9 : WpfCustom
    {
        
        public OnErrorPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup28 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup28(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup28 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup28 : WpfGroup
    {
        
        public OnErrorGroup28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox8 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox8(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox8 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox8(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox8 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox8 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox8 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox8 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Calculate : WpfCustom
    {
        
        public Calculate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CalculateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Calculate(CalculateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView21 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView21(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public SmallView13 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView13(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView21 mLargeView;
        
        private WpfButton mDoneButton;
        
        private SmallView13 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView21 : WpfCustom
    {
        
        public LargeView21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FxCombobox FxCombobox
        {
            get
            {
                if ((this.mFxCombobox == null))
                {
                    this.mFxCombobox = new FxCombobox(this);
                }
                return this.mFxCombobox;
            }
        }
        
        public ResultCombobox24 ResultCombobox
        {
            get
            {
                if ((this.mResultCombobox == null))
                {
                    this.mResultCombobox = new ResultCombobox24(this);
                }
                return this.mResultCombobox;
            }
        }
        
        public WpfCustom OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new WpfCustom(this);
                    #region Search Criteria
                    this.mOnErrorPane.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
                    this.mOnErrorPane.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
                    this.mOnErrorPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private FxCombobox mFxCombobox;
        
        private ResultCombobox24 mResultCombobox;
        
        private WpfCustom mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FxCombobox : WpfComboBox
    {
        
        public FxCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCombobox24 : WpfComboBox
    {
        
        public ResultCombobox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView13 : WpfCustom
    {
        
        public SmallView13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FxCombobox1 FxCombobox
        {
            get
            {
                if ((this.mFxCombobox == null))
                {
                    this.mFxCombobox = new FxCombobox1(this);
                }
                return this.mFxCombobox;
            }
        }
        
        public ResultCombobox25 ResultCombobox
        {
            get
            {
                if ((this.mResultCombobox == null))
                {
                    this.mResultCombobox = new ResultCombobox25(this);
                }
                return this.mResultCombobox;
            }
        }
        #endregion
        
        #region Fields
        private FxCombobox1 mFxCombobox;
        
        private ResultCombobox25 mResultCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FxCombobox1 : WpfComboBox
    {
        
        public FxCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultCombobox25 : WpfComboBox
    {
        
        public ResultCombobox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AggregateCalculat : WpfCustom
    {
        
        public AggregateCalculat(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.AggregateCalculateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Aggregate Calculate(AggregateCalculateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContentCustom12 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom12(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public LargeViewContentCustom12 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom12(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContentCustom12 mSmallViewContentCustom;
        
        private LargeViewContentCustom12 mLargeViewContentCustom;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom12 : WpfCustom
    {
        
        public SmallViewContentCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public fxComboBox2 fxComboBox
        {
            get
            {
                if ((this.mfxComboBox == null))
                {
                    this.mfxComboBox = new fxComboBox2(this);
                }
                return this.mfxComboBox;
            }
        }
        
        public ResultComboBox26 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox26(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private fxComboBox2 mfxComboBox;
        
        private ResultComboBox26 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class fxComboBox2 : WpfComboBox
    {
        
        public fxComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox26 : WpfComboBox
    {
        
        public ResultComboBox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom12 : WpfCustom
    {
        
        public LargeViewContentCustom12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public fxComboBox3 fxComboBox
        {
            get
            {
                if ((this.mfxComboBox == null))
                {
                    this.mfxComboBox = new fxComboBox3(this);
                }
                return this.mfxComboBox;
            }
        }
        
        public ResultComboBox27 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox27(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom16 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom16(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private fxComboBox3 mfxComboBox;
        
        private ResultComboBox27 mResultComboBox;
        
        private OnErrorCustom16 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class fxComboBox3 : WpfComboBox
    {
        
        public fxComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox27 : WpfComboBox
    {
        
        public ResultComboBox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom16 : WpfCustom
    {
        
        public OnErrorCustom16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup29 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup29(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup29 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup29 : WpfGroup
    {
        
        public OnErrorGroup29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox14 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox14(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox14 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox14(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox14 mErrorVariableComboBox;
        
        private WebServiceComboBox14 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox14 : WpfComboBox
    {
        
        public ErrorVariableComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox14 : WpfComboBox
    {
        
        public WebServiceComboBox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DateTime : WpfCustom
    {
        
        public DateTime(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DateTimeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Date and Time(DateTimeDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom13 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom13(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom13 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom13(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom13 mLargeViewContentCustom;
        
        private SmallViewContentCustom13 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom13 : WpfCustom
    {
        
        public LargeViewContentCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox2 InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox2(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public InputFormatComboBox InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public WpfComboBox AddTimeTypeComboBox
        {
            get
            {
                if ((this.mAddTimeTypeComboBox == null))
                {
                    this.mAddTimeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mAddTimeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeTypecbx_AutoID";
                    this.mAddTimeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddTimeTypeComboBox;
            }
        }
        
        public AddTimeAmountComboBox AddTimeAmountComboBox
        {
            get
            {
                if ((this.mAddTimeAmountComboBox == null))
                {
                    this.mAddTimeAmountComboBox = new AddTimeAmountComboBox(this);
                }
                return this.mAddTimeAmountComboBox;
            }
        }
        
        public OutputFormatComboBox OutputFormatComboBox
        {
            get
            {
                if ((this.mOutputFormatComboBox == null))
                {
                    this.mOutputFormatComboBox = new OutputFormatComboBox(this);
                }
                return this.mOutputFormatComboBox;
            }
        }
        
        public ResultComboBox28 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox28(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom17 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom17(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox2 mInputComboBox;
        
        private InputFormatComboBox mInputFormatComboBox;
        
        private WpfComboBox mAddTimeTypeComboBox;
        
        private AddTimeAmountComboBox mAddTimeAmountComboBox;
        
        private OutputFormatComboBox mOutputFormatComboBox;
        
        private ResultComboBox28 mResultComboBox;
        
        private OnErrorCustom17 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox2 : WpfComboBox
    {
        
        public InputComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox : WpfComboBox
    {
        
        public InputFormatComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddTimeAmountComboBox : WpfComboBox
    {
        
        public AddTimeAmountComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeAmounttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputFormatComboBox : WpfComboBox
    {
        
        public OutputFormatComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox28 : WpfComboBox
    {
        
        public ResultComboBox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom17 : WpfCustom
    {
        
        public OnErrorCustom17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup30 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup30(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup30 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup30 : WpfGroup
    {
        
        public OnErrorGroup30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WebServiceComboBox15 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox15(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public ErrorVariableComboBox15 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox15(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WebServiceComboBox15 mWebServiceComboBox;
        
        private ErrorVariableComboBox15 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox15 : WpfComboBox
    {
        
        public WebServiceComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox15 : WpfComboBox
    {
        
        public ErrorVariableComboBox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom13 : WpfCustom
    {
        
        public SmallViewContentCustom13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputComboBox3 InputComboBox
        {
            get
            {
                if ((this.mInputComboBox == null))
                {
                    this.mInputComboBox = new InputComboBox3(this);
                }
                return this.mInputComboBox;
            }
        }
        
        public InputFormatComboBox1 InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox1(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public AddTimeTypeComboBox AddTimeTypeComboBox
        {
            get
            {
                if ((this.mAddTimeTypeComboBox == null))
                {
                    this.mAddTimeTypeComboBox = new AddTimeTypeComboBox(this);
                }
                return this.mAddTimeTypeComboBox;
            }
        }
        
        public AddTimeAmountComboBox1 AddTimeAmountComboBox
        {
            get
            {
                if ((this.mAddTimeAmountComboBox == null))
                {
                    this.mAddTimeAmountComboBox = new AddTimeAmountComboBox1(this);
                }
                return this.mAddTimeAmountComboBox;
            }
        }
        
        public OutputFormatComboBox1 OutputFormatComboBox
        {
            get
            {
                if ((this.mOutputFormatComboBox == null))
                {
                    this.mOutputFormatComboBox = new OutputFormatComboBox1(this);
                }
                return this.mOutputFormatComboBox;
            }
        }
        
        public ResultComboBox29 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox29(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputComboBox3 mInputComboBox;
        
        private InputFormatComboBox1 mInputFormatComboBox;
        
        private AddTimeTypeComboBox mAddTimeTypeComboBox;
        
        private AddTimeAmountComboBox1 mAddTimeAmountComboBox;
        
        private OutputFormatComboBox1 mOutputFormatComboBox;
        
        private ResultComboBox29 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputComboBox3 : WpfComboBox
    {
        
        public InputComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox1 : WpfComboBox
    {
        
        public InputFormatComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddTimeTypeComboBox : WpfComboBox
    {
        
        public AddTimeTypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeTypecbx_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Months
        {
            get
            {
                if ((this.mMonths == null))
                {
                    this.mMonths = new WpfListItem(this);
                    #region Search Criteria
                    this.mMonths.SearchProperties[WpfListItem.PropertyNames.Name] = "Months";
                    this.mMonths.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMonths;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mMonths;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddTimeAmountComboBox1 : WpfComboBox
    {
        
        public AddTimeAmountComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeAmounttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputFormatComboBox1 : WpfComboBox
    {
        
        public OutputFormatComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox29 : WpfComboBox
    {
        
        public ResultComboBox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DateTimeDifference : WpfCustom
    {
        
        public DateTimeDifference(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DateTimeDifferenceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Date and Time Difference(DateTimeDifferenceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom14 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom14(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom14 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom14(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom14 mLargeViewContentCustom;
        
        private SmallViewContentCustom14 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom14 : WpfCustom
    {
        
        public LargeViewContentCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Input1ComboBox Input1ComboBox
        {
            get
            {
                if ((this.mInput1ComboBox == null))
                {
                    this.mInput1ComboBox = new Input1ComboBox(this);
                }
                return this.mInput1ComboBox;
            }
        }
        
        public Input2ComboBox Input2ComboBox
        {
            get
            {
                if ((this.mInput2ComboBox == null))
                {
                    this.mInput2ComboBox = new Input2ComboBox(this);
                }
                return this.mInput2ComboBox;
            }
        }
        
        public InputFormatComboBox2 InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox2(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public WpfComboBox OutputInComboBox
        {
            get
            {
                if ((this.mOutputInComboBox == null))
                {
                    this.mOutputInComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mOutputInComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputIncbx_AutoID";
                    this.mOutputInComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputInComboBox;
            }
        }
        
        public ResultComboBox30 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox30(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom18 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom18(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private Input1ComboBox mInput1ComboBox;
        
        private Input2ComboBox mInput2ComboBox;
        
        private InputFormatComboBox2 mInputFormatComboBox;
        
        private WpfComboBox mOutputInComboBox;
        
        private ResultComboBox30 mResultComboBox;
        
        private OnErrorCustom18 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input1ComboBox : WpfComboBox
    {
        
        public Input1ComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input1txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input2ComboBox : WpfComboBox
    {
        
        public Input2ComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input2txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox2 : WpfComboBox
    {
        
        public InputFormatComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox30 : WpfComboBox
    {
        
        public ResultComboBox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom18 : WpfCustom
    {
        
        public OnErrorCustom18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup31 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup31(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup31 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup31 : WpfGroup
    {
        
        public OnErrorGroup31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox16 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox16(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox16 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox16(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox16 mErrorVariableComboBox;
        
        private WebServiceComboBox16 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox16 : WpfComboBox
    {
        
        public ErrorVariableComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox16 : WpfComboBox
    {
        
        public WebServiceComboBox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom14 : WpfCustom
    {
        
        public SmallViewContentCustom14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Input1ComboBox1 Input1ComboBox
        {
            get
            {
                if ((this.mInput1ComboBox == null))
                {
                    this.mInput1ComboBox = new Input1ComboBox1(this);
                }
                return this.mInput1ComboBox;
            }
        }
        
        public Input2ComboBox1 Input2ComboBox
        {
            get
            {
                if ((this.mInput2ComboBox == null))
                {
                    this.mInput2ComboBox = new Input2ComboBox1(this);
                }
                return this.mInput2ComboBox;
            }
        }
        
        public InputFormatComboBox3 InputFormatComboBox
        {
            get
            {
                if ((this.mInputFormatComboBox == null))
                {
                    this.mInputFormatComboBox = new InputFormatComboBox3(this);
                }
                return this.mInputFormatComboBox;
            }
        }
        
        public OutputInComboBox OutputInComboBox
        {
            get
            {
                if ((this.mOutputInComboBox == null))
                {
                    this.mOutputInComboBox = new OutputInComboBox(this);
                }
                return this.mOutputInComboBox;
            }
        }
        
        public ResultComboBox31 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox31(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Input1ComboBox1 mInput1ComboBox;
        
        private Input2ComboBox1 mInput2ComboBox;
        
        private InputFormatComboBox3 mInputFormatComboBox;
        
        private OutputInComboBox mOutputInComboBox;
        
        private ResultComboBox31 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input1ComboBox1 : WpfComboBox
    {
        
        public Input1ComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input1txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Input2ComboBox1 : WpfComboBox
    {
        
        public Input2ComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Input2txt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputFormatComboBox3 : WpfComboBox
    {
        
        public InputFormatComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InputFormattxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputInComboBox : WpfComboBox
    {
        
        public OutputInComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__OutputIncbx_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Days
        {
            get
            {
                if ((this.mDays == null))
                {
                    this.mDays = new WpfListItem(this);
                    #region Search Criteria
                    this.mDays.SearchProperties[WpfListItem.PropertyNames.Name] = "Days";
                    this.mDays.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDays;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mDays;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox31 : WpfComboBox
    {
        
        public ResultComboBox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatherSystemInfo : WpfCustom
    {
        
        public GatherSystemInfo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.GatherSystemInformationDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "GatherSystemInformationDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom15 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom15(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom15 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom15(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom15 mLargeViewContentCustom;
        
        private SmallViewContentCustom15 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom15 : WpfCustom
    {
        
        public LargeViewContentCustom15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorCustom19 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom19(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public SmallDataGridTable4 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable4(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorCustom19 mOnErrorCustom;
        
        private SmallDataGridTable4 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom19 : WpfCustom
    {
        
        public OnErrorCustom19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup32 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup32(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup32 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup32 : WpfGroup
    {
        
        public OnErrorGroup32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox17 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox17(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox17 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox17(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox17 mErrorVariableComboBox;
        
        private WebServiceComboBox17 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox17 : WpfComboBox
    {
        
        public ErrorVariableComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox17 : WpfComboBox
    {
        
        public WebServiceComboBox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable4 : WpfTable
    {
        
        public SmallDataGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row113 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row113(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row113 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row113 : WpfRow
    {
        
        public Row113(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell2 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell2(this);
                }
                return this.mVariableCell;
            }
        }
        
        public TypeCell TypeCell
        {
            get
            {
                if ((this.mTypeCell == null))
                {
                    this.mTypeCell = new TypeCell(this);
                }
                return this.mTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell2 mVariableCell;
        
        private TypeCell mTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell2 : WpfCell
    {
        
        public VariableCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox2 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox2(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox2 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox2 : WpfComboBox
    {
        
        public VariableComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TypeCell : WpfCell
    {
        
        public TypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromTypecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom15 : WpfCustom
    {
        
        public SmallViewContentCustom15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallDataGridTable5 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable5(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SmallDataGridTable5 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable5 : WpfTable
    {
        
        public SmallDataGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row114 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row114(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row114 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row114 : WpfRow
    {
        
        public Row114(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell3 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell3(this);
                }
                return this.mVariableCell;
            }
        }
        
        public TypeCell1 TypeCell
        {
            get
            {
                if ((this.mTypeCell == null))
                {
                    this.mTypeCell = new TypeCell1(this);
                }
                return this.mTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell3 mVariableCell;
        
        private TypeCell1 mTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell3 : WpfCell
    {
        
        public VariableCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox3 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox3(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox3 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox3 : WpfComboBox
    {
        
        public VariableComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromExpressiontxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TypeCell1 : WpfCell
    {
        
        public TypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FromTypecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FormatNumber : WpfCustom
    {
        
        public FormatNumber(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FormatNumberDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Format Number(FormatNumberDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom16 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom16(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom16 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom16(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom16 mLargeViewContentCustom;
        
        private SmallViewContentCustom16 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom16 : WpfCustom
    {
        
        public LargeViewContentCustom16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NumberInputComboBox NumberInputComboBox
        {
            get
            {
                if ((this.mNumberInputComboBox == null))
                {
                    this.mNumberInputComboBox = new NumberInputComboBox(this);
                }
                return this.mNumberInputComboBox;
            }
        }
        
        public RoundingComboBox RoundingComboBox
        {
            get
            {
                if ((this.mRoundingComboBox == null))
                {
                    this.mRoundingComboBox = new RoundingComboBox(this);
                }
                return this.mRoundingComboBox;
            }
        }
        
        public DecimalsToShowComboBox DecimalsToShowComboBox
        {
            get
            {
                if ((this.mDecimalsToShowComboBox == null))
                {
                    this.mDecimalsToShowComboBox = new DecimalsToShowComboBox(this);
                }
                return this.mDecimalsToShowComboBox;
            }
        }
        
        public ResultInputComboBox ResultInputComboBox
        {
            get
            {
                if ((this.mResultInputComboBox == null))
                {
                    this.mResultInputComboBox = new ResultInputComboBox(this);
                }
                return this.mResultInputComboBox;
            }
        }
        
        public OnErrorCustom20 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom20(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public RoundingInputComboBox RoundingInputComboBox
        {
            get
            {
                if ((this.mRoundingInputComboBox == null))
                {
                    this.mRoundingInputComboBox = new RoundingInputComboBox(this);
                }
                return this.mRoundingInputComboBox;
            }
        }
        #endregion
        
        #region Fields
        private NumberInputComboBox mNumberInputComboBox;
        
        private RoundingComboBox mRoundingComboBox;
        
        private DecimalsToShowComboBox mDecimalsToShowComboBox;
        
        private ResultInputComboBox mResultInputComboBox;
        
        private OnErrorCustom20 mOnErrorCustom;
        
        private RoundingInputComboBox mRoundingInputComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NumberInputComboBox : WpfComboBox
    {
        
        public NumberInputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Number_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RoundingComboBox : WpfComboBox
    {
        
        public RoundingComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfComboBox.PropertyNames.HelpText, "How would you like to round the number?", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem RoungUP
        {
            get
            {
                if ((this.mRoungUP == null))
                {
                    this.mRoungUP = new WpfListItem(this);
                    #region Search Criteria
                    this.mRoungUP.SearchProperties[WpfListItem.PropertyNames.Name] = "Up";
                    this.mRoungUP.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRoungUP;
            }
        }
        
        public WpfListItem Normal
        {
            get
            {
                if ((this.mNormal == null))
                {
                    this.mNormal = new WpfListItem(this);
                    #region Search Criteria
                    this.mNormal.SearchProperties[WpfListItem.PropertyNames.Name] = "Normal";
                    this.mNormal.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNormal;
            }
        }
        
        public WpfListItem None
        {
            get
            {
                if ((this.mNone == null))
                {
                    this.mNone = new WpfListItem(this);
                    #region Search Criteria
                    this.mNone.SearchProperties[WpfListItem.PropertyNames.Name] = "None";
                    this.mNone.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNone;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mRoungUP;
        
        private WpfListItem mNormal;
        
        private WpfListItem mNone;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecimalsToShowComboBox : WpfComboBox
    {
        
        public DecimalsToShowComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__DecimalsToShow_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultInputComboBox : WpfComboBox
    {
        
        public ResultInputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom20 : WpfCustom
    {
        
        public OnErrorCustom20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup33 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup33(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup33 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup33 : WpfGroup
    {
        
        public OnErrorGroup33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox18 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox18(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox18 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox18(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox18 mErrorVariableComboBox;
        
        private WebServiceComboBox18 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox18 : WpfComboBox
    {
        
        public ErrorVariableComboBox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox18 : WpfComboBox
    {
        
        public WebServiceComboBox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RoundingInputComboBox : WpfComboBox
    {
        
        public RoundingInputComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Rounding_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom16 : WpfCustom
    {
        
        public SmallViewContentCustom16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NumberInputComboBox1 NumberInputComboBox
        {
            get
            {
                if ((this.mNumberInputComboBox == null))
                {
                    this.mNumberInputComboBox = new NumberInputComboBox1(this);
                }
                return this.mNumberInputComboBox;
            }
        }
        
        public WpfComboBox RoundingComboBox
        {
            get
            {
                if ((this.mRoundingComboBox == null))
                {
                    this.mRoundingComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRoundingComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRoundingComboBox;
            }
        }
        
        public DecimalsToShowComboBox1 DecimalsToShowComboBox
        {
            get
            {
                if ((this.mDecimalsToShowComboBox == null))
                {
                    this.mDecimalsToShowComboBox = new DecimalsToShowComboBox1(this);
                }
                return this.mDecimalsToShowComboBox;
            }
        }
        
        public ResultInputComboBox1 ResultInputComboBox
        {
            get
            {
                if ((this.mResultInputComboBox == null))
                {
                    this.mResultInputComboBox = new ResultInputComboBox1(this);
                }
                return this.mResultInputComboBox;
            }
        }
        #endregion
        
        #region Fields
        private NumberInputComboBox1 mNumberInputComboBox;
        
        private WpfComboBox mRoundingComboBox;
        
        private DecimalsToShowComboBox1 mDecimalsToShowComboBox;
        
        private ResultInputComboBox1 mResultInputComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NumberInputComboBox1 : WpfComboBox
    {
        
        public NumberInputComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Number_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DecimalsToShowComboBox1 : WpfComboBox
    {
        
        public DecimalsToShowComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__DecimalsToShow_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultInputComboBox1 : WpfComboBox
    {
        
        public ResultInputComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_Inputtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Random : WpfCustom
    {
        
        public Random(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RandomDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Random(RandomDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView14 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView14(this);
                }
                return this.mSmallView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView22 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView22(this);
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private SmallView14 mSmallView;
        
        private WpfButton mDoneButton;
        
        private LargeView22 mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView14 : WpfCustom
    {
        
        public SmallView14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FromComboBox FromComboBox
        {
            get
            {
                if ((this.mFromComboBox == null))
                {
                    this.mFromComboBox = new FromComboBox(this);
                }
                return this.mFromComboBox;
            }
        }
        
        public ToComboBox ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox(this);
                }
                return this.mToComboBox;
            }
        }
        
        public ResultComboBox32 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox32(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Wherecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FromComboBox mFromComboBox;
        
        private ToComboBox mToComboBox;
        
        private ResultComboBox32 mResultComboBox;
        
        private WpfComboBox mTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromComboBox : WpfComboBox
    {
        
        public FromComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit FromTextEdit
        {
            get
            {
                if ((this.mFromTextEdit == null))
                {
                    this.mFromTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mFromTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mFromTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFromTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mFromTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox : WpfComboBox
    {
        
        public ToComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ToTextEdit
        {
            get
            {
                if ((this.mToTextEdit == null))
                {
                    this.mToTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mToTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mToTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mToTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mToTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox32 : WpfComboBox
    {
        
        public ResultComboBox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView22 : WpfCustom
    {
        
        public LargeView22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox TypeComboBox
        {
            get
            {
                if ((this.mTypeComboBox == null))
                {
                    this.mTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Wherecbx_AutoID";
                    this.mTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTypeComboBox;
            }
        }
        
        public FromComboBox1 FromComboBox
        {
            get
            {
                if ((this.mFromComboBox == null))
                {
                    this.mFromComboBox = new FromComboBox1(this);
                }
                return this.mFromComboBox;
            }
        }
        
        public ToComboBox1 ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox1(this);
                }
                return this.mToComboBox;
            }
        }
        
        public ResultComboBox33 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox33(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom21 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom21(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mTypeComboBox;
        
        private FromComboBox1 mFromComboBox;
        
        private ToComboBox1 mToComboBox;
        
        private ResultComboBox33 mResultComboBox;
        
        private OnErrorCustom21 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromComboBox1 : WpfComboBox
    {
        
        public FromComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox1 : WpfComboBox
    {
        
        public ToComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Lengthstxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox33 : WpfComboBox
    {
        
        public ResultComboBox33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom21 : WpfCustom
    {
        
        public OnErrorCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup34 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup34(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup34 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup34 : WpfGroup
    {
        
        public OnErrorGroup34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox19 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox19(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox19 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox19(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox19 mErrorVariableComboBox;
        
        private WebServiceComboBox19 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox19 : WpfComboBox
    {
        
        public ErrorVariableComboBox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox19 : WpfComboBox
    {
        
        public WebServiceComboBox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SMTPEmail : WpfCustom
    {
        
        public SMTPEmail(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.EmailDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Email(EmailDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallViewContent1 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent1(this);
                }
                return this.mSmallViewContent;
            }
        }
        
        public LargeViewContent1 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent1(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallViewContent1 mSmallViewContent;
        
        private LargeViewContent1 mLargeViewContent;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent1 : WpfCustom
    {
        
        public SmallViewContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public SourceComboBox4 SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new SourceComboBox4(this);
                }
                return this.mSourceComboBox;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mItemButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        
        public ToComboBox2 ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox2(this);
                }
                return this.mToComboBox;
            }
        }
        
        public SubjectComboBox SubjectComboBox
        {
            get
            {
                if ((this.mSubjectComboBox == null))
                {
                    this.mSubjectComboBox = new SubjectComboBox(this);
                }
                return this.mSubjectComboBox;
            }
        }
        
        public BodyComboBox BodyComboBox
        {
            get
            {
                if ((this.mBodyComboBox == null))
                {
                    this.mBodyComboBox = new BodyComboBox(this);
                }
                return this.mBodyComboBox;
            }
        }
        
        public ResultComboBox34 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox34(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SourceComboBox4 mSourceComboBox;
        
        private WpfButton mItemButton;
        
        private ToComboBox2 mToComboBox;
        
        private SubjectComboBox mSubjectComboBox;
        
        private BodyComboBox mBodyComboBox;
        
        private ResultComboBox34 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceComboBox4 : WpfComboBox
    {
        
        public SourceComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewEmailSource
        {
            get
            {
                if ((this.mNewEmailSource == null))
                {
                    this.mNewEmailSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewEmailSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Host"":null,""UserName"":null,""Password"":null,""Port"":25,""EnableSsl"":false,""Timeout"":100000,""TestFromAddress"":null,""TestToAddress"":null,""DataList"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""33804493-8656-4cf8-9e5c-7776cf1dd287"",""ResourceType"":""EmailSource"",""ResourceName"":""New Email Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewEmailSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewEmailSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewEmailSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox2 : WpfComboBox
    {
        
        public ToComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubjectComboBox : WpfComboBox
    {
        
        public SubjectComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__subjecttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BodyComboBox : WpfComboBox
    {
        
        public BodyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox34 : WpfComboBox
    {
        
        public ResultComboBox34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent1 : WpfCustom
    {
        
        public LargeViewContent1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public SourceComboBox5 SourceComboBox
        {
            get
            {
                if ((this.mSourceComboBox == null))
                {
                    this.mSourceComboBox = new SourceComboBox5(this);
                }
                return this.mSourceComboBox;
            }
        }
        
        public FromAddressComboBox FromAddressComboBox
        {
            get
            {
                if ((this.mFromAddressComboBox == null))
                {
                    this.mFromAddressComboBox = new FromAddressComboBox(this);
                }
                return this.mFromAddressComboBox;
            }
        }
        
        public WpfEdit PasswordTextbox
        {
            get
            {
                if ((this.mPasswordTextbox == null))
                {
                    this.mPasswordTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Password_AutoID";
                    this.mPasswordTextbox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mPasswordTextbox;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.Name] = "Test";
                    this.mTestButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public ToComboBox3 ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox3(this);
                }
                return this.mToComboBox;
            }
        }
        
        public CCComboBox CCComboBox
        {
            get
            {
                if ((this.mCCComboBox == null))
                {
                    this.mCCComboBox = new CCComboBox(this);
                }
                return this.mCCComboBox;
            }
        }
        
        public BCCComboBox BCCComboBox
        {
            get
            {
                if ((this.mBCCComboBox == null))
                {
                    this.mBCCComboBox = new BCCComboBox(this);
                }
                return this.mBCCComboBox;
            }
        }
        
        public WpfComboBox PriorityComboBox
        {
            get
            {
                if ((this.mPriorityComboBox == null))
                {
                    this.mPriorityComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mPriorityComboBox.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Select the message priority.";
                    this.mPriorityComboBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mPriorityComboBox;
            }
        }
        
        public SubjectComboBox1 SubjectComboBox
        {
            get
            {
                if ((this.mSubjectComboBox == null))
                {
                    this.mSubjectComboBox = new SubjectComboBox1(this);
                }
                return this.mSubjectComboBox;
            }
        }
        
        public WpfCheckBox HTMLCheckBox
        {
            get
            {
                if ((this.mHTMLCheckBox == null))
                {
                    this.mHTMLCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mHTMLCheckBox.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Sets the body type to HTML (Checked) or plain text (Unchecked)";
                    this.mHTMLCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mHTMLCheckBox;
            }
        }
        
        public BodyComboBox1 BodyComboBox
        {
            get
            {
                if ((this.mBodyComboBox == null))
                {
                    this.mBodyComboBox = new BodyComboBox1(this);
                }
                return this.mBodyComboBox;
            }
        }
        
        public ResultComboBox35 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox35(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public AttachmentsComboBox AttachmentsComboBox
        {
            get
            {
                if ((this.mAttachmentsComboBox == null))
                {
                    this.mAttachmentsComboBox = new AttachmentsComboBox(this);
                }
                return this.mAttachmentsComboBox;
            }
        }
        
        public WpfButton SelectFilesButton
        {
            get
            {
                if ((this.mSelectFilesButton == null))
                {
                    this.mSelectFilesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSelectFilesButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__ChooseAttachmentsBtn_AutoID";
                    this.mSelectFilesButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSelectFilesButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditEmailSourceBtn_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        #endregion
        
        #region Fields
        private SourceComboBox5 mSourceComboBox;
        
        private FromAddressComboBox mFromAddressComboBox;
        
        private WpfEdit mPasswordTextbox;
        
        private WpfButton mTestButton;
        
        private ToComboBox3 mToComboBox;
        
        private CCComboBox mCCComboBox;
        
        private BCCComboBox mBCCComboBox;
        
        private WpfComboBox mPriorityComboBox;
        
        private SubjectComboBox1 mSubjectComboBox;
        
        private WpfCheckBox mHTMLCheckBox;
        
        private BodyComboBox1 mBodyComboBox;
        
        private ResultComboBox35 mResultComboBox;
        
        private AttachmentsComboBox mAttachmentsComboBox;
        
        private WpfButton mSelectFilesButton;
        
        private WpfButton mEditSourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceComboBox5 : WpfComboBox
    {
        
        public SourceComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewEmailSource
        {
            get
            {
                if ((this.mNewEmailSource == null))
                {
                    this.mNewEmailSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewEmailSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewEmailSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewEmailSource;
            }
        }
        
        public WpfListItem UIHostlocalhostUserNamListItem
        {
            get
            {
                if ((this.mUIHostlocalhostUserNamListItem == null))
                {
                    this.mUIHostlocalhostUserNamListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIHostlocalhostUserNamListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mUIHostlocalhostUserNamListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mUIHostlocalhostUserNamListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewEmailSource;
        
        private WpfListItem mUIHostlocalhostUserNamListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromAddressComboBox : WpfComboBox
    {
        
        public FromAddressComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fromAcctxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox3 : WpfComboBox
    {
        
        public ToComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CCComboBox : WpfComboBox
    {
        
        public CCComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Cctxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BCCComboBox : WpfComboBox
    {
        
        public BCCComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Bcctxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubjectComboBox1 : WpfComboBox
    {
        
        public SubjectComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__subjecttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BodyComboBox1 : WpfComboBox
    {
        
        public BodyComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox35 : WpfComboBox
    {
        
        public ResultComboBox35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsComboBox : WpfComboBox
    {
        
        public AttachmentsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExchangeEmail : WpfCustom
    {
        
        public ExchangeEmail(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ExchangeEmailDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Exchange Email(ExchangeEmailDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContent2 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent2(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent2 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent2(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContent2 mLargeViewContent;
        
        private SmallViewContent2 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent2 : WpfCustom
    {
        
        public LargeViewContent2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AttachmentsComboBox1 AttachmentsComboBox
        {
            get
            {
                if ((this.mAttachmentsComboBox == null))
                {
                    this.mAttachmentsComboBox = new AttachmentsComboBox1(this);
                }
                return this.mAttachmentsComboBox;
            }
        }
        
        public BCCComboBox1 BCCComboBox
        {
            get
            {
                if ((this.mBCCComboBox == null))
                {
                    this.mBCCComboBox = new BCCComboBox1(this);
                }
                return this.mBCCComboBox;
            }
        }
        
        public BodyComboBox2 BodyComboBox
        {
            get
            {
                if ((this.mBodyComboBox == null))
                {
                    this.mBodyComboBox = new BodyComboBox2(this);
                }
                return this.mBodyComboBox;
            }
        }
        
        public CCComboBox1 CCComboBox
        {
            get
            {
                if ((this.mCCComboBox == null))
                {
                    this.mCCComboBox = new CCComboBox1(this);
                }
                return this.mCCComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public ResultComboBox36 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox36(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfButton SelectFilesButton
        {
            get
            {
                if ((this.mSelectFilesButton == null))
                {
                    this.mSelectFilesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSelectFilesButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__ChooseAttachmentsBtn_AutoID";
                    this.mSelectFilesButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSelectFilesButton;
            }
        }
        
        public SourcesComboBox8 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox8(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public SubjectComboBox2 SubjectComboBox
        {
            get
            {
                if ((this.mSubjectComboBox == null))
                {
                    this.mSubjectComboBox = new SubjectComboBox2(this);
                }
                return this.mSubjectComboBox;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.Name] = "Test";
                    this.mTestButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public ToComboBox4 ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox4(this);
                }
                return this.mToComboBox;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mItemButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        #endregion
        
        #region Fields
        private AttachmentsComboBox1 mAttachmentsComboBox;
        
        private BCCComboBox1 mBCCComboBox;
        
        private BodyComboBox2 mBodyComboBox;
        
        private CCComboBox1 mCCComboBox;
        
        private WpfButton mNewSourceButton;
        
        private ResultComboBox36 mResultComboBox;
        
        private WpfButton mSelectFilesButton;
        
        private SourcesComboBox8 mSourcesComboBox;
        
        private SubjectComboBox2 mSubjectComboBox;
        
        private WpfButton mTestButton;
        
        private ToComboBox4 mToComboBox;
        
        private WpfButton mItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsComboBox1 : WpfComboBox
    {
        
        public AttachmentsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BCCComboBox1 : WpfComboBox
    {
        
        public BCCComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Bcctxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BodyComboBox2 : WpfComboBox
    {
        
        public BodyComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CCComboBox1 : WpfComboBox
    {
        
        public CCComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Cctxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox36 : WpfComboBox
    {
        
        public ResultComboBox36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox8 : WpfComboBox
    {
        
        public SourcesComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Dev2CommonInterfacesListItem
        {
            get
            {
                if ((this.mDev2CommonInterfacesListItem == null))
                {
                    this.mDev2CommonInterfacesListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mDev2CommonInterfacesListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.ExchangeSourceDefinition";
                    this.mDev2CommonInterfacesListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDev2CommonInterfacesListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mDev2CommonInterfacesListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubjectComboBox2 : WpfComboBox
    {
        
        public SubjectComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__subjecttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox4 : WpfComboBox
    {
        
        public ToComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent2 : WpfCustom
    {
        
        public SmallViewContent2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mItemButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public ToComboBox5 ToComboBox
        {
            get
            {
                if ((this.mToComboBox == null))
                {
                    this.mToComboBox = new ToComboBox5(this);
                }
                return this.mToComboBox;
            }
        }
        
        public SubjectComboBox3 SubjectComboBox
        {
            get
            {
                if ((this.mSubjectComboBox == null))
                {
                    this.mSubjectComboBox = new SubjectComboBox3(this);
                }
                return this.mSubjectComboBox;
            }
        }
        
        public BodyComboBox3 BodyComboBox
        {
            get
            {
                if ((this.mBodyComboBox == null))
                {
                    this.mBodyComboBox = new BodyComboBox3(this);
                }
                return this.mBodyComboBox;
            }
        }
        
        public ResultComboBox37 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox37(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mItemButton;
        
        private WpfButton mNewSourceButton;
        
        private ToComboBox5 mToComboBox;
        
        private SubjectComboBox3 mSubjectComboBox;
        
        private BodyComboBox3 mBodyComboBox;
        
        private ResultComboBox37 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ToComboBox5 : WpfComboBox
    {
        
        public ToComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__tostxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubjectComboBox3 : WpfComboBox
    {
        
        public SubjectComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__subjecttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BodyComboBox3 : WpfComboBox
    {
        
        public BodyComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__bodytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox37 : WpfComboBox
    {
        
        public ResultComboBox37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resultstxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Comment : WpfCustom
    {
        
        public Comment(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CommentDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Comment(CommentDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeViewContentCustom17 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom17(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private LargeViewContentCustom17 mLargeViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom17 : WpfCustom
    {
        
        public LargeViewContentCustom17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public CommentComboBox CommentComboBox
        {
            get
            {
                if ((this.mCommentComboBox == null))
                {
                    this.mCommentComboBox = new CommentComboBox(this);
                }
                return this.mCommentComboBox;
            }
        }
        
        public WpfControl ItemResizer
        {
            get
            {
                if ((this.mItemResizer == null))
                {
                    this.mItemResizer = new WpfControl(this);
                    #region Search Criteria
                    this.mItemResizer.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemResizer.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemResizer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemResizer;
            }
        }
        #endregion
        
        #region Fields
        private CommentComboBox mCommentComboBox;
        
        private WpfControl mItemResizer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentComboBox : WpfComboBox
    {
        
        public CommentComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Commenttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XPath : WpfCustom
    {
        
        public XPath(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XPathDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "XPathDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public WpfCustom QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContent.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContent.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom18 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom18(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom17 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom17(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private WpfCustom mQuickVariableInputContent;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom18 mLargeViewContentCustom;
        
        private SmallViewContentCustom17 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom18 : WpfCustom
    {
        
        public LargeViewContentCustom18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox2 SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox2(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public LargeDataGridTable3 LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable3(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public OnErrorCustom22 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom22(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox2 mSourceStringComboBox;
        
        private LargeDataGridTable3 mLargeDataGridTable;
        
        private OnErrorCustom22 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox2 : WpfComboBox
    {
        
        public SourceStringComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable3 : WpfTable
    {
        
        public LargeDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row115 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row115(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row115 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row115 : WpfRow
    {
        
        public Row115(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell4 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell4(this);
                }
                return this.mVariableCell;
            }
        }
        
        public XpathCell XpathCell
        {
            get
            {
                if ((this.mXpathCell == null))
                {
                    this.mXpathCell = new XpathCell(this);
                }
                return this.mXpathCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell4 mVariableCell;
        
        private XpathCell mXpathCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell4 : WpfCell
    {
        
        public VariableCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Results";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox4 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox4(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox4 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox4 : WpfComboBox
    {
        
        public VariableComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathCell : WpfCell
    {
        
        public XpathCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Xpath";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public XpathComboBox XpathComboBox
        {
            get
            {
                if ((this.mXpathComboBox == null))
                {
                    this.mXpathComboBox = new XpathComboBox(this);
                }
                return this.mXpathComboBox;
            }
        }
        #endregion
        
        #region Fields
        private XpathComboBox mXpathComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathComboBox : WpfComboBox
    {
        
        public XpathComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom22 : WpfCustom
    {
        
        public OnErrorCustom22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup35 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup35(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup35 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup35 : WpfGroup
    {
        
        public OnErrorGroup35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox20 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox20(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox20 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox20(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox20 mErrorVariableComboBox;
        
        private WebServiceComboBox20 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox20 : WpfComboBox
    {
        
        public ErrorVariableComboBox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox20 : WpfComboBox
    {
        
        public WebServiceComboBox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom17 : WpfCustom
    {
        
        public SmallViewContentCustom17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourceStringComboBox3 SourceStringComboBox
        {
            get
            {
                if ((this.mSourceStringComboBox == null))
                {
                    this.mSourceStringComboBox = new SourceStringComboBox3(this);
                }
                return this.mSourceStringComboBox;
            }
        }
        
        public SmallDataGridTable6 SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new SmallDataGridTable6(this);
                }
                return this.mSmallDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private SourceStringComboBox3 mSourceStringComboBox;
        
        private SmallDataGridTable6 mSmallDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourceStringComboBox3 : WpfComboBox
    {
        
        public SourceStringComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SourceStringtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallDataGridTable6 : WpfTable
    {
        
        public SmallDataGridTable6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row116 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row116(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row116 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row116 : WpfRow
    {
        
        public Row116(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell5 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell5(this);
                }
                return this.mVariableCell;
            }
        }
        
        public XpathCell1 XpathCell
        {
            get
            {
                if ((this.mXpathCell == null))
                {
                    this.mXpathCell = new XpathCell1(this);
                }
                return this.mXpathCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell5 mVariableCell;
        
        private XpathCell1 mXpathCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell5 : WpfCell
    {
        
        public VariableCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableComboBox5 VariableComboBox
        {
            get
            {
                if ((this.mVariableComboBox == null))
                {
                    this.mVariableComboBox = new VariableComboBox5(this);
                }
                return this.mVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableComboBox5 mVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableComboBox5 : WpfComboBox
    {
        
        public VariableComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_OutputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathCell1 : WpfCell
    {
        
        public XpathCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public XpathComboBox1 XpathComboBox
        {
            get
            {
                if ((this.mXpathComboBox == null))
                {
                    this.mXpathComboBox = new XpathComboBox1(this);
                }
                return this.mXpathComboBox;
            }
        }
        #endregion
        
        #region Fields
        private XpathComboBox1 mXpathComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class XpathComboBox1 : WpfComboBox
    {
        
        public XpathComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxDownload : WpfCustom
    {
        
        public DropboxDownload(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxDownloadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DOWNLOAD from Dropbox(DropBoxDownloadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent3 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent3(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent3 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent3(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent3 mLargeViewContent;
        
        private SmallViewContent3 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent3 : WpfCustom
    {
        
        public LargeViewContent3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public LocalFileIntellisenseCombobox LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public DropboxFileIntellisenseCombobox DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox2 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox2(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane10 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane10(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private LocalFileIntellisenseCombobox mLocalFileIntellisenseCombobox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private DropboxFileIntellisenseCombobox mDropboxFileIntellisenseCombobox;
        
        private ResultIntellisenseCombobox2 mResultIntellisenseCombobox;
        
        private OnErrorPane10 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox2 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane10 : WpfCustom
    {
        
        public OnErrorPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup36 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup36(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup36 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup36 : WpfGroup
    {
        
        public OnErrorGroup36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent3 : WpfCustom
    {
        
        public SmallViewContent3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LocalFileIntellisenseCombobox1 LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox1(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public DropboxFileIntellisenseCombobox1 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox1(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private LocalFileIntellisenseCombobox1 mLocalFileIntellisenseCombobox;
        
        private DropboxFileIntellisenseCombobox1 mDropboxFileIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox1 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxUpload : WpfCustom
    {
        
        public DropboxUpload(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxUploadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Upload to Dropbox(DropBoxUploadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent4 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent4(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent4 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent4(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent4 mLargeViewContent;
        
        private SmallViewContent4 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent4 : WpfCustom
    {
        
        public LargeViewContent4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public LocalFileIntellisenseCombobox2 LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox2(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton OverwriteRadioButton
        {
            get
            {
                if ((this.mOverwriteRadioButton == null))
                {
                    this.mOverwriteRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mOverwriteRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "CheckBoxOverwriteMode";
                    this.mOverwriteRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteRadioButton;
            }
        }
        
        public WpfRadioButton AddRadioButton
        {
            get
            {
                if ((this.mAddRadioButton == null))
                {
                    this.mAddRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAddRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "CheckBoxUpdateMode";
                    this.mAddRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddRadioButton;
            }
        }
        
        public DropboxFileIntellisenseCombobox2 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox2(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox3 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox3(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane11 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane11(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private LocalFileIntellisenseCombobox2 mLocalFileIntellisenseCombobox;
        
        private WpfRadioButton mOverwriteRadioButton;
        
        private WpfRadioButton mAddRadioButton;
        
        private DropboxFileIntellisenseCombobox2 mDropboxFileIntellisenseCombobox;
        
        private ResultIntellisenseCombobox3 mResultIntellisenseCombobox;
        
        private OnErrorPane11 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox2 : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox2 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox3 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane11 : WpfCustom
    {
        
        public OnErrorPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup37 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup37(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup37 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup37 : WpfGroup
    {
        
        public OnErrorGroup37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox1 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox1(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox1 ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox1(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox1 mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox1 mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox1 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent4 : WpfCustom
    {
        
        public SmallViewContent4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LocalFileIntellisenseCombobox3 LocalFileIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalFileIntellisenseCombobox == null))
                {
                    this.mLocalFileIntellisenseCombobox = new LocalFileIntellisenseCombobox3(this);
                }
                return this.mLocalFileIntellisenseCombobox;
            }
        }
        
        public DropboxFileIntellisenseCombobox3 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox3(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private LocalFileIntellisenseCombobox3 mLocalFileIntellisenseCombobox;
        
        private DropboxFileIntellisenseCombobox3 mDropboxFileIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalFileIntellisenseCombobox3 : WpfComboBox
    {
        
        public LocalFileIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox3 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxDelete : WpfCustom
    {
        
        public DropboxDelete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxDeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Delete from Dropbox(DropBoxDeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent5 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent5(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent5 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent5(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent5 mLargeViewContent;
        
        private SmallViewContent5 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent5 : WpfCustom
    {
        
        public LargeViewContent5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public DropboxFileIntellisenseCombobox4 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox4(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox4 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox4(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane12 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane12(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private DropboxFileIntellisenseCombobox4 mDropboxFileIntellisenseCombobox;
        
        private ResultIntellisenseCombobox4 mResultIntellisenseCombobox;
        
        private OnErrorPane12 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox4 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox4 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane12 : WpfCustom
    {
        
        public OnErrorPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup38 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup38(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup38 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup38 : WpfGroup
    {
        
        public OnErrorGroup38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox2 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox2(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox2 ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox2(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox2 mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox2 mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox2 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox2 : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent5 : WpfCustom
    {
        
        public SmallViewContent5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DropboxFileIntellisenseCombobox5 DropboxFileIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxFileIntellisenseCombobox == null))
                {
                    this.mDropboxFileIntellisenseCombobox = new DropboxFileIntellisenseCombobox5(this);
                }
                return this.mDropboxFileIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DropboxFileIntellisenseCombobox5 mDropboxFileIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileIntellisenseCombobox5 : WpfComboBox
    {
        
        public DropboxFileIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxFileList : WpfCustom
    {
        
        public DropboxFileList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DropBoxFileListDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "List Dropbox Contents(DropBoxFileListDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContent6 LargeViewContent
        {
            get
            {
                if ((this.mLargeViewContent == null))
                {
                    this.mLargeViewContent = new LargeViewContent6(this);
                }
                return this.mLargeViewContent;
            }
        }
        
        public SmallViewContent6 SmallViewContent
        {
            get
            {
                if ((this.mSmallViewContent == null))
                {
                    this.mSmallViewContent = new SmallViewContent6(this);
                }
                return this.mSmallViewContent;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContent6 mLargeViewContent;
        
        private SmallViewContent6 mSmallViewContent;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContent6 : WpfCustom
    {
        
        public LargeViewContent6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "InitialComboBox";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public DropboxPathIntellisenseCombobox DropboxPathIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxPathIntellisenseCombobox == null))
                {
                    this.mDropboxPathIntellisenseCombobox = new DropboxPathIntellisenseCombobox(this);
                }
                return this.mDropboxPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesFoldersRadioButton
        {
            get
            {
                if ((this.mFilesFoldersRadioButton == null))
                {
                    this.mFilesFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesFoldersRadioButton;
            }
        }
        
        public WpfCheckBox LoadSubfoldersCheckBox
        {
            get
            {
                if ((this.mLoadSubfoldersCheckBox == null))
                {
                    this.mLoadSubfoldersCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mLoadSubfoldersCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Load Sub folders";
                    this.mLoadSubfoldersCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLoadSubfoldersCheckBox;
            }
        }
        
        public ResultIntellisenseCombobox5 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox5(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane13 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane13(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourceCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private DropboxPathIntellisenseCombobox mDropboxPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesFoldersRadioButton;
        
        private WpfCheckBox mLoadSubfoldersCheckBox;
        
        private ResultIntellisenseCombobox5 mResultIntellisenseCombobox;
        
        private OnErrorPane13 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxPathIntellisenseCombobox : WpfComboBox
    {
        
        public DropboxPathIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox5 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane13 : WpfCustom
    {
        
        public OnErrorPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup39 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup39(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup39 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup39 : WpfGroup
    {
        
        public OnErrorGroup39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox3 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox3(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ErrorWebServiceIntellisenseCombobox3 ErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mErrorWebServiceIntellisenseCombobox = new ErrorWebServiceIntellisenseCombobox3(this);
                }
                return this.mErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox3 mErrorVariableIntellisenseCombobox;
        
        private ErrorWebServiceIntellisenseCombobox3 mErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox3 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWebServiceIntellisenseCombobox3 : WpfComboBox
    {
        
        public ErrorWebServiceIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContent6 : WpfCustom
    {
        
        public SmallViewContent6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DropboxPathIntellisenseCombobox1 DropboxPathIntellisenseCombobox
        {
            get
            {
                if ((this.mDropboxPathIntellisenseCombobox == null))
                {
                    this.mDropboxPathIntellisenseCombobox = new DropboxPathIntellisenseCombobox1(this);
                }
                return this.mDropboxPathIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox2 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox2(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DropboxPathIntellisenseCombobox1 mDropboxPathIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox2 mResultsIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropboxPathIntellisenseCombobox1 : WpfComboBox
    {
        
        public DropboxPathIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox2 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__fxtxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathCreate : WpfCustom
    {
        
        public PathCreate(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CreateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Create(CreateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom19 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom19(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom18 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom18(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom19 mLargeViewContentCustom;
        
        private SmallViewContentCustom18 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom19 : WpfCustom
    {
        
        public LargeViewContentCustom19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameoComboBox FileNameoComboBox
        {
            get
            {
                if ((this.mFileNameoComboBox == null))
                {
                    this.mFileNameoComboBox = new FileNameoComboBox(this);
                }
                return this.mFileNameoComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public UserNameComboBox UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox38 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox38(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom23 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom23(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileNameoComboBox mFileNameoComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private UserNameComboBox mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox mPrivateKeyComboBox;
        
        private ResultComboBox38 mResultComboBox;
        
        private OnErrorCustom23 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameoComboBox : WpfComboBox
    {
        
        public FileNameoComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox : WpfComboBox
    {
        
        public UserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox : WpfComboBox
    {
        
        public PrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox38 : WpfComboBox
    {
        
        public ResultComboBox38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom23 : WpfCustom
    {
        
        public OnErrorCustom23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup40 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup40(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup40 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup40 : WpfGroup
    {
        
        public OnErrorGroup40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox21 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox21(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox21 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox21(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox21 mErrorVariableComboBox;
        
        private WebServiceComboBox21 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox21 : WpfComboBox
    {
        
        public ErrorVariableComboBox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox21 : WpfComboBox
    {
        
        public WebServiceComboBox21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom18 : WpfCustom
    {
        
        public SmallViewContentCustom18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public ResultComboBox39 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox39(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox mFileOrFolderComboBox;
        
        private ResultComboBox39 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox : WpfComboBox
    {
        
        public FileOrFolderComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox39 : WpfComboBox
    {
        
        public ResultComboBox39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathCopy : WpfCustom
    {
        
        public PathCopy(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CopyDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Copy(CopyDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom20 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom20(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom19 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom19(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom20 mLargeViewContentCustom;
        
        private SmallViewContentCustom19 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom20 : WpfCustom
    {
        
        public LargeViewContentCustom20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox1 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox1(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox1 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox1(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox1 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox1(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public DestinationComboBox DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public DestinationUserNameComboBox DestinationUserNameComboBox
        {
            get
            {
                if ((this.mDestinationUserNameComboBox == null))
                {
                    this.mDestinationUserNameComboBox = new DestinationUserNameComboBox(this);
                }
                return this.mDestinationUserNameComboBox;
            }
        }
        
        public WpfEdit DestinationPasswordEdit
        {
            get
            {
                if ((this.mDestinationPasswordEdit == null))
                {
                    this.mDestinationPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mDestinationPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDestinationPasswordEdit;
            }
        }
        
        public DestinationPrivateKeyComboBox DestinationPrivateKeyComboBox
        {
            get
            {
                if ((this.mDestinationPrivateKeyComboBox == null))
                {
                    this.mDestinationPrivateKeyComboBox = new DestinationPrivateKeyComboBox(this);
                }
                return this.mDestinationPrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultComboBox40 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox40(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom24 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom24(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox1 mFileOrFolderComboBox;
        
        private UserNameComboBox1 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox1 mPrivateKeyComboBox;
        
        private DestinationComboBox mDestinationComboBox;
        
        private DestinationUserNameComboBox mDestinationUserNameComboBox;
        
        private WpfEdit mDestinationPasswordEdit;
        
        private DestinationPrivateKeyComboBox mDestinationPrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultComboBox40 mResultComboBox;
        
        private OnErrorCustom24 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox1 : WpfComboBox
    {
        
        public FileOrFolderComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox1 : WpfComboBox
    {
        
        public UserNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox1 : WpfComboBox
    {
        
        public PrivateKeyComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox : WpfComboBox
    {
        
        public DestinationComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationUserNameComboBox : WpfComboBox
    {
        
        public DestinationUserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationPrivateKeyComboBox : WpfComboBox
    {
        
        public DestinationPrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox40 : WpfComboBox
    {
        
        public ResultComboBox40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom24 : WpfCustom
    {
        
        public OnErrorCustom24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup41 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup41(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup41 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup41 : WpfGroup
    {
        
        public OnErrorGroup41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox22 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox22(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox22 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox22(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox22 mErrorVariableComboBox;
        
        private WebServiceComboBox22 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox22 : WpfComboBox
    {
        
        public ErrorVariableComboBox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox22 : WpfComboBox
    {
        
        public WebServiceComboBox22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom19 : WpfCustom
    {
        
        public SmallViewContentCustom19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox2 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox2(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public DestinationComboBox1 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox1(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public ResultComboBox41 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox41(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox2 mFileOrFolderComboBox;
        
        private DestinationComboBox1 mDestinationComboBox;
        
        private ResultComboBox41 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox2 : WpfComboBox
    {
        
        public FileOrFolderComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox1 : WpfComboBox
    {
        
        public DestinationComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox41 : WpfComboBox
    {
        
        public ResultComboBox41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDelete : WpfCustom
    {
        
        public PathDelete(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Delete(DeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom21 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom21(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom20 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom20(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom21 mLargeViewContentCustom;
        
        private SmallViewContentCustom20 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom21 : WpfCustom
    {
        
        public LargeViewContentCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox3 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox3(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox2 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox2(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox2 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox2(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox42 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox42(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom25 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom25(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox3 mFileOrFolderComboBox;
        
        private UserNameComboBox2 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox2 mPrivateKeyComboBox;
        
        private ResultComboBox42 mResultComboBox;
        
        private OnErrorCustom25 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox3 : WpfComboBox
    {
        
        public FileOrFolderComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox2 : WpfComboBox
    {
        
        public UserNameComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox2 : WpfComboBox
    {
        
        public PrivateKeyComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox42 : WpfComboBox
    {
        
        public ResultComboBox42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom25 : WpfCustom
    {
        
        public OnErrorCustom25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup42 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup42(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup42 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup42 : WpfGroup
    {
        
        public OnErrorGroup42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox23 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox23(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox23 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox23(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox23 mErrorVariableComboBox;
        
        private WebServiceComboBox23 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox23 : WpfComboBox
    {
        
        public ErrorVariableComboBox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox23 : WpfComboBox
    {
        
        public WebServiceComboBox23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom20 : WpfCustom
    {
        
        public SmallViewContentCustom20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox4 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox4(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public ResultComboBox43 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox43(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox4 mFileOrFolderComboBox;
        
        private ResultComboBox43 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox4 : WpfComboBox
    {
        
        public FileOrFolderComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox43 : WpfComboBox
    {
        
        public ResultComboBox43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathMove : WpfCustom
    {
        
        public PathMove(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MoveDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Move(MoveDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom22 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom22(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom21 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom21(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom22 mLargeViewContentCustom;
        
        private SmallViewContentCustom21 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom22 : WpfCustom
    {
        
        public LargeViewContentCustom22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox5 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox5(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox3 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox3(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeCombobox PrivateKeCombobox
        {
            get
            {
                if ((this.mPrivateKeCombobox == null))
                {
                    this.mPrivateKeCombobox = new PrivateKeCombobox(this);
                }
                return this.mPrivateKeCombobox;
            }
        }
        
        public DestinationComboBox2 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox2(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public DestinationUserNameComboBox1 DestinationUserNameComboBox
        {
            get
            {
                if ((this.mDestinationUserNameComboBox == null))
                {
                    this.mDestinationUserNameComboBox = new DestinationUserNameComboBox1(this);
                }
                return this.mDestinationUserNameComboBox;
            }
        }
        
        public WpfEdit DestinationPasswordEdit
        {
            get
            {
                if ((this.mDestinationPasswordEdit == null))
                {
                    this.mDestinationPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mDestinationPasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mDestinationPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDestinationPasswordEdit;
            }
        }
        
        public DestinationPrvateKeyComboBox DestinationPrvateKeyComboBox
        {
            get
            {
                if ((this.mDestinationPrvateKeyComboBox == null))
                {
                    this.mDestinationPrvateKeyComboBox = new DestinationPrvateKeyComboBox(this);
                }
                return this.mDestinationPrvateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultComboBox44 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox44(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom26 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom26(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox5 mFileOrFolderComboBox;
        
        private UserNameComboBox3 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeCombobox mPrivateKeCombobox;
        
        private DestinationComboBox2 mDestinationComboBox;
        
        private DestinationUserNameComboBox1 mDestinationUserNameComboBox;
        
        private WpfEdit mDestinationPasswordEdit;
        
        private DestinationPrvateKeyComboBox mDestinationPrvateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultComboBox44 mResultComboBox;
        
        private OnErrorCustom26 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox5 : WpfComboBox
    {
        
        public FileOrFolderComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox3 : WpfComboBox
    {
        
        public UserNameComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeCombobox : WpfComboBox
    {
        
        public PrivateKeCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox2 : WpfComboBox
    {
        
        public DestinationComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationUserNameComboBox1 : WpfComboBox
    {
        
        public DestinationUserNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationPrvateKeyComboBox : WpfComboBox
    {
        
        public DestinationPrvateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox44 : WpfComboBox
    {
        
        public ResultComboBox44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom26 : WpfCustom
    {
        
        public OnErrorCustom26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup43 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup43(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup43 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup43 : WpfGroup
    {
        
        public OnErrorGroup43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox24 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox24(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox24 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox24(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox24 mErrorVariableComboBox;
        
        private WebServiceComboBox24 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox24 : WpfComboBox
    {
        
        public ErrorVariableComboBox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox24 : WpfComboBox
    {
        
        public WebServiceComboBox24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom21 : WpfCustom
    {
        
        public SmallViewContentCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox6 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox6(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public DestinationComboBox3 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox3(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public ResultComboBox45 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox45(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox6 mFileOrFolderComboBox;
        
        private DestinationComboBox3 mDestinationComboBox;
        
        private ResultComboBox45 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox6 : WpfComboBox
    {
        
        public FileOrFolderComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox3 : WpfComboBox
    {
        
        public DestinationComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox45 : WpfComboBox
    {
        
        public ResultComboBox45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FolderRead : WpfCustom
    {
        
        public FolderRead(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ReadFolderDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Read Folder(ReadFolderDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom23 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom23(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom22 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom22(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom23 mLargeViewContentCustom;
        
        private SmallViewContentCustom22 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom23 : WpfCustom
    {
        
        public LargeViewContentCustom23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DirectoryComboBox DirectoryComboBox
        {
            get
            {
                if ((this.mDirectoryComboBox == null))
                {
                    this.mDirectoryComboBox = new DirectoryComboBox(this);
                }
                return this.mDirectoryComboBox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesFoldersRadioButton
        {
            get
            {
                if ((this.mFilesFoldersRadioButton == null))
                {
                    this.mFilesFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesFoldersRadioButton;
            }
        }
        
        public UserNameComboBox4 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox4(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox3 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox3(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox46 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox46(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom27 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom27(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private DirectoryComboBox mDirectoryComboBox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesFoldersRadioButton;
        
        private UserNameComboBox4 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox3 mPrivateKeyComboBox;
        
        private ResultComboBox46 mResultComboBox;
        
        private OnErrorCustom27 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DirectoryComboBox : WpfComboBox
    {
        
        public DirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox4 : WpfComboBox
    {
        
        public UserNameComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox3 : WpfComboBox
    {
        
        public PrivateKeyComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox46 : WpfComboBox
    {
        
        public ResultComboBox46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom27 : WpfCustom
    {
        
        public OnErrorCustom27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup44 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup44(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup44 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup44 : WpfGroup
    {
        
        public OnErrorGroup44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox25 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox25(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox25 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox25 : WpfComboBox
    {
        
        public ErrorVariableComboBox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom22 : WpfCustom
    {
        
        public SmallViewContentCustom22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DirectoryComboBox1 DirectoryComboBox
        {
            get
            {
                if ((this.mDirectoryComboBox == null))
                {
                    this.mDirectoryComboBox = new DirectoryComboBox1(this);
                }
                return this.mDirectoryComboBox;
            }
        }
        
        public ResultComboBox47 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox47(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private DirectoryComboBox1 mDirectoryComboBox;
        
        private ResultComboBox47 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DirectoryComboBox1 : WpfComboBox
    {
        
        public DirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox47 : WpfComboBox
    {
        
        public ResultComboBox47(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileRead : WpfCustom
    {
        
        public FileRead(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ReadFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Read File(ReadFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom24 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom24(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom23 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom23(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom24 mLargeViewContentCustom;
        
        private SmallViewContentCustom23 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom24 : WpfCustom
    {
        
        public LargeViewContentCustom24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public UserNameComboBox5 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox5(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox4 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox4(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox48 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox48(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom28 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom28(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox mFileNameComboBox;
        
        private UserNameComboBox5 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox4 mPrivateKeyComboBox;
        
        private ResultComboBox48 mResultComboBox;
        
        private OnErrorCustom28 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox : WpfComboBox
    {
        
        public FileNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox5 : WpfComboBox
    {
        
        public UserNameComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox4 : WpfComboBox
    {
        
        public PrivateKeyComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox48 : WpfComboBox
    {
        
        public ResultComboBox48(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom28 : WpfCustom
    {
        
        public OnErrorCustom28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup45 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup45(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup45 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup45 : WpfGroup
    {
        
        public OnErrorGroup45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox26 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox26(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox25 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox25(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox26 mErrorVariableComboBox;
        
        private WebServiceComboBox25 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox26 : WpfComboBox
    {
        
        public ErrorVariableComboBox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox25 : WpfComboBox
    {
        
        public WebServiceComboBox25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom23 : WpfCustom
    {
        
        public SmallViewContentCustom23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox1 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox1(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public ResultComboBox49 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox49(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox1 mFileNameComboBox;
        
        private ResultComboBox49 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox1 : WpfComboBox
    {
        
        public FileNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox49 : WpfComboBox
    {
        
        public ResultComboBox49(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileWrite : WpfCustom
    {
        
        public FileWrite(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WriteFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Write File(WriteFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom25 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom25(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom24 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom24(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom25 mLargeViewContentCustom;
        
        private SmallViewContentCustom24 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom25 : WpfCustom
    {
        
        public LargeViewContentCustom25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox2 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox2(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public OverwriteRadioButton OverwriteRadioButton
        {
            get
            {
                if ((this.mOverwriteRadioButton == null))
                {
                    this.mOverwriteRadioButton = new OverwriteRadioButton(this);
                }
                return this.mOverwriteRadioButton;
            }
        }
        
        public WpfRadioButton AppendTopRadioButton
        {
            get
            {
                if ((this.mAppendTopRadioButton == null))
                {
                    this.mAppendTopRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendTopRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Append Top";
                    this.mAppendTopRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendTopRadioButton;
            }
        }
        
        public WpfRadioButton AppendBottomRadioButton
        {
            get
            {
                if ((this.mAppendBottomRadioButton == null))
                {
                    this.mAppendBottomRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendBottomRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Append Bottom";
                    this.mAppendBottomRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendBottomRadioButton;
            }
        }
        
        public ContentsComboBox ContentsComboBox
        {
            get
            {
                if ((this.mContentsComboBox == null))
                {
                    this.mContentsComboBox = new ContentsComboBox(this);
                }
                return this.mContentsComboBox;
            }
        }
        
        public UserNameComboBox6 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox6(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox5 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox5(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public ResultComboBox50 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox50(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom29 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom29(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox2 mFileNameComboBox;
        
        private OverwriteRadioButton mOverwriteRadioButton;
        
        private WpfRadioButton mAppendTopRadioButton;
        
        private WpfRadioButton mAppendBottomRadioButton;
        
        private ContentsComboBox mContentsComboBox;
        
        private UserNameComboBox6 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox5 mPrivateKeyComboBox;
        
        private ResultComboBox50 mResultComboBox;
        
        private OnErrorCustom29 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox2 : WpfComboBox
    {
        
        public FileNameComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OverwriteRadioButton : WpfRadioButton
    {
        
        public OverwriteRadioButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Overwrite";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem Item1
        {
            get
            {
                if ((this.mItem1 == null))
                {
                    this.mItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mItem1.SearchProperties[WpfListItem.PropertyNames.Instance] = "14";
                    this.mItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItem1;
            }
        }
        
        public WpfListItem NextListItem
        {
            get
            {
                if ((this.mNextListItem == null))
                {
                    this.mNextListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mNextListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Next";
                    this.mNextListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNextListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mItem1;
        
        private WpfListItem mNextListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentsComboBox : WpfComboBox
    {
        
        public ContentsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Contentstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "5";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox6 : WpfComboBox
    {
        
        public UserNameComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox5 : WpfComboBox
    {
        
        public PrivateKeyComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row5 Row
        {
            get
            {
                if ((this.mRow == null))
                {
                    this.mRow = new Row5(this);
                }
                return this.mRow;
            }
        }
        
        public Row25 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row25(this);
                }
                return this.mRow2;
            }
        }
        
        public Row32 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row32(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row5 mRow;
        
        private Row25 mRow2;
        
        private Row32 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row5 : WpfRow
    {
        
        public Row5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell4 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell4(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell5 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell5(this);
                }
                return this.mUsingCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell4 mInputCell;
        
        private UsingCell5 mUsingCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell4 : WpfCell
    {
        
        public InputCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1InputVariabComboBox2 Row1InputVariabComboBox
        {
            get
            {
                if ((this.mRow1InputVariabComboBox == null))
                {
                    this.mRow1InputVariabComboBox = new Row1InputVariabComboBox2(this);
                }
                return this.mRow1InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1InputVariabComboBox2 mRow1InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1InputVariabComboBox2 : WpfComboBox
    {
        
        public Row1InputVariabComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell5 : WpfCell
    {
        
        public UsingCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1UsingDComboBox1 Row1UsingDComboBox
        {
            get
            {
                if ((this.mRow1UsingDComboBox == null))
                {
                    this.mRow1UsingDComboBox = new Row1UsingDComboBox1(this);
                }
                return this.mRow1UsingDComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row1UsingDComboBox1 mRow1UsingDComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1UsingDComboBox1 : WpfComboBox
    {
        
        public Row1UsingDComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row1_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row25 : WpfRow
    {
        
        public Row25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputCell5 InputCell
        {
            get
            {
                if ((this.mInputCell == null))
                {
                    this.mInputCell = new InputCell5(this);
                }
                return this.mInputCell;
            }
        }
        
        public UsingCell6 UsingCell
        {
            get
            {
                if ((this.mUsingCell == null))
                {
                    this.mUsingCell = new UsingCell6(this);
                }
                return this.mUsingCell;
            }
        }
        
        public WpfCell MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new WpfCell(this);
                    #region Search Criteria
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
                    this.mMergeTypeCell.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
                    this.mMergeTypeCell.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private InputCell5 mInputCell;
        
        private UsingCell6 mUsingCell;
        
        private WpfCell mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputCell5 : WpfCell
    {
        
        public InputCell5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2InputVariabComboBox3 Row2InputVariabComboBox
        {
            get
            {
                if ((this.mRow2InputVariabComboBox == null))
                {
                    this.mRow2InputVariabComboBox = new Row2InputVariabComboBox3(this);
                }
                return this.mRow2InputVariabComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2InputVariabComboBox3 mRow2InputVariabComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2InputVariabComboBox3 : WpfComboBox
    {
        
        public Row2InputVariabComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_InputVariable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UsingCell6 : WpfCell
    {
        
        public UsingCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row2UsingComboBox3 Row2UsingComboBox
        {
            get
            {
                if ((this.mRow2UsingComboBox == null))
                {
                    this.mRow2UsingComboBox = new Row2UsingComboBox3(this);
                }
                return this.mRow2UsingComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Row2UsingComboBox3 mRow2UsingComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2UsingComboBox3 : WpfComboBox
    {
        
        public Row2UsingComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__At_Row2_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row32 : WpfRow
    {
        
        public Row32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MergeTypeCell4 MergeTypeCell
        {
            get
            {
                if ((this.mMergeTypeCell == null))
                {
                    this.mMergeTypeCell = new MergeTypeCell4(this);
                }
                return this.mMergeTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private MergeTypeCell4 mMergeTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MergeTypeCell4 : WpfCell
    {
        
        public MergeTypeCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "2";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox Row4MergeTypeComboBox
        {
            get
            {
                if ((this.mRow4MergeTypeComboBox == null))
                {
                    this.mRow4MergeTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mRow4MergeTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_MergeType_AutoID";
                    this.mRow4MergeTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRow4MergeTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mRow4MergeTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox50 : WpfComboBox
    {
        
        public ResultComboBox50(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom29 : WpfCustom
    {
        
        public OnErrorCustom29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup46 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup46(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup46 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup46 : WpfGroup
    {
        
        public OnErrorGroup46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox27 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox27(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox26 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox26(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox27 mErrorVariableComboBox;
        
        private WebServiceComboBox26 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox27 : WpfComboBox
    {
        
        public ErrorVariableComboBox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox26 : WpfComboBox
    {
        
        public WebServiceComboBox26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom24 : WpfCustom
    {
        
        public SmallViewContentCustom24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameComboBox3 FileNameComboBox
        {
            get
            {
                if ((this.mFileNameComboBox == null))
                {
                    this.mFileNameComboBox = new FileNameComboBox3(this);
                }
                return this.mFileNameComboBox;
            }
        }
        
        public ContentsComboBox1 ContentsComboBox
        {
            get
            {
                if ((this.mContentsComboBox == null))
                {
                    this.mContentsComboBox = new ContentsComboBox1(this);
                }
                return this.mContentsComboBox;
            }
        }
        
        public ResultComboBox51 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox51(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileNameComboBox3 mFileNameComboBox;
        
        private ContentsComboBox1 mContentsComboBox;
        
        private ResultComboBox51 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameComboBox3 : WpfComboBox
    {
        
        public FileNameComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentsComboBox1 : WpfComboBox
    {
        
        public ContentsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Contentstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox51 : WpfComboBox
    {
        
        public ResultComboBox51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathRename : WpfCustom
    {
        
        public PathRename(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.RenameDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Rename(RenameDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom26 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom26(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom25 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom25(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom26 mLargeViewContentCustom;
        
        private SmallViewContentCustom25 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom26 : WpfCustom
    {
        
        public LargeViewContentCustom26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox7 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox7(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox7 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox7(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox6 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox6(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public NewNameComboBox NewNameComboBox
        {
            get
            {
                if ((this.mNewNameComboBox == null))
                {
                    this.mNewNameComboBox = new NewNameComboBox(this);
                }
                return this.mNewNameComboBox;
            }
        }
        
        public NewFileUserNameComboBox NewFileUserNameComboBox
        {
            get
            {
                if ((this.mNewFileUserNameComboBox == null))
                {
                    this.mNewFileUserNameComboBox = new NewFileUserNameComboBox(this);
                }
                return this.mNewFileUserNameComboBox;
            }
        }
        
        public WpfEdit NewFilePasswordEdit
        {
            get
            {
                if ((this.mNewFilePasswordEdit == null))
                {
                    this.mNewFilePasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mNewFilePasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mNewFilePasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mNewFilePasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewFilePasswordEdit;
            }
        }
        
        public NewFilePrivateKeyComboBox NewFilePrivateKeyComboBox
        {
            get
            {
                if ((this.mNewFilePrivateKeyComboBox == null))
                {
                    this.mNewFilePrivateKeyComboBox = new NewFilePrivateKeyComboBox(this);
                }
                return this.mNewFilePrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public ResultComboBox52 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox52(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom30 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom30(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox7 mFileOrFolderComboBox;
        
        private UserNameComboBox7 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox6 mPrivateKeyComboBox;
        
        private NewNameComboBox mNewNameComboBox;
        
        private NewFileUserNameComboBox mNewFileUserNameComboBox;
        
        private WpfEdit mNewFilePasswordEdit;
        
        private NewFilePrivateKeyComboBox mNewFilePrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private ResultComboBox52 mResultComboBox;
        
        private OnErrorCustom30 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox7 : WpfComboBox
    {
        
        public FileOrFolderComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox7 : WpfComboBox
    {
        
        public UserNameComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox6 : WpfComboBox
    {
        
        public PrivateKeyComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewNameComboBox : WpfComboBox
    {
        
        public NewNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__NewNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewFileUserNameComboBox : WpfComboBox
    {
        
        public NewFileUserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewFilePrivateKeyComboBox : WpfComboBox
    {
        
        public NewFilePrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox52 : WpfComboBox
    {
        
        public ResultComboBox52(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom30 : WpfCustom
    {
        
        public OnErrorCustom30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup47 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup47(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup47 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup47 : WpfGroup
    {
        
        public OnErrorGroup47(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox28 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox28(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox27 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox27(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox28 mErrorVariableComboBox;
        
        private WebServiceComboBox27 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox28 : WpfComboBox
    {
        
        public ErrorVariableComboBox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox27 : WpfComboBox
    {
        
        public WebServiceComboBox27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom25 : WpfCustom
    {
        
        public SmallViewContentCustom25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox8 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox8(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public NewNameComboBox1 NewNameComboBox
        {
            get
            {
                if ((this.mNewNameComboBox == null))
                {
                    this.mNewNameComboBox = new NewNameComboBox1(this);
                }
                return this.mNewNameComboBox;
            }
        }
        
        public ResultComboBox53 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox53(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox8 mFileOrFolderComboBox;
        
        private NewNameComboBox1 mNewNameComboBox;
        
        private ResultComboBox53 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox8 : WpfComboBox
    {
        
        public FileOrFolderComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NewNameComboBox1 : WpfComboBox
    {
        
        public NewNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__NewNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox53 : WpfComboBox
    {
        
        public ResultComboBox53(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZip : WpfCustom
    {
        
        public UnZip(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UnzipDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Unzip(UnzipDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom27 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom27(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom26 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom26(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom27 mLargeViewContentCustom;
        
        private SmallViewContentCustom26 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom27 : WpfCustom
    {
        
        public LargeViewContentCustom27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnZipNameComboBox UnZipNameComboBox
        {
            get
            {
                if ((this.mUnZipNameComboBox == null))
                {
                    this.mUnZipNameComboBox = new UnZipNameComboBox(this);
                }
                return this.mUnZipNameComboBox;
            }
        }
        
        public UserNameComboBox8 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox8(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox7 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox7(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public DestinationComboBox4 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox4(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public UnZipUserNameComboBox UnZipUserNameComboBox
        {
            get
            {
                if ((this.mUnZipUserNameComboBox == null))
                {
                    this.mUnZipUserNameComboBox = new UnZipUserNameComboBox(this);
                }
                return this.mUnZipUserNameComboBox;
            }
        }
        
        public WpfEdit UnZipPasswordEdit
        {
            get
            {
                if ((this.mUnZipPasswordEdit == null))
                {
                    this.mUnZipPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUnZipPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mUnZipPasswordEdit.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUnZipPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnZipPasswordEdit;
            }
        }
        
        public UnZipPrivateKeyComboBox UnZipPrivateKeyComboBox
        {
            get
            {
                if ((this.mUnZipPrivateKeyComboBox == null))
                {
                    this.mUnZipPrivateKeyComboBox = new UnZipPrivateKeyComboBox(this);
                }
                return this.mUnZipPrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public WpfEdit ArchivePassword
        {
            get
            {
                if ((this.mArchivePassword == null))
                {
                    this.mArchivePassword = new WpfEdit(this);
                    #region Search Criteria
                    this.mArchivePassword.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__ArchivePasswordtxt_AutoID";
                    this.mArchivePassword.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mArchivePassword;
            }
        }
        
        public ResultComboBox54 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox54(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom31 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom31(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private UnZipNameComboBox mUnZipNameComboBox;
        
        private UserNameComboBox8 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox7 mPrivateKeyComboBox;
        
        private DestinationComboBox4 mDestinationComboBox;
        
        private UnZipUserNameComboBox mUnZipUserNameComboBox;
        
        private WpfEdit mUnZipPasswordEdit;
        
        private UnZipPrivateKeyComboBox mUnZipPrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private WpfEdit mArchivePassword;
        
        private ResultComboBox54 mResultComboBox;
        
        private OnErrorCustom31 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipNameComboBox : WpfComboBox
    {
        
        public UnZipNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox8 : WpfComboBox
    {
        
        public UserNameComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox7 : WpfComboBox
    {
        
        public PrivateKeyComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox4 : WpfComboBox
    {
        
        public DestinationComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipUserNameComboBox : WpfComboBox
    {
        
        public UnZipUserNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipPrivateKeyComboBox : WpfComboBox
    {
        
        public UnZipPrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox54 : WpfComboBox
    {
        
        public ResultComboBox54(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom31 : WpfCustom
    {
        
        public OnErrorCustom31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup48 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup48(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup48 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup48 : WpfGroup
    {
        
        public OnErrorGroup48(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox29 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox29(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox28 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox28(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox29 mErrorVariableComboBox;
        
        private WebServiceComboBox28 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox29 : WpfComboBox
    {
        
        public ErrorVariableComboBox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox28 : WpfComboBox
    {
        
        public WebServiceComboBox28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom26 : WpfCustom
    {
        
        public SmallViewContentCustom26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnZipNameComboBox1 UnZipNameComboBox
        {
            get
            {
                if ((this.mUnZipNameComboBox == null))
                {
                    this.mUnZipNameComboBox = new UnZipNameComboBox1(this);
                }
                return this.mUnZipNameComboBox;
            }
        }
        
        public ResultComboBox55 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox55(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public DestinationComboBox5 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox5(this);
                }
                return this.mDestinationComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UnZipNameComboBox1 mUnZipNameComboBox;
        
        private ResultComboBox55 mResultComboBox;
        
        private DestinationComboBox5 mDestinationComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnZipNameComboBox1 : WpfComboBox
    {
        
        public UnZipNameComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox55 : WpfComboBox
    {
        
        public ResultComboBox55(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox5 : WpfComboBox
    {
        
        public DestinationComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Destinationtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Zip : WpfCustom
    {
        
        public Zip(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ZipDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Zip(ZipDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom28 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom28(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom27 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom27(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom28 mLargeViewContentCustom;
        
        private SmallViewContentCustom27 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom28 : WpfCustom
    {
        
        public LargeViewContentCustom28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox9 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox9(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public UserNameComboBox9 UserNameComboBox
        {
            get
            {
                if ((this.mUserNameComboBox == null))
                {
                    this.mUserNameComboBox = new UserNameComboBox9(this);
                }
                return this.mUserNameComboBox;
            }
        }
        
        public WpfEdit PasswordEdit
        {
            get
            {
                if ((this.mPasswordEdit == null))
                {
                    this.mPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Passwordtxt_AutoID";
                    this.mPasswordEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasswordEdit;
            }
        }
        
        public PrivateKeyComboBox8 PrivateKeyComboBox
        {
            get
            {
                if ((this.mPrivateKeyComboBox == null))
                {
                    this.mPrivateKeyComboBox = new PrivateKeyComboBox8(this);
                }
                return this.mPrivateKeyComboBox;
            }
        }
        
        public DestinationComboBox6 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox6(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public ZipDestinationUsernComboBox ZipDestinationUsernComboBox
        {
            get
            {
                if ((this.mZipDestinationUsernComboBox == null))
                {
                    this.mZipDestinationUsernComboBox = new ZipDestinationUsernComboBox(this);
                }
                return this.mZipDestinationUsernComboBox;
            }
        }
        
        public WpfEdit ZipDestinationPasswEdit
        {
            get
            {
                if ((this.mZipDestinationPasswEdit == null))
                {
                    this.mZipDestinationPasswEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mZipDestinationPasswEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__DestinationPasswordtxt_AutoID";
                    this.mZipDestinationPasswEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mZipDestinationPasswEdit;
            }
        }
        
        public ZipPrivateKeyComboBox ZipPrivateKeyComboBox
        {
            get
            {
                if ((this.mZipPrivateKeyComboBox == null))
                {
                    this.mZipPrivateKeyComboBox = new ZipPrivateKeyComboBox(this);
                }
                return this.mZipPrivateKeyComboBox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public WpfEdit ArchivePasswordtEdit
        {
            get
            {
                if ((this.mArchivePasswordtEdit == null))
                {
                    this.mArchivePasswordtEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mArchivePasswordtEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__ArchivePasswordtxt_AutoID";
                    this.mArchivePasswordtEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mArchivePasswordtEdit;
            }
        }
        
        public SelectedCompressComboBox SelectedCompressComboBox
        {
            get
            {
                if ((this.mSelectedCompressComboBox == null))
                {
                    this.mSelectedCompressComboBox = new SelectedCompressComboBox(this);
                }
                return this.mSelectedCompressComboBox;
            }
        }
        
        public OnErrorCustom32 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom32(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public ResultComboBox56 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox56(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox9 mFileOrFolderComboBox;
        
        private UserNameComboBox9 mUserNameComboBox;
        
        private WpfEdit mPasswordEdit;
        
        private PrivateKeyComboBox8 mPrivateKeyComboBox;
        
        private DestinationComboBox6 mDestinationComboBox;
        
        private ZipDestinationUsernComboBox mZipDestinationUsernComboBox;
        
        private WpfEdit mZipDestinationPasswEdit;
        
        private ZipPrivateKeyComboBox mZipPrivateKeyComboBox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private WpfEdit mArchivePasswordtEdit;
        
        private SelectedCompressComboBox mSelectedCompressComboBox;
        
        private OnErrorCustom32 mOnErrorCustom;
        
        private ResultComboBox56 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox9 : WpfComboBox
    {
        
        public FileOrFolderComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UserNameComboBox9 : WpfComboBox
    {
        
        public UserNameComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__UserNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrivateKeyComboBox8 : WpfComboBox
    {
        
        public PrivateKeyComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox6 : WpfComboBox
    {
        
        public DestinationComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ZipDestinationUsernComboBox : WpfComboBox
    {
        
        public ZipDestinationUsernComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__DestinationUsernametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ZipPrivateKeyComboBox : WpfComboBox
    {
        
        public ZipPrivateKeyComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectedCompressComboBox : WpfComboBox
    {
        
        public SelectedCompressComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__SelectedCompressionType_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NoneNoCompression
        {
            get
            {
                if ((this.mNoneNoCompression == null))
                {
                    this.mNoneNoCompression = new WpfListItem(this);
                    #region Search Criteria
                    this.mNoneNoCompression.SearchProperties[WpfListItem.PropertyNames.Name] = "None (No Compression)";
                    this.mNoneNoCompression.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNoneNoCompression;
            }
        }
        
        public WpfListItem NormalDefault
        {
            get
            {
                if ((this.mNormalDefault == null))
                {
                    this.mNormalDefault = new WpfListItem(this);
                    #region Search Criteria
                    this.mNormalDefault.SearchProperties[WpfListItem.PropertyNames.Name] = "Normal (Default)";
                    this.mNormalDefault.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNormalDefault;
            }
        }
        
        public WpfListItem MaxBestCompression
        {
            get
            {
                if ((this.mMaxBestCompression == null))
                {
                    this.mMaxBestCompression = new WpfListItem(this);
                    #region Search Criteria
                    this.mMaxBestCompression.SearchProperties[WpfListItem.PropertyNames.Name] = "Max (Best Compression)";
                    this.mMaxBestCompression.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMaxBestCompression;
            }
        }
        
        public WpfListItem PartialBestSpeed
        {
            get
            {
                if ((this.mPartialBestSpeed == null))
                {
                    this.mPartialBestSpeed = new WpfListItem(this);
                    #region Search Criteria
                    this.mPartialBestSpeed.SearchProperties[WpfListItem.PropertyNames.Name] = "Partial (Best Speed)";
                    this.mPartialBestSpeed.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPartialBestSpeed;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNoneNoCompression;
        
        private WpfListItem mNormalDefault;
        
        private WpfListItem mMaxBestCompression;
        
        private WpfListItem mPartialBestSpeed;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom32 : WpfCustom
    {
        
        public OnErrorCustom32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup49 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup49(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup49 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup49 : WpfGroup
    {
        
        public OnErrorGroup49(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox30 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox30(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox29 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox29(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox30 mErrorVariableComboBox;
        
        private WebServiceComboBox29 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox30 : WpfComboBox
    {
        
        public ErrorVariableComboBox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox29 : WpfComboBox
    {
        
        public WebServiceComboBox29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox56 : WpfComboBox
    {
        
        public ResultComboBox56(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom27 : WpfCustom
    {
        
        public SmallViewContentCustom27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileOrFolderComboBox10 FileOrFolderComboBox
        {
            get
            {
                if ((this.mFileOrFolderComboBox == null))
                {
                    this.mFileOrFolderComboBox = new FileOrFolderComboBox10(this);
                }
                return this.mFileOrFolderComboBox;
            }
        }
        
        public DestinationComboBox7 DestinationComboBox
        {
            get
            {
                if ((this.mDestinationComboBox == null))
                {
                    this.mDestinationComboBox = new DestinationComboBox7(this);
                }
                return this.mDestinationComboBox;
            }
        }
        
        public ResultComboBox57 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox57(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private FileOrFolderComboBox10 mFileOrFolderComboBox;
        
        private DestinationComboBox7 mDestinationComboBox;
        
        private ResultComboBox57 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileOrFolderComboBox10 : WpfComboBox
    {
        
        public FileOrFolderComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DestinationComboBox7 : WpfComboBox
    {
        
        public DestinationComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__ZipNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox57 : WpfComboBox
    {
        
        public ResultComboBox57(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindIndex : WpfCustom
    {
        
        public FindIndex(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FindIndexDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Find Index(FindIndexDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom29 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom29(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom28 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom28(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom29 mLargeViewContentCustom;
        
        private SmallViewContentCustom28 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom29 : WpfCustom
    {
        
        public LargeViewContentCustom29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox DirectionComboBox
        {
            get
            {
                if ((this.mDirectionComboBox == null))
                {
                    this.mDirectionComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mDirectionComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directioncbx_AutoID";
                    this.mDirectionComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDirectionComboBox;
            }
        }
        
        public CharactersComboBox CharactersComboBox
        {
            get
            {
                if ((this.mCharactersComboBox == null))
                {
                    this.mCharactersComboBox = new CharactersComboBox(this);
                }
                return this.mCharactersComboBox;
            }
        }
        
        public WpfComboBox IndexComboBox
        {
            get
            {
                if ((this.mIndexComboBox == null))
                {
                    this.mIndexComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mIndexComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Indextcbx_AutoID";
                    this.mIndexComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIndexComboBox;
            }
        }
        
        public InFieldComboBox InFieldComboBox
        {
            get
            {
                if ((this.mInFieldComboBox == null))
                {
                    this.mInFieldComboBox = new InFieldComboBox(this);
                }
                return this.mInFieldComboBox;
            }
        }
        
        public OnErrorCustom33 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom33(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public ResultComboBox58 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox58(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mDirectionComboBox;
        
        private CharactersComboBox mCharactersComboBox;
        
        private WpfComboBox mIndexComboBox;
        
        private InFieldComboBox mInFieldComboBox;
        
        private OnErrorCustom33 mOnErrorCustom;
        
        private ResultComboBox58 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CharactersComboBox : WpfComboBox
    {
        
        public CharactersComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Characterstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldComboBox : WpfComboBox
    {
        
        public InFieldComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom33 : WpfCustom
    {
        
        public OnErrorCustom33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup50 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup50(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup50 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup50 : WpfGroup
    {
        
        public OnErrorGroup50(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WebServiceComboBox30 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox30(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public ErrorVariableComboBox31 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox31(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WebServiceComboBox30 mWebServiceComboBox;
        
        private ErrorVariableComboBox31 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox30 : WpfComboBox
    {
        
        public WebServiceComboBox30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox31 : WpfComboBox
    {
        
        public ErrorVariableComboBox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox58 : WpfComboBox
    {
        
        public ResultComboBox58(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom28 : WpfCustom
    {
        
        public SmallViewContentCustom28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ResultComboBox59 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox59(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfComboBox DirectionComboBox
        {
            get
            {
                if ((this.mDirectionComboBox == null))
                {
                    this.mDirectionComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mDirectionComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directioncbx_AutoID";
                    this.mDirectionComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDirectionComboBox;
            }
        }
        
        public CharactersComboBox1 CharactersComboBox
        {
            get
            {
                if ((this.mCharactersComboBox == null))
                {
                    this.mCharactersComboBox = new CharactersComboBox1(this);
                }
                return this.mCharactersComboBox;
            }
        }
        
        public WpfComboBox IndexComboBox
        {
            get
            {
                if ((this.mIndexComboBox == null))
                {
                    this.mIndexComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mIndexComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Indextcbx_AutoID";
                    this.mIndexComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mIndexComboBox;
            }
        }
        
        public InFieldComboBox1 InFieldComboBox
        {
            get
            {
                if ((this.mInFieldComboBox == null))
                {
                    this.mInFieldComboBox = new InFieldComboBox1(this);
                }
                return this.mInFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ResultComboBox59 mResultComboBox;
        
        private WpfComboBox mDirectionComboBox;
        
        private CharactersComboBox1 mCharactersComboBox;
        
        private WpfComboBox mIndexComboBox;
        
        private InFieldComboBox1 mInFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox59 : WpfComboBox
    {
        
        public ResultComboBox59(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CharactersComboBox1 : WpfComboBox
    {
        
        public CharactersComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Characterstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFieldComboBox1 : WpfComboBox
    {
        
        public InFieldComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFieldtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Replace : WpfCustom
    {
        
        public Replace(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ReplaceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Replace(ReplaceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom30 LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom30(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom29 SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom29(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom30 mLargeViewContentCustom;
        
        private SmallViewContentCustom29 mSmallViewContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom30 : WpfCustom
    {
        
        public LargeViewContentCustom30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFiledsComboBox InFiledsComboBox
        {
            get
            {
                if ((this.mInFiledsComboBox == null))
                {
                    this.mInFiledsComboBox = new InFiledsComboBox(this);
                }
                return this.mInFiledsComboBox;
            }
        }
        
        public FindComboBox FindComboBox
        {
            get
            {
                if ((this.mFindComboBox == null))
                {
                    this.mFindComboBox = new FindComboBox(this);
                }
                return this.mFindComboBox;
            }
        }
        
        public ReplaceComboBox ReplaceComboBox
        {
            get
            {
                if ((this.mReplaceComboBox == null))
                {
                    this.mReplaceComboBox = new ReplaceComboBox(this);
                }
                return this.mReplaceComboBox;
            }
        }
        
        public ResultComboBox60 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox60(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public UIOnErrorCustom UIOnErrorCustom
        {
            get
            {
                if ((this.mUIOnErrorCustom == null))
                {
                    this.mUIOnErrorCustom = new UIOnErrorCustom(this);
                }
                return this.mUIOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private InFiledsComboBox mInFiledsComboBox;
        
        private FindComboBox mFindComboBox;
        
        private ReplaceComboBox mReplaceComboBox;
        
        private ResultComboBox60 mResultComboBox;
        
        private UIOnErrorCustom mUIOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFiledsComboBox : WpfComboBox
    {
        
        public InFiledsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFiledstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindComboBox : WpfComboBox
    {
        
        public FindComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Findtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReplaceComboBox : WpfComboBox
    {
        
        public ReplaceComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Replacetxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox60 : WpfComboBox
    {
        
        public ResultComboBox60(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOnErrorCustom : WpfCustom
    {
        
        public UIOnErrorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup51 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup51(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup51 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup51 : WpfGroup
    {
        
        public OnErrorGroup51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        
        public WebserviceComboBox31 WebserviceComboBox
        {
            get
            {
                if ((this.mWebserviceComboBox == null))
                {
                    this.mWebserviceComboBox = new WebserviceComboBox31(this);
                }
                return this.mWebserviceComboBox;
            }
        }
        
        public ErrorVariableComboBox32 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox32(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mEndthisworkflowCheckBox;
        
        private WebserviceComboBox31 mWebserviceComboBox;
        
        private ErrorVariableComboBox32 mErrorVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebserviceComboBox31 : WpfComboBox
    {
        
        public WebserviceComboBox31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox32 : WpfComboBox
    {
        
        public ErrorVariableComboBox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom29 : WpfCustom
    {
        
        public SmallViewContentCustom29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InFiledsComboBox1 InFiledsComboBox
        {
            get
            {
                if ((this.mInFiledsComboBox == null))
                {
                    this.mInFiledsComboBox = new InFiledsComboBox1(this);
                }
                return this.mInFiledsComboBox;
            }
        }
        
        public FindComboBox1 FindComboBox
        {
            get
            {
                if ((this.mFindComboBox == null))
                {
                    this.mFindComboBox = new FindComboBox1(this);
                }
                return this.mFindComboBox;
            }
        }
        
        public ReplaceComboBox1 ReplaceComboBox
        {
            get
            {
                if ((this.mReplaceComboBox == null))
                {
                    this.mReplaceComboBox = new ReplaceComboBox1(this);
                }
                return this.mReplaceComboBox;
            }
        }
        
        public ResultComboBox61 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox61(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InFiledsComboBox1 mInFiledsComboBox;
        
        private FindComboBox1 mFindComboBox;
        
        private ReplaceComboBox1 mReplaceComboBox;
        
        private ResultComboBox61 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InFiledsComboBox1 : WpfComboBox
    {
        
        public InFiledsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__InFiledstxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FindComboBox1 : WpfComboBox
    {
        
        public FindComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Findtxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ReplaceComboBox1 : WpfComboBox
    {
        
        public ReplaceComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Replacetxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox61 : WpfComboBox
    {
        
        public ResultComboBox61(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Decision : WpfCustom
    {
        
        public Decision(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowDecisionDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "FlowDecisionDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DisplayNameTextBoxEdit
        {
            get
            {
                if ((this.mDisplayNameTextBoxEdit == null))
                {
                    this.mDisplayNameTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mDisplayNameTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DisplayNameTextBox";
                    this.mDisplayNameTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayNameTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDisplayNameTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Sequence : WpfCustom
    {
        
        public Sequence(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SequenceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sequence(SequenceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SequenceLargeView SequenceLargeView
        {
            get
            {
                if ((this.mSequenceLargeView == null))
                {
                    this.mSequenceLargeView = new SequenceLargeView(this);
                }
                return this.mSequenceLargeView;
            }
        }
        
        public SequenceSmallView SequenceSmallView
        {
            get
            {
                if ((this.mSequenceSmallView == null))
                {
                    this.mSequenceSmallView = new SequenceSmallView(this);
                }
                return this.mSequenceSmallView;
            }
        }
        #endregion
        
        #region Fields
        private SequenceLargeView mSequenceLargeView;
        
        private SequenceSmallView mSequenceSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceLargeView : WpfCustom
    {
        
        public SequenceLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SequenceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sequence(SequenceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AddModeNewActivity AddModeNewActivity
        {
            get
            {
                if ((this.mAddModeNewActivity == null))
                {
                    this.mAddModeNewActivity = new AddModeNewActivity(this);
                }
                return this.mAddModeNewActivity;
            }
        }
        
        public OnErrorCustom34 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom34(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private AddModeNewActivity mAddModeNewActivity;
        
        private OnErrorCustom34 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddModeNewActivity : WpfCustom
    {
        
        public AddModeNewActivity(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemsPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__ActivitiesPresenter_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom UISacdVerticalConnectoCustom
        {
            get
            {
                if ((this.mUISacdVerticalConnectoCustom == null))
                {
                    this.mUISacdVerticalConnectoCustom = new WpfCustom(this);
                    #region Search Criteria
                    this.mUISacdVerticalConnectoCustom.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.VerticalConnector";
                    this.mUISacdVerticalConnectoCustom.SearchProperties[WpfControl.PropertyNames.AutomationId] = "sacd:VerticalConnector_1";
                    this.mUISacdVerticalConnectoCustom.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUISacdVerticalConnectoCustom;
            }
        }
        
        public WpfCustom MultiAssignObject
        {
            get
            {
                if ((this.mMultiAssignObject == null))
                {
                    this.mMultiAssignObject = new WpfCustom(this);
                    #region Search Criteria
                    this.mMultiAssignObject.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignObjectDesigner";
                    this.mMultiAssignObject.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Assign Object (0)(MultiAssignObjectDesigner)";
                    this.mMultiAssignObject.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mMultiAssignObject;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mUISacdVerticalConnectoCustom;
        
        private WpfCustom mMultiAssignObject;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom34 : WpfCustom
    {
        
        public OnErrorCustom34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup52 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup52(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup52 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup52 : WpfGroup
    {
        
        public OnErrorGroup52(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox33 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox33(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox32 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox32(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox UIEndthisworkflowCheckBox
        {
            get
            {
                if ((this.mUIEndthisworkflowCheckBox == null))
                {
                    this.mUIEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mUIEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox33 mErrorVariableComboBox;
        
        private WebServiceComboBox32 mWebServiceComboBox;
        
        private WpfCheckBox mUIEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox33 : WpfComboBox
    {
        
        public ErrorVariableComboBox33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox32 : WpfComboBox
    {
        
        public WebServiceComboBox32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SequenceSmallView : WpfCustom
    {
        
        public SequenceSmallView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public ElementTable ElementTable
        {
            get
            {
                if ((this.mElementTable == null))
                {
                    this.mElementTable = new ElementTable(this);
                }
                return this.mElementTable;
            }
        }
        
        public WpfCustom AddNewActivity
        {
            get
            {
                if ((this.mAddNewActivity == null))
                {
                    this.mAddNewActivity = new WpfCustom(this);
                    #region Search Criteria
                    this.mAddNewActivity.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
                    this.mAddNewActivity.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
                    this.mAddNewActivity.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mAddNewActivity;
            }
        }
        #endregion
        
        #region Fields
        private ElementTable mElementTable;
        
        private WpfCustom mAddNewActivity;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ElementTable : WpfTable
    {
        
        public ElementTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "InitialFocusElement";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfRow AssignObject
        {
            get
            {
                if ((this.mAssignObject == null))
                {
                    this.mAssignObject = new WpfRow(this);
                    #region Search Criteria
                    this.mAssignObject.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
                    this.mAssignObject.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mAssignObject;
            }
        }
        #endregion
        
        #region Fields
        private WpfRow mAssignObject;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MultiAssign : WpfCustom
    {
        
        public MultiAssign(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "MultiAssignDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView15 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView15(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView23 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView23(this);
                }
                return this.mLargeView;
            }
        }
        
        public DoneButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new DoneButton(this);
                }
                return this.mDoneButton;
            }
        }
        
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        
        public QuickVariableInputContent3 QuickVariableInputContent
        {
            get
            {
                if ((this.mQuickVariableInputContent == null))
                {
                    this.mQuickVariableInputContent = new QuickVariableInputContent3(this);
                }
                return this.mQuickVariableInputContent;
            }
        }
        
        public WpfButton AddButton
        {
            get
            {
                if ((this.mAddButton == null))
                {
                    this.mAddButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAddButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AddModeButton";
                    this.mAddButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAddButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView15 mSmallView;
        
        private LargeView23 mLargeView;
        
        private DoneButton mDoneButton;
        
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        
        private QuickVariableInputContent3 mQuickVariableInputContent;
        
        private WpfButton mAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView15 : WpfCustom
    {
        
        public SmallView15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid6 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid6(this);
                }
                return this.mDataGrid;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid6 mDataGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid6 : WpfTable
    {
        
        public DataGrid6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row117 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row117(this);
                }
                return this.mRow1;
            }
        }
        
        public Row26 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row26(this);
                }
                return this.mRow2;
            }
        }
        
        public Row33 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row33(this);
                }
                return this.mRow3;
            }
        }
        #endregion
        
        #region Fields
        private Row117 mRow1;
        
        private Row26 mRow2;
        
        private Row33 mRow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row117 : WpfRow
    {
        
        public Row117(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell6 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell6(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell9 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell9(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell6 mVariableCell;
        
        private ValueCell9 mValueCell;
        
        private RowNumberCell mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell6 : WpfCell
    {
        
        public VariableCell6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox : WpfComboBox
    {
        
        public IntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox : WpfEdit
    {
        
        public Textbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "[[Variable1]]";
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell9 : WpfCell
    {
        
        public ValueCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox1 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox1(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox1 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox1 : WpfComboBox
    {
        
        public IntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell : WpfCell
    {
        
        public RowNumberCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "1";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row26 : WpfRow
    {
        
        public Row26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell7 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell7(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell10 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell10(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell1 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell1(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell7 mVariableCell;
        
        private ValueCell10 mValueCell;
        
        private RowNumberCell1 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell7 : WpfCell
    {
        
        public VariableCell7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox2 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox2(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox2 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox2 : WpfComboBox
    {
        
        public IntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox1 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox1(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox1 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox1 : WpfEdit
    {
        
        public Textbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell10 : WpfCell
    {
        
        public ValueCell10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox3 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox3(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox3 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox3 : WpfComboBox
    {
        
        public IntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell1 : WpfCell
    {
        
        public RowNumberCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "2";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row33 : WpfRow
    {
        
        public Row33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell8 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell8(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell11 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell11(this);
                }
                return this.mValueCell;
            }
        }
        
        public RowNumberCell2 RowNumberCell
        {
            get
            {
                if ((this.mRowNumberCell == null))
                {
                    this.mRowNumberCell = new RowNumberCell2(this);
                }
                return this.mRowNumberCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell8 mVariableCell;
        
        private ValueCell11 mValueCell;
        
        private RowNumberCell2 mRowNumberCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell8 : WpfCell
    {
        
        public VariableCell8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "1";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox4 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox4(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox4 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox4 : WpfComboBox
    {
        
        public IntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI_TextBox_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Textbox2 Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new Textbox2(this);
                }
                return this.mTextbox;
            }
        }
        
        public WpfListItem ListItem
        {
            get
            {
                if ((this.mListItem == null))
                {
                    this.mListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "[[SomeVariable]]";
                    this.mListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem;
            }
        }
        #endregion
        
        #region Fields
        private Textbox2 mTextbox;
        
        private WpfListItem mListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Textbox2 : WpfEdit
    {
        
        public Textbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TextboxFloatingText
        {
            get
            {
                if ((this.mTextboxFloatingText == null))
                {
                    this.mTextboxFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mTextboxFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextboxFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTextboxFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell11 : WpfCell
    {
        
        public ValueCell11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "3";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox5 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox5(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox5 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox5 : WpfComboBox
    {
        
        public IntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RowNumberCell2 : WpfCell
    {
        
        public RowNumberCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = null;
            this.SearchProperties[WpfCell.PropertyNames.ColumnIndex] = "0";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Text
        {
            get
            {
                if ((this.mText == null))
                {
                    this.mText = new WpfText(this);
                    #region Search Criteria
                    this.mText.SearchProperties[WpfText.PropertyNames.Name] = "3";
                    this.mText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView23 : WpfCustom
    {
        
        public LargeView23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataGrid7 DataGrid
        {
            get
            {
                if ((this.mDataGrid == null))
                {
                    this.mDataGrid = new DataGrid7(this);
                }
                return this.mDataGrid;
            }
        }
        
        public OnErrorPane14 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane14(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private DataGrid7 mDataGrid;
        
        private OnErrorPane14 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGrid7 : WpfTable
    {
        
        public DataGrid7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row118 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row118(this);
                }
                return this.mRow1;
            }
        }
        
        public Row27 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row27(this);
                }
                return this.mRow2;
            }
        }
        
        public Row34 Row3
        {
            get
            {
                if ((this.mRow3 == null))
                {
                    this.mRow3 = new Row34(this);
                }
                return this.mRow3;
            }
        }
        
        public Row41 Row4
        {
            get
            {
                if ((this.mRow4 == null))
                {
                    this.mRow4 = new Row41(this);
                }
                return this.mRow4;
            }
        }
        #endregion
        
        #region Fields
        private Row118 mRow1;
        
        private Row27 mRow2;
        
        private Row34 mRow3;
        
        private Row41 mRow4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row118 : WpfRow
    {
        
        public Row118(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfRow.PropertyNames.AutomationId, "UI_ActivityGridRow_0_AutoID", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell9 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell9(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell12 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell12(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell9 mVariableCell;
        
        private ValueCell12 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell9 : WpfCell
    {
        
        public VariableCell9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox6 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox6(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox6 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox6 : WpfComboBox
    {
        
        public IntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell12 : WpfCell
    {
        
        public ValueCell12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox7 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox7(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox7 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox7 : WpfComboBox
    {
        
        public IntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row27 : WpfRow
    {
        
        public Row27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_1_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell10 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell10(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell13 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell13(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell10 mVariableCell;
        
        private ValueCell13 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell10 : WpfCell
    {
        
        public VariableCell10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox8 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox8(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox8 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox8 : WpfComboBox
    {
        
        public IntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell13 : WpfCell
    {
        
        public ValueCell13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox9 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox9(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox9 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox9 : WpfComboBox
    {
        
        public IntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row2_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row34 : WpfRow
    {
        
        public Row34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_2_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell11 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell11(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell14 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell14(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell11 mVariableCell;
        
        private ValueCell14 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell11 : WpfCell
    {
        
        public VariableCell11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox10 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox10(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox10 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox10 : WpfComboBox
    {
        
        public IntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell14 : WpfCell
    {
        
        public ValueCell14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox11 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox11(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox11 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox11 : WpfComboBox
    {
        
        public IntellisenseCombobox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row4_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row41 : WpfRow
    {
        
        public Row41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_3_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableCell12 VariableCell
        {
            get
            {
                if ((this.mVariableCell == null))
                {
                    this.mVariableCell = new VariableCell12(this);
                }
                return this.mVariableCell;
            }
        }
        
        public ValueCell15 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell15(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private VariableCell12 mVariableCell;
        
        private ValueCell15 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableCell12 : WpfCell
    {
        
        public VariableCell12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Variable";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox12 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox12(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox12 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox12 : WpfComboBox
    {
        
        public IntellisenseCombobox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell15 : WpfCell
    {
        
        public ValueCell15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "New Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public IntellisenseCombobox13 IntellisenseCombobox
        {
            get
            {
                if ((this.mIntellisenseCombobox == null))
                {
                    this.mIntellisenseCombobox = new IntellisenseCombobox13(this);
                }
                return this.mIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private IntellisenseCombobox13 mIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class IntellisenseCombobox13 : WpfComboBox
    {
        
        public IntellisenseCombobox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row5_FieldValue_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane14 : WpfCustom
    {
        
        public OnErrorPane14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup53 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup53(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup53 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup53 : WpfGroup
    {
        
        public OnErrorGroup53(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox9 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox9(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox9 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox9(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox9 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox9 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox9 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox9 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DoneButton : WpfButton
    {
        
        public DoneButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfControl ItemIndicator
        {
            get
            {
                if ((this.mItemIndicator == null))
                {
                    this.mItemIndicator = new WpfControl(this);
                    #region Search Criteria
                    this.mItemIndicator.SearchProperties[WpfControl.PropertyNames.ControlType] = "Indicator";
                    this.mItemIndicator.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemIndicator.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemIndicator;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mItemIndicator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QuickVariableInputContent3 : WpfCustom
    {
        
        public QuickVariableInputContent3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit QviSplitOnCharacterEdit
        {
            get
            {
                if ((this.mQviSplitOnCharacterEdit == null))
                {
                    this.mQviSplitOnCharacterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviSplitOnCharacterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviSplitOnCharacter";
                    this.mQviSplitOnCharacterEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCharacterEdit;
            }
        }
        
        public WpfComboBox QviSplitOnCombobox
        {
            get
            {
                if ((this.mQviSplitOnCombobox == null))
                {
                    this.mQviSplitOnCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mQviSplitOnCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "QviSplitOnCombobox";
                    this.mQviSplitOnCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviSplitOnCombobox;
            }
        }
        
        public WpfEdit QviVariableListBoxEdit
        {
            get
            {
                if ((this.mQviVariableListBoxEdit == null))
                {
                    this.mQviVariableListBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mQviVariableListBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "QviVariableListBox";
                    this.mQviVariableListBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQviVariableListBoxEdit;
            }
        }
        
        public WpfRadioButton ReplaceRadioButton
        {
            get
            {
                if ((this.mReplaceRadioButton == null))
                {
                    this.mReplaceRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mReplaceRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "ReplaceOption";
                    this.mReplaceRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mReplaceRadioButton;
            }
        }
        
        public WpfRadioButton AppendRadioButton
        {
            get
            {
                if ((this.mAppendRadioButton == null))
                {
                    this.mAppendRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mAppendRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "AppendOption";
                    this.mAppendRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAppendRadioButton;
            }
        }
        
        public WpfEdit PrefixEdit
        {
            get
            {
                if ((this.mPrefixEdit == null))
                {
                    this.mPrefixEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mPrefixEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to the front of the variables";
                    this.mPrefixEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixEdit;
            }
        }
        
        public WpfEdit SuffixEdit
        {
            get
            {
                if ((this.mSuffixEdit == null))
                {
                    this.mSuffixEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mSuffixEdit.SearchProperties[WpfEdit.PropertyNames.HelpText] = "Adds this to end of the variables";
                    this.mSuffixEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuffixEdit;
            }
        }
        
        public PreviewCustom4 PreviewCustom
        {
            get
            {
                if ((this.mPreviewCustom == null))
                {
                    this.mPreviewCustom = new PreviewCustom4(this);
                }
                return this.mPreviewCustom;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mQviSplitOnCharacterEdit;
        
        private WpfComboBox mQviSplitOnCombobox;
        
        private WpfEdit mQviVariableListBoxEdit;
        
        private WpfRadioButton mReplaceRadioButton;
        
        private WpfRadioButton mAppendRadioButton;
        
        private WpfEdit mPrefixEdit;
        
        private WpfEdit mSuffixEdit;
        
        private PreviewCustom4 mPreviewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewCustom4 : WpfCustom
    {
        
        public PreviewCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PreviewView";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Preview";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public PreviewGroup4 PreviewGroup
        {
            get
            {
                if ((this.mPreviewGroup == null))
                {
                    this.mPreviewGroup = new PreviewGroup4(this);
                }
                return this.mPreviewGroup;
            }
        }
        #endregion
        
        #region Fields
        private PreviewGroup4 mPreviewGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PreviewGroup4 : WpfGroup
    {
        
        public PreviewGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "PreviewGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton PreviewButton
        {
            get
            {
                if ((this.mPreviewButton == null))
                {
                    this.mPreviewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPreviewButton.SearchProperties[WpfButton.PropertyNames.Name] = "Preview";
                    this.mPreviewButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPreviewButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mPreviewButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebPost : WpfCustom
    {
        
        public WebPost(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServicePostDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "POST Web Method", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ResponseTextbox
        {
            get
            {
                if ((this.mResponseTextbox == null))
                {
                    this.mResponseTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "ResponseTextbox";
                    this.mResponseTextbox.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mResponseTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mResponseTextbox;
            }
        }
        
        public LargeView24 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView24(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mResponseTextbox;
        
        private LargeView24 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView24 : WpfCustom
    {
        
        public LargeView24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        
        public Table2 Table
        {
            get
            {
                if ((this.mTable == null))
                {
                    this.mTable = new Table2(this);
                }
                return this.mTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText2 QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText2(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfEdit RequestBody
        {
            get
            {
                if ((this.mRequestBody == null))
                {
                    this.mRequestBody = new WpfEdit(this);
                    #region Search Criteria
                    this.mRequestBody.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RequestBody";
                    this.mRequestBody.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRequestBody;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public InputsTable2 InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable2(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        
        private Table2 mTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText2 mQueryStringText;
        
        private WpfEdit mRequestBody;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mTestButton;
        
        private InputsTable2 mInputsTable;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Table2 : WpfTable
    {
        
        public Table2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow17 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow17(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow17 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow17 : WpfRow
    {
        
        public ItemRow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell2 ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell2(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell2 HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell2(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell2 mItemValueCell;
        
        private HeaderCell2 mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell2 : WpfCell
    {
        
        public ItemValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox9 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox9(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox9 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox9 : WpfComboBox
    {
        
        public ValueComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell2 : WpfCell
    {
        
        public HeaderCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox3 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox3(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox3 mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox3 : WpfComboBox
    {
        
        public HeaderComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText2 : WpfText
    {
        
        public QueryStringText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable2 : WpfTable
    {
        
        public InputsTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage SuccessImage
        {
            get
            {
                if ((this.mSuccessImage == null))
                {
                    this.mSuccessImage = new WpfImage(this);
                    #region Search Criteria
                    this.mSuccessImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSuccessImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSuccessImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mSuccessImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Error1 : WpfText
    {
        
        public Error1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebGet : WpfCustom
    {
        
        public WebGet(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServiceGetDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "GET Web Method", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView25 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView25(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView25 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView25 : WpfCustom
    {
        
        public LargeView25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfTable InputDataGridTable
        {
            get
            {
                if ((this.mInputDataGridTable == null))
                {
                    this.mInputDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputDataGridTable;
            }
        }
        
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public HeadersTable HeadersTable
        {
            get
            {
                if ((this.mHeadersTable == null))
                {
                    this.mHeadersTable = new HeadersTable(this);
                }
                return this.mHeadersTable;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesComboBox.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Select the webservice host you want to use";
                    this.mSourcesComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputtoObjectCheckBox
        {
            get
            {
                if ((this.mOutputtoObjectCheckBox == null))
                {
                    this.mOutputtoObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputtoObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputtoObjectCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputtoObjectCheckBox;
            }
        }
        
        public QueryStringText3 QueryStringText
        {
            get
            {
                if ((this.mQueryStringText == null))
                {
                    this.mQueryStringText = new QueryStringText3(this);
                }
                return this.mQueryStringText;
            }
        }
        
        public WpfTable OutputsGridTable
        {
            get
            {
                if ((this.mOutputsGridTable == null))
                {
                    this.mOutputsGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsGridTable;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Accept these results and continue";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfButton CancelButton
        {
            get
            {
                if ((this.mCancelButton == null))
                {
                    this.mCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mCancelButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCancelButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfTable mInputDataGridTable;
        
        private WpfButton mTestButton;
        
        private HeadersTable mHeadersTable;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private WpfComboBox mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputtoObjectCheckBox;
        
        private QueryStringText3 mQueryStringText;
        
        private WpfTable mOutputsGridTable;
        
        private WpfEdit mRecordSetTextBox;
        
        private WpfButton mDoneButton;
        
        private WpfButton mCancelButton;
        
        private WpfButton mPasteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeadersTable : WpfTable
    {
        
        public HeadersTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "Headers";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow18 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow18(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow18 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow18 : WpfRow
    {
        
        public ItemRow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = null;
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemValueCell3 ItemValueCell
        {
            get
            {
                if ((this.mItemValueCell == null))
                {
                    this.mItemValueCell = new ItemValueCell3(this);
                }
                return this.mItemValueCell;
            }
        }
        
        public HeaderCell3 HeaderCell
        {
            get
            {
                if ((this.mHeaderCell == null))
                {
                    this.mHeaderCell = new HeaderCell3(this);
                }
                return this.mHeaderCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemValueCell3 mItemValueCell;
        
        private HeaderCell3 mHeaderCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemValueCell3 : WpfCell
    {
        
        public ItemValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox10 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox10(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox10 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox10 : WpfComboBox
    {
        
        public ValueComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderCell3 : WpfCell
    {
        
        public HeaderCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Header";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public HeaderComboBox4 HeaderComboBox
        {
            get
            {
                if ((this.mHeaderComboBox == null))
                {
                    this.mHeaderComboBox = new HeaderComboBox4(this);
                }
                return this.mHeaderComboBox;
            }
        }
        #endregion
        
        #region Fields
        private HeaderComboBox4 mHeaderComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HeaderComboBox4 : WpfComboBox
    {
        
        public HeaderComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "To supply additional header information in your get request, put the header info " +
                "in here.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class QueryStringText3 : WpfText
    {
        
        public QueryStringText3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "QueryStringLable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit ItemEdit
        {
            get
            {
                if ((this.mItemEdit == null))
                {
                    this.mItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mItemEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExternalWorkFlow : WpfCustom
    {
        
        public ExternalWorkFlow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "(ServiceDesigner)", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Javascript : WpfCustom
    {
        
        public Javascript(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ScriptDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "JavaScript(ScriptDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView16 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView16(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView26 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView26(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView16 mSmallView;
        
        private LargeView26 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView16 : WpfCustom
    {
        
        public SmallView16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox3 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox3(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox mScriptIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox3 mResultsIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox3 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView26 : WpfCustom
    {
        
        public LargeView26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox1 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox1(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public AttachmentsIntellisenseCombobox AttachmentsIntellisenseCombobox
        {
            get
            {
                if ((this.mAttachmentsIntellisenseCombobox == null))
                {
                    this.mAttachmentsIntellisenseCombobox = new AttachmentsIntellisenseCombobox(this);
                }
                return this.mAttachmentsIntellisenseCombobox;
            }
        }
        
        public WpfButton AttachFileButton
        {
            get
            {
                if ((this.mAttachFileButton == null))
                {
                    this.mAttachFileButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAttachFileButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mAttachFileButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachFileButton;
            }
        }
        
        public WpfCheckBox EscapesequencesCheckBox
        {
            get
            {
                if ((this.mEscapesequencesCheckBox == null))
                {
                    this.mEscapesequencesCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEscapesequencesCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Escape sequences in variables";
                    this.mEscapesequencesCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEscapesequencesCheckBox;
            }
        }
        
        public ResultIntellisenseCombobox6 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox6(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane15 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane15(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox1 mScriptIntellisenseCombobox;
        
        private AttachmentsIntellisenseCombobox mAttachmentsIntellisenseCombobox;
        
        private WpfButton mAttachFileButton;
        
        private WpfCheckBox mEscapesequencesCheckBox;
        
        private ResultIntellisenseCombobox6 mResultIntellisenseCombobox;
        
        private OnErrorPane15 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox1 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsIntellisenseCombobox : WpfComboBox
    {
        
        public AttachmentsIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox6 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane15 : WpfCustom
    {
        
        public OnErrorPane15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup54 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup54(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup54 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup54 : WpfGroup
    {
        
        public OnErrorGroup54(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox4 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox4(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ExecuteWorkflowIntellisenseCombobox ExecuteWorkflowIntellisenseCombobox
        {
            get
            {
                if ((this.mExecuteWorkflowIntellisenseCombobox == null))
                {
                    this.mExecuteWorkflowIntellisenseCombobox = new ExecuteWorkflowIntellisenseCombobox(this);
                }
                return this.mExecuteWorkflowIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox4 mErrorVariableIntellisenseCombobox;
        
        private ExecuteWorkflowIntellisenseCombobox mExecuteWorkflowIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox4 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteWorkflowIntellisenseCombobox : WpfComboBox
    {
        
        public ExecuteWorkflowIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Python : WpfCustom
    {
        
        public Python(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ScriptDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Python(ScriptDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView17 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView17(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView27 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView27(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView17 mSmallView;
        
        private LargeView27 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView17 : WpfCustom
    {
        
        public SmallView17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox2 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox2(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox7 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox7(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox2 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox7 mResultIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox2 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox7 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView27 : WpfCustom
    {
        
        public LargeView27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AttachmentsIntellisenseCombobox1 AttachmentsIntellisenseCombobox
        {
            get
            {
                if ((this.mAttachmentsIntellisenseCombobox == null))
                {
                    this.mAttachmentsIntellisenseCombobox = new AttachmentsIntellisenseCombobox1(this);
                }
                return this.mAttachmentsIntellisenseCombobox;
            }
        }
        
        public WpfButton AttachFileButton
        {
            get
            {
                if ((this.mAttachFileButton == null))
                {
                    this.mAttachFileButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAttachFileButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mAttachFileButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachFileButton;
            }
        }
        
        public WpfCheckBox EscapesequencesCheckBox
        {
            get
            {
                if ((this.mEscapesequencesCheckBox == null))
                {
                    this.mEscapesequencesCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEscapesequencesCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Escape sequences in variables";
                    this.mEscapesequencesCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEscapesequencesCheckBox;
            }
        }
        
        public ScriptIntellisenseCombobox3 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox3(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox8 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox8(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane16 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane16(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private AttachmentsIntellisenseCombobox1 mAttachmentsIntellisenseCombobox;
        
        private WpfButton mAttachFileButton;
        
        private WpfCheckBox mEscapesequencesCheckBox;
        
        private ScriptIntellisenseCombobox3 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox8 mResultIntellisenseCombobox;
        
        private OnErrorPane16 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsIntellisenseCombobox1 : WpfComboBox
    {
        
        public AttachmentsIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox3 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox8 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane16 : WpfCustom
    {
        
        public OnErrorPane16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup55 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup55(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup55 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup55 : WpfGroup
    {
        
        public OnErrorGroup55(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableIntellisenseCombobox VariableIntellisenseCombobox
        {
            get
            {
                if ((this.mVariableIntellisenseCombobox == null))
                {
                    this.mVariableIntellisenseCombobox = new VariableIntellisenseCombobox(this);
                }
                return this.mVariableIntellisenseCombobox;
            }
        }
        
        public ExecuteWorkflowIntellisenseCombobox1 ExecuteWorkflowIntellisenseCombobox
        {
            get
            {
                if ((this.mExecuteWorkflowIntellisenseCombobox == null))
                {
                    this.mExecuteWorkflowIntellisenseCombobox = new ExecuteWorkflowIntellisenseCombobox1(this);
                }
                return this.mExecuteWorkflowIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private VariableIntellisenseCombobox mVariableIntellisenseCombobox;
        
        private ExecuteWorkflowIntellisenseCombobox1 mExecuteWorkflowIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableIntellisenseCombobox : WpfComboBox
    {
        
        public VariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteWorkflowIntellisenseCombobox1 : WpfComboBox
    {
        
        public ExecuteWorkflowIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Ruby : WpfCustom
    {
        
        public Ruby(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ScriptDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Ruby(ScriptDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView18 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView18(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView28 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView28(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView18 mSmallView;
        
        private LargeView28 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView18 : WpfCustom
    {
        
        public SmallView18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScriptIntellisenseCombobox4 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox4(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox9 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox9(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        #endregion
        
        #region Fields
        private ScriptIntellisenseCombobox4 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox9 mResultIntellisenseCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox4 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox9 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView28 : WpfCustom
    {
        
        public LargeView28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public AttachmentsIntellisenseCombobox2 AttachmentsIntellisenseCombobox
        {
            get
            {
                if ((this.mAttachmentsIntellisenseCombobox == null))
                {
                    this.mAttachmentsIntellisenseCombobox = new AttachmentsIntellisenseCombobox2(this);
                }
                return this.mAttachmentsIntellisenseCombobox;
            }
        }
        
        public WpfButton AttachFileButton
        {
            get
            {
                if ((this.mAttachFileButton == null))
                {
                    this.mAttachFileButton = new WpfButton(this);
                    #region Search Criteria
                    this.mAttachFileButton.SearchProperties[WpfButton.PropertyNames.Name] = "...";
                    this.mAttachFileButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachFileButton;
            }
        }
        
        public WpfCheckBox EscapesequencesCheckBox
        {
            get
            {
                if ((this.mEscapesequencesCheckBox == null))
                {
                    this.mEscapesequencesCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEscapesequencesCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Escape sequences in variables";
                    this.mEscapesequencesCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEscapesequencesCheckBox;
            }
        }
        
        public ScriptIntellisenseCombobox5 ScriptIntellisenseCombobox
        {
            get
            {
                if ((this.mScriptIntellisenseCombobox == null))
                {
                    this.mScriptIntellisenseCombobox = new ScriptIntellisenseCombobox5(this);
                }
                return this.mScriptIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox10 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox10(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public OnErrorPane17 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane17(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private AttachmentsIntellisenseCombobox2 mAttachmentsIntellisenseCombobox;
        
        private WpfButton mAttachFileButton;
        
        private WpfCheckBox mEscapesequencesCheckBox;
        
        private ScriptIntellisenseCombobox5 mScriptIntellisenseCombobox;
        
        private ResultIntellisenseCombobox10 mResultIntellisenseCombobox;
        
        private OnErrorPane17 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsIntellisenseCombobox2 : WpfComboBox
    {
        
        public AttachmentsIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AttachmentsTxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScriptIntellisenseCombobox5 : WpfComboBox
    {
        
        public ScriptIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__txtScript_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox10 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane17 : WpfCustom
    {
        
        public OnErrorPane17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup56 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup56(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup56 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup56 : WpfGroup
    {
        
        public OnErrorGroup56(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseCombobox5 ErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseCombobox == null))
                {
                    this.mErrorVariableIntellisenseCombobox = new ErrorVariableIntellisenseCombobox5(this);
                }
                return this.mErrorVariableIntellisenseCombobox;
            }
        }
        
        public ExecuteWorkflowIntellisenseCombobox2 ExecuteWorkflowIntellisenseCombobox
        {
            get
            {
                if ((this.mExecuteWorkflowIntellisenseCombobox == null))
                {
                    this.mExecuteWorkflowIntellisenseCombobox = new ExecuteWorkflowIntellisenseCombobox2(this);
                }
                return this.mExecuteWorkflowIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseCombobox5 mErrorVariableIntellisenseCombobox;
        
        private ExecuteWorkflowIntellisenseCombobox2 mExecuteWorkflowIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseCombobox5 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExecuteWorkflowIntellisenseCombobox2 : WpfComboBox
    {
        
        public ExecuteWorkflowIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectAndApply : WpfCustom
    {
        
        public SelectAndApply(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SelectAndApplyDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Select and apply(SelectAndApplyDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView19 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView19(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView29 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView29(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView19 mSmallView;
        
        private LargeView29 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView19 : WpfCustom
    {
        
        public SmallView19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SelectFromIntellisenseTextbox SelectFromIntellisenseTextbox
        {
            get
            {
                if ((this.mSelectFromIntellisenseTextbox == null))
                {
                    this.mSelectFromIntellisenseTextbox = new SelectFromIntellisenseTextbox(this);
                }
                return this.mSelectFromIntellisenseTextbox;
            }
        }
        
        public AliasIntellisenseTextbox AliasIntellisenseTextbox
        {
            get
            {
                if ((this.mAliasIntellisenseTextbox == null))
                {
                    this.mAliasIntellisenseTextbox = new AliasIntellisenseTextbox(this);
                }
                return this.mAliasIntellisenseTextbox;
            }
        }
        
        public DropActivityHere1 DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new DropActivityHere1(this);
                }
                return this.mDropActivityHere;
            }
        }
        #endregion
        
        #region Fields
        private SelectFromIntellisenseTextbox mSelectFromIntellisenseTextbox;
        
        private AliasIntellisenseTextbox mAliasIntellisenseTextbox;
        
        private DropActivityHere1 mDropActivityHere;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectFromIntellisenseTextbox : WpfComboBox
    {
        
        public SelectFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AliasIntellisenseTextbox : WpfComboBox
    {
        
        public AliasIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHere1 : WpfCustom
    {
        
        public DropActivityHere1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereFloatingText
        {
            get
            {
                if ((this.mDropActivityHereFloatingText == null))
                {
                    this.mDropActivityHereFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView29 : WpfCustom
    {
        
        public LargeView29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SelectFromIntellisenseTextbox1 SelectFromIntellisenseTextbox
        {
            get
            {
                if ((this.mSelectFromIntellisenseTextbox == null))
                {
                    this.mSelectFromIntellisenseTextbox = new SelectFromIntellisenseTextbox1(this);
                }
                return this.mSelectFromIntellisenseTextbox;
            }
        }
        
        public AliasIntellisenseTextbox1 AliasIntellisenseTextbox
        {
            get
            {
                if ((this.mAliasIntellisenseTextbox == null))
                {
                    this.mAliasIntellisenseTextbox = new AliasIntellisenseTextbox1(this);
                }
                return this.mAliasIntellisenseTextbox;
            }
        }
        
        public DropActivityHere2 DropActivityHere
        {
            get
            {
                if ((this.mDropActivityHere == null))
                {
                    this.mDropActivityHere = new DropActivityHere2(this);
                }
                return this.mDropActivityHere;
            }
        }
        
        public OnErrorPane18 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane18(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private SelectFromIntellisenseTextbox1 mSelectFromIntellisenseTextbox;
        
        private AliasIntellisenseTextbox1 mAliasIntellisenseTextbox;
        
        private DropActivityHere2 mDropActivityHere;
        
        private OnErrorPane18 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectFromIntellisenseTextbox1 : WpfComboBox
    {
        
        public SelectFromIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AliasIntellisenseTextbox1 : WpfComboBox
    {
        
        public AliasIntellisenseTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileNametxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DropActivityHere2 : WpfCustom
    {
        
        public DropActivityHere2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI__DropPoint_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText DropActivityHereFloatingText
        {
            get
            {
                if ((this.mDropActivityHereFloatingText == null))
                {
                    this.mDropActivityHereFloatingText = new WpfText(this);
                    #region Search Criteria
                    this.mDropActivityHereFloatingText.SearchProperties[WpfText.PropertyNames.Name] = "Drop Activity Here";
                    this.mDropActivityHereFloatingText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDropActivityHereFloatingText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDropActivityHereFloatingText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane18 : WpfCustom
    {
        
        public OnErrorPane18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup57 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup57(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup57 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup57 : WpfGroup
    {
        
        public OnErrorGroup57(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableIntellisenseTextbox2 ErrorVariableIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorVariableIntellisenseTextbox == null))
                {
                    this.mErrorVariableIntellisenseTextbox = new ErrorVariableIntellisenseTextbox2(this);
                }
                return this.mErrorVariableIntellisenseTextbox;
            }
        }
        
        public ErrorWorkflowIntellisenseTextbox ErrorWorkflowIntellisenseTextbox
        {
            get
            {
                if ((this.mErrorWorkflowIntellisenseTextbox == null))
                {
                    this.mErrorWorkflowIntellisenseTextbox = new ErrorWorkflowIntellisenseTextbox(this);
                }
                return this.mErrorWorkflowIntellisenseTextbox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableIntellisenseTextbox2 mErrorVariableIntellisenseTextbox;
        
        private ErrorWorkflowIntellisenseTextbox mErrorWorkflowIntellisenseTextbox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableIntellisenseTextbox2 : WpfComboBox
    {
        
        public ErrorVariableIntellisenseTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorWorkflowIntellisenseTextbox : WpfComboBox
    {
        
        public ErrorWorkflowIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HelloWorldWorkFlow : WpfCustom
    {
        
        public HelloWorldWorkFlow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Hello World(ServiceDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServiceDesignerLargeView ServiceDesignerLargeView
        {
            get
            {
                if ((this.mServiceDesignerLargeView == null))
                {
                    this.mServiceDesignerLargeView = new ServiceDesignerLargeView(this);
                }
                return this.mServiceDesignerLargeView;
            }
        }
        #endregion
        
        #region Fields
        private ServiceDesignerLargeView mServiceDesignerLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceDesignerLargeView : WpfCustom
    {
        
        public ServiceDesignerLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsDataGridTable InputsDataGridTable
        {
            get
            {
                if ((this.mInputsDataGridTable == null))
                {
                    this.mInputsDataGridTable = new InputsDataGridTable(this);
                }
                return this.mInputsDataGridTable;
            }
        }
        
        public OutputsDataGridTable OutputsDataGridTable
        {
            get
            {
                if ((this.mOutputsDataGridTable == null))
                {
                    this.mOutputsDataGridTable = new OutputsDataGridTable(this);
                }
                return this.mOutputsDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private InputsDataGridTable mInputsDataGridTable;
        
        private OutputsDataGridTable mOutputsDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsDataGridTable : WpfTable
    {
        
        public InputsDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "InputsDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsGridRowOne InputsGridRowOne
        {
            get
            {
                if ((this.mInputsGridRowOne == null))
                {
                    this.mInputsGridRowOne = new InputsGridRowOne(this);
                }
                return this.mInputsGridRowOne;
            }
        }
        #endregion
        
        #region Fields
        private InputsGridRowOne mInputsGridRowOne;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsGridRowOne : WpfRow
    {
        
        public InputsGridRowOne(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsGridRowOneCell InputsGridRowOneCell
        {
            get
            {
                if ((this.mInputsGridRowOneCell == null))
                {
                    this.mInputsGridRowOneCell = new InputsGridRowOneCell(this);
                }
                return this.mInputsGridRowOneCell;
            }
        }
        #endregion
        
        #region Fields
        private InputsGridRowOneCell mInputsGridRowOneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsGridRowOneCell : WpfCell
    {
        
        public InputsGridRowOneCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsAutoCompleteTextBox InputsAutoCompleteTextBox
        {
            get
            {
                if ((this.mInputsAutoCompleteTextBox == null))
                {
                    this.mInputsAutoCompleteTextBox = new InputsAutoCompleteTextBox(this);
                }
                return this.mInputsAutoCompleteTextBox;
            }
        }
        #endregion
        
        #region Fields
        private InputsAutoCompleteTextBox mInputsAutoCompleteTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsAutoCompleteTextBox : WpfComboBox
    {
        
        public InputsAutoCompleteTextBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfEdit InputsAutoCompleteTextBoxText
        {
            get
            {
                if ((this.mInputsAutoCompleteTextBoxText == null))
                {
                    this.mInputsAutoCompleteTextBoxText = new WpfEdit(this);
                    #region Search Criteria
                    this.mInputsAutoCompleteTextBoxText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mInputsAutoCompleteTextBoxText.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mInputsAutoCompleteTextBoxText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mInputsAutoCompleteTextBoxText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsDataGridTable : WpfTable
    {
        
        public OutputsDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsGridRowOne OutputsGridRowOne
        {
            get
            {
                if ((this.mOutputsGridRowOne == null))
                {
                    this.mOutputsGridRowOne = new OutputsGridRowOne(this);
                }
                return this.mOutputsGridRowOne;
            }
        }
        #endregion
        
        #region Fields
        private OutputsGridRowOne mOutputsGridRowOne;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsGridRowOne : WpfRow
    {
        
        public OutputsGridRowOne(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsGridRowOneCell OutputsGridRowOneCell
        {
            get
            {
                if ((this.mOutputsGridRowOneCell == null))
                {
                    this.mOutputsGridRowOneCell = new OutputsGridRowOneCell(this);
                }
                return this.mOutputsGridRowOneCell;
            }
        }
        #endregion
        
        #region Fields
        private OutputsGridRowOneCell mOutputsGridRowOneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsGridRowOneCell : WpfCell
    {
        
        public OutputsGridRowOneCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsAutoCompleteTextBox OutputsAutoCompleteTextBox
        {
            get
            {
                if ((this.mOutputsAutoCompleteTextBox == null))
                {
                    this.mOutputsAutoCompleteTextBox = new OutputsAutoCompleteTextBox(this);
                }
                return this.mOutputsAutoCompleteTextBox;
            }
        }
        #endregion
        
        #region Fields
        private OutputsAutoCompleteTextBox mOutputsAutoCompleteTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsAutoCompleteTextBox : WpfComboBox
    {
        
        public OutputsAutoCompleteTextBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfEdit OutputsAutoCompleteTextBoxText
        {
            get
            {
                if ((this.mOutputsAutoCompleteTextBoxText == null))
                {
                    this.mOutputsAutoCompleteTextBoxText = new WpfEdit(this);
                    #region Search Criteria
                    this.mOutputsAutoCompleteTextBoxText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mOutputsAutoCompleteTextBoxText.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mOutputsAutoCompleteTextBoxText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mOutputsAutoCompleteTextBoxText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrefixcontainsinvaliText : WpfText
    {
        
        public PrefixcontainsinvaliText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink PrefixcontainsinvaliHyperlink
        {
            get
            {
                if ((this.mPrefixcontainsinvaliHyperlink == null))
                {
                    this.mPrefixcontainsinvaliHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mPrefixcontainsinvaliHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "Prefix contains invalid characters";
                    this.mPrefixcontainsinvaliHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixcontainsinvaliHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mPrefixcontainsinvaliHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DsfWebDeleteOutputsLargeView : WpfCustom
    {
        
        public DsfWebDeleteOutputsLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServiceDeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DELETE Web Method - Outputs(WebServiceDeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Test the procedure or function";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Paste a customized response instead";
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mTestButton;
        
        private WpfButton mPasteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComDll : WpfCustom
    {
        
        public ComDll(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComDllDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Com DLL(ComDllDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView30 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView30(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView30 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView30 : WpfCustom
    {
        
        public LargeView30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesCombobox9 SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new SourcesCombobox9(this);
                }
                return this.mSourcesCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfComboBox NamespaceCombobox
        {
            get
            {
                if ((this.mNamespaceCombobox == null))
                {
                    this.mNamespaceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mNamespaceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "NamespaceComboBox";
                    this.mNamespaceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNamespaceCombobox;
            }
        }
        
        public WpfButton RefreshNamespaceButton
        {
            get
            {
                if ((this.mRefreshNamespaceButton == null))
                {
                    this.mRefreshNamespaceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshNamespaceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NamespaceRefreshButton";
                    this.mRefreshNamespaceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshNamespaceButton;
            }
        }
        
        public WpfComboBox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsCombobox;
            }
        }
        
        public WpfButton ActionRefreshButton
        {
            get
            {
                if ((this.mActionRefreshButton == null))
                {
                    this.mActionRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mActionRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mActionRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionRefreshButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckbox
        {
            get
            {
                if ((this.mOutputToObjectCheckbox == null))
                {
                    this.mOutputToObjectCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputToObjectCheckbox;
            }
        }
        
        public WpfTable OutputsTable
        {
            get
            {
                if ((this.mOutputsTable == null))
                {
                    this.mOutputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsTable;
            }
        }
        
        public WpfEdit RecordsetNameTextbox
        {
            get
            {
                if ((this.mRecordsetNameTextbox == null))
                {
                    this.mRecordsetNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordsetNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordsetNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetNameTextbox;
            }
        }
        
        public OnErrorPanel OnErrorPanel
        {
            get
            {
                if ((this.mOnErrorPanel == null))
                {
                    this.mOnErrorPanel = new OnErrorPanel(this);
                }
                return this.mOnErrorPanel;
            }
        }
        #endregion
        
        #region Fields
        private SourcesCombobox9 mSourcesCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private WpfComboBox mNamespaceCombobox;
        
        private WpfButton mRefreshNamespaceButton;
        
        private WpfComboBox mActionsCombobox;
        
        private WpfButton mActionRefreshButton;
        
        private WpfTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputToObjectCheckbox;
        
        private WpfTable mOutputsTable;
        
        private WpfEdit mRecordsetNameTextbox;
        
        private OnErrorPanel mOnErrorPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesCombobox9 : WpfComboBox
    {
        
        public SourcesCombobox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem COMPluginSourceToEditListItem
        {
            get
            {
                if ((this.mCOMPluginSourceToEditListItem == null))
                {
                    this.mCOMPluginSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCOMPluginSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.ComPluginSourceDefinition";
                    this.mCOMPluginSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mCOMPluginSourceToEditListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mCOMPluginSourceToEditListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPanel : WpfCustom
    {
        
        public OnErrorPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup58 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup58(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup58 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup58 : WpfGroup
    {
        
        public OnErrorGroup58(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox10 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox10(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorWebServiceIntellisenseCombobox OnErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorWebServiceIntellisenseCombobox = new OnErrorWebServiceIntellisenseCombobox(this);
                }
                return this.mOnErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox10 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorWebServiceIntellisenseCombobox mOnErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox10 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWebServiceIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorWebServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WcfService : WpfCustom
    {
        
        public WcfService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WcfEndPointDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WCF Service(WcfEndPointDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        
        public LargeView31 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView31(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSmallView;
        
        private LargeView31 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView31 : WpfCustom
    {
        
        public LargeView31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewButton
        {
            get
            {
                if ((this.mNewButton == null))
                {
                    this.mNewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewButton;
            }
        }
        
        public WpfComboBox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsCombobox;
            }
        }
        
        public WpfButton RefreshActionsButton
        {
            get
            {
                if ((this.mRefreshActionsButton == null))
                {
                    this.mRefreshActionsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshActionsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshActionsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshActionsButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckbox
        {
            get
            {
                if ((this.mOutputToObjectCheckbox == null))
                {
                    this.mOutputToObjectCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputToObjectCheckbox;
            }
        }
        
        public WpfTable OutputsTable
        {
            get
            {
                if ((this.mOutputsTable == null))
                {
                    this.mOutputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsTable;
            }
        }
        
        public WpfEdit RecordSetTextbox
        {
            get
            {
                if ((this.mRecordSetTextbox == null))
                {
                    this.mRecordSetTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextbox;
            }
        }
        
        public OnErrorPanel1 OnErrorPanel
        {
            get
            {
                if ((this.mOnErrorPanel == null))
                {
                    this.mOnErrorPanel = new OnErrorPanel1(this);
                }
                return this.mOnErrorPanel;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewButton;
        
        private WpfComboBox mActionsCombobox;
        
        private WpfButton mRefreshActionsButton;
        
        private WpfTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputToObjectCheckbox;
        
        private WpfTable mOutputsTable;
        
        private WpfEdit mRecordSetTextbox;
        
        private OnErrorPanel1 mOnErrorPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPanel1 : WpfCustom
    {
        
        public OnErrorPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup59 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup59(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup59 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup59 : WpfGroup
    {
        
        public OnErrorGroup59(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox11 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox11(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorWebServiceIntellisenseCombobox1 OnErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorWebServiceIntellisenseCombobox = new OnErrorWebServiceIntellisenseCombobox1(this);
                }
                return this.mOnErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox11 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorWebServiceIntellisenseCombobox1 mOnErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox11 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWebServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorWebServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Adornert_numbernText : WpfText
    {
        
        public Adornert_numbernText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink NumbernHyperlink
        {
            get
            {
                if ((this.mNumbernHyperlink == null))
                {
                    this.mNumbernHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNumbernHyperlink.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mNumbernHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mNumbernHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDeleteFile : WpfCustom
    {
        
        public SharepointDeleteFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointDeleteFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Delete File(SharePointDeleteFileDesigner)";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public SmallView20 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView20(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView32 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView32(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView20 mSmallView;
        
        private LargeView32 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView20 : WpfCustom
    {
        
        public SmallView20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public Server18 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server18(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathComboBox ServerPathComboBox
        {
            get
            {
                if ((this.mServerPathComboBox == null))
                {
                    this.mServerPathComboBox = new ServerPathComboBox(this);
                }
                return this.mServerPathComboBox;
            }
        }
        
        public ResultComboBox62 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox62(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server18 mServer;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathComboBox mServerPathComboBox;
        
        private ResultComboBox62 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server18 : WpfComboBox
    {
        
        public Server18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""9872fb6a-87a8-4082-874e-3c9bff8100a0"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathComboBox : WpfComboBox
    {
        
        public ServerPathComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox62 : WpfComboBox
    {
        
        public ResultComboBox62(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView32 : WpfCustom
    {
        
        public LargeView32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public Server19 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server19(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathComboBox1 ServerPathComboBox
        {
            get
            {
                if ((this.mServerPathComboBox == null))
                {
                    this.mServerPathComboBox = new ServerPathComboBox1(this);
                }
                return this.mServerPathComboBox;
            }
        }
        
        public ResultComboBox63 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox63(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfGroup OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new WpfGroup(this);
                    #region Search Criteria
                    this.mOnErrorPane.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
                    this.mOnErrorPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server19 mServer;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathComboBox1 mServerPathComboBox;
        
        private ResultComboBox63 mResultComboBox;
        
        private WpfGroup mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server19 : WpfComboBox
    {
        
        public Server19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathComboBox1 : WpfComboBox
    {
        
        public ServerPathComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox63 : WpfComboBox
    {
        
        public ResultComboBox63(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class KeepNewNameFlowChartName : WpfCustom
    {
        
        public KeepNewNameFlowChartName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UserControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DisplayNameReadOnlyControl";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfText DisplayValue
        {
            get
            {
                if ((this.mDisplayValue == null))
                {
                    this.mDisplayValue = new WpfText(this);
                    #region Search Criteria
                    this.mDisplayValue.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mDisplayValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDisplayValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BreadcrumbbarList : WpfList
    {
        
        public BreadcrumbbarList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "breadCrumbListBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem HelloWorld2ListItem
        {
            get
            {
                if ((this.mHelloWorld2ListItem == null))
                {
                    this.mHelloWorld2ListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mHelloWorld2ListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "HelloWorld2";
                    this.mHelloWorld2ListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mHelloWorld2ListItem;
            }
        }
        
        public WpfListItem KeepNewNameRenamedListItem
        {
            get
            {
                if ((this.mKeepNewNameRenamedListItem == null))
                {
                    this.mKeepNewNameRenamedListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mKeepNewNameRenamedListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "KeepNewNameRenamed";
                    this.mKeepNewNameRenamedListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mKeepNewNameRenamedListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mHelloWorld2ListItem;
        
        private WpfListItem mKeepNewNameRenamedListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TopScrollViewerPane : WpfPane
    {
        
        public TopScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ScrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnsavedWorkflowLinkText UnsavedWorkflowLinkText
        {
            get
            {
                if ((this.mUnsavedWorkflowLinkText == null))
                {
                    this.mUnsavedWorkflowLinkText = new UnsavedWorkflowLinkText(this);
                }
                return this.mUnsavedWorkflowLinkText;
            }
        }
        
        public HttpLocalHostText HttpLocalHostText
        {
            get
            {
                if ((this.mHttpLocalHostText == null))
                {
                    this.mHttpLocalHostText = new HttpLocalHostText(this);
                }
                return this.mHttpLocalHostText;
            }
        }
        
        public UrlWithRenamedFolder UrlWithRenamedFolder
        {
            get
            {
                if ((this.mUrlWithRenamedFolder == null))
                {
                    this.mUrlWithRenamedFolder = new UrlWithRenamedFolder(this);
                }
                return this.mUrlWithRenamedFolder;
            }
        }
        
        public UnitTestsUrlWorkflowUrlText UnitTestsUrlWorkflowUrlText
        {
            get
            {
                if ((this.mUnitTestsUrlWorkflowUrlText == null))
                {
                    this.mUnitTestsUrlWorkflowUrlText = new UnitTestsUrlWorkflowUrlText(this);
                }
                return this.mUnitTestsUrlWorkflowUrlText;
            }
        }
        #endregion
        
        #region Fields
        private UnsavedWorkflowLinkText mUnsavedWorkflowLinkText;
        
        private HttpLocalHostText mHttpLocalHostText;
        
        private UrlWithRenamedFolder mUrlWithRenamedFolder;
        
        private UnitTestsUrlWorkflowUrlText mUnitTestsUrlWorkflowUrlText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnsavedWorkflowLinkText : WpfText
    {
        
        public UnsavedWorkflowLinkText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "Unassigned/Unsaved", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HttpLocalHostText : WpfText
    {
        
        public HttpLocalHostText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink NewWorkflowHyperLink
        {
            get
            {
                if ((this.mNewWorkflowHyperLink == null))
                {
                    this.mNewWorkflowHyperLink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNewWorkflowHyperLink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWorkflowHyperLink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mNewWorkflowHyperLink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UrlWithRenamedFolder : WpfText
    {
        
        public UrlWithRenamedFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "3142/secure/Acceptance Tests_Renamed/LoopTest.json?<DataList></DataList>", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UrlWithRenamedFolderHyperlink
        {
            get
            {
                if ((this.mUrlWithRenamedFolderHyperlink == null))
                {
                    this.mUrlWithRenamedFolderHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUrlWithRenamedFolderHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "http://rsaklfsanele:3142/secure/Acceptance Tests_Renamed/LoopTest.json?<DataList>" +
                        "</DataList>";
                    this.mUrlWithRenamedFolderHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUrlWithRenamedFolderHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUrlWithRenamedFolderHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnitTestsUrlWorkflowUrlText : WpfText
    {
        
        public UnitTestsUrlWorkflowUrlText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "http://rsaklfsanele:3142/secure/Unit Tests/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UnitTestsUrlWorkflowUrlHyperlink
        {
            get
            {
                if ((this.mUnitTestsUrlWorkflowUrlHyperlink == null))
                {
                    this.mUnitTestsUrlWorkflowUrlHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUnitTestsUrlWorkflowUrlHyperlink.SearchProperties.Add(new PropertyExpression(WpfHyperlink.PropertyNames.Name, "http://rsaklfsanele:3142/secure/Unit Tests/", PropertyExpressionOperator.Contains));
                    this.mUnitTestsUrlWorkflowUrlHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnitTestsUrlWorkflowUrlHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUnitTestsUrlWorkflowUrlHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentPane : WpfCustom
    {
        
        public ContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ContentDockManager ContentDockManager
        {
            get
            {
                if ((this.mContentDockManager == null))
                {
                    this.mContentDockManager = new ContentDockManager(this);
                }
                return this.mContentDockManager;
            }
        }
        #endregion
        
        #region Fields
        private ContentDockManager mContentDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentDockManager : WpfCustom
    {
        
        public ContentDockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ContentDockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneRight SplitPaneRight
        {
            get
            {
                if ((this.mSplitPaneRight == null))
                {
                    this.mSplitPaneRight = new SplitPaneRight(this);
                }
                return this.mSplitPaneRight;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneRight mSplitPaneRight;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneRight : WpfCustom
    {
        
        public SplitPaneRight(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Variables Variables
        {
            get
            {
                if ((this.mVariables == null))
                {
                    this.mVariables = new Variables(this);
                }
                return this.mVariables;
            }
        }
        
        public DebugOutput DebugOutput
        {
            get
            {
                if ((this.mDebugOutput == null))
                {
                    this.mDebugOutput = new DebugOutput(this);
                }
                return this.mDebugOutput;
            }
        }
        #endregion
        
        #region Fields
        private Variables mVariables;
        
        private DebugOutput mDebugOutput;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Variables : WpfCustom
    {
        
        public Variables(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Variables";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton VariableUnpinBtn
        {
            get
            {
                if ((this.mVariableUnpinBtn == null))
                {
                    this.mVariableUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mVariableUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mVariableUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableUnpinBtn;
            }
        }
        
        public DatalistView DatalistView
        {
            get
            {
                if ((this.mDatalistView == null))
                {
                    this.mDatalistView = new DatalistView(this);
                }
                return this.mDatalistView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mVariableUnpinBtn;
        
        private DatalistView mDatalistView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatalistView : WpfCustom
    {
        
        public DatalistView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataListView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_DataListView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTree VariableTree
        {
            get
            {
                if ((this.mVariableTree == null))
                {
                    this.mVariableTree = new VariableTree(this);
                }
                return this.mVariableTree;
            }
        }
        
        public SearchTextbox SearchTextbox
        {
            get
            {
                if ((this.mSearchTextbox == null))
                {
                    this.mSearchTextbox = new SearchTextbox(this);
                }
                return this.mSearchTextbox;
            }
        }
        
        public WpfButton RemoveUnused
        {
            get
            {
                if ((this.mRemoveUnused == null))
                {
                    this.mRemoveUnused = new WpfButton(this);
                    #region Search Criteria
                    this.mRemoveUnused.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_AddRemovebtn_AutoID";
                    this.mRemoveUnused.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRemoveUnused;
            }
        }
        
        public WpfButton Sort
        {
            get
            {
                if ((this.mSort == null))
                {
                    this.mSort = new WpfButton(this);
                    #region Search Criteria
                    this.mSort.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Sortbtn_AutoID";
                    this.mSort.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSort;
            }
        }
        #endregion
        
        #region Fields
        private VariableTree mVariableTree;
        
        private SearchTextbox mSearchTextbox;
        
        private WpfButton mRemoveUnused;
        
        private WpfButton mSort;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTree : WpfTree
    {
        
        public VariableTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "UI_VariableTreeView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTreeItem VariableTreeItem
        {
            get
            {
                if ((this.mVariableTreeItem == null))
                {
                    this.mVariableTreeItem = new VariableTreeItem(this);
                }
                return this.mVariableTreeItem;
            }
        }
        
        public RecordsetTreeItem RecordsetTreeItem
        {
            get
            {
                if ((this.mRecordsetTreeItem == null))
                {
                    this.mRecordsetTreeItem = new RecordsetTreeItem(this);
                }
                return this.mRecordsetTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private VariableTreeItem mVariableTreeItem;
        
        private RecordsetTreeItem mRecordsetTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTreeItem : WpfTreeItem
    {
        
        public VariableTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Variable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem1 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem1(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem2 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem2(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem3 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem3(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem4 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem4(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem5 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem5(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem1 mTreeItem1;
        
        private TreeItem2 mTreeItem2;
        
        private TreeItem3 mTreeItem3;
        
        private TreeItem4 mTreeItem4;
        
        private TreeItem5 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem1 : WpfTreeItem
    {
        
        public TreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane1 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane1(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane1 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane1 : WpfPane
    {
        
        public ScrollViewerPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox : WpfEdit
    {
        
        public NameTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public DeleteButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new DeleteButton(this);
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private DeleteButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteButton : WpfButton
    {
        
        public DeleteButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteVar";
                    this.mImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem2 : WpfTreeItem
    {
        
        public TreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane2 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane2(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane2 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane2 : WpfPane
    {
        
        public ScrollViewerPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox1 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox1(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox1 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox1 : WpfEdit
    {
        
        public NameTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem3 : WpfTreeItem
    {
        
        public TreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane3 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane3(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane3 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane3 : WpfPane
    {
        
        public ScrollViewerPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox2 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox2(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox2 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox2 : WpfEdit
    {
        
        public NameTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem4 : WpfTreeItem
    {
        
        public TreeItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane4 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane4(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane4 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane4 : WpfPane
    {
        
        public ScrollViewerPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox3 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox3(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox3 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox3 : WpfEdit
    {
        
        public NameTextbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem5 : WpfTreeItem
    {
        
        public TreeItem5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane5 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane5(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane5 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane5 : WpfPane
    {
        
        public ScrollViewerPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox4 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox4(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox4 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox4 : WpfEdit
    {
        
        public NameTextbox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetTreeItem : WpfTreeItem
    {
        
        public RecordsetTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Recordset";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem11 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem11(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem21 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem21(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem31 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem31(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem41 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem41(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem51 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem51(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem11 mTreeItem1;
        
        private TreeItem21 mTreeItem2;
        
        private TreeItem31 mTreeItem3;
        
        private TreeItem41 mTreeItem4;
        
        private TreeItem51 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem11 : WpfTreeItem
    {
        
        public TreeItem11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane6 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane6(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field1 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field1(this);
                }
                return this.mField1;
            }
        }
        
        public Field2 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field2(this);
                }
                return this.mField2;
            }
        }
        
        public Field3 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field3(this);
                }
                return this.mField3;
            }
        }
        
        public Field4 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field4(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane6 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field1 mField1;
        
        private Field2 mField2;
        
        private Field3 mField3;
        
        private Field4 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane6 : WpfPane
    {
        
        public ScrollViewerPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox5 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox5(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox5 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox5 : WpfEdit
    {
        
        public NameTextbox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field1 : WpfTreeItem
    {
        
        public Field1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane7 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane7(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane7 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane7 : WpfPane
    {
        
        public ScrollViewerPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox6 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox6(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox6 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox6 : WpfEdit
    {
        
        public NameTextbox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field2 : WpfTreeItem
    {
        
        public Field2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane8 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane8(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane8 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane8 : WpfPane
    {
        
        public ScrollViewerPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox7 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox7(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox7 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox7 : WpfEdit
    {
        
        public NameTextbox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field3 : WpfTreeItem
    {
        
        public Field3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane9 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane9(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane9 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane9 : WpfPane
    {
        
        public ScrollViewerPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox8 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox8(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox8 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox8 : WpfEdit
    {
        
        public NameTextbox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field4 : WpfTreeItem
    {
        
        public Field4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane10 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane10(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane10 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane10 : WpfPane
    {
        
        public ScrollViewerPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox9 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox9(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox9 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox9 : WpfEdit
    {
        
        public NameTextbox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem21 : WpfTreeItem
    {
        
        public TreeItem21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane11 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane11(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field11 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field11(this);
                }
                return this.mField1;
            }
        }
        
        public Field21 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field21(this);
                }
                return this.mField2;
            }
        }
        
        public Field31 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field31(this);
                }
                return this.mField3;
            }
        }
        
        public Field41 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field41(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane11 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field11 mField1;
        
        private Field21 mField2;
        
        private Field31 mField3;
        
        private Field41 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane11 : WpfPane
    {
        
        public ScrollViewerPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox10 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox10(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox10 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox10 : WpfEdit
    {
        
        public NameTextbox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field11 : WpfTreeItem
    {
        
        public Field11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane12 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane12(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane12 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane12 : WpfPane
    {
        
        public ScrollViewerPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox11 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox11(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox11 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox11 : WpfEdit
    {
        
        public NameTextbox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field21 : WpfTreeItem
    {
        
        public Field21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane13 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane13(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane13 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane13 : WpfPane
    {
        
        public ScrollViewerPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox12 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox12(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox12 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox12 : WpfEdit
    {
        
        public NameTextbox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field31 : WpfTreeItem
    {
        
        public Field31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane14 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane14(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane14 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane14 : WpfPane
    {
        
        public ScrollViewerPane14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox13 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox13(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox13 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox13 : WpfEdit
    {
        
        public NameTextbox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field41 : WpfTreeItem
    {
        
        public Field41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane15 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane15(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane15 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane15 : WpfPane
    {
        
        public ScrollViewerPane15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox14 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox14(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox14 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox14 : WpfEdit
    {
        
        public NameTextbox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem31 : WpfTreeItem
    {
        
        public TreeItem31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane16 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane16(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane16 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane16 : WpfPane
    {
        
        public ScrollViewerPane16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox15 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox15(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox15 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox15 : WpfEdit
    {
        
        public NameTextbox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field : WpfTreeItem
    {
        
        public Field(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane17 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane17(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane17 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane17 : WpfPane
    {
        
        public ScrollViewerPane17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox16 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox16(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox16 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox16 : WpfEdit
    {
        
        public NameTextbox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem41 : WpfTreeItem
    {
        
        public TreeItem41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane18 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane18(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field5 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field5(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane18 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field5 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane18 : WpfPane
    {
        
        public ScrollViewerPane18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox17 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox17(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox17 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox17 : WpfEdit
    {
        
        public NameTextbox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field5 : WpfTreeItem
    {
        
        public Field5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane19 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane19(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane19 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane19 : WpfPane
    {
        
        public ScrollViewerPane19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox18 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox18(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox18 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox18 : WpfEdit
    {
        
        public NameTextbox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem51 : WpfTreeItem
    {
        
        public TreeItem51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane20 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane20(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field6 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field6(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane20 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field6 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane20 : WpfPane
    {
        
        public ScrollViewerPane20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox19 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox19(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox19 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox19 : WpfEdit
    {
        
        public NameTextbox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field6 : WpfTreeItem
    {
        
        public Field6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane21 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane21(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane21 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane21 : WpfPane
    {
        
        public ScrollViewerPane21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox20 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox20(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox20 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox20 : WpfEdit
    {
        
        public NameTextbox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextbox : WpfEdit
    {
        
        public SearchTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfImage ClearSearchDisabled
        {
            get
            {
                if ((this.mClearSearchDisabled == null))
                {
                    this.mClearSearchDisabled = new WpfImage(this);
                    #region Search Criteria
                    this.mClearSearchDisabled.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ClearSearchDisabled";
                    this.mClearSearchDisabled.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchDisabled;
            }
        }
        
        public WpfButton ClearSearchButton
        {
            get
            {
                if ((this.mClearSearchButton == null))
                {
                    this.mClearSearchButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearSearchButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearSearchButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mFilterText;
        
        private WpfImage mClearSearchDisabled;
        
        private WpfButton mClearSearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutput : WpfCustom
    {
        
        public DebugOutput(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DebugOutputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DebugOutput";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DebugOutputUnpinBtn
        {
            get
            {
                if ((this.mDebugOutputUnpinBtn == null))
                {
                    this.mDebugOutputUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mDebugOutputUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mDebugOutputUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDebugOutputUnpinBtn;
            }
        }
        
        public WpfEdit SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mSearchTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton SettingsButton
        {
            get
            {
                if ((this.mSettingsButton == null))
                {
                    this.mSettingsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSettingsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputOptionsButton_AutoID";
                    this.mSettingsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSettingsButton;
            }
        }
        
        public WpfButton ExpandCollapseButton
        {
            get
            {
                if ((this.mExpandCollapseButton == null))
                {
                    this.mExpandCollapseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpandCollapseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputExpandAllMode_AutoID";
                    this.mExpandCollapseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandCollapseButton;
            }
        }
        
        public DebugOutputTree DebugOutputTree
        {
            get
            {
                if ((this.mDebugOutputTree == null))
                {
                    this.mDebugOutputTree = new DebugOutputTree(this);
                }
                return this.mDebugOutputTree;
            }
        }
        
        public StatusBar StatusBar
        {
            get
            {
                if ((this.mStatusBar == null))
                {
                    this.mStatusBar = new StatusBar(this);
                }
                return this.mStatusBar;
            }
        }
        
        public CommentTreeItem CommentTreeItem
        {
            get
            {
                if ((this.mCommentTreeItem == null))
                {
                    this.mCommentTreeItem = new CommentTreeItem(this);
                }
                return this.mCommentTreeItem;
            }
        }
        
        public WpfButton CreateTestFromDebugButton
        {
            get
            {
                if ((this.mCreateTestFromDebugButton == null))
                {
                    this.mCreateTestFromDebugButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCreateTestFromDebugButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputAddNewTestMode_AutoID";
                    this.mCreateTestFromDebugButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateTestFromDebugButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDebugOutputUnpinBtn;
        
        private WpfEdit mSearchTextBox;
        
        private WpfButton mSettingsButton;
        
        private WpfButton mExpandCollapseButton;
        
        private DebugOutputTree mDebugOutputTree;
        
        private StatusBar mStatusBar;
        
        private CommentTreeItem mCommentTreeItem;
        
        private WpfButton mCreateTestFromDebugButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutputTree : WpfTree
    {
        
        public DebugOutputTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "DebugOutputTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Step1 Step1
        {
            get
            {
                if ((this.mStep1 == null))
                {
                    this.mStep1 = new Step1(this);
                }
                return this.mStep1;
            }
        }
        
        public SubWorkflow SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new SubWorkflow(this);
                }
                return this.mSubWorkflow;
            }
        }
        
        public ServiceTreeItem ServiceTreeItem
        {
            get
            {
                if ((this.mServiceTreeItem == null))
                {
                    this.mServiceTreeItem = new ServiceTreeItem(this);
                }
                return this.mServiceTreeItem;
            }
        }
        
        public WpfTreeItem AssignOnDebugOutput
        {
            get
            {
                if ((this.mAssignOnDebugOutput == null))
                {
                    this.mAssignOnDebugOutput = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mAssignOnDebugOutput.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
                    this.mAssignOnDebugOutput.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mAssignOnDebugOutput;
            }
        }
        
        public WpfTreeItem DecisionOnDebugOutput
        {
            get
            {
                if ((this.mDecisionOnDebugOutput == null))
                {
                    this.mDecisionOnDebugOutput = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mDecisionOnDebugOutput.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
                    this.mDecisionOnDebugOutput.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mDecisionOnDebugOutput.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mDecisionOnDebugOutput;
            }
        }
        #endregion
        
        #region Fields
        private Step1 mStep1;
        
        private SubWorkflow mSubWorkflow;
        
        private ServiceTreeItem mServiceTreeItem;
        
        private WpfTreeItem mAssignOnDebugOutput;
        
        private WpfTreeItem mDecisionOnDebugOutput;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Step1 : WpfTreeItem
    {
        
        public Step1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText VariableTextbox1
        {
            get
            {
                if ((this.mVariableTextbox1 == null))
                {
                    this.mVariableTextbox1 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox1.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox1.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mVariableTextbox1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox1;
            }
        }
        
        public WpfText VariableTextbox2
        {
            get
            {
                if ((this.mVariableTextbox2 == null))
                {
                    this.mVariableTextbox2 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mVariableTextbox2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox2;
            }
        }
        
        public WpfButton Assign1Button
        {
            get
            {
                if ((this.mAssign1Button == null))
                {
                    this.mAssign1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mAssign1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Assign (1)";
                    this.mAssign1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssign1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssign1Button;
            }
        }
        
        public WpfButton BaseConversion1Button
        {
            get
            {
                if ((this.mBaseConversion1Button == null))
                {
                    this.mBaseConversion1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mBaseConversion1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Base Conversion (1)";
                    this.mBaseConversion1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBaseConversion1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBaseConversion1Button;
            }
        }
        
        public WpfButton CalculateButton
        {
            get
            {
                if ((this.mCalculateButton == null))
                {
                    this.mCalculateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCalculateButton.SearchProperties[WpfButton.PropertyNames.Name] = "Calculate";
                    this.mCalculateButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCalculateButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCalculateButton;
            }
        }
        
        public RecordsetGroup RecordsetGroup
        {
            get
            {
                if ((this.mRecordsetGroup == null))
                {
                    this.mRecordsetGroup = new RecordsetGroup(this);
                }
                return this.mRecordsetGroup;
            }
        }
        
        public WpfText ValueTextbox1
        {
            get
            {
                if ((this.mValueTextbox1 == null))
                {
                    this.mValueTextbox1 = new WpfText(this);
                    #region Search Criteria
                    this.mValueTextbox1.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mValueTextbox1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValueTextbox1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mVariableTextbox1;
        
        private WpfText mVariableTextbox2;
        
        private WpfButton mAssign1Button;
        
        private WpfButton mBaseConversion1Button;
        
        private WpfButton mCalculateButton;
        
        private RecordsetGroup mRecordsetGroup;
        
        private WpfText mValueTextbox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetGroup : WpfExpander
    {
        
        public RecordsetGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_DefaultRecordSetIOTemplate_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText RecordsetName
        {
            get
            {
                if ((this.mRecordsetName == null))
                {
                    this.mRecordsetName = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetName.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mRecordsetName.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetName.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetName;
            }
        }
        
        public WpfText RecordsetValue
        {
            get
            {
                if ((this.mRecordsetValue == null))
                {
                    this.mRecordsetValue = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetValue.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mRecordsetValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mRecordsetName;
        
        private WpfText mRecordsetValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubWorkflow : WpfTreeItem
    {
        
        public SubWorkflow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIHelloWorldTreeItem1 UIHelloWorldTreeItem1
        {
            get
            {
                if ((this.mUIHelloWorldTreeItem1 == null))
                {
                    this.mUIHelloWorldTreeItem1 = new UIHelloWorldTreeItem1(this);
                }
                return this.mUIHelloWorldTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIHelloWorldTreeItem1 mUIHelloWorldTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHelloWorldTreeItem1 : WpfTreeItem
    {
        
        public UIHelloWorldTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Start";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton UIHelloWorldButton
        {
            get
            {
                if ((this.mUIHelloWorldButton == null))
                {
                    this.mUIHelloWorldButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHelloWorldButton.SearchProperties[WpfButton.PropertyNames.Name] = "Hello World";
                    this.mUIHelloWorldButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIHelloWorldButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIHelloWorldButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIHelloWorldButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceTreeItem : WpfTreeItem
    {
        
        public ServiceTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton GenericResourceButton
        {
            get
            {
                if ((this.mGenericResourceButton == null))
                {
                    this.mGenericResourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenericResourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "GenericResource";
                    this.mGenericResourceButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mGenericResourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenericResourceButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mGenericResourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusBar : WpfEdit
    {
        
        public StatusBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Dev2StatusBarAutomationID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentTreeItem : WpfTreeItem
    {
        
        public CommentTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CommentButton
        {
            get
            {
                if ((this.mCommentButton == null))
                {
                    this.mCommentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCommentButton.SearchProperties[WpfButton.PropertyNames.Name] = "Comment";
                    this.mCommentButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCommentButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCommentButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCommentButton;
        #endregion
    }
}
