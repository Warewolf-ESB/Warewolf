// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.WorkflowTab.WorkflowTabUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class WorkflowTabUIMap
    {
        
        /// <summary>
        /// Open_Tools_UI_Map_Designer_To_Flowchart - Use 'Open_Tools_UI_Map_Designer_To_FlowchartParams' to pass parameters into this method.
        /// </summary>
        public void Open_Tools_UI_Map_Designer_To_Flowchart()
        {
            #region Variable Declarations
            WpfCustom flowchart = this.MainStudioWindow.DockManager.SplitPaneMiddle.TabManSplitPane.TabMan.WorkflowTab.WorkSurfaceContext.WorkflowDesignerView.DesignerView.ScrollViewerPane.ActivityTypeDesigner.WorkflowItemPresenter.Flowchart;
            #endregion

            // Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
            Assert.AreEqual(this.Open_Tools_UI_Map_Designer_To_FlowchartParams.FlowchartExists, flowchart.Exists, "Flowchart does not exist.");
        }
        
        #region Properties
        public virtual Open_Tools_UI_Map_Designer_To_FlowchartParams Open_Tools_UI_Map_Designer_To_FlowchartParams
        {
            get
            {
                if ((this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams == null))
                {
                    this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams = new Open_Tools_UI_Map_Designer_To_FlowchartParams();
                }
                return this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
            }
        }
        
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_Tools_UI_Map_Designer_To_FlowchartParams mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
        
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_Tools_UI_Map_Designer_To_Flowchart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_Tools_UI_Map_Designer_To_FlowchartParams
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
        /// </summary>
        public bool FlowchartExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        
        public TabManSplitPane1 TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane1(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        
        private TabManSplitPane1 mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneMiddle mSplitPaneMiddle;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowTab WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab(this);
                }
                return this.mWorkflowTab;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowTab mWorkflowTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab : WpfTabPage
    {
        
        public WorkflowTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CloseButton
        {
            get
            {
                if ((this.mCloseButton == null))
                {
                    this.mCloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "closeBtn";
                    this.mCloseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCloseButton;
            }
        }
        
        public WorkSurfaceContext WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        
        public WpfText Workflow1ciremoteText
        {
            get
            {
                if ((this.mWorkflow1ciremoteText == null))
                {
                    this.mWorkflow1ciremoteText = new WpfText(this);
                    #region Search Criteria
                    this.mWorkflow1ciremoteText.SearchProperties[WpfText.PropertyNames.Name] = "GenericResource";
                    this.mWorkflow1ciremoteText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mWorkflow1ciremoteText;
            }
        }
        
        public ContentPane ContentPane
        {
            get
            {
                if ((this.mContentPane == null))
                {
                    this.mContentPane = new ContentPane(this);
                }
                return this.mContentPane;
            }
        }
        
        public WpfText TabDescription
        {
            get
            {
                if ((this.mTabDescription == null))
                {
                    this.mTabDescription = new WpfText(this);
                    #region Search Criteria
                    this.mTabDescription.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTabDescription;
            }
        }
        
        public WpfText UIUnsaved1Text
        {
            get
            {
                if ((this.mUIUnsaved1Text == null))
                {
                    this.mUIUnsaved1Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved1Text.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 1";
                    this.mUIUnsaved1Text.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIUnsaved1Text;
            }
        }
        
        public WpfText UIUnsaved2Text
        {
            get
            {
                if ((this.mUIUnsaved2Text == null))
                {
                    this.mUIUnsaved2Text = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved2Text.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 2";
                    this.mUIUnsaved2Text.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIUnsaved2Text;
            }
        }
        
        public WpfText UIUnsaved1TextWithAsterisk
        {
            get
            {
                if ((this.mUIUnsaved1TextWithAsterisk == null))
                {
                    this.mUIUnsaved1TextWithAsterisk = new WpfText(this);
                    #region Search Criteria
                    this.mUIUnsaved1TextWithAsterisk.SearchProperties[WpfText.PropertyNames.Name] = "Unsaved 1 *";
                    this.mUIUnsaved1TextWithAsterisk.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIUnsaved1TextWithAsterisk;
            }
        }
        
        public WpfText UIHelloWorldText
        {
            get
            {
                if ((this.mUIHelloWorldText == null))
                {
                    this.mUIHelloWorldText = new WpfText(this);
                    #region Search Criteria
                    this.mUIHelloWorldText.SearchProperties[WpfText.PropertyNames.Name] = "Hello World";
                    this.mUIHelloWorldText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIHelloWorldText;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCloseButton;
        
        private WorkSurfaceContext mWorkSurfaceContext;
        
        private WpfText mWorkflow1ciremoteText;
        
        private ContentPane mContentPane;
        
        private WpfText mTabDescription;
        
        private WpfText mUIUnsaved1Text;
        
        private WpfText mUIUnsaved2Text;
        
        private WpfText mUIUnsaved1TextWithAsterisk;
        
        private WpfText mUIHelloWorldText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext : WpfCustom
    {
        
        public WorkSurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        
        public TopScrollViewerPane TopScrollViewerPane
        {
            get
            {
                if ((this.mTopScrollViewerPane == null))
                {
                    this.mTopScrollViewerPane = new TopScrollViewerPane(this);
                }
                return this.mTopScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView mWorkflowDesignerView;
        
        private TopScrollViewerPane mTopScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView : WpfCustom
    {
        
        public WorkflowDesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView : WpfCustom
    {
        
        public DesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfToggleButton ExpandAllToggleButton
        {
            get
            {
                if ((this.mExpandAllToggleButton == null))
                {
                    this.mExpandAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mExpandAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "expandAllButton";
                    this.mExpandAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandAllToggleButton;
            }
        }
        
        public WpfToggleButton CollapseAllToggleButton
        {
            get
            {
                if ((this.mCollapseAllToggleButton == null))
                {
                    this.mCollapseAllToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mCollapseAllToggleButton.SearchProperties[WpfToggleButton.PropertyNames.AutomationId] = "collapseAllButton";
                    this.mCollapseAllToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCollapseAllToggleButton;
            }
        }
        
        public BreadcrumbbarList BreadcrumbbarList
        {
            get
            {
                if ((this.mBreadcrumbbarList == null))
                {
                    this.mBreadcrumbbarList = new BreadcrumbbarList(this);
                }
                return this.mBreadcrumbbarList;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane mScrollViewerPane;
        
        private WpfToggleButton mExpandAllToggleButton;
        
        private WpfToggleButton mCollapseAllToggleButton;
        
        private BreadcrumbbarList mBreadcrumbbarList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane : WpfPane
    {
        
        public ScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner : WpfCustom
    {
        
        public ActivityTypeDesigner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter : WpfCustom
    {
        
        public WorkflowItemPresenter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart : WpfCustom
    {
        
        public Flowchart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom StackoverflowWorkflow
        {
            get
            {
                if ((this.mStackoverflowWorkflow == null))
                {
                    this.mStackoverflowWorkflow = new WpfCustom(this);
                    #region Search Criteria
                    this.mStackoverflowWorkflow.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MultiAssignObjectDesigner";
                    this.mStackoverflowWorkflow.SearchProperties[WpfControl.PropertyNames.AutomationId] = "stackoverflowTestWorkflow(ServiceDesigner)";
                    this.mStackoverflowWorkflow.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mStackoverflowWorkflow;
            }
        }
        
        public WpfCustom SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new WpfCustom(this);
                    #region Search Criteria
                    this.mSubWorkflow.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mSubWorkflow.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "GenericResource(ServiceDesigner)", PropertyExpressionOperator.Contains));
                    this.mSubWorkflow.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSubWorkflow;
            }
        }
        
        public CreateJson CreateJson
        {
            get
            {
                if ((this.mCreateJson == null))
                {
                    this.mCreateJson = new CreateJson(this);
                }
                return this.mCreateJson;
            }
        }
        
        public WpfCustom StartNode
        {
            get
            {
                if ((this.mStartNode == null))
                {
                    this.mStartNode = new WpfCustom(this);
                    #region Search Criteria
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.StartSymbol";
                    this.mStartNode.SearchProperties[WpfControl.PropertyNames.AutomationId] = "StartSymbol";
                    this.mStartNode.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mStartNode;
            }
        }
        
        public WpfCustom Connector1
        {
            get
            {
                if ((this.mConnector1 == null))
                {
                    this.mConnector1 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector1.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
                    this.mConnector1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector1;
            }
        }
        
        public WpfCustom Connector2
        {
            get
            {
                if ((this.mConnector2 == null))
                {
                    this.mConnector2 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector2.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector2.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
                    this.mConnector2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector2;
            }
        }
        
        public WpfCustom Connector3
        {
            get
            {
                if ((this.mConnector3 == null))
                {
                    this.mConnector3 = new WpfCustom(this);
                    #region Search Criteria
                    this.mConnector3.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ConnectorWithoutStartDot";
                    this.mConnector3.SearchProperties[WpfControl.PropertyNames.Instance] = "3";
                    this.mConnector3.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConnector3;
            }
        }
        
        public Error1 Error1
        {
            get
            {
                if ((this.mError1 == null))
                {
                    this.mError1 = new Error1(this);
                }
                return this.mError1;
            }
        }
        
        public ExternalWorkFlow ExternalWorkFlow
        {
            get
            {
                if ((this.mExternalWorkFlow == null))
                {
                    this.mExternalWorkFlow = new ExternalWorkFlow(this);
                }
                return this.mExternalWorkFlow;
            }
        }
        
        public HelloWorldWorkFlow HelloWorldWorkFlow
        {
            get
            {
                if ((this.mHelloWorldWorkFlow == null))
                {
                    this.mHelloWorldWorkFlow = new HelloWorldWorkFlow(this);
                }
                return this.mHelloWorldWorkFlow;
            }
        }
        
        public WpfText Errors
        {
            get
            {
                if ((this.mErrors == null))
                {
                    this.mErrors = new WpfText(this);
                    #region Search Criteria
                    this.mErrors.SearchProperties[WpfText.PropertyNames.Name] = "Errors";
                    this.mErrors.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mErrors;
            }
        }
        
        public PrefixcontainsinvaliText PrefixcontainsinvaliText
        {
            get
            {
                if ((this.mPrefixcontainsinvaliText == null))
                {
                    this.mPrefixcontainsinvaliText = new PrefixcontainsinvaliText(this);
                }
                return this.mPrefixcontainsinvaliText;
            }
        }
        
        public DsfWebDeleteOutputsLargeView DsfWebDeleteOutputsLargeView
        {
            get
            {
                if ((this.mDsfWebDeleteOutputsLargeView == null))
                {
                    this.mDsfWebDeleteOutputsLargeView = new DsfWebDeleteOutputsLargeView(this);
                }
                return this.mDsfWebDeleteOutputsLargeView;
            }
        }
        
        public Adornert_numbernText Adornert_numbernText
        {
            get
            {
                if ((this.mAdornert_numbernText == null))
                {
                    this.mAdornert_numbernText = new Adornert_numbernText(this);
                }
                return this.mAdornert_numbernText;
            }
        }
        
        public WpfCustom stackOverflowTestWF
        {
            get
            {
                if ((this.mstackOverflowTestWF == null))
                {
                    this.mstackOverflowTestWF = new WpfCustom(this);
                    #region Search Criteria
                    this.mstackOverflowTestWF.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mstackOverflowTestWF.SearchProperties[WpfControl.PropertyNames.AutomationId] = "stackoverflowTestWorkflow(ServiceDesigner)";
                    this.mstackOverflowTestWF.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mstackOverflowTestWF;
            }
        }
        
        public WpfCustom HelloWordFlowChartName
        {
            get
            {
                if ((this.mHelloWordFlowChartName == null))
                {
                    this.mHelloWordFlowChartName = new WpfCustom(this);
                    #region Search Criteria
                    this.mHelloWordFlowChartName.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UserControl";
                    this.mHelloWordFlowChartName.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DisplayNameReadOnlyControl";
                    this.mHelloWordFlowChartName.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mHelloWordFlowChartName;
            }
        }
        
        public KeepNewNameFlowChartName KeepNewNameFlowChartName
        {
            get
            {
                if ((this.mKeepNewNameFlowChartName == null))
                {
                    this.mKeepNewNameFlowChartName = new KeepNewNameFlowChartName(this);
                }
                return this.mKeepNewNameFlowChartName;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mStackoverflowWorkflow;
        
        private WpfCustom mSubWorkflow;
        
        private CreateJson mCreateJson;
        
        private WpfCustom mStartNode;
        
        private WpfCustom mConnector1;
        
        private WpfCustom mConnector2;
        
        private WpfCustom mConnector3;
        
        private Error1 mError1;
        
        private ExternalWorkFlow mExternalWorkFlow;
        
        private HelloWorldWorkFlow mHelloWorldWorkFlow;
        
        private WpfText mErrors;
        
        private PrefixcontainsinvaliText mPrefixcontainsinvaliText;
        
        private DsfWebDeleteOutputsLargeView mDsfWebDeleteOutputsLargeView;
        
        private Adornert_numbernText mAdornert_numbernText;
        
        private WpfCustom mstackOverflowTestWF;
        
        private WpfCustom mHelloWordFlowChartName;
        
        private KeepNewNameFlowChartName mKeepNewNameFlowChartName;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CreateJson : WpfCustom
    {
        
        public CreateJson(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CreateJsonDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "CreateJsonDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton OpenQuickVariableInpToggleButton
        {
            get
            {
                if ((this.mOpenQuickVariableInpToggleButton == null))
                {
                    this.mOpenQuickVariableInpToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mOpenQuickVariableInpToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mOpenQuickVariableInpToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOpenQuickVariableInpToggleButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mOpenQuickVariableInpToggleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Error1 : WpfText
    {
        
        public Error1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExternalWorkFlow : WpfCustom
    {
        
        public ExternalWorkFlow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "(ServiceDesigner)", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HelloWorldWorkFlow : WpfCustom
    {
        
        public HelloWorldWorkFlow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "(ServiceDesigner)", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServiceDesignerLargeView ServiceDesignerLargeView
        {
            get
            {
                if ((this.mServiceDesignerLargeView == null))
                {
                    this.mServiceDesignerLargeView = new ServiceDesignerLargeView(this);
                }
                return this.mServiceDesignerLargeView;
            }
        }
        #endregion
        
        #region Fields
        private ServiceDesignerLargeView mServiceDesignerLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceDesignerLargeView : WpfCustom
    {
        
        public ServiceDesignerLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsDataGridTable InputsDataGridTable
        {
            get
            {
                if ((this.mInputsDataGridTable == null))
                {
                    this.mInputsDataGridTable = new InputsDataGridTable(this);
                }
                return this.mInputsDataGridTable;
            }
        }
        
        public OutputsDataGridTable OutputsDataGridTable
        {
            get
            {
                if ((this.mOutputsDataGridTable == null))
                {
                    this.mOutputsDataGridTable = new OutputsDataGridTable(this);
                }
                return this.mOutputsDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private InputsDataGridTable mInputsDataGridTable;
        
        private OutputsDataGridTable mOutputsDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsDataGridTable : WpfTable
    {
        
        public InputsDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "InputsDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsGridRowOne InputsGridRowOne
        {
            get
            {
                if ((this.mInputsGridRowOne == null))
                {
                    this.mInputsGridRowOne = new InputsGridRowOne(this);
                }
                return this.mInputsGridRowOne;
            }
        }
        #endregion
        
        #region Fields
        private InputsGridRowOne mInputsGridRowOne;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsGridRowOne : WpfRow
    {
        
        public InputsGridRowOne(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsGridRowOneCell InputsGridRowOneCell
        {
            get
            {
                if ((this.mInputsGridRowOneCell == null))
                {
                    this.mInputsGridRowOneCell = new InputsGridRowOneCell(this);
                }
                return this.mInputsGridRowOneCell;
            }
        }
        #endregion
        
        #region Fields
        private InputsGridRowOneCell mInputsGridRowOneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsGridRowOneCell : WpfCell
    {
        
        public InputsGridRowOneCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_CellColumn0";
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsAutoCompleteTextBox InputsAutoCompleteTextBox
        {
            get
            {
                if ((this.mInputsAutoCompleteTextBox == null))
                {
                    this.mInputsAutoCompleteTextBox = new InputsAutoCompleteTextBox(this);
                }
                return this.mInputsAutoCompleteTextBox;
            }
        }
        #endregion
        
        #region Fields
        private InputsAutoCompleteTextBox mInputsAutoCompleteTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsAutoCompleteTextBox : WpfComboBox
    {
        
        public InputsAutoCompleteTextBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfEdit InputsAutoCompleteTextBoxText
        {
            get
            {
                if ((this.mInputsAutoCompleteTextBoxText == null))
                {
                    this.mInputsAutoCompleteTextBoxText = new WpfEdit(this);
                    #region Search Criteria
                    this.mInputsAutoCompleteTextBoxText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mInputsAutoCompleteTextBoxText.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mInputsAutoCompleteTextBoxText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mInputsAutoCompleteTextBoxText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsDataGridTable : WpfTable
    {
        
        public OutputsDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsGridRowOne OutputsGridRowOne
        {
            get
            {
                if ((this.mOutputsGridRowOne == null))
                {
                    this.mOutputsGridRowOne = new OutputsGridRowOne(this);
                }
                return this.mOutputsGridRowOne;
            }
        }
        #endregion
        
        #region Fields
        private OutputsGridRowOne mOutputsGridRowOne;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsGridRowOne : WpfRow
    {
        
        public OutputsGridRowOne(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsGridRowOneCell OutputsGridRowOneCell
        {
            get
            {
                if ((this.mOutputsGridRowOneCell == null))
                {
                    this.mOutputsGridRowOneCell = new OutputsGridRowOneCell(this);
                }
                return this.mOutputsGridRowOneCell;
            }
        }
        #endregion
        
        #region Fields
        private OutputsGridRowOneCell mOutputsGridRowOneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsGridRowOneCell : WpfCell
    {
        
        public OutputsGridRowOneCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_CellColumn1";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsAutoCompleteTextBox OutputsAutoCompleteTextBox
        {
            get
            {
                if ((this.mOutputsAutoCompleteTextBox == null))
                {
                    this.mOutputsAutoCompleteTextBox = new OutputsAutoCompleteTextBox(this);
                }
                return this.mOutputsAutoCompleteTextBox;
            }
        }
        #endregion
        
        #region Fields
        private OutputsAutoCompleteTextBox mOutputsAutoCompleteTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsAutoCompleteTextBox : WpfComboBox
    {
        
        public OutputsAutoCompleteTextBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfEdit OutputsAutoCompleteTextBoxText
        {
            get
            {
                if ((this.mOutputsAutoCompleteTextBoxText == null))
                {
                    this.mOutputsAutoCompleteTextBoxText = new WpfEdit(this);
                    #region Search Criteria
                    this.mOutputsAutoCompleteTextBoxText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mOutputsAutoCompleteTextBoxText.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mOutputsAutoCompleteTextBoxText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mOutputsAutoCompleteTextBoxText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PrefixcontainsinvaliText : WpfText
    {
        
        public PrefixcontainsinvaliText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink PrefixcontainsinvaliHyperlink
        {
            get
            {
                if ((this.mPrefixcontainsinvaliHyperlink == null))
                {
                    this.mPrefixcontainsinvaliHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mPrefixcontainsinvaliHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "Prefix contains invalid characters";
                    this.mPrefixcontainsinvaliHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPrefixcontainsinvaliHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mPrefixcontainsinvaliHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DsfWebDeleteOutputsLargeView : WpfCustom
    {
        
        public DsfWebDeleteOutputsLargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WebServiceDeleteDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DELETE Web Method - Outputs(WebServiceDeleteDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton TestButton
        {
            get
            {
                if ((this.mTestButton == null))
                {
                    this.mTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Test the procedure or function";
                    this.mTestButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestButton;
            }
        }
        
        public WpfButton PasteButton
        {
            get
            {
                if ((this.mPasteButton == null))
                {
                    this.mPasteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Paste a customized response instead";
                    this.mPasteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PasteButton";
                    this.mPasteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPasteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mTestButton;
        
        private WpfButton mPasteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Adornert_numbernText : WpfText
    {
        
        public Adornert_numbernText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_Error0_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink NumbernHyperlink
        {
            get
            {
                if ((this.mNumbernHyperlink == null))
                {
                    this.mNumbernHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNumbernHyperlink.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mNumbernHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mNumbernHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class KeepNewNameFlowChartName : WpfCustom
    {
        
        public KeepNewNameFlowChartName(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UserControl";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DisplayNameReadOnlyControl";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfText DisplayValue
        {
            get
            {
                if ((this.mDisplayValue == null))
                {
                    this.mDisplayValue = new WpfText(this);
                    #region Search Criteria
                    this.mDisplayValue.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mDisplayValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDisplayValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mDisplayValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BreadcrumbbarList : WpfList
    {
        
        public BreadcrumbbarList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "breadCrumbListBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem HelloWorld2ListItem
        {
            get
            {
                if ((this.mHelloWorld2ListItem == null))
                {
                    this.mHelloWorld2ListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mHelloWorld2ListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "HelloWorld2";
                    this.mHelloWorld2ListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mHelloWorld2ListItem;
            }
        }
        
        public WpfListItem KeepNewNameRenamedListItem
        {
            get
            {
                if ((this.mKeepNewNameRenamedListItem == null))
                {
                    this.mKeepNewNameRenamedListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mKeepNewNameRenamedListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "KeepNewNameRenamed";
                    this.mKeepNewNameRenamedListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mKeepNewNameRenamedListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mHelloWorld2ListItem;
        
        private WpfListItem mKeepNewNameRenamedListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TopScrollViewerPane : WpfPane
    {
        
        public TopScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "ScrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UnsavedWorkflowLinkText UnsavedWorkflowLinkText
        {
            get
            {
                if ((this.mUnsavedWorkflowLinkText == null))
                {
                    this.mUnsavedWorkflowLinkText = new UnsavedWorkflowLinkText(this);
                }
                return this.mUnsavedWorkflowLinkText;
            }
        }
        
        public HttpLocalHostText HttpLocalHostText
        {
            get
            {
                if ((this.mHttpLocalHostText == null))
                {
                    this.mHttpLocalHostText = new HttpLocalHostText(this);
                }
                return this.mHttpLocalHostText;
            }
        }
        
        public UrlWithRenamedFolder UrlWithRenamedFolder
        {
            get
            {
                if ((this.mUrlWithRenamedFolder == null))
                {
                    this.mUrlWithRenamedFolder = new UrlWithRenamedFolder(this);
                }
                return this.mUrlWithRenamedFolder;
            }
        }
        
        public UnitTestsUrlWorkflowUrlText UnitTestsUrlWorkflowUrlText
        {
            get
            {
                if ((this.mUnitTestsUrlWorkflowUrlText == null))
                {
                    this.mUnitTestsUrlWorkflowUrlText = new UnitTestsUrlWorkflowUrlText(this);
                }
                return this.mUnitTestsUrlWorkflowUrlText;
            }
        }
        #endregion
        
        #region Fields
        private UnsavedWorkflowLinkText mUnsavedWorkflowLinkText;
        
        private HttpLocalHostText mHttpLocalHostText;
        
        private UrlWithRenamedFolder mUrlWithRenamedFolder;
        
        private UnitTestsUrlWorkflowUrlText mUnitTestsUrlWorkflowUrlText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnsavedWorkflowLinkText : WpfText
    {
        
        public UnsavedWorkflowLinkText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "Unassigned/Unsaved", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink Hyperlink
        {
            get
            {
                if ((this.mHyperlink == null))
                {
                    this.mHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HttpLocalHostText : WpfText
    {
        
        public HttpLocalHostText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink NewWorkflowHyperLink
        {
            get
            {
                if ((this.mNewWorkflowHyperLink == null))
                {
                    this.mNewWorkflowHyperLink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mNewWorkflowHyperLink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewWorkflowHyperLink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mNewWorkflowHyperLink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UrlWithRenamedFolder : WpfText
    {
        
        public UrlWithRenamedFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "3142/secure/Acceptance Tests_Renamed/LoopTest.json?<DataList></DataList>", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UrlWithRenamedFolderHyperlink
        {
            get
            {
                if ((this.mUrlWithRenamedFolderHyperlink == null))
                {
                    this.mUrlWithRenamedFolderHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUrlWithRenamedFolderHyperlink.SearchProperties[WpfHyperlink.PropertyNames.Name] = "http://rsaklfsanele:3142/secure/Acceptance Tests_Renamed/LoopTest.json?<DataList>" +
                        "</DataList>";
                    this.mUrlWithRenamedFolderHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUrlWithRenamedFolderHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUrlWithRenamedFolderHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnitTestsUrlWorkflowUrlText : WpfText
    {
        
        public UnitTestsUrlWorkflowUrlText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfText.PropertyNames.Name, "http://rsaklfsanele:3142/secure/Unit Tests/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfHyperlink UnitTestsUrlWorkflowUrlHyperlink
        {
            get
            {
                if ((this.mUnitTestsUrlWorkflowUrlHyperlink == null))
                {
                    this.mUnitTestsUrlWorkflowUrlHyperlink = new WpfHyperlink(this);
                    #region Search Criteria
                    this.mUnitTestsUrlWorkflowUrlHyperlink.SearchProperties.Add(new PropertyExpression(WpfHyperlink.PropertyNames.Name, "http://rsaklfsanele:3142/secure/Unit Tests/", PropertyExpressionOperator.Contains));
                    this.mUnitTestsUrlWorkflowUrlHyperlink.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUnitTestsUrlWorkflowUrlHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WpfHyperlink mUnitTestsUrlWorkflowUrlHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentPane : WpfCustom
    {
        
        public ContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ContentDockManager ContentDockManager
        {
            get
            {
                if ((this.mContentDockManager == null))
                {
                    this.mContentDockManager = new ContentDockManager(this);
                }
                return this.mContentDockManager;
            }
        }
        #endregion
        
        #region Fields
        private ContentDockManager mContentDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentDockManager : WpfCustom
    {
        
        public ContentDockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ContentDockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneRight SplitPaneRight
        {
            get
            {
                if ((this.mSplitPaneRight == null))
                {
                    this.mSplitPaneRight = new SplitPaneRight(this);
                }
                return this.mSplitPaneRight;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneRight mSplitPaneRight;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneRight : WpfCustom
    {
        
        public SplitPaneRight(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Variables Variables
        {
            get
            {
                if ((this.mVariables == null))
                {
                    this.mVariables = new Variables(this);
                }
                return this.mVariables;
            }
        }
        
        public DebugOutput DebugOutput
        {
            get
            {
                if ((this.mDebugOutput == null))
                {
                    this.mDebugOutput = new DebugOutput(this);
                }
                return this.mDebugOutput;
            }
        }
        #endregion
        
        #region Fields
        private Variables mVariables;
        
        private DebugOutput mDebugOutput;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Variables : WpfCustom
    {
        
        public Variables(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Variables";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton VariableUnpinBtn
        {
            get
            {
                if ((this.mVariableUnpinBtn == null))
                {
                    this.mVariableUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mVariableUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mVariableUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableUnpinBtn;
            }
        }
        
        public DatalistView DatalistView
        {
            get
            {
                if ((this.mDatalistView == null))
                {
                    this.mDatalistView = new DatalistView(this);
                }
                return this.mDatalistView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mVariableUnpinBtn;
        
        private DatalistView mDatalistView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatalistView : WpfCustom
    {
        
        public DatalistView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DataListView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_DataListView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTree VariableTree
        {
            get
            {
                if ((this.mVariableTree == null))
                {
                    this.mVariableTree = new VariableTree(this);
                }
                return this.mVariableTree;
            }
        }
        
        public SearchTextbox SearchTextbox
        {
            get
            {
                if ((this.mSearchTextbox == null))
                {
                    this.mSearchTextbox = new SearchTextbox(this);
                }
                return this.mSearchTextbox;
            }
        }
        
        public WpfButton RemoveUnused
        {
            get
            {
                if ((this.mRemoveUnused == null))
                {
                    this.mRemoveUnused = new WpfButton(this);
                    #region Search Criteria
                    this.mRemoveUnused.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_AddRemovebtn_AutoID";
                    this.mRemoveUnused.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRemoveUnused;
            }
        }
        
        public WpfButton Sort
        {
            get
            {
                if ((this.mSort == null))
                {
                    this.mSort = new WpfButton(this);
                    #region Search Criteria
                    this.mSort.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_Sortbtn_AutoID";
                    this.mSort.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSort;
            }
        }
        #endregion
        
        #region Fields
        private VariableTree mVariableTree;
        
        private SearchTextbox mSearchTextbox;
        
        private WpfButton mRemoveUnused;
        
        private WpfButton mSort;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTree : WpfTree
    {
        
        public VariableTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "UI_VariableTreeView_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public VariableTreeItem VariableTreeItem
        {
            get
            {
                if ((this.mVariableTreeItem == null))
                {
                    this.mVariableTreeItem = new VariableTreeItem(this);
                }
                return this.mVariableTreeItem;
            }
        }
        
        public RecordsetTreeItem RecordsetTreeItem
        {
            get
            {
                if ((this.mRecordsetTreeItem == null))
                {
                    this.mRecordsetTreeItem = new RecordsetTreeItem(this);
                }
                return this.mRecordsetTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private VariableTreeItem mVariableTreeItem;
        
        private RecordsetTreeItem mRecordsetTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VariableTreeItem : WpfTreeItem
    {
        
        public VariableTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Variable";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem1 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem1(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem2 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem2(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem3 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem3(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem4 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem4(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem5 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem5(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem1 mTreeItem1;
        
        private TreeItem2 mTreeItem2;
        
        private TreeItem3 mTreeItem3;
        
        private TreeItem4 mTreeItem4;
        
        private TreeItem5 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem1 : WpfTreeItem
    {
        
        public TreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane1 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane1(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane1 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane1 : WpfPane
    {
        
        public ScrollViewerPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox : WpfEdit
    {
        
        public NameTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public DeleteButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new DeleteButton(this);
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private DeleteButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DeleteButton : WpfButton
    {
        
        public DeleteButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfImage Image
        {
            get
            {
                if ((this.mImage == null))
                {
                    this.mImage = new WpfImage(this);
                    #region Search Criteria
                    this.mImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteVar";
                    this.mImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem2 : WpfTreeItem
    {
        
        public TreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane2 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane2(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane2 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane2 : WpfPane
    {
        
        public ScrollViewerPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox1 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox1(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox1 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox1 : WpfEdit
    {
        
        public NameTextbox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem3 : WpfTreeItem
    {
        
        public TreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane3 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane3(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane3 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane3 : WpfPane
    {
        
        public ScrollViewerPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox2 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox2(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox2 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox2 : WpfEdit
    {
        
        public NameTextbox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem4 : WpfTreeItem
    {
        
        public TreeItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane4 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane4(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane4 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane4 : WpfPane
    {
        
        public ScrollViewerPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox3 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox3(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox3 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox3 : WpfEdit
    {
        
        public NameTextbox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem5 : WpfTreeItem
    {
        
        public TreeItem5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane5 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane5(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane5 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane5 : WpfPane
    {
        
        public ScrollViewerPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox4 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox4(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox4 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox4 : WpfEdit
    {
        
        public NameTextbox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButton
        {
            get
            {
                if ((this.mDeleteButton == null))
                {
                    this.mDeleteButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetTreeItem : WpfTreeItem
    {
        
        public RecordsetTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Name] = "Recordset";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TreeItem11 TreeItem1
        {
            get
            {
                if ((this.mTreeItem1 == null))
                {
                    this.mTreeItem1 = new TreeItem11(this);
                }
                return this.mTreeItem1;
            }
        }
        
        public TreeItem21 TreeItem2
        {
            get
            {
                if ((this.mTreeItem2 == null))
                {
                    this.mTreeItem2 = new TreeItem21(this);
                }
                return this.mTreeItem2;
            }
        }
        
        public TreeItem31 TreeItem3
        {
            get
            {
                if ((this.mTreeItem3 == null))
                {
                    this.mTreeItem3 = new TreeItem31(this);
                }
                return this.mTreeItem3;
            }
        }
        
        public TreeItem41 TreeItem4
        {
            get
            {
                if ((this.mTreeItem4 == null))
                {
                    this.mTreeItem4 = new TreeItem41(this);
                }
                return this.mTreeItem4;
            }
        }
        
        public TreeItem51 TreeItem5
        {
            get
            {
                if ((this.mTreeItem5 == null))
                {
                    this.mTreeItem5 = new TreeItem51(this);
                }
                return this.mTreeItem5;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private TreeItem11 mTreeItem1;
        
        private TreeItem21 mTreeItem2;
        
        private TreeItem31 mTreeItem3;
        
        private TreeItem41 mTreeItem4;
        
        private TreeItem51 mTreeItem5;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem11 : WpfTreeItem
    {
        
        public TreeItem11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane6 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane6(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field1 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field1(this);
                }
                return this.mField1;
            }
        }
        
        public Field2 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field2(this);
                }
                return this.mField2;
            }
        }
        
        public Field3 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field3(this);
                }
                return this.mField3;
            }
        }
        
        public Field4 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field4(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane6 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field1 mField1;
        
        private Field2 mField2;
        
        private Field3 mField3;
        
        private Field4 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane6 : WpfPane
    {
        
        public ScrollViewerPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox5 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox5(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox5 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox5 : WpfEdit
    {
        
        public NameTextbox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field1 : WpfTreeItem
    {
        
        public Field1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane7 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane7(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane7 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane7 : WpfPane
    {
        
        public ScrollViewerPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox6 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox6(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox6 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox6 : WpfEdit
    {
        
        public NameTextbox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field2 : WpfTreeItem
    {
        
        public Field2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane8 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane8(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane8 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane8 : WpfPane
    {
        
        public ScrollViewerPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox7 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox7(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox7 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox7 : WpfEdit
    {
        
        public NameTextbox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field3 : WpfTreeItem
    {
        
        public Field3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane9 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane9(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane9 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane9 : WpfPane
    {
        
        public ScrollViewerPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox8 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox8(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox8 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox8 : WpfEdit
    {
        
        public NameTextbox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field4 : WpfTreeItem
    {
        
        public Field4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane10 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane10(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane10 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane10 : WpfPane
    {
        
        public ScrollViewerPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox9 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox9(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox9 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox9 : WpfEdit
    {
        
        public NameTextbox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem21 : WpfTreeItem
    {
        
        public TreeItem21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane11 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane11(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field11 Field1
        {
            get
            {
                if ((this.mField1 == null))
                {
                    this.mField1 = new Field11(this);
                }
                return this.mField1;
            }
        }
        
        public Field21 Field2
        {
            get
            {
                if ((this.mField2 == null))
                {
                    this.mField2 = new Field21(this);
                }
                return this.mField2;
            }
        }
        
        public Field31 Field3
        {
            get
            {
                if ((this.mField3 == null))
                {
                    this.mField3 = new Field31(this);
                }
                return this.mField3;
            }
        }
        
        public Field41 Field4
        {
            get
            {
                if ((this.mField4 == null))
                {
                    this.mField4 = new Field41(this);
                }
                return this.mField4;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane11 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field11 mField1;
        
        private Field21 mField2;
        
        private Field31 mField3;
        
        private Field41 mField4;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane11 : WpfPane
    {
        
        public ScrollViewerPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox10 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox10(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox10 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox10 : WpfEdit
    {
        
        public NameTextbox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field11 : WpfTreeItem
    {
        
        public Field11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane12 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane12(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane12 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane12 : WpfPane
    {
        
        public ScrollViewerPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox11 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox11(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox11 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox11 : WpfEdit
    {
        
        public NameTextbox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field21 : WpfTreeItem
    {
        
        public Field21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane13 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane13(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane13 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane13 : WpfPane
    {
        
        public ScrollViewerPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox12 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox12(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox12 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox12 : WpfEdit
    {
        
        public NameTextbox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field31 : WpfTreeItem
    {
        
        public Field31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane14 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane14(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane14 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane14 : WpfPane
    {
        
        public ScrollViewerPane14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox13 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox13(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox13 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox13 : WpfEdit
    {
        
        public NameTextbox13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field41 : WpfTreeItem
    {
        
        public Field41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane15 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane15(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane15 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane15 : WpfPane
    {
        
        public ScrollViewerPane15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox14 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox14(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox14 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox14 : WpfEdit
    {
        
        public NameTextbox14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem31 : WpfTreeItem
    {
        
        public TreeItem31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "3";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane16 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane16(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane16 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane16 : WpfPane
    {
        
        public ScrollViewerPane16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox15 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox15(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox15 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox15 : WpfEdit
    {
        
        public NameTextbox15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field : WpfTreeItem
    {
        
        public Field(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane17 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane17(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane17 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane17 : WpfPane
    {
        
        public ScrollViewerPane17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox16 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox16(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox16 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox16 : WpfEdit
    {
        
        public NameTextbox16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem41 : WpfTreeItem
    {
        
        public TreeItem41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "4";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane18 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane18(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field5 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field5(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane18 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field5 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane18 : WpfPane
    {
        
        public ScrollViewerPane18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox17 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox17(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox17 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox17 : WpfEdit
    {
        
        public NameTextbox17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field5 : WpfTreeItem
    {
        
        public Field5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane19 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane19(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane19 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane19 : WpfPane
    {
        
        public ScrollViewerPane19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox18 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox18(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox18 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox18 : WpfEdit
    {
        
        public NameTextbox18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TreeItem51 : WpfTreeItem
    {
        
        public TreeItem51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "5";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane20 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane20(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        
        public Field6 Field
        {
            get
            {
                if ((this.mField == null))
                {
                    this.mField = new Field6(this);
                }
                return this.mField;
            }
        }
        
        public WpfButton ExpanderButton
        {
            get
            {
                if ((this.mExpanderButton == null))
                {
                    this.mExpanderButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpanderButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Expander";
                    this.mExpanderButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mExpanderButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderButton;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane20 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        
        private Field6 mField;
        
        private WpfButton mExpanderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane20 : WpfPane
    {
        
        public ScrollViewerPane20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox19 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox19(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox19 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox19 : WpfEdit
    {
        
        public NameTextbox19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        
        public WpfButton DeleteButtonButton
        {
            get
            {
                if ((this.mDeleteButtonButton == null))
                {
                    this.mDeleteButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DeleteButton";
                    this.mDeleteButtonButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteButtonButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        
        private WpfButton mDeleteButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Field6 : WpfTreeItem
    {
        
        public Field6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane21 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane21(this);
                }
                return this.mScrollViewerPane;
            }
        }
        
        public WpfCheckBox InputCheckbox
        {
            get
            {
                if ((this.mInputCheckbox == null))
                {
                    this.mInputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mInputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsInputCheckbox_AutoID";
                    this.mInputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mInputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputCheckbox;
            }
        }
        
        public WpfCheckBox OutputCheckbox
        {
            get
            {
                if ((this.mOutputCheckbox == null))
                {
                    this.mOutputCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI_IsOutputCheckbox_AutoID";
                    this.mOutputCheckbox.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mOutputCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane21 mScrollViewerPane;
        
        private WpfCheckBox mInputCheckbox;
        
        private WpfCheckBox mOutputCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane21 : WpfPane
    {
        
        public ScrollViewerPane21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "varsScrolBar";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public NameTextbox20 NameTextbox
        {
            get
            {
                if ((this.mNameTextbox == null))
                {
                    this.mNameTextbox = new NameTextbox20(this);
                }
                return this.mNameTextbox;
            }
        }
        #endregion
        
        #region Fields
        private NameTextbox20 mNameTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NameTextbox20 : WpfEdit
    {
        
        public NameTextbox20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_NameTextBox_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText Label
        {
            get
            {
                if ((this.mLabel == null))
                {
                    this.mLabel = new WpfText(this);
                    #region Search Criteria
                    this.mLabel.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mLabel.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLabel;
            }
        }
        
        public WpfImage DeleteDisabledImage
        {
            get
            {
                if ((this.mDeleteDisabledImage == null))
                {
                    this.mDeleteDisabledImage = new WpfImage(this);
                    #region Search Criteria
                    this.mDeleteDisabledImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "DeleteDisabled";
                    this.mDeleteDisabledImage.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mDeleteDisabledImage.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDeleteDisabledImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mLabel;
        
        private WpfImage mDeleteDisabledImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SearchTextbox : WpfEdit
    {
        
        public SearchTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText FilterText
        {
            get
            {
                if ((this.mFilterText == null))
                {
                    this.mFilterText = new WpfText(this);
                    #region Search Criteria
                    this.mFilterText.SearchProperties[WpfText.PropertyNames.AutomationId] = "LabelText";
                    this.mFilterText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilterText;
            }
        }
        
        public WpfImage ClearSearchDisabled
        {
            get
            {
                if ((this.mClearSearchDisabled == null))
                {
                    this.mClearSearchDisabled = new WpfImage(this);
                    #region Search Criteria
                    this.mClearSearchDisabled.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ClearSearchDisabled";
                    this.mClearSearchDisabled.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchDisabled;
            }
        }
        
        public WpfButton ClearSearchButton
        {
            get
            {
                if ((this.mClearSearchButton == null))
                {
                    this.mClearSearchButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClearSearchButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClearSearchButton";
                    this.mClearSearchButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mClearSearchButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mFilterText;
        
        private WpfImage mClearSearchDisabled;
        
        private WpfButton mClearSearchButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutput : WpfCustom
    {
        
        public DebugOutput(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DebugOutputView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DebugOutput";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DebugOutputUnpinBtn
        {
            get
            {
                if ((this.mDebugOutputUnpinBtn == null))
                {
                    this.mDebugOutputUnpinBtn = new WpfButton(this);
                    #region Search Criteria
                    this.mDebugOutputUnpinBtn.SearchProperties[WpfButton.PropertyNames.AutomationId] = "unpinBtn";
                    this.mDebugOutputUnpinBtn.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDebugOutputUnpinBtn;
            }
        }
        
        public WpfEdit SearchTextBox
        {
            get
            {
                if ((this.mSearchTextBox == null))
                {
                    this.mSearchTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mSearchTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SearchTextBox";
                    this.mSearchTextBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSearchTextBox;
            }
        }
        
        public WpfButton SettingsButton
        {
            get
            {
                if ((this.mSettingsButton == null))
                {
                    this.mSettingsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mSettingsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputOptionsButton_AutoID";
                    this.mSettingsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSettingsButton;
            }
        }
        
        public WpfButton ExpandCollapseButton
        {
            get
            {
                if ((this.mExpandCollapseButton == null))
                {
                    this.mExpandCollapseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mExpandCollapseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputExpandAllMode_AutoID";
                    this.mExpandCollapseButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpandCollapseButton;
            }
        }
        
        public DebugOutputTree DebugOutputTree
        {
            get
            {
                if ((this.mDebugOutputTree == null))
                {
                    this.mDebugOutputTree = new DebugOutputTree(this);
                }
                return this.mDebugOutputTree;
            }
        }
        
        public StatusBar StatusBar
        {
            get
            {
                if ((this.mStatusBar == null))
                {
                    this.mStatusBar = new StatusBar(this);
                }
                return this.mStatusBar;
            }
        }
        
        public CommentTreeItem CommentTreeItem
        {
            get
            {
                if ((this.mCommentTreeItem == null))
                {
                    this.mCommentTreeItem = new CommentTreeItem(this);
                }
                return this.mCommentTreeItem;
            }
        }
        
        public WpfButton CreateTestFromDebugButton
        {
            get
            {
                if ((this.mCreateTestFromDebugButton == null))
                {
                    this.mCreateTestFromDebugButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCreateTestFromDebugButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI_DebugOutputAddNewTestMode_AutoID";
                    this.mCreateTestFromDebugButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCreateTestFromDebugButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDebugOutputUnpinBtn;
        
        private WpfEdit mSearchTextBox;
        
        private WpfButton mSettingsButton;
        
        private WpfButton mExpandCollapseButton;
        
        private DebugOutputTree mDebugOutputTree;
        
        private StatusBar mStatusBar;
        
        private CommentTreeItem mCommentTreeItem;
        
        private WpfButton mCreateTestFromDebugButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DebugOutputTree : WpfTree
    {
        
        public DebugOutputTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "DebugOutputTree";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Step1 Step1
        {
            get
            {
                if ((this.mStep1 == null))
                {
                    this.mStep1 = new Step1(this);
                }
                return this.mStep1;
            }
        }
        
        public SubWorkflow SubWorkflow
        {
            get
            {
                if ((this.mSubWorkflow == null))
                {
                    this.mSubWorkflow = new SubWorkflow(this);
                }
                return this.mSubWorkflow;
            }
        }
        
        public ServiceTreeItem ServiceTreeItem
        {
            get
            {
                if ((this.mServiceTreeItem == null))
                {
                    this.mServiceTreeItem = new ServiceTreeItem(this);
                }
                return this.mServiceTreeItem;
            }
        }
        
        public WpfTreeItem AssignOnDebugOutput
        {
            get
            {
                if ((this.mAssignOnDebugOutput == null))
                {
                    this.mAssignOnDebugOutput = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mAssignOnDebugOutput.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
                    this.mAssignOnDebugOutput.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mAssignOnDebugOutput;
            }
        }
        
        public WpfTreeItem DecisionOnDebugOutput
        {
            get
            {
                if ((this.mDecisionOnDebugOutput == null))
                {
                    this.mDecisionOnDebugOutput = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mDecisionOnDebugOutput.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
                    this.mDecisionOnDebugOutput.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mDecisionOnDebugOutput.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mDecisionOnDebugOutput;
            }
        }
        
        public WpfTreeItem SelectandapplyTreeItem
        {
            get
            {
                if ((this.mSelectandapplyTreeItem == null))
                {
                    this.mSelectandapplyTreeItem = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mSelectandapplyTreeItem.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
                    this.mSelectandapplyTreeItem.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mSelectandapplyTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private Step1 mStep1;
        
        private SubWorkflow mSubWorkflow;
        
        private ServiceTreeItem mServiceTreeItem;
        
        private WpfTreeItem mAssignOnDebugOutput;
        
        private WpfTreeItem mDecisionOnDebugOutput;
        
        private WpfTreeItem mSelectandapplyTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Step1 : WpfTreeItem
    {
        
        public Step1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText VariableTextbox1
        {
            get
            {
                if ((this.mVariableTextbox1 == null))
                {
                    this.mVariableTextbox1 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox1.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox1.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mVariableTextbox1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox1;
            }
        }
        
        public WpfText VariableTextbox2
        {
            get
            {
                if ((this.mVariableTextbox2 == null))
                {
                    this.mVariableTextbox2 = new WpfText(this);
                    #region Search Criteria
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mVariableTextbox2.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mVariableTextbox2.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mVariableTextbox2.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mVariableTextbox2;
            }
        }
        
        public WpfButton Assign1Button
        {
            get
            {
                if ((this.mAssign1Button == null))
                {
                    this.mAssign1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mAssign1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Assign (1)";
                    this.mAssign1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mAssign1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssign1Button;
            }
        }
        
        public WpfButton BaseConversion1Button
        {
            get
            {
                if ((this.mBaseConversion1Button == null))
                {
                    this.mBaseConversion1Button = new WpfButton(this);
                    #region Search Criteria
                    this.mBaseConversion1Button.SearchProperties[WpfButton.PropertyNames.Name] = "Base Conversion (1)";
                    this.mBaseConversion1Button.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mBaseConversion1Button.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mBaseConversion1Button;
            }
        }
        
        public WpfButton CalculateButton
        {
            get
            {
                if ((this.mCalculateButton == null))
                {
                    this.mCalculateButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCalculateButton.SearchProperties[WpfButton.PropertyNames.Name] = "Calculate";
                    this.mCalculateButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCalculateButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCalculateButton;
            }
        }
        
        public RecordsetGroup RecordsetGroup
        {
            get
            {
                if ((this.mRecordsetGroup == null))
                {
                    this.mRecordsetGroup = new RecordsetGroup(this);
                }
                return this.mRecordsetGroup;
            }
        }
        
        public WpfText ValueTextbox1
        {
            get
            {
                if ((this.mValueTextbox1 == null))
                {
                    this.mValueTextbox1 = new WpfText(this);
                    #region Search Criteria
                    this.mValueTextbox1.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mValueTextbox1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mValueTextbox1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mValueTextbox1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mVariableTextbox1;
        
        private WpfText mVariableTextbox2;
        
        private WpfButton mAssign1Button;
        
        private WpfButton mBaseConversion1Button;
        
        private WpfButton mCalculateButton;
        
        private RecordsetGroup mRecordsetGroup;
        
        private WpfText mValueTextbox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RecordsetGroup : WpfExpander
    {
        
        public RecordsetGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_DefaultRecordSetIOTemplate_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText RecordsetName
        {
            get
            {
                if ((this.mRecordsetName == null))
                {
                    this.mRecordsetName = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetName.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputVariableTextBlock_AutoID";
                    this.mRecordsetName.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetName.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetName;
            }
        }
        
        public WpfText RecordsetValue
        {
            get
            {
                if ((this.mRecordsetValue == null))
                {
                    this.mRecordsetValue = new WpfText(this);
                    #region Search Criteria
                    this.mRecordsetValue.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI_DebugOutputValueTextBlock_AutoID";
                    this.mRecordsetValue.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mRecordsetValue.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetValue;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mRecordsetName;
        
        private WpfText mRecordsetValue;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SubWorkflow : WpfTreeItem
    {
        
        public SubWorkflow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public UIHelloWorldTreeItem1 UIHelloWorldTreeItem1
        {
            get
            {
                if ((this.mUIHelloWorldTreeItem1 == null))
                {
                    this.mUIHelloWorldTreeItem1 = new UIHelloWorldTreeItem1(this);
                }
                return this.mUIHelloWorldTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIHelloWorldTreeItem1 mUIHelloWorldTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHelloWorldTreeItem1 : WpfTreeItem
    {
        
        public UIHelloWorldTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Start";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton UIHelloWorldButton
        {
            get
            {
                if ((this.mUIHelloWorldButton == null))
                {
                    this.mUIHelloWorldButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHelloWorldButton.SearchProperties[WpfButton.PropertyNames.Name] = "Hello World";
                    this.mUIHelloWorldButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIHelloWorldButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIHelloWorldButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIHelloWorldButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceTreeItem : WpfTreeItem
    {
        
        public ServiceTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Service";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton GenericResourceButton
        {
            get
            {
                if ((this.mGenericResourceButton == null))
                {
                    this.mGenericResourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenericResourceButton.SearchProperties[WpfButton.PropertyNames.Name] = "GenericResource";
                    this.mGenericResourceButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mGenericResourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenericResourceButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mGenericResourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class StatusBar : WpfEdit
    {
        
        public StatusBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Dev2StatusBarAutomationID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSpinner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CommentTreeItem : WpfTreeItem
    {
        
        public CommentTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTreeItem.PropertyNames.AutomationId] = "Step";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton CommentButton
        {
            get
            {
                if ((this.mCommentButton == null))
                {
                    this.mCommentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mCommentButton.SearchProperties[WpfButton.PropertyNames.Name] = "Comment";
                    this.mCommentButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mCommentButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCommentButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mCommentButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane1 : WpfCustom
    {
        
        public TabManSplitPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public TabMan1 TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan1(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan1 mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan1 : WpfTabList
    {
        
        public TabMan1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WorkflowTab1 WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab1(this);
                }
                return this.mWorkflowTab;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowTab1 mWorkflowTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab1 : WpfTabPage
    {
        
        public WorkflowTab1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WorkflowSurfaceContext WorkflowSurfaceContext
        {
            get
            {
                if ((this.mWorkflowSurfaceContext == null))
                {
                    this.mWorkflowSurfaceContext = new WorkflowSurfaceContext(this);
                }
                return this.mWorkflowSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowSurfaceContext mWorkflowSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowSurfaceContext : WpfCustom
    {
        
        public WorkflowSurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ContentDockManagerCustom ContentDockManagerCustom
        {
            get
            {
                if ((this.mContentDockManagerCustom == null))
                {
                    this.mContentDockManagerCustom = new ContentDockManagerCustom(this);
                }
                return this.mContentDockManagerCustom;
            }
        }
        #endregion
        
        #region Fields
        private ContentDockManagerCustom mContentDockManagerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentDockManagerCustom : WpfCustom
    {
        
        public ContentDockManagerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ContentDockManager";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView1 WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView1(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView1 mWorkflowDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView1 : WpfCustom
    {
        
        public WorkflowDesignerView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowDesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_WorkflowDesigner_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public DesignerView1 DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView1(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView1 mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView1 : WpfCustom
    {
        
        public DesignerView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane22 ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane22(this);
                }
                return this.mScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane22 mScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane22 : WpfPane
    {
        
        public ScrollViewerPane22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner1 ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner1(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner1 mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner1 : WpfCustom
    {
        
        public ActivityTypeDesigner1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter1 WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter1(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter1 mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter1 : WpfCustom
    {
        
        public WorkflowItemPresenter1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public Flowchart1 Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart1(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart1 mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart1 : WpfCustom
    {
        
        public Flowchart1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfCustom stackOverflowTestWF
        {
            get
            {
                if ((this.mstackOverflowTestWF == null))
                {
                    this.mstackOverflowTestWF = new WpfCustom(this);
                    #region Search Criteria
                    this.mstackOverflowTestWF.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
                    this.mstackOverflowTestWF.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "(ServiceDesigner)", PropertyExpressionOperator.Contains));
                    this.mstackOverflowTestWF.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mstackOverflowTestWF;
            }
        }
        
        public HelloWorldWorkFlow1 HelloWorldWorkFlow
        {
            get
            {
                if ((this.mHelloWorldWorkFlow == null))
                {
                    this.mHelloWorldWorkFlow = new HelloWorldWorkFlow1(this);
                }
                return this.mHelloWorldWorkFlow;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mstackOverflowTestWF;
        
        private HelloWorldWorkFlow1 mHelloWorldWorkFlow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class HelloWorldWorkFlow1 : WpfCustom
    {
        
        public HelloWorldWorkFlow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ServiceDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "(ServiceDesigner)", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServiceDesignerLargeView1 ServiceDesignerLargeView
        {
            get
            {
                if ((this.mServiceDesignerLargeView == null))
                {
                    this.mServiceDesignerLargeView = new ServiceDesignerLargeView1(this);
                }
                return this.mServiceDesignerLargeView;
            }
        }
        #endregion
        
        #region Fields
        private ServiceDesignerLargeView1 mServiceDesignerLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServiceDesignerLargeView1 : WpfCustom
    {
        
        public ServiceDesignerLargeView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsDataGridTable1 InputsDataGridTable
        {
            get
            {
                if ((this.mInputsDataGridTable == null))
                {
                    this.mInputsDataGridTable = new InputsDataGridTable1(this);
                }
                return this.mInputsDataGridTable;
            }
        }
        
        public OutputsDataGridTable1 OutputsDataGridTable
        {
            get
            {
                if ((this.mOutputsDataGridTable == null))
                {
                    this.mOutputsDataGridTable = new OutputsDataGridTable1(this);
                }
                return this.mOutputsDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private InputsDataGridTable1 mInputsDataGridTable;
        
        private OutputsDataGridTable1 mOutputsDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsDataGridTable1 : WpfTable
    {
        
        public InputsDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "InputsDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsGridRowOne1 InputsGridRowOne
        {
            get
            {
                if ((this.mInputsGridRowOne == null))
                {
                    this.mInputsGridRowOne = new InputsGridRowOne1(this);
                }
                return this.mInputsGridRowOne;
            }
        }
        #endregion
        
        #region Fields
        private InputsGridRowOne1 mInputsGridRowOne;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsGridRowOne1 : WpfRow
    {
        
        public InputsGridRowOne1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsGridRowOneCell1 InputsGridRowOneCell
        {
            get
            {
                if ((this.mInputsGridRowOneCell == null))
                {
                    this.mInputsGridRowOneCell = new InputsGridRowOneCell1(this);
                }
                return this.mInputsGridRowOneCell;
            }
        }
        #endregion
        
        #region Fields
        private InputsGridRowOneCell1 mInputsGridRowOneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsGridRowOneCell1 : WpfCell
    {
        
        public InputsGridRowOneCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_CellColumn0";
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public InputsAutoCompleteTextBox1 InputsAutoCompleteTextBox
        {
            get
            {
                if ((this.mInputsAutoCompleteTextBox == null))
                {
                    this.mInputsAutoCompleteTextBox = new InputsAutoCompleteTextBox1(this);
                }
                return this.mInputsAutoCompleteTextBox;
            }
        }
        #endregion
        
        #region Fields
        private InputsAutoCompleteTextBox1 mInputsAutoCompleteTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsAutoCompleteTextBox1 : WpfComboBox
    {
        
        public InputsAutoCompleteTextBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfEdit InputsAutoCompleteTextBoxText
        {
            get
            {
                if ((this.mInputsAutoCompleteTextBoxText == null))
                {
                    this.mInputsAutoCompleteTextBoxText = new WpfEdit(this);
                    #region Search Criteria
                    this.mInputsAutoCompleteTextBoxText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mInputsAutoCompleteTextBoxText.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mInputsAutoCompleteTextBoxText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mInputsAutoCompleteTextBoxText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsDataGridTable1 : WpfTable
    {
        
        public OutputsDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsGridRowOne1 OutputsGridRowOne
        {
            get
            {
                if ((this.mOutputsGridRowOne == null))
                {
                    this.mOutputsGridRowOne = new OutputsGridRowOne1(this);
                }
                return this.mOutputsGridRowOne;
            }
        }
        #endregion
        
        #region Fields
        private OutputsGridRowOne1 mOutputsGridRowOne;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsGridRowOne1 : WpfRow
    {
        
        public OutputsGridRowOne1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.AutomationId] = "UI_ActivityGridRow_0_AutoID";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsGridRowOneCell1 OutputsGridRowOneCell
        {
            get
            {
                if ((this.mOutputsGridRowOneCell == null))
                {
                    this.mOutputsGridRowOneCell = new OutputsGridRowOneCell1(this);
                }
                return this.mOutputsGridRowOneCell;
            }
        }
        #endregion
        
        #region Fields
        private OutputsGridRowOneCell1 mOutputsGridRowOneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsGridRowOneCell1 : WpfCell
    {
        
        public OutputsGridRowOneCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_CellColumn1";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public OutputsAutoCompleteTextBox1 OutputsAutoCompleteTextBox
        {
            get
            {
                if ((this.mOutputsAutoCompleteTextBox == null))
                {
                    this.mOutputsAutoCompleteTextBox = new OutputsAutoCompleteTextBox1(this);
                }
                return this.mOutputsAutoCompleteTextBox;
            }
        }
        #endregion
        
        #region Fields
        private OutputsAutoCompleteTextBox1 mOutputsAutoCompleteTextBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OutputsAutoCompleteTextBox1 : WpfComboBox
    {
        
        public OutputsAutoCompleteTextBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfEdit OutputsAutoCompleteTextBoxText
        {
            get
            {
                if ((this.mOutputsAutoCompleteTextBoxText == null))
                {
                    this.mOutputsAutoCompleteTextBoxText = new WpfEdit(this);
                    #region Search Criteria
                    this.mOutputsAutoCompleteTextBoxText.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mOutputsAutoCompleteTextBoxText.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mOutputsAutoCompleteTextBoxText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mOutputsAutoCompleteTextBoxText;
        #endregion
    }
}
