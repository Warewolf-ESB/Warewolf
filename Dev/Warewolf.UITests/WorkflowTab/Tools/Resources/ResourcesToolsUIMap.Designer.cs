// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.WorkflowTab.Tools.Resources.ResourcesToolsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class ResourcesToolsUIMap
    {
        
        /// <summary>
        /// Open_Tools_UI_Map_Designer_To_Flowchart - Use 'Open_Tools_UI_Map_Designer_To_FlowchartParams' to pass parameters into this method.
        /// </summary>
        public void Open_Tools_UI_Map_Designer_To_Flowchart()
        {
            #region Variable Declarations
            WpfCustom flowchart = this.MainStudioWindow.DockManager.SplitPaneMiddle.TabManSplitPane.TabMan.WorkflowTab.WorkSurfaceContext.WorkflowDesignerView.DesignerView.ScrollViewerPane.ActivityTypeDesigner.WorkflowItemPresenter.Flowchart;
            #endregion

            // Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
            Assert.AreEqual(this.Open_Tools_UI_Map_Designer_To_FlowchartParams.FlowchartExists, flowchart.Exists, "Flowchart does not exist.");
        }
        
        #region Properties
        public virtual Open_Tools_UI_Map_Designer_To_FlowchartParams Open_Tools_UI_Map_Designer_To_FlowchartParams
        {
            get
            {
                if ((this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams == null))
                {
                    this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams = new Open_Tools_UI_Map_Designer_To_FlowchartParams();
                }
                return this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
            }
        }
        
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_Tools_UI_Map_Designer_To_FlowchartParams mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
        
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_Tools_UI_Map_Designer_To_Flowchart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_Tools_UI_Map_Designer_To_FlowchartParams
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
        /// </summary>
        public bool FlowchartExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneMiddle mSplitPaneMiddle;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowTab WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab(this);
                }
                return this.mWorkflowTab;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowTab mWorkflowTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab : WpfTabPage
    {
        
        public WorkflowTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext : WpfCustom
    {
        
        public WorkSurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView mWorkflowDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView : WpfCustom
    {
        
        public WorkflowDesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView : WpfCustom
    {
        
        public DesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane(this);
                }
                return this.mScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane mScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane : WpfPane
    {
        
        public ScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner : WpfCustom
    {
        
        public ActivityTypeDesigner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter : WpfCustom
    {
        
        public WorkflowItemPresenter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart(this);
                }
                return this.mFlowchart;
            }
        }
        
        public FlowchartTest FlowchartTest
        {
            get
            {
                if ((this.mFlowchartTest == null))
                {
                    this.mFlowchartTest = new FlowchartTest(this);
                }
                return this.mFlowchartTest;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart mFlowchart;
        
        private FlowchartTest mFlowchartTest;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart : WpfCustom
    {
        
        public Flowchart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ComDll ComDll
        {
            get
            {
                if ((this.mComDll == null))
                {
                    this.mComDll = new ComDll(this);
                }
                return this.mComDll;
            }
        }
        
        public DotNetDll DotNetDll
        {
            get
            {
                if ((this.mDotNetDll == null))
                {
                    this.mDotNetDll = new DotNetDll(this);
                }
                return this.mDotNetDll;
            }
        }
        
        public WcfService WcfService
        {
            get
            {
                if ((this.mWcfService == null))
                {
                    this.mWcfService = new WcfService(this);
                }
                return this.mWcfService;
            }
        }
        #endregion
        
        #region Fields
        private ComDll mComDll;
        
        private DotNetDll mDotNetDll;
        
        private WcfService mWcfService;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComDll : WpfCustom
    {
        
        public ComDll(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComDllDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Com DLL(ComDllDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView : WpfCustom
    {
        
        public LargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesCombobox SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new SourcesCombobox(this);
                }
                return this.mSourcesCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public NamespaceCombobox NamespaceCombobox
        {
            get
            {
                if ((this.mNamespaceCombobox == null))
                {
                    this.mNamespaceCombobox = new NamespaceCombobox(this);
                }
                return this.mNamespaceCombobox;
            }
        }
        
        public WpfButton RefreshNamespaceButton
        {
            get
            {
                if ((this.mRefreshNamespaceButton == null))
                {
                    this.mRefreshNamespaceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshNamespaceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NamespaceRefreshButton";
                    this.mRefreshNamespaceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshNamespaceButton;
            }
        }
        
        public ActionsCombobox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new ActionsCombobox(this);
                }
                return this.mActionsCombobox;
            }
        }
        
        public WpfButton ActionRefreshButton
        {
            get
            {
                if ((this.mActionRefreshButton == null))
                {
                    this.mActionRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mActionRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mActionRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionRefreshButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckbox
        {
            get
            {
                if ((this.mOutputToObjectCheckbox == null))
                {
                    this.mOutputToObjectCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputToObjectCheckbox;
            }
        }
        
        public WpfTable OutputsTable
        {
            get
            {
                if ((this.mOutputsTable == null))
                {
                    this.mOutputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsTable;
            }
        }
        
        public WpfEdit RecordsetNameTextbox
        {
            get
            {
                if ((this.mRecordsetNameTextbox == null))
                {
                    this.mRecordsetNameTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordsetNameTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordsetNameTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordsetNameTextbox;
            }
        }
        
        public OnErrorPanel OnErrorPanel
        {
            get
            {
                if ((this.mOnErrorPanel == null))
                {
                    this.mOnErrorPanel = new OnErrorPanel(this);
                }
                return this.mOnErrorPanel;
            }
        }
        #endregion
        
        #region Fields
        private SourcesCombobox mSourcesCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewSourceButton;
        
        private NamespaceCombobox mNamespaceCombobox;
        
        private WpfButton mRefreshNamespaceButton;
        
        private ActionsCombobox mActionsCombobox;
        
        private WpfButton mActionRefreshButton;
        
        private WpfTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputToObjectCheckbox;
        
        private WpfTable mOutputsTable;
        
        private WpfEdit mRecordsetNameTextbox;
        
        private OnErrorPanel mOnErrorPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesCombobox : WpfComboBox
    {
        
        public SourcesCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem COMPluginSourceToEditListItem
        {
            get
            {
                if ((this.mCOMPluginSourceToEditListItem == null))
                {
                    this.mCOMPluginSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCOMPluginSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.ComPluginSourceDefinition";
                    this.mCOMPluginSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mCOMPluginSourceToEditListItem;
            }
        }
        
        public WpfListItem ComDllSourceItem2
        {
            get
            {
                if ((this.mComDllSourceItem2 == null))
                {
                    this.mComDllSourceItem2 = new WpfListItem(this);
                    #region Search Criteria
                    this.mComDllSourceItem2.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mComDllSourceItem2.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComDllSourceItem2;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mCOMPluginSourceToEditListItem;
        
        private WpfListItem mComDllSourceItem2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class NamespaceCombobox : WpfComboBox
    {
        
        public NamespaceCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "NamespaceComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem COMPluginNamespaceItem
        {
            get
            {
                if ((this.mCOMPluginNamespaceItem == null))
                {
                    this.mCOMPluginNamespaceItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCOMPluginNamespaceItem.SearchProperties[WpfListItem.PropertyNames.Name] = "{\"AssemblyLocation\":\"{00000514-0000-0010-8000-00AA006D2EA4}\",\"AssemblyName\":\"ADOD" +
                        "B.CursorTypeEnum\",\"FullName\":\"ADODB.CursorTypeEnum\",\"MethodName\":null,\"JsonObjec" +
                        "t\":null}";
                    this.mCOMPluginNamespaceItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mCOMPluginNamespaceItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mCOMPluginNamespaceItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsCombobox : WpfComboBox
    {
        
        public ActionsCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ComActionsCloseListItem
        {
            get
            {
                if ((this.mComActionsCloseListItem == null))
                {
                    this.mComActionsCloseListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mComActionsCloseListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Close";
                    this.mComActionsCloseListItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComActionsCloseListItem;
            }
        }
        
        public WpfListItem ComActionsBeginTransListItem
        {
            get
            {
                if ((this.mComActionsBeginTransListItem == null))
                {
                    this.mComActionsBeginTransListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mComActionsBeginTransListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "BeginTrans";
                    this.mComActionsBeginTransListItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComActionsBeginTransListItem;
            }
        }
        
        public WpfListItem ComActionsCancelListItem
        {
            get
            {
                if ((this.mComActionsCancelListItem == null))
                {
                    this.mComActionsCancelListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mComActionsCancelListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Cancel";
                    this.mComActionsCancelListItem.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComActionsCancelListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mComActionsCloseListItem;
        
        private WpfListItem mComActionsBeginTransListItem;
        
        private WpfListItem mComActionsCancelListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPanel : WpfCustom
    {
        
        public OnErrorPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup : WpfGroup
    {
        
        public OnErrorGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorWebServiceIntellisenseCombobox OnErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorWebServiceIntellisenseCombobox = new OnErrorWebServiceIntellisenseCombobox(this);
                }
                return this.mOnErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorWebServiceIntellisenseCombobox mOnErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWebServiceIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorWebServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DotNetDll : WpfCustom
    {
        
        public DotNetDll(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DotNetDllDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "DotNet DLL", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView1 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView1(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView1 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView1 : WpfCustom
    {
        
        public LargeView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox1 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox1(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public ClassNameComboBox ClassNameComboBox
        {
            get
            {
                if ((this.mClassNameComboBox == null))
                {
                    this.mClassNameComboBox = new ClassNameComboBox(this);
                }
                return this.mClassNameComboBox;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public LargeDataGridTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new LargeDataGridTable(this);
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton ActionRefreshButton
        {
            get
            {
                if ((this.mActionRefreshButton == null))
                {
                    this.mActionRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mActionRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mActionRefreshButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mActionRefreshButton;
            }
        }
        
        public WpfButton ClassNameRefreshButton
        {
            get
            {
                if ((this.mClassNameRefreshButton == null))
                {
                    this.mClassNameRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mClassNameRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NamespaceRefreshButton";
                    this.mClassNameRefreshButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mClassNameRefreshButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfCustom OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new WpfCustom(this);
                    #region Search Criteria
                    this.mOnErrorPane.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
                    this.mOnErrorPane.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
                    this.mOnErrorPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfTable OutputsMappingDataGrid
        {
            get
            {
                if ((this.mOutputsMappingDataGrid == null))
                {
                    this.mOutputsMappingDataGrid = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrid.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrid.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOutputsMappingDataGrid;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckBox
        {
            get
            {
                if ((this.mOutputToObjectCheckBox == null))
                {
                    this.mOutputToObjectCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOutputToObjectCheckBox;
            }
        }
        
        public WpfEdit RecordSetTextBox
        {
            get
            {
                if ((this.mRecordSetTextBox == null))
                {
                    this.mRecordSetTextBox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRecordSetTextBox;
            }
        }
        
        public CtorExpander CtorExpander
        {
            get
            {
                if ((this.mCtorExpander == null))
                {
                    this.mCtorExpander = new CtorExpander(this);
                }
                return this.mCtorExpander;
            }
        }
        
        public OneParamCtorExpander OneParamCtorExpander
        {
            get
            {
                if ((this.mOneParamCtorExpander == null))
                {
                    this.mOneParamCtorExpander = new OneParamCtorExpander(this);
                }
                return this.mOneParamCtorExpander;
            }
        }
        
        public ActionMethodListBoxList ActionMethodListBoxList
        {
            get
            {
                if ((this.mActionMethodListBoxList == null))
                {
                    this.mActionMethodListBoxList = new ActionMethodListBoxList(this);
                }
                return this.mActionMethodListBoxList;
            }
        }
        
        public WpfText NoconstructoronastatText
        {
            get
            {
                if ((this.mNoconstructoronastatText == null))
                {
                    this.mNoconstructoronastatText = new WpfText(this);
                    #region Search Criteria
                    this.mNoconstructoronastatText.SearchProperties[WpfText.PropertyNames.Name] = "No constructor on a static class";
                    this.mNoconstructoronastatText.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mNoconstructoronastatText;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox1 mSourcesComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mInputsTable;
        
        private ClassNameComboBox mClassNameComboBox;
        
        private WpfButton mDoneButton;
        
        private WpfButton mNewSourceButton;
        
        private LargeDataGridTable mLargeDataGridTable;
        
        private WpfButton mActionRefreshButton;
        
        private WpfButton mClassNameRefreshButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfCustom mOnErrorPane;
        
        private WpfTable mOutputsMappingDataGrid;
        
        private WpfCheckBox mOutputToObjectCheckBox;
        
        private WpfEdit mRecordSetTextBox;
        
        private CtorExpander mCtorExpander;
        
        private OneParamCtorExpander mOneParamCtorExpander;
        
        private ActionMethodListBoxList mActionMethodListBoxList;
        
        private WpfText mNoconstructoronastatText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox1 : WpfComboBox
    {
        
        public SourcesComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ListItem1
        {
            get
            {
                if ((this.mListItem1 == null))
                {
                    this.mListItem1 = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem1.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mListItem1.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mListItem1;
            }
        }
        
        public WpfListItem DotNetSource
        {
            get
            {
                if ((this.mDotNetSource == null))
                {
                    this.mDotNetSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetSource.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mDotNetSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDotNetSource;
            }
        }
        
        public WpfListItem DotNetPluginSource
        {
            get
            {
                if ((this.mDotNetPluginSource == null))
                {
                    this.mDotNetPluginSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetPluginSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mDotNetPluginSource.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mDotNetPluginSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDotNetPluginSource;
            }
        }
        
        public WpfListItem NewDotNetPluginSource
        {
            get
            {
                if ((this.mNewDotNetPluginSource == null))
                {
                    this.mNewDotNetPluginSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDotNetPluginSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewDotNetPluginSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewDotNetPluginSource;
            }
        }
        
        public WpfListItem DotNetPluginSourceToEditListItem
        {
            get
            {
                if ((this.mDotNetPluginSourceToEditListItem == null))
                {
                    this.mDotNetPluginSourceToEditListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mDotNetPluginSourceToEditListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mDotNetPluginSourceToEditListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDotNetPluginSourceToEditListItem;
            }
        }
        
        public WpfListItem ListItem2
        {
            get
            {
                if ((this.mListItem2 == null))
                {
                    this.mListItem2 = new WpfListItem(this);
                    #region Search Criteria
                    this.mListItem2.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Common.Interfaces.Core.PluginSourceDefinition";
                    this.mListItem2.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mListItem2.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mListItem2;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mListItem1;
        
        private WpfListItem mDotNetSource;
        
        private WpfListItem mDotNetPluginSource;
        
        private WpfListItem mNewDotNetPluginSource;
        
        private WpfListItem mDotNetPluginSourceToEditListItem;
        
        private WpfListItem mListItem2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ClassNameComboBox : WpfComboBox
    {
        
        public ClassNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "NamespaceComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ComboboxlistItemAsSystemObject
        {
            get
            {
                if ((this.mComboboxlistItemAsSystemObject == null))
                {
                    this.mComboboxlistItemAsSystemObject = new WpfListItem(this);
                    #region Search Criteria
                    this.mComboboxlistItemAsSystemObject.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mComboboxlistItemAsSystemObject.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mComboboxlistItemAsSystemObject;
            }
        }
        
        public WpfListItem SystemRandomListItem
        {
            get
            {
                if ((this.mSystemRandomListItem == null))
                {
                    this.mSystemRandomListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSystemRandomListItem.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "System.Random", PropertyExpressionOperator.Contains));
                    this.mSystemRandomListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSystemRandomListItem;
            }
        }
        
        public WpfListItem AssemblyLocationGACCListItem
        {
            get
            {
                if ((this.mAssemblyLocationGACCListItem == null))
                {
                    this.mAssemblyLocationGACCListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mAssemblyLocationGACCListItem.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""AssemblyLocation"":""GAC:CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=AMD64"",""AssemblyName"":""CustomMarshalers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=AMD64"",""FullName"":""ReplacesCorHdrNumericDefines"",""MethodName"":null}";
                    this.mAssemblyLocationGACCListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAssemblyLocationGACCListItem;
            }
        }
        
        public WpfListItem HumalClassListItem
        {
            get
            {
                if ((this.mHumalClassListItem == null))
                {
                    this.mHumalClassListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mHumalClassListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "5";
                    this.mHumalClassListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mHumalClassListItem;
            }
        }
        
        public WpfListItem AssemblyRefNamespace
        {
            get
            {
                if ((this.mAssemblyRefNamespace == null))
                {
                    this.mAssemblyRefNamespace = new WpfListItem(this);
                    #region Search Criteria
                    this.mAssemblyRefNamespace.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "{\"AssemblyLocation\":\"GAC:mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyTok" +
                                "en=b77a5c561934e089", PropertyExpressionOperator.Contains));
                    this.mAssemblyRefNamespace.WindowTitles.Add("Warewolf (DEV2\\NKOSINATHI.SANGWENI)");
                    #endregion
                }
                return this.mAssemblyRefNamespace;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mComboboxlistItemAsSystemObject;
        
        private WpfListItem mSystemRandomListItem;
        
        private WpfListItem mAssemblyLocationGACCListItem;
        
        private WpfListItem mHumalClassListItem;
        
        private WpfListItem mAssemblyRefNamespace;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeDataGridTable : WpfTable
    {
        
        public LargeDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row1(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row1 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1 : WpfRow
    {
        
        public Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputVariableCell InputVariableCell
        {
            get
            {
                if ((this.mInputVariableCell == null))
                {
                    this.mInputVariableCell = new InputVariableCell(this);
                }
                return this.mInputVariableCell;
            }
        }
        
        public EmptyIsNullCell EmptyIsNullCell
        {
            get
            {
                if ((this.mEmptyIsNullCell == null))
                {
                    this.mEmptyIsNullCell = new EmptyIsNullCell(this);
                }
                return this.mEmptyIsNullCell;
            }
        }
        #endregion
        
        #region Fields
        private InputVariableCell mInputVariableCell;
        
        private EmptyIsNullCell mEmptyIsNullCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputVariableCell : WpfCell
    {
        
        public InputVariableCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public InputVariableComboBox InputVariableComboBox
        {
            get
            {
                if ((this.mInputVariableComboBox == null))
                {
                    this.mInputVariableComboBox = new InputVariableComboBox(this);
                }
                return this.mInputVariableComboBox;
            }
        }
        #endregion
        
        #region Fields
        private InputVariableComboBox mInputVariableComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputVariableComboBox : WpfComboBox
    {
        
        public InputVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EmptyIsNullCell : WpfCell
    {
        
        public EmptyIsNullCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Empty Is Null";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox EmptyIsNullCheckBox
        {
            get
            {
                if ((this.mEmptyIsNullCheckBox == null))
                {
                    this.mEmptyIsNullCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEmptyIsNullCheckBox.SearchProperties[WpfCheckBox.PropertyNames.HelpText] = "Use NULL when empty.";
                    this.mEmptyIsNullCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEmptyIsNullCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mEmptyIsNullCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CtorExpander : WpfExpander
    {
        
        public CtorExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ConstructorExpander_.ctor _AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton : WpfButton
    {
        
        public ActivitiesDesignButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ConstructorsComboBox ConstructorsComboBox
        {
            get
            {
                if ((this.mConstructorsComboBox == null))
                {
                    this.mConstructorsComboBox = new ConstructorsComboBox(this);
                }
                return this.mConstructorsComboBox;
            }
        }
        
        public WpfText ExpanderIcon
        {
            get
            {
                if ((this.mExpanderIcon == null))
                {
                    this.mExpanderIcon = new WpfText(this);
                    #region Search Criteria
                    this.mExpanderIcon.SearchProperties[WpfText.PropertyNames.AutomationId] = "iconExpand";
                    this.mExpanderIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderIcon;
            }
        }
        
        public WpfText ConstructorLabel
        {
            get
            {
                if ((this.mConstructorLabel == null))
                {
                    this.mConstructorLabel = new WpfText(this);
                    #region Search Criteria
                    this.mConstructorLabel.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mConstructorLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConstructorLabel;
            }
        }
        #endregion
        
        #region Fields
        private ConstructorsComboBox mConstructorsComboBox;
        
        private WpfText mExpanderIcon;
        
        private WpfText mConstructorLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConstructorsComboBox : WpfComboBox
    {
        
        public ConstructorsComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConstructorsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public CtorListItem CtorListItem
        {
            get
            {
                if ((this.mCtorListItem == null))
                {
                    this.mCtorListItem = new CtorListItem(this);
                }
                return this.mCtorListItem;
            }
        }
        
        public WpfListItem CtorSystemStringListItem
        {
            get
            {
                if ((this.mCtorSystemStringListItem == null))
                {
                    this.mCtorSystemStringListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String)";
                    this.mCtorSystemStringListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringListItem;
            }
        }
        
        public WpfListItem CtorSystemStringSystListItem
        {
            get
            {
                if ((this.mCtorSystemStringSystListItem == null))
                {
                    this.mCtorSystemStringSystListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringSystListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String,System.String,TestingDotnetDllCascading.Food)";
                    this.mCtorSystemStringSystListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringSystListItem;
            }
        }
        #endregion
        
        #region Fields
        private CtorListItem mCtorListItem;
        
        private WpfListItem mCtorSystemStringListItem;
        
        private WpfListItem mCtorSystemStringSystListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CtorListItem : WpfListItem
    {
        
        public CtorListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor ";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfText UICtorText
        {
            get
            {
                if ((this.mUICtorText == null))
                {
                    this.mUICtorText = new WpfText(this);
                    #region Search Criteria
                    this.mUICtorText.SearchProperties[WpfText.PropertyNames.Name] = ".ctor ";
                    this.mUICtorText.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUICtorText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUICtorText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OneParamCtorExpander : WpfExpander
    {
        
        public OneParamCtorExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_ConstructorExpander_.ctor (System.String)_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton1 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton1(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton1 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton1 : WpfButton
    {
        
        public ActivitiesDesignButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ConstructorsComboBox1 ConstructorsComboBox
        {
            get
            {
                if ((this.mConstructorsComboBox == null))
                {
                    this.mConstructorsComboBox = new ConstructorsComboBox1(this);
                }
                return this.mConstructorsComboBox;
            }
        }
        
        public WpfText ExpanderIcon
        {
            get
            {
                if ((this.mExpanderIcon == null))
                {
                    this.mExpanderIcon = new WpfText(this);
                    #region Search Criteria
                    this.mExpanderIcon.SearchProperties[WpfText.PropertyNames.Instance] = "1";
                    this.mExpanderIcon.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mExpanderIcon;
            }
        }
        
        public WpfText ConstructorLabel
        {
            get
            {
                if ((this.mConstructorLabel == null))
                {
                    this.mConstructorLabel = new WpfText(this);
                    #region Search Criteria
                    this.mConstructorLabel.SearchProperties[WpfText.PropertyNames.Instance] = "2";
                    this.mConstructorLabel.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mConstructorLabel;
            }
        }
        #endregion
        
        #region Fields
        private ConstructorsComboBox1 mConstructorsComboBox;
        
        private WpfText mExpanderIcon;
        
        private WpfText mConstructorLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ConstructorsComboBox1 : WpfComboBox
    {
        
        public ConstructorsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ConstructorsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public CtorListItem1 CtorListItem
        {
            get
            {
                if ((this.mCtorListItem == null))
                {
                    this.mCtorListItem = new CtorListItem1(this);
                }
                return this.mCtorListItem;
            }
        }
        
        public WpfListItem CtorSystemStringListItem
        {
            get
            {
                if ((this.mCtorSystemStringListItem == null))
                {
                    this.mCtorSystemStringListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String)";
                    this.mCtorSystemStringListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringListItem;
            }
        }
        
        public WpfListItem CtorSystemStringSystListItem
        {
            get
            {
                if ((this.mCtorSystemStringSystListItem == null))
                {
                    this.mCtorSystemStringSystListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mCtorSystemStringSystListItem.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor (System.String,System.String,TestingDotnetDllCascading.Food)";
                    this.mCtorSystemStringSystListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mCtorSystemStringSystListItem;
            }
        }
        #endregion
        
        #region Fields
        private CtorListItem1 mCtorListItem;
        
        private WpfListItem mCtorSystemStringListItem;
        
        private WpfListItem mCtorSystemStringSystListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CtorListItem1 : WpfListItem
    {
        
        public CtorListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = ".ctor ";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfText UICtorText
        {
            get
            {
                if ((this.mUICtorText == null))
                {
                    this.mUICtorText = new WpfText(this);
                    #region Search Criteria
                    this.mUICtorText.SearchProperties[WpfText.PropertyNames.Name] = ".ctor ";
                    this.mUICtorText.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUICtorText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUICtorText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionMethodListBoxList : WpfList
    {
        
        public ActionMethodListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "MethodListBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignListItem ActivitiesDesignListItem
        {
            get
            {
                if ((this.mActivitiesDesignListItem == null))
                {
                    this.mActivitiesDesignListItem = new ActivitiesDesignListItem(this);
                }
                return this.mActivitiesDesignListItem;
            }
        }
        
        public ActivitiesDesignListItem2 ActivitiesDesignListItem2
        {
            get
            {
                if ((this.mActivitiesDesignListItem2 == null))
                {
                    this.mActivitiesDesignListItem2 = new ActivitiesDesignListItem2(this);
                }
                return this.mActivitiesDesignListItem2;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignListItem mActivitiesDesignListItem;
        
        private ActivitiesDesignListItem2 mActivitiesDesignListItem2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignListItem : WpfListItem
    {
        
        public ActivitiesDesignListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Activities.Designers2.Core.ActionRegion.DotNetMethodRegion";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesExpander ActivitiesExpander
        {
            get
            {
                if ((this.mActivitiesExpander == null))
                {
                    this.mActivitiesExpander = new ActivitiesExpander(this);
                }
                return this.mActivitiesExpander;
            }
        }
        
        public GetActivitiesExpander GetActivitiesExpander
        {
            get
            {
                if ((this.mGetActivitiesExpander == null))
                {
                    this.mGetActivitiesExpander = new GetActivitiesExpander(this);
                }
                return this.mGetActivitiesExpander;
            }
        }
        
        public SetActivitiesExpander SetActivitiesExpander
        {
            get
            {
                if ((this.mSetActivitiesExpander == null))
                {
                    this.mSetActivitiesExpander = new SetActivitiesExpander(this);
                }
                return this.mSetActivitiesExpander;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesExpander mActivitiesExpander;
        
        private GetActivitiesExpander mGetActivitiesExpander;
        
        private SetActivitiesExpander mSetActivitiesExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesExpander : WpfExpander
    {
        
        public ActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander__AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionOneLargeDataGridTable ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        
        public ActivitiesDesignButton2 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton2(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionOneLargeDataGridTable mActionOneLargeDataGridTable;
        
        private ActivitiesDesignButton2 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable : WpfTable
    {
        
        public ActionOneLargeDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow : WpfRow
    {
        
        public UIItemRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell : WpfCell
    {
        
        public UIItemWarewolfCoreServCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton2 : WpfButton
    {
        
        public ActivitiesDesignButton2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox1 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox1(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox1 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox1 : WpfComboBox
    {
        
        public ActionsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GetActivitiesExpander : WpfExpander
    {
        
        public GetActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander_get_Name_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionOneLargeDataGridTable1 ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable1(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        
        public ActivitiesDesignButton3 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton3(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionOneLargeDataGridTable1 mActionOneLargeDataGridTable;
        
        private ActivitiesDesignButton3 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable1 : WpfTable
    {
        
        public ActionOneLargeDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow1 UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow1(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow1 mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow1 : WpfRow
    {
        
        public UIItemRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell1 UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell1(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell1 mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell1 : WpfCell
    {
        
        public UIItemWarewolfCoreServCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox1 UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox1(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox1 mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox1 : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton3 : WpfButton
    {
        
        public ActivitiesDesignButton3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox2 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox2(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox2 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox2 : WpfComboBox
    {
        
        public ActionsComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetActivitiesExpander : WpfExpander
    {
        
        public SetActivitiesExpander(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander_set_Name_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton4 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton4(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        
        public ActionOneLargeDataGridTable2 ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable2(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton4 mActivitiesDesignButton;
        
        private ActionOneLargeDataGridTable2 mActionOneLargeDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton4 : WpfButton
    {
        
        public ActivitiesDesignButton4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox3 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox3(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox3 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox3 : WpfComboBox
    {
        
        public ActionsComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable2 : WpfTable
    {
        
        public ActionOneLargeDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow2 UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow2(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow2 mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow2 : WpfRow
    {
        
        public UIItemRow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell2 UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell2(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell2 mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell2 : WpfCell
    {
        
        public UIItemWarewolfCoreServCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox2 UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox2(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox2 mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox2 : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignListItem2 : WpfListItem
    {
        
        public ActivitiesDesignListItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "Dev2.Activities.Designers2.Core.ActionRegion.DotNetMethodRegion";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public SetActivitiesExpander1 SetActivitiesExpander
        {
            get
            {
                if ((this.mSetActivitiesExpander == null))
                {
                    this.mSetActivitiesExpander = new SetActivitiesExpander1(this);
                }
                return this.mSetActivitiesExpander;
            }
        }
        
        public ActivitiesExpander1 ActivitiesExpander
        {
            get
            {
                if ((this.mActivitiesExpander == null))
                {
                    this.mActivitiesExpander = new ActivitiesExpander1(this);
                }
                return this.mActivitiesExpander;
            }
        }
        #endregion
        
        #region Fields
        private SetActivitiesExpander1 mSetActivitiesExpander;
        
        private ActivitiesExpander1 mActivitiesExpander;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetActivitiesExpander1 : WpfExpander
    {
        
        public SetActivitiesExpander1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander_set_Name_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton5 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton5(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        
        public ActionOneLargeDataGridTable3 ActionOneLargeDataGridTable
        {
            get
            {
                if ((this.mActionOneLargeDataGridTable == null))
                {
                    this.mActionOneLargeDataGridTable = new ActionOneLargeDataGridTable3(this);
                }
                return this.mActionOneLargeDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton5 mActivitiesDesignButton;
        
        private ActionOneLargeDataGridTable3 mActionOneLargeDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton5 : WpfButton
    {
        
        public ActivitiesDesignButton5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox4 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox4(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "Delete this Action";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox4 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox4 : WpfComboBox
    {
        
        public ActionsComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionOneLargeDataGridTable3 : WpfTable
    {
        
        public ActionOneLargeDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemRow3 UIItemRow
        {
            get
            {
                if ((this.mUIItemRow == null))
                {
                    this.mUIItemRow = new UIItemRow3(this);
                }
                return this.mUIItemRow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemRow3 mUIItemRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemRow3 : WpfRow
    {
        
        public UIItemRow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIItemWarewolfCoreServCell3 UIItemWarewolfCoreServCell
        {
            get
            {
                if ((this.mUIItemWarewolfCoreServCell == null))
                {
                    this.mUIItemWarewolfCoreServCell = new UIItemWarewolfCoreServCell3(this);
                }
                return this.mUIItemWarewolfCoreServCell;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWarewolfCoreServCell3 mUIItemWarewolfCoreServCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWarewolfCoreServCell3 : WpfCell
    {
        
        public UIItemWarewolfCoreServCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public UIHardcodedvaluesorvarComboBox3 UIHardcodedvaluesorvarComboBox
        {
            get
            {
                if ((this.mUIHardcodedvaluesorvarComboBox == null))
                {
                    this.mUIHardcodedvaluesorvarComboBox = new UIHardcodedvaluesorvarComboBox3(this);
                }
                return this.mUIHardcodedvaluesorvarComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIHardcodedvaluesorvarComboBox3 mUIHardcodedvaluesorvarComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHardcodedvaluesorvarComboBox3 : WpfComboBox
    {
        
        public UIHardcodedvaluesorvarComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesExpander1 : WpfExpander
    {
        
        public ActivitiesExpander1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfExpander.PropertyNames.AutomationId] = "UI_MethodExpander__AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActivitiesDesignButton6 ActivitiesDesignButton
        {
            get
            {
                if ((this.mActivitiesDesignButton == null))
                {
                    this.mActivitiesDesignButton = new ActivitiesDesignButton6(this);
                }
                return this.mActivitiesDesignButton;
            }
        }
        #endregion
        
        #region Fields
        private ActivitiesDesignButton6 mActivitiesDesignButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivitiesDesignButton6 : WpfButton
    {
        
        public ActivitiesDesignButton6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfButton.PropertyNames.AutomationId] = "HeaderSite";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public ActionsComboBox5 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox5(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton DeleteActionButton
        {
            get
            {
                if ((this.mDeleteActionButton == null))
                {
                    this.mDeleteActionButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDeleteActionButton.SearchProperties[WpfButton.PropertyNames.Name] = "";
                    this.mDeleteActionButton.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mDeleteActionButton;
            }
        }
        #endregion
        
        #region Fields
        private ActionsComboBox5 mActionsComboBox;
        
        private WpfButton mDeleteActionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox5 : WpfComboBox
    {
        
        public ActionsComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
            #endregion
        }
        
        #region Properties
        public WpfListItem Set_NameListItem
        {
            get
            {
                if ((this.mSet_NameListItem == null))
                {
                    this.mSet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "set_Name";
                    this.mSet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mSet_NameListItem;
            }
        }
        
        public WpfListItem Get_NameListItem
        {
            get
            {
                if ((this.mGet_NameListItem == null))
                {
                    this.mGet_NameListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGet_NameListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "get_Name";
                    this.mGet_NameListItem.WindowTitles.Add("Warewolf (DEV2\\SANELE.MTHEMBU)");
                    #endregion
                }
                return this.mGet_NameListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mSet_NameListItem;
        
        private WpfListItem mGet_NameListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WcfService : WpfCustom
    {
        
        public WcfService(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WcfEndPointDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WCF Service(WcfEndPointDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        
        public LargeView2 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView2(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfCustom mSmallView;
        
        private LargeView2 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView2 : WpfCustom
    {
        
        public LargeView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourcesCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
                    this.mSourcesCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourcesCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfButton NewButton
        {
            get
            {
                if ((this.mNewButton == null))
                {
                    this.mNewButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewButton;
            }
        }
        
        public WpfComboBox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsCombobox;
            }
        }
        
        public WpfButton RefreshActionsButton
        {
            get
            {
                if ((this.mRefreshActionsButton == null))
                {
                    this.mRefreshActionsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshActionsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshActionsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshActionsButton;
            }
        }
        
        public WpfTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfCheckBox OutputToObjectCheckbox
        {
            get
            {
                if ((this.mOutputToObjectCheckbox == null))
                {
                    this.mOutputToObjectCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOutputToObjectCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "IsObjectCheckBox";
                    this.mOutputToObjectCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputToObjectCheckbox;
            }
        }
        
        public WpfTable OutputsTable
        {
            get
            {
                if ((this.mOutputsTable == null))
                {
                    this.mOutputsTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsTable;
            }
        }
        
        public WpfEdit RecordSetTextbox
        {
            get
            {
                if ((this.mRecordSetTextbox == null))
                {
                    this.mRecordSetTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextbox;
            }
        }
        
        public OnErrorPanel1 OnErrorPanel
        {
            get
            {
                if ((this.mOnErrorPanel == null))
                {
                    this.mOnErrorPanel = new OnErrorPanel1(this);
                }
                return this.mOnErrorPanel;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mSourcesCombobox;
        
        private WpfButton mEditSourceButton;
        
        private WpfButton mNewButton;
        
        private WpfComboBox mActionsCombobox;
        
        private WpfButton mRefreshActionsButton;
        
        private WpfTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfCheckBox mOutputToObjectCheckbox;
        
        private WpfTable mOutputsTable;
        
        private WpfEdit mRecordSetTextbox;
        
        private OnErrorPanel1 mOnErrorPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPanel1 : WpfCustom
    {
        
        public OnErrorPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup1 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup1(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup1 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup1 : WpfGroup
    {
        
        public OnErrorGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox1 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox1(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorWebServiceIntellisenseCombobox1 OnErrorWebServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorWebServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorWebServiceIntellisenseCombobox = new OnErrorWebServiceIntellisenseCombobox1(this);
                }
                return this.mOnErrorWebServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox1 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorWebServiceIntellisenseCombobox1 mOnErrorWebServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorWebServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorWebServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FlowchartTest : WpfCustom
    {
        
        public FlowchartTest(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Unsaved 5(FlowchartDesigner)";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public ComDll1 ComDll
        {
            get
            {
                if ((this.mComDll == null))
                {
                    this.mComDll = new ComDll1(this);
                }
                return this.mComDll;
            }
        }
        #endregion
        
        #region Fields
        private ComDll1 mComDll;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComDll1 : WpfCustom
    {
        
        public ComDll1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ComDllDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Com DLL - Outputs(ComDllDesigner)";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public LargeView3 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView3(this);
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView3 mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView3 : WpfCustom
    {
        
        public LargeView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfButton ComDllCancelButton
        {
            get
            {
                if ((this.mComDllCancelButton == null))
                {
                    this.mComDllCancelButton = new WpfButton(this);
                    #region Search Criteria
                    this.mComDllCancelButton.SearchProperties[WpfButton.PropertyNames.Name] = "Cancel";
                    this.mComDllCancelButton.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComDllCancelButton;
            }
        }
        
        public WpfButton ComDllDoneButton
        {
            get
            {
                if ((this.mComDllDoneButton == null))
                {
                    this.mComDllDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mComDllDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mComDllDoneButton.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComDllDoneButton;
            }
        }
        
        public ComDllLargeDataGridTable ComDllLargeDataGridTable
        {
            get
            {
                if ((this.mComDllLargeDataGridTable == null))
                {
                    this.mComDllLargeDataGridTable = new ComDllLargeDataGridTable(this);
                }
                return this.mComDllLargeDataGridTable;
            }
        }
        
        public WpfButton ComDllTestButton
        {
            get
            {
                if ((this.mComDllTestButton == null))
                {
                    this.mComDllTestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mComDllTestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mComDllTestButton.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComDllTestButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mComDllCancelButton;
        
        private WpfButton mComDllDoneButton;
        
        private ComDllLargeDataGridTable mComDllLargeDataGridTable;
        
        private WpfButton mComDllTestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ComDllLargeDataGridTable : WpfTable
    {
        
        public ComDllLargeDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.SearchProperties[WpfTable.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
            #endregion
        }
        
        #region Properties
        public WpfImage ComDllTestPassedImage
        {
            get
            {
                if ((this.mComDllTestPassedImage == null))
                {
                    this.mComDllTestPassedImage = new WpfImage(this);
                    #region Search Criteria
                    this.mComDllTestPassedImage.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mComDllTestPassedImage.WindowTitles.Add("Warewolf (DEV2\\PIETER.TERBLANCHE)");
                    #endregion
                }
                return this.mComDllTestPassedImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mComDllTestPassedImage;
        #endregion
    }
}
