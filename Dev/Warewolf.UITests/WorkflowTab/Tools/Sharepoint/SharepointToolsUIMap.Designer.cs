// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.WorkflowTab.Tools.Sharepoint.SharepointToolsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class SharepointToolsUIMap
    {
        
        /// <summary>
        /// Open_Tools_UI_Map_Designer_To_Flowchart - Use 'Open_Tools_UI_Map_Designer_To_FlowchartParams' to pass parameters into this method.
        /// </summary>
        public void Open_Tools_UI_Map_Designer_To_Flowchart()
        {
            #region Variable Declarations
            WpfCustom flowchart = this.MainStudioWindow.DockManager.SplitPaneMiddle.TabManSplitPane.TabMan.WorkflowTab.WorkSurfaceContext.WorkflowDesignerView.DesignerView.ScrollViewerPane.ActivityTypeDesigner.WorkflowItemPresenter.Flowchart;
            #endregion

            // Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
            Assert.AreEqual(this.Open_Tools_UI_Map_Designer_To_FlowchartParams.FlowchartExists, flowchart.Exists, "Flowchart does not exist.");
        }
        
        #region Properties
        public virtual Open_Tools_UI_Map_Designer_To_FlowchartParams Open_Tools_UI_Map_Designer_To_FlowchartParams
        {
            get
            {
                if ((this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams == null))
                {
                    this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams = new Open_Tools_UI_Map_Designer_To_FlowchartParams();
                }
                return this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
            }
        }
        
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_Tools_UI_Map_Designer_To_FlowchartParams mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
        
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_Tools_UI_Map_Designer_To_Flowchart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_Tools_UI_Map_Designer_To_FlowchartParams
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
        /// </summary>
        public bool FlowchartExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneMiddle mSplitPaneMiddle;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowTab WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab(this);
                }
                return this.mWorkflowTab;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowTab mWorkflowTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab : WpfTabPage
    {
        
        public WorkflowTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext : WpfCustom
    {
        
        public WorkSurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView mWorkflowDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView : WpfCustom
    {
        
        public WorkflowDesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView : WpfCustom
    {
        
        public DesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane(this);
                }
                return this.mScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane mScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane : WpfPane
    {
        
        public ScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner : WpfCustom
    {
        
        public ActivityTypeDesigner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter : WpfCustom
    {
        
        public WorkflowItemPresenter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart : WpfCustom
    {
        
        public Flowchart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SharepointCopyFile SharepointCopyFile
        {
            get
            {
                if ((this.mSharepointCopyFile == null))
                {
                    this.mSharepointCopyFile = new SharepointCopyFile(this);
                }
                return this.mSharepointCopyFile;
            }
        }
        
        public SharepointCreateListItem SharepointCreateListItem
        {
            get
            {
                if ((this.mSharepointCreateListItem == null))
                {
                    this.mSharepointCreateListItem = new SharepointCreateListItem(this);
                }
                return this.mSharepointCreateListItem;
            }
        }
        
        public SharepointDeleteFile SharepointDeleteFile
        {
            get
            {
                if ((this.mSharepointDeleteFile == null))
                {
                    this.mSharepointDeleteFile = new SharepointDeleteFile(this);
                }
                return this.mSharepointDeleteFile;
            }
        }
        
        public SharepointDeleteListItem SharepointDeleteListItem
        {
            get
            {
                if ((this.mSharepointDeleteListItem == null))
                {
                    this.mSharepointDeleteListItem = new SharepointDeleteListItem(this);
                }
                return this.mSharepointDeleteListItem;
            }
        }
        
        public SharepointDownloadFile SharepointDownloadFile
        {
            get
            {
                if ((this.mSharepointDownloadFile == null))
                {
                    this.mSharepointDownloadFile = new SharepointDownloadFile(this);
                }
                return this.mSharepointDownloadFile;
            }
        }
        
        public SharepointMoveFile SharepointMoveFile
        {
            get
            {
                if ((this.mSharepointMoveFile == null))
                {
                    this.mSharepointMoveFile = new SharepointMoveFile(this);
                }
                return this.mSharepointMoveFile;
            }
        }
        
        public SharepointReadFolder SharepointReadFolder
        {
            get
            {
                if ((this.mSharepointReadFolder == null))
                {
                    this.mSharepointReadFolder = new SharepointReadFolder(this);
                }
                return this.mSharepointReadFolder;
            }
        }
        
        public SharepointReadListItem SharepointReadListItem
        {
            get
            {
                if ((this.mSharepointReadListItem == null))
                {
                    this.mSharepointReadListItem = new SharepointReadListItem(this);
                }
                return this.mSharepointReadListItem;
            }
        }
        
        public SharepointUpdateListItem SharepointUpdateListItem
        {
            get
            {
                if ((this.mSharepointUpdateListItem == null))
                {
                    this.mSharepointUpdateListItem = new SharepointUpdateListItem(this);
                }
                return this.mSharepointUpdateListItem;
            }
        }
        
        public SharepointUploadFile SharepointUploadFile
        {
            get
            {
                if ((this.mSharepointUploadFile == null))
                {
                    this.mSharepointUploadFile = new SharepointUploadFile(this);
                }
                return this.mSharepointUploadFile;
            }
        }
        #endregion
        
        #region Fields
        private SharepointCopyFile mSharepointCopyFile;
        
        private SharepointCreateListItem mSharepointCreateListItem;
        
        private SharepointDeleteFile mSharepointDeleteFile;
        
        private SharepointDeleteListItem mSharepointDeleteListItem;
        
        private SharepointDownloadFile mSharepointDownloadFile;
        
        private SharepointMoveFile mSharepointMoveFile;
        
        private SharepointReadFolder mSharepointReadFolder;
        
        private SharepointReadListItem mSharepointReadListItem;
        
        private SharepointUpdateListItem mSharepointUpdateListItem;
        
        private SharepointUploadFile mSharepointUploadFile;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointCopyFile : WpfCustom
    {
        
        public SharepointCopyFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointCopyFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Copy File(SharePointCopyFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView mLargeView;
        
        private SmallView mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView : WpfCustom
    {
        
        public LargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public FromDirectoryComboBox FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorPane OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public Server Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server(this);
                }
                return this.mServer;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private FromDirectoryComboBox mFromDirectoryComboBox;
        
        private PathDirectoryComboBox mPathDirectoryComboBox;
        
        private ResultComboBox mResultComboBox;
        
        private OnErrorPane mOnErrorPane;
        
        private Server mServer;
        
        private WpfCheckBox mOverwriteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox : WpfComboBox
    {
        
        public FromDirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox : WpfComboBox
    {
        
        public PathDirectoryComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox : WpfComboBox
    {
        
        public ResultComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane : WpfCustom
    {
        
        public OnErrorPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup : WpfGroup
    {
        
        public OnErrorGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server : WpfComboBox
    {
        
        public Server(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointSourceFromToolListItem
        {
            get
            {
                if ((this.mSharepointSourceFromToolListItem == null))
                {
                    this.mSharepointSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mSharepointSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSharepointSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView : WpfCustom
    {
        
        public SmallView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server1 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server1(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox1 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox1(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox1 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox1(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox1 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox1(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server1 mServer;
        
        private FromDirectoryComboBox1 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox1 mPathDirectoryComboBox;
        
        private ResultComboBox1 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server1 : WpfComboBox
    {
        
        public Server1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox1 : WpfComboBox
    {
        
        public FromDirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox1 : WpfComboBox
    {
        
        public PathDirectoryComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox1 : WpfComboBox
    {
        
        public ResultComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointCreateListItem : WpfCustom
    {
        
        public SharepointCreateListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListCreateDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Sharepoint Create List Item(SharepointListCreateDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView1 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView1(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView1 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView1(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView1 mLargeView;
        
        private SmallView1 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView1 : WpfCustom
    {
        
        public LargeView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server2 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server2(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTable DataGridTable
        {
            get
            {
                if ((this.mDataGridTable == null))
                {
                    this.mDataGridTable = new DataGridTable(this);
                }
                return this.mDataGridTable;
            }
        }
        
        public OnErrorPane1 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane1(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public ResultComboBox2 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox2(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server2 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTable mDataGridTable;
        
        private OnErrorPane1 mOnErrorPane;
        
        private ResultComboBox2 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server2 : WpfComboBox
    {
        
        public Server2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList : WpfComboBox
    {
        
        public MethodList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTable : WpfTable
    {
        
        public DataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ContentTypeRow ContentTypeRow
        {
            get
            {
                if ((this.mContentTypeRow == null))
                {
                    this.mContentTypeRow = new ContentTypeRow(this);
                }
                return this.mContentTypeRow;
            }
        }
        
        public TitleRow TitleRow
        {
            get
            {
                if ((this.mTitleRow == null))
                {
                    this.mTitleRow = new TitleRow(this);
                }
                return this.mTitleRow;
            }
        }
        
        public AttachmentsRow AttachmentsRow
        {
            get
            {
                if ((this.mAttachmentsRow == null))
                {
                    this.mAttachmentsRow = new AttachmentsRow(this);
                }
                return this.mAttachmentsRow;
            }
        }
        #endregion
        
        #region Fields
        private ContentTypeRow mContentTypeRow;
        
        private TitleRow mTitleRow;
        
        private AttachmentsRow mAttachmentsRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ContentTypeRow : WpfRow
    {
        
        public ContentTypeRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Content Type";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemContentTypeCell ItemContentTypeCell
        {
            get
            {
                if ((this.mItemContentTypeCell == null))
                {
                    this.mItemContentTypeCell = new ItemContentTypeCell(this);
                }
                return this.mItemContentTypeCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemContentTypeCell mItemContentTypeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemContentTypeCell : WpfCell
    {
        
        public ItemContentTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText ContentTypeText
        {
            get
            {
                if ((this.mContentTypeText == null))
                {
                    this.mContentTypeText = new WpfText(this);
                    #region Search Criteria
                    this.mContentTypeText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mContentTypeText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mContentTypeText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mContentTypeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TitleRow : WpfRow
    {
        
        public TitleRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Title";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TitleColumnCell TitleColumnCell
        {
            get
            {
                if ((this.mTitleColumnCell == null))
                {
                    this.mTitleColumnCell = new TitleColumnCell(this);
                }
                return this.mTitleColumnCell;
            }
        }
        #endregion
        
        #region Fields
        private TitleColumnCell mTitleColumnCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TitleColumnCell : WpfCell
    {
        
        public TitleColumnCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText TitleText
        {
            get
            {
                if ((this.mTitleText == null))
                {
                    this.mTitleText = new WpfText(this);
                    #region Search Criteria
                    this.mTitleText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mTitleText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTitleText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mTitleText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AttachmentsRow : WpfRow
    {
        
        public AttachmentsRow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Name] = "Attachments";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemAttachmentsCell ItemAttachmentsCell
        {
            get
            {
                if ((this.mItemAttachmentsCell == null))
                {
                    this.mItemAttachmentsCell = new ItemAttachmentsCell(this);
                }
                return this.mItemAttachmentsCell;
            }
        }
        #endregion
        
        #region Fields
        private ItemAttachmentsCell mItemAttachmentsCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemAttachmentsCell : WpfCell
    {
        
        public ItemAttachmentsCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "To Field";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfText AttachmentsText
        {
            get
            {
                if ((this.mAttachmentsText == null))
                {
                    this.mAttachmentsText = new WpfText(this);
                    #region Search Criteria
                    this.mAttachmentsText.SearchProperties[WpfText.PropertyNames.AutomationId] = "UI__Row0_OutputColumnName_AutoID";
                    this.mAttachmentsText.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mAttachmentsText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mAttachmentsText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane1 : WpfCustom
    {
        
        public OnErrorPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup1 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup1(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup1 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup1 : WpfGroup
    {
        
        public OnErrorGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox1 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox1(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox1 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox1(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox1 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox1 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox1 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox2 : WpfComboBox
    {
        
        public ResultComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView1 : WpfCustom
    {
        
        public SmallView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server3 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server3(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList1 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList1(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public ResultComboBox3 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox3(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server3 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList1 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private ResultComboBox3 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server3 : WpfComboBox
    {
        
        public Server3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList1 : WpfComboBox
    {
        
        public MethodList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox3 : WpfComboBox
    {
        
        public ResultComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDeleteFile : WpfCustom
    {
        
        public SharepointDeleteFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointDeleteFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Delete File(SharePointDeleteFileDesigner)";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public SmallView2 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView2(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView2 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView2(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView2 mSmallView;
        
        private LargeView2 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView2 : WpfCustom
    {
        
        public SmallView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public Server4 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server4(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathComboBox ServerPathComboBox
        {
            get
            {
                if ((this.mServerPathComboBox == null))
                {
                    this.mServerPathComboBox = new ServerPathComboBox(this);
                }
                return this.mServerPathComboBox;
            }
        }
        
        public ResultComboBox4 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox4(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server4 mServer;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathComboBox mServerPathComboBox;
        
        private ResultComboBox4 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server4 : WpfComboBox
    {
        
        public Server4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""9872fb6a-87a8-4082-874e-3c9bff8100a0"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathComboBox : WpfComboBox
    {
        
        public ServerPathComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox4 : WpfComboBox
    {
        
        public ResultComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView2 : WpfCustom
    {
        
        public LargeView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public Server5 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server5(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathComboBox1 ServerPathComboBox
        {
            get
            {
                if ((this.mServerPathComboBox == null))
                {
                    this.mServerPathComboBox = new ServerPathComboBox1(this);
                }
                return this.mServerPathComboBox;
            }
        }
        
        public ResultComboBox5 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox5(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfGroup OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new WpfGroup(this);
                    #region Search Criteria
                    this.mOnErrorPane.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
                    this.mOnErrorPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server5 mServer;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathComboBox1 mServerPathComboBox;
        
        private ResultComboBox5 mResultComboBox;
        
        private WpfGroup mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server5 : WpfComboBox
    {
        
        public Server5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathComboBox1 : WpfComboBox
    {
        
        public ServerPathComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox5 : WpfComboBox
    {
        
        public ResultComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDeleteListItem : WpfCustom
    {
        
        public SharepointDeleteListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListDeleteDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListDeleteDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView3 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView3(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView3 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView3(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView3 mLargeView;
        
        private SmallView3 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView3 : WpfCustom
    {
        
        public LargeView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server6 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server6(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList2 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList2(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTable1 DataGridTable
        {
            get
            {
                if ((this.mDataGridTable == null))
                {
                    this.mDataGridTable = new DataGridTable1(this);
                }
                return this.mDataGridTable;
            }
        }
        
        public OnErrorPane2 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane2(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox RequirementCheckBox
        {
            get
            {
                if ((this.mRequirementCheckBox == null))
                {
                    this.mRequirementCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequirementCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequirementCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRequirementCheckBox;
            }
        }
        
        public ResultComboBox6 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox6(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server6 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList2 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTable1 mDataGridTable;
        
        private OnErrorPane2 mOnErrorPane;
        
        private WpfCheckBox mRequirementCheckBox;
        
        private ResultComboBox6 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server6 : WpfComboBox
    {
        
        public Server6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList2 : WpfComboBox
    {
        
        public MethodList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTable1 : WpfTable
    {
        
        public DataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow1 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow1(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow1 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow1 : WpfRow
    {
        
        public ItemRow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell mFileNameCell;
        
        private MatchTypeCell mMatchTypeCell;
        
        private ValueCell mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell : WpfCell
    {
        
        public FileNameCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell : WpfCell
    {
        
        public MatchTypeCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell : WpfCell
    {
        
        public ValueCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox : WpfComboBox
    {
        
        public ValueComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane2 : WpfCustom
    {
        
        public OnErrorPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup2 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup2(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup2 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup2 : WpfGroup
    {
        
        public OnErrorGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox2 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox2(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox2 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox2(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox2 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox2 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox2 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox2 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox6 : WpfComboBox
    {
        
        public ResultComboBox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView3 : WpfCustom
    {
        
        public SmallView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server7 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server7(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList3 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList3(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public ResultComboBox7 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox7(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server7 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList3 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private ResultComboBox7 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server7 : WpfComboBox
    {
        
        public Server7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList3 : WpfComboBox
    {
        
        public MethodList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox7 : WpfComboBox
    {
        
        public ResultComboBox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointDownloadFile : WpfCustom
    {
        
        public SharepointDownloadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointFileDownLoadDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Download File(SharePointFileDownLoadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView4 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView4(this);
                }
                return this.mSmallView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView4 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView4(this);
                }
                return this.mLargeView;
            }
        }
        #endregion
        
        #region Fields
        private SmallView4 mSmallView;
        
        private WpfButton mDoneButton;
        
        private LargeView4 mLargeView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView4 : WpfCustom
    {
        
        public SmallView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ServerPathFromIntellisenseCombobox ServerPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathFromIntellisenseCombobox == null))
                {
                    this.mServerPathFromIntellisenseCombobox = new ServerPathFromIntellisenseCombobox(this);
                }
                return this.mServerPathFromIntellisenseCombobox;
            }
        }
        
        public LocalPathToIntellisenseCombobox LocalPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathToIntellisenseCombobox == null))
                {
                    this.mLocalPathToIntellisenseCombobox = new LocalPathToIntellisenseCombobox(this);
                }
                return this.mLocalPathToIntellisenseCombobox;
            }
        }
        
        public ResultIntellisenseCombobox ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server8 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server8(this);
                }
                return this.mServer;
            }
        }
        #endregion
        
        #region Fields
        private ServerPathFromIntellisenseCombobox mServerPathFromIntellisenseCombobox;
        
        private LocalPathToIntellisenseCombobox mLocalPathToIntellisenseCombobox;
        
        private ResultIntellisenseCombobox mResultIntellisenseCombobox;
        
        private WpfButton mEditSourceButton;
        
        private Server8 mServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathFromIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathFromIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathToIntellisenseCombobox : WpfComboBox
    {
        
        public LocalPathToIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox : WpfComboBox
    {
        
        public ResultIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server8 : WpfComboBox
    {
        
        public Server8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""9872fb6a-87a8-4082-874e-3c9bff8100a0"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView4 : WpfCustom
    {
        
        public LargeView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server9 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server9(this);
                }
                return this.mServer;
            }
        }
        
        public ServerPathFromIntellisenseTextbox ServerPathFromIntellisenseTextbox
        {
            get
            {
                if ((this.mServerPathFromIntellisenseTextbox == null))
                {
                    this.mServerPathFromIntellisenseTextbox = new ServerPathFromIntellisenseTextbox(this);
                }
                return this.mServerPathFromIntellisenseTextbox;
            }
        }
        
        public LocalPathToIntellisenseCombobox1 LocalPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathToIntellisenseCombobox == null))
                {
                    this.mLocalPathToIntellisenseCombobox = new LocalPathToIntellisenseCombobox1(this);
                }
                return this.mLocalPathToIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        
        public OnErrorPane3 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane3(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ResultComboBox8 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox8(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server9 mServer;
        
        private ServerPathFromIntellisenseTextbox mServerPathFromIntellisenseTextbox;
        
        private LocalPathToIntellisenseCombobox1 mLocalPathToIntellisenseCombobox;
        
        private WpfCheckBox mOverwriteCheckBox;
        
        private OnErrorPane3 mOnErrorPane;
        
        private WpfButton mEditSourceButton;
        
        private ResultComboBox8 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server9 : WpfComboBox
    {
        
        public Server9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathFromIntellisenseTextbox : WpfComboBox
    {
        
        public ServerPathFromIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathToIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalPathToIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane3 : WpfCustom
    {
        
        public OnErrorPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup3 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup3(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup3 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup3 : WpfGroup
    {
        
        public OnErrorGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox3 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox3(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox3 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox3(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox3 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox3 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox3 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox3 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox8 : WpfComboBox
    {
        
        public ResultComboBox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointMoveFile : WpfCustom
    {
        
        public SharepointMoveFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointMoveFileDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Move File(SharePointMoveFileDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView5 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView5(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView5 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView5(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView5 mLargeView;
        
        private SmallView5 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView5 : WpfCustom
    {
        
        public LargeView5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server10 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server10(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox2 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox2(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox2 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox2(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox9 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox9(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorPane4 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane4(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox OverwriteCheckBox
        {
            get
            {
                if ((this.mOverwriteCheckBox == null))
                {
                    this.mOverwriteCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mOverwriteCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Overwrite";
                    this.mOverwriteCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOverwriteCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server10 mServer;
        
        private FromDirectoryComboBox2 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox2 mPathDirectoryComboBox;
        
        private ResultComboBox9 mResultComboBox;
        
        private OnErrorPane4 mOnErrorPane;
        
        private WpfCheckBox mOverwriteCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server10 : WpfComboBox
    {
        
        public Server10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox2 : WpfComboBox
    {
        
        public FromDirectoryComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox2 : WpfComboBox
    {
        
        public PathDirectoryComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox9 : WpfComboBox
    {
        
        public ResultComboBox9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane4 : WpfCustom
    {
        
        public OnErrorPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup4 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup4(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup4 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup4 : WpfGroup
    {
        
        public OnErrorGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox4 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox4(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox4 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox4(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox4 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox4 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox4 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox4 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView5 : WpfCustom
    {
        
        public SmallView5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public Server11 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server11(this);
                }
                return this.mServer;
            }
        }
        
        public FromDirectoryComboBox3 FromDirectoryComboBox
        {
            get
            {
                if ((this.mFromDirectoryComboBox == null))
                {
                    this.mFromDirectoryComboBox = new FromDirectoryComboBox3(this);
                }
                return this.mFromDirectoryComboBox;
            }
        }
        
        public PathDirectoryComboBox3 PathDirectoryComboBox
        {
            get
            {
                if ((this.mPathDirectoryComboBox == null))
                {
                    this.mPathDirectoryComboBox = new PathDirectoryComboBox3(this);
                }
                return this.mPathDirectoryComboBox;
            }
        }
        
        public ResultComboBox10 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox10(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private Server11 mServer;
        
        private FromDirectoryComboBox3 mFromDirectoryComboBox;
        
        private PathDirectoryComboBox3 mPathDirectoryComboBox;
        
        private ResultComboBox10 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server11 : WpfComboBox
    {
        
        public Server11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FromDirectoryComboBox3 : WpfComboBox
    {
        
        public FromDirectoryComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PathDirectoryComboBox3 : WpfComboBox
    {
        
        public PathDirectoryComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox10 : WpfComboBox
    {
        
        public ResultComboBox10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointReadFolder : WpfCustom
    {
        
        public SharepointReadFolder(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharePointReadFolderDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Read Folder Items(SharePointReadFolderDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SmallView6 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView6(this);
                }
                return this.mSmallView;
            }
        }
        
        public LargeView6 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView6(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        #endregion
        
        #region Fields
        private SmallView6 mSmallView;
        
        private LargeView6 mLargeView;
        
        private WpfButton mDoneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView6 : WpfCustom
    {
        
        public SmallView6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathIntellisenseCombobox ServerPathIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathIntellisenseCombobox == null))
                {
                    this.mServerPathIntellisenseCombobox = new ServerPathIntellisenseCombobox(this);
                }
                return this.mServerPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesAndFoldersRadioButton
        {
            get
            {
                if ((this.mFilesAndFoldersRadioButton == null))
                {
                    this.mFilesAndFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesAndFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesAndFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesAndFoldersRadioButton;
            }
        }
        
        public ResultIntellisenseCombobox1 ResultIntellisenseCombobox
        {
            get
            {
                if ((this.mResultIntellisenseCombobox == null))
                {
                    this.mResultIntellisenseCombobox = new ResultIntellisenseCombobox1(this);
                }
                return this.mResultIntellisenseCombobox;
            }
        }
        
        public Server12 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server12(this);
                }
                return this.mServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mEditSourceButton;
        
        private ServerPathIntellisenseCombobox mServerPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesAndFoldersRadioButton;
        
        private ResultIntellisenseCombobox1 mResultIntellisenseCombobox;
        
        private Server12 mServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseCombobox1 : WpfComboBox
    {
        
        public ResultIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server12 : WpfComboBox
    {
        
        public Server12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""9872fb6a-87a8-4082-874e-3c9bff8100a0"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView6 : WpfCustom
    {
        
        public LargeView6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server13 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server13(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ServerPathIntellisenseCombobox1 ServerPathIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathIntellisenseCombobox == null))
                {
                    this.mServerPathIntellisenseCombobox = new ServerPathIntellisenseCombobox1(this);
                }
                return this.mServerPathIntellisenseCombobox;
            }
        }
        
        public WpfRadioButton FilesRadioButton
        {
            get
            {
                if ((this.mFilesRadioButton == null))
                {
                    this.mFilesRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files";
                    this.mFilesRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesRadioButton;
            }
        }
        
        public WpfRadioButton FoldersRadioButton
        {
            get
            {
                if ((this.mFoldersRadioButton == null))
                {
                    this.mFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Folders";
                    this.mFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFoldersRadioButton;
            }
        }
        
        public WpfRadioButton FilesAndFoldersRadioButton
        {
            get
            {
                if ((this.mFilesAndFoldersRadioButton == null))
                {
                    this.mFilesAndFoldersRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mFilesAndFoldersRadioButton.SearchProperties[WpfRadioButton.PropertyNames.Name] = "Files & Folders";
                    this.mFilesAndFoldersRadioButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFilesAndFoldersRadioButton;
            }
        }
        
        public ResultIntellisenseTextbox ResultIntellisenseTextbox
        {
            get
            {
                if ((this.mResultIntellisenseTextbox == null))
                {
                    this.mResultIntellisenseTextbox = new ResultIntellisenseTextbox(this);
                }
                return this.mResultIntellisenseTextbox;
            }
        }
        
        public OnErrorPane5 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane5(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server13 mServer;
        
        private WpfButton mEditSourceButton;
        
        private ServerPathIntellisenseCombobox1 mServerPathIntellisenseCombobox;
        
        private WpfRadioButton mFilesRadioButton;
        
        private WpfRadioButton mFoldersRadioButton;
        
        private WpfRadioButton mFilesAndFoldersRadioButton;
        
        private ResultIntellisenseTextbox mResultIntellisenseTextbox;
        
        private OnErrorPane5 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server13 : WpfComboBox
    {
        
        public Server13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathIntellisenseCombobox1 : WpfComboBox
    {
        
        public ServerPathIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultIntellisenseTextbox : WpfComboBox
    {
        
        public ResultIntellisenseTextbox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane5 : WpfCustom
    {
        
        public OnErrorPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup5 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup5(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup5 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup5 : WpfGroup
    {
        
        public OnErrorGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox5 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox5(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox5 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox5(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox5 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox5 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox5 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox5 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointReadListItem : WpfCustom
    {
        
        public SharepointReadListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListReadDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListReadDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView7 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView7(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView7 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView7(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView7 mLargeView;
        
        private SmallView7 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView7 : WpfCustom
    {
        
        public LargeView7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server14 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server14(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList4 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList4(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTableVariables DataGridTableVariables
        {
            get
            {
                if ((this.mDataGridTableVariables == null))
                {
                    this.mDataGridTableVariables = new DataGridTableVariables(this);
                }
                return this.mDataGridTableVariables;
            }
        }
        
        public DataGridTableValues DataGridTableValues
        {
            get
            {
                if ((this.mDataGridTableValues == null))
                {
                    this.mDataGridTableValues = new DataGridTableValues(this);
                }
                return this.mDataGridTableValues;
            }
        }
        
        public OnErrorPane6 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane6(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox RequirementCheckBox
        {
            get
            {
                if ((this.mRequirementCheckBox == null))
                {
                    this.mRequirementCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequirementCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequirementCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRequirementCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private Server14 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList4 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTableVariables mDataGridTableVariables;
        
        private DataGridTableValues mDataGridTableValues;
        
        private OnErrorPane6 mOnErrorPane;
        
        private WpfCheckBox mRequirementCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server14 : WpfComboBox
    {
        
        public Server14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList4 : WpfComboBox
    {
        
        public MethodList4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableVariables : WpfTable
    {
        
        public DataGridTableVariables(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow11 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow11(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow11 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow11 : WpfRow
    {
        
        public ItemRow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell1 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell1(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell1 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell1(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell1 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell1(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell1 mFileNameCell;
        
        private MatchTypeCell1 mMatchTypeCell;
        
        private ValueCell1 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell1 : WpfCell
    {
        
        public FileNameCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell1 : WpfCell
    {
        
        public MatchTypeCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell1 : WpfCell
    {
        
        public ValueCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox1 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox1(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox1 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox1 : WpfComboBox
    {
        
        public ValueComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableValues : WpfTable
    {
        
        public DataGridTableValues(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow12 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow12(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow12 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow12 : WpfRow
    {
        
        public ItemRow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell2 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell2(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell2 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell2(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell2 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell2(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell2 mFileNameCell;
        
        private MatchTypeCell2 mMatchTypeCell;
        
        private ValueCell2 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell2 : WpfCell
    {
        
        public FileNameCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell2 : WpfCell
    {
        
        public MatchTypeCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell2 : WpfCell
    {
        
        public ValueCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox2 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox2(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox2 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox2 : WpfComboBox
    {
        
        public ValueComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane6 : WpfCustom
    {
        
        public OnErrorPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup6 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup6(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup6 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup6 : WpfGroup
    {
        
        public OnErrorGroup6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox6 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox6(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox6 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox6(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox6 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox6 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox6 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox6 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView7 : WpfCustom
    {
        
        public SmallView7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server15 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server15(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList5 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList5(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public WpfComboBox SourceCombobox
        {
            get
            {
                if ((this.mSourceCombobox == null))
                {
                    this.mSourceCombobox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mSourceCombobox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
                    this.mSourceCombobox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSourceCombobox;
            }
        }
        #endregion
        
        #region Fields
        private Server15 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList5 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private WpfComboBox mSourceCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server15 : WpfComboBox
    {
        
        public Server15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList5 : WpfComboBox
    {
        
        public MethodList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointUpdateListItem : WpfCustom
    {
        
        public SharepointUpdateListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SharepointListUpdateDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SharepointListUpdateDesigner", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView8 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView8(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView8 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView8(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView8 mLargeView;
        
        private SmallView8 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView8 : WpfCustom
    {
        
        public LargeView8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server16 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server16(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList6 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList6(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public DataGridTableVariables1 DataGridTableVariables
        {
            get
            {
                if ((this.mDataGridTableVariables == null))
                {
                    this.mDataGridTableVariables = new DataGridTableVariables1(this);
                }
                return this.mDataGridTableVariables;
            }
        }
        
        public DataGridTableValues1 DataGridTableValues
        {
            get
            {
                if ((this.mDataGridTableValues == null))
                {
                    this.mDataGridTableValues = new DataGridTableValues1(this);
                }
                return this.mDataGridTableValues;
            }
        }
        
        public OnErrorPane7 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane7(this);
                }
                return this.mOnErrorPane;
            }
        }
        
        public WpfCheckBox RequirementCheckBox
        {
            get
            {
                if ((this.mRequirementCheckBox == null))
                {
                    this.mRequirementCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mRequirementCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__RequireAllTrue_AutoID";
                    this.mRequirementCheckBox.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mRequirementCheckBox;
            }
        }
        
        public ResultComboBox11 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox11(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server16 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList6 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private DataGridTableVariables1 mDataGridTableVariables;
        
        private DataGridTableValues1 mDataGridTableValues;
        
        private OnErrorPane7 mOnErrorPane;
        
        private WpfCheckBox mRequirementCheckBox;
        
        private ResultComboBox11 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server16 : WpfComboBox
    {
        
        public Server16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList6 : WpfComboBox
    {
        
        public MethodList6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableVariables1 : WpfTable
    {
        
        public DataGridTableVariables1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow13 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow13(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow13 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow13 : WpfRow
    {
        
        public ItemRow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell3 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell3(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell3 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell3(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell3 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell3(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell3 mFileNameCell;
        
        private MatchTypeCell3 mMatchTypeCell;
        
        private ValueCell3 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell3 : WpfCell
    {
        
        public FileNameCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell3 : WpfCell
    {
        
        public MatchTypeCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell3 : WpfCell
    {
        
        public ValueCell3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox3 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox3(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox3 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox3 : WpfComboBox
    {
        
        public ValueComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataGridTableValues1 : WpfTable
    {
        
        public DataGridTableValues1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ItemRow14 ItemRow1
        {
            get
            {
                if ((this.mItemRow1 == null))
                {
                    this.mItemRow1 = new ItemRow14(this);
                }
                return this.mItemRow1;
            }
        }
        #endregion
        
        #region Fields
        private ItemRow14 mItemRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ItemRow14 : WpfRow
    {
        
        public ItemRow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public FileNameCell4 FileNameCell
        {
            get
            {
                if ((this.mFileNameCell == null))
                {
                    this.mFileNameCell = new FileNameCell4(this);
                }
                return this.mFileNameCell;
            }
        }
        
        public MatchTypeCell4 MatchTypeCell
        {
            get
            {
                if ((this.mMatchTypeCell == null))
                {
                    this.mMatchTypeCell = new MatchTypeCell4(this);
                }
                return this.mMatchTypeCell;
            }
        }
        
        public ValueCell4 ValueCell
        {
            get
            {
                if ((this.mValueCell == null))
                {
                    this.mValueCell = new ValueCell4(this);
                }
                return this.mValueCell;
            }
        }
        #endregion
        
        #region Fields
        private FileNameCell4 mFileNameCell;
        
        private MatchTypeCell4 mMatchTypeCell;
        
        private ValueCell4 mValueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class FileNameCell4 : WpfCell
    {
        
        public FileNameCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Field Name";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox FieldComboBox
        {
            get
            {
                if ((this.mFieldComboBox == null))
                {
                    this.mFieldComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mFieldComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mFieldComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFieldComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mFieldComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MatchTypeCell4 : WpfCell
    {
        
        public MatchTypeCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Match Type";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfComboBox MatchTypeComboBox
        {
            get
            {
                if ((this.mMatchTypeComboBox == null))
                {
                    this.mMatchTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mMatchTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchType_AutoID";
                    this.mMatchTypeComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mMatchTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mMatchTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueCell4 : WpfCell
    {
        
        public ValueCell4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Value";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ValueComboBox4 ValueComboBox
        {
            get
            {
                if ((this.mValueComboBox == null))
                {
                    this.mValueComboBox = new ValueComboBox4(this);
                }
                return this.mValueComboBox;
            }
        }
        #endregion
        
        #region Fields
        private ValueComboBox4 mValueComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ValueComboBox4 : WpfComboBox
    {
        
        public ValueComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Row1_SearchCriteria_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane7 : WpfCustom
    {
        
        public OnErrorPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup7 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup7(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup7 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup7 : WpfGroup
    {
        
        public OnErrorGroup7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox7 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox7(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox7 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox7(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox7 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox7 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox7 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox7 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox11 : WpfComboBox
    {
        
        public ResultComboBox11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView8 : WpfCustom
    {
        
        public SmallView8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server17 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server17(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public MethodList7 MethodList
        {
            get
            {
                if ((this.mMethodList == null))
                {
                    this.mMethodList = new MethodList7(this);
                }
                return this.mMethodList;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfCustom Spinner
        {
            get
            {
                if ((this.mSpinner == null))
                {
                    this.mSpinner = new WpfCustom(this);
                    #region Search Criteria
                    this.mSpinner.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.CircularProgressBar";
                    this.mSpinner.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mSpinner.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSpinner;
            }
        }
        
        public ResultComboBox12 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox12(this);
                }
                return this.mResultComboBox;
            }
        }
        #endregion
        
        #region Fields
        private Server17 mServer;
        
        private WpfButton mEditSourceButton;
        
        private MethodList7 mMethodList;
        
        private WpfButton mRefreshButton;
        
        private WpfCustom mSpinner;
        
        private ResultComboBox12 mResultComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server17 : WpfComboBox
    {
        
        public Server17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":null,""AuthenticationType"":""Windows"",""UserName"":null,""Password"":null,""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""77fe880c-baa0-4f69-ad3c-94439293c611"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""New Sharepoint Server Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""Server"":""http://rsaklfsvrsharep/"",""AuthenticationType"":""Windows"",""UserName"":"""",""Password"":"""",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""IsSharepointOnline"":false,""Version"":null,""ResourceID"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""ResourceType"":""SharepointServerSource"",""ResourceName"":""SharePoint Test Server"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":{""DateTimeStamp"":""2015-07-07T09:49:43.2102319+02:00"",""Reason"":""Save"",""User"":""Unknown"",""VersionNumber"":""1"",""ResourceId"":""94d4b4ca-31e1-494d-886b-cd94224c9a8b"",""VersionId"":""6d47f370-c0d3-4b96-89d7-52090a38331a""}}";
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MethodList7 : WpfComboBox
    {
        
        public MethodList7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIAcceptanceTesting_CrListItem
        {
            get
            {
                if ((this.mUIAcceptanceTesting_CrListItem == null))
                {
                    this.mUIAcceptanceTesting_CrListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAcceptanceTesting_CrListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "AcceptanceTesting_Create";
                    this.mUIAcceptanceTesting_CrListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAcceptanceTesting_CrListItem;
            }
        }
        
        public WpfListItem UIAppdataListItem
        {
            get
            {
                if ((this.mUIAppdataListItem == null))
                {
                    this.mUIAppdataListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIAppdataListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "appdata";
                    this.mUIAppdataListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUIAppdataListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIAcceptanceTesting_CrListItem;
        
        private WpfListItem mUIAppdataListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox12 : WpfComboBox
    {
        
        public ResultComboBox12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITextEdit
        {
            get
            {
                if ((this.mUITextEdit == null))
                {
                    this.mUITextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mUITextEdit.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mUITextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SharepointUploadFile : WpfCustom
    {
        
        public SharepointUploadFile(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.ClassName, "SharePointFileUploadDesigner", PropertyExpressionOperator.Contains));
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SharePoint Upload File(SharePointFileUploadDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView9 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView9(this);
                }
                return this.mLargeView;
            }
        }
        
        public SmallView9 SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new SmallView9(this);
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView9 mLargeView;
        
        private SmallView9 mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView9 : WpfCustom
    {
        
        public LargeView9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server18 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server18(this);
                }
                return this.mServer;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public LocalPathFromIntellisenseCombobox LocalPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathFromIntellisenseCombobox == null))
                {
                    this.mLocalPathFromIntellisenseCombobox = new LocalPathFromIntellisenseCombobox(this);
                }
                return this.mLocalPathFromIntellisenseCombobox;
            }
        }
        
        public ServerPathToIntellisenseCombobox ServerPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathToIntellisenseCombobox == null))
                {
                    this.mServerPathToIntellisenseCombobox = new ServerPathToIntellisenseCombobox(this);
                }
                return this.mServerPathToIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public OnErrorPane8 OnErrorPane
        {
            get
            {
                if ((this.mOnErrorPane == null))
                {
                    this.mOnErrorPane = new OnErrorPane8(this);
                }
                return this.mOnErrorPane;
            }
        }
        #endregion
        
        #region Fields
        private Server18 mServer;
        
        private WpfButton mEditSourceButton;
        
        private LocalPathFromIntellisenseCombobox mLocalPathFromIntellisenseCombobox;
        
        private ServerPathToIntellisenseCombobox mServerPathToIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox mResultsIntellisenseCombobox;
        
        private OnErrorPane8 mOnErrorPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server18 : WpfComboBox
    {
        
        public Server18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "2";
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "SharePoint Test Server", PropertyExpressionOperator.Contains));
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathFromIntellisenseCombobox : WpfComboBox
    {
        
        public LocalPathFromIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathToIntellisenseCombobox : WpfComboBox
    {
        
        public ServerPathToIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorPane8 : WpfCustom
    {
        
        public OnErrorPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup8 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup8(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup8 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup8 : WpfGroup
    {
        
        public OnErrorGroup8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorVariableIntellisenseCombobox8 OnErrorVariableIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorVariableIntellisenseCombobox == null))
                {
                    this.mOnErrorVariableIntellisenseCombobox = new OnErrorVariableIntellisenseCombobox8(this);
                }
                return this.mOnErrorVariableIntellisenseCombobox;
            }
        }
        
        public OnErrorServiceIntellisenseCombobox8 OnErrorServiceIntellisenseCombobox
        {
            get
            {
                if ((this.mOnErrorServiceIntellisenseCombobox == null))
                {
                    this.mOnErrorServiceIntellisenseCombobox = new OnErrorServiceIntellisenseCombobox8(this);
                }
                return this.mOnErrorServiceIntellisenseCombobox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckbox
        {
            get
            {
                if ((this.mEndthisworkflowCheckbox == null))
                {
                    this.mEndthisworkflowCheckbox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckbox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckbox;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorVariableIntellisenseCombobox8 mOnErrorVariableIntellisenseCombobox;
        
        private OnErrorServiceIntellisenseCombobox8 mOnErrorServiceIntellisenseCombobox;
        
        private WpfCheckBox mEndthisworkflowCheckbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorVariableIntellisenseCombobox8 : WpfComboBox
    {
        
        public OnErrorVariableIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorServiceIntellisenseCombobox8 : WpfComboBox
    {
        
        public OnErrorServiceIntellisenseCombobox8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallView9 : WpfCustom
    {
        
        public SmallView9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Server19 Server
        {
            get
            {
                if ((this.mServer == null))
                {
                    this.mServer = new Server19(this);
                }
                return this.mServer;
            }
        }
        
        public LocalPathFromIntellisenseCombobox1 LocalPathFromIntellisenseCombobox
        {
            get
            {
                if ((this.mLocalPathFromIntellisenseCombobox == null))
                {
                    this.mLocalPathFromIntellisenseCombobox = new LocalPathFromIntellisenseCombobox1(this);
                }
                return this.mLocalPathFromIntellisenseCombobox;
            }
        }
        
        public ServerPathToIntellisenseCombobox1 ServerPathToIntellisenseCombobox
        {
            get
            {
                if ((this.mServerPathToIntellisenseCombobox == null))
                {
                    this.mServerPathToIntellisenseCombobox = new ServerPathToIntellisenseCombobox1(this);
                }
                return this.mServerPathToIntellisenseCombobox;
            }
        }
        
        public ResultsIntellisenseCombobox1 ResultsIntellisenseCombobox
        {
            get
            {
                if ((this.mResultsIntellisenseCombobox == null))
                {
                    this.mResultsIntellisenseCombobox = new ResultsIntellisenseCombobox1(this);
                }
                return this.mResultsIntellisenseCombobox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        #endregion
        
        #region Fields
        private Server19 mServer;
        
        private LocalPathFromIntellisenseCombobox1 mLocalPathFromIntellisenseCombobox;
        
        private ServerPathToIntellisenseCombobox1 mServerPathToIntellisenseCombobox;
        
        private ResultsIntellisenseCombobox1 mResultsIntellisenseCombobox;
        
        private WpfButton mEditSourceButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Server19 : WpfComboBox
    {
        
        public Server19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewSharePointSource
        {
            get
            {
                if ((this.mNewSharePointSource == null))
                {
                    this.mNewSharePointSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewSharePointSource.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "New Sharepoint Server Source...", PropertyExpressionOperator.Contains));
                    this.mNewSharePointSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSharePointSource;
            }
        }
        
        public WpfListItem SharepointTestServer
        {
            get
            {
                if ((this.mSharepointTestServer == null))
                {
                    this.mSharepointTestServer = new WpfListItem(this);
                    #region Search Criteria
                    this.mSharepointTestServer.SearchProperties.Add(new PropertyExpression(WpfListItem.PropertyNames.Name, "SharePoint Test Server", PropertyExpressionOperator.Contains));
                    this.mSharepointTestServer.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSharepointTestServer;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewSharePointSource;
        
        private WpfListItem mSharepointTestServer;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LocalPathFromIntellisenseCombobox1 : WpfComboBox
    {
        
        public LocalPathFromIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ServerPathToIntellisenseCombobox1 : WpfComboBox
    {
        
        public ServerPathToIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Directorytxt_AutoID";
            this.SearchProperties[WpfComboBox.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultsIntellisenseCombobox1 : WpfComboBox
    {
        
        public ResultsIntellisenseCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Resulttxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit Textbox
        {
            get
            {
                if ((this.mTextbox == null))
                {
                    this.mTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextbox;
        #endregion
    }
}
