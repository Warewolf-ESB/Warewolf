// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Warewolf.UITests.WorkflowTab.Tools.Database.DatabaseToolsUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class DatabaseToolsUIMap
    {
        
        /// <summary>
        /// Open_Tools_UI_Map_Designer_To_Flowchart - Use 'Open_Tools_UI_Map_Designer_To_FlowchartParams' to pass parameters into this method.
        /// </summary>
        public void Open_Tools_UI_Map_Designer_To_Flowchart()
        {
            #region Variable Declarations
            WpfCustom flowchart = this.MainStudioWindow.DockManager.SplitPaneMiddle.TabManSplitPane.TabMan.WorkflowTab.WorkSurfaceContext.WorkflowDesignerView.DesignerView.ScrollViewerPane.ActivityTypeDesigner.WorkflowItemPresenter.Flowchart;
            #endregion

            // Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
            Assert.AreEqual(this.Open_Tools_UI_Map_Designer_To_FlowchartParams.FlowchartExists, flowchart.Exists, "Flowchart does not exist.");
        }
        
        #region Properties
        public virtual Open_Tools_UI_Map_Designer_To_FlowchartParams Open_Tools_UI_Map_Designer_To_FlowchartParams
        {
            get
            {
                if ((this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams == null))
                {
                    this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams = new Open_Tools_UI_Map_Designer_To_FlowchartParams();
                }
                return this.mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
            }
        }
        
        public MainStudioWindow MainStudioWindow
        {
            get
            {
                if ((this.mMainStudioWindow == null))
                {
                    this.mMainStudioWindow = new MainStudioWindow();
                }
                return this.mMainStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private Open_Tools_UI_Map_Designer_To_FlowchartParams mOpen_Tools_UI_Map_Designer_To_FlowchartParams;
        
        private MainStudioWindow mMainStudioWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Open_Tools_UI_Map_Designer_To_Flowchart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Open_Tools_UI_Map_Designer_To_FlowchartParams
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Flowchart' custom control equals 'True'
        /// </summary>
        public bool FlowchartExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MainStudioWindow : WpfWindow
    {
        
        public MainStudioWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DockManager DockManager
        {
            get
            {
                if ((this.mDockManager == null))
                {
                    this.mDockManager = new DockManager(this);
                }
                return this.mDockManager;
            }
        }
        #endregion
        
        #region Fields
        private DockManager mDockManager;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DockManager : WpfCustom
    {
        
        public DockManager(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.XamDockManager";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "DockManager";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SplitPaneMiddle SplitPaneMiddle
        {
            get
            {
                if ((this.mSplitPaneMiddle == null))
                {
                    this.mSplitPaneMiddle = new SplitPaneMiddle(this);
                }
                return this.mSplitPaneMiddle;
            }
        }
        #endregion
        
        #region Fields
        private SplitPaneMiddle mSplitPaneMiddle;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SplitPaneMiddle : WpfCustom
    {
        
        public SplitPaneMiddle(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabManSplitPane TabManSplitPane
        {
            get
            {
                if ((this.mTabManSplitPane == null))
                {
                    this.mTabManSplitPane = new TabManSplitPane(this);
                }
                return this.mTabManSplitPane;
            }
        }
        #endregion
        
        #region Fields
        private TabManSplitPane mTabManSplitPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabManSplitPane : WpfCustom
    {
        
        public TabManSplitPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SplitPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UI_SplitPane_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TabMan TabMan
        {
            get
            {
                if ((this.mTabMan == null))
                {
                    this.mTabMan = new TabMan(this);
                }
                return this.mTabMan;
            }
        }
        #endregion
        
        #region Fields
        private TabMan mTabMan;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TabMan : WpfTabList
    {
        
        public TabMan(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "UI_TabManager_AutoID";
            this.WindowTitles.Add("Warewolf");
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowTab WorkflowTab
        {
            get
            {
                if ((this.mWorkflowTab == null))
                {
                    this.mWorkflowTab = new WorkflowTab(this);
                }
                return this.mWorkflowTab;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowTab mWorkflowTab;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowTab : WpfTabPage
    {
        
        public WorkflowTab(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Dev2.Studio.ViewModels.Workflow.WorkflowDesignerViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkSurfaceContext WorkSurfaceContext
        {
            get
            {
                if ((this.mWorkSurfaceContext == null))
                {
                    this.mWorkSurfaceContext = new WorkSurfaceContext(this);
                }
                return this.mWorkSurfaceContext;
            }
        }
        #endregion
        
        #region Fields
        private WorkSurfaceContext mWorkSurfaceContext;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkSurfaceContext : WpfCustom
    {
        
        public WorkSurfaceContext(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ContentPane";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Dev2.Studio.ViewModels.WorkSurface.WorkSurfaceContextViewModel";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowDesignerView WorkflowDesignerView
        {
            get
            {
                if ((this.mWorkflowDesignerView == null))
                {
                    this.mWorkflowDesignerView = new WorkflowDesignerView(this);
                }
                return this.mWorkflowDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowDesignerView mWorkflowDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowDesignerView : WpfCustom
    {
        
        public WorkflowDesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DesignerView DesignerView
        {
            get
            {
                if ((this.mDesignerView == null))
                {
                    this.mDesignerView = new DesignerView(this);
                }
                return this.mDesignerView;
            }
        }
        #endregion
        
        #region Fields
        private DesignerView mDesignerView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DesignerView : WpfCustom
    {
        
        public DesignerView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.DesignerView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "UserControl_1";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ScrollViewerPane ScrollViewerPane
        {
            get
            {
                if ((this.mScrollViewerPane == null))
                {
                    this.mScrollViewerPane = new ScrollViewerPane(this);
                }
                return this.mScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private ScrollViewerPane mScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ScrollViewerPane : WpfPane
    {
        
        public ScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActivityTypeDesigner ActivityTypeDesigner
        {
            get
            {
                if ((this.mActivityTypeDesigner == null))
                {
                    this.mActivityTypeDesigner = new ActivityTypeDesigner(this);
                }
                return this.mActivityTypeDesigner;
            }
        }
        #endregion
        
        #region Fields
        private ActivityTypeDesigner mActivityTypeDesigner;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActivityTypeDesigner : WpfCustom
    {
        
        public ActivityTypeDesigner(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ActivityTypeDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ActivityTypeDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WorkflowItemPresenter WorkflowItemPresenter
        {
            get
            {
                if ((this.mWorkflowItemPresenter == null))
                {
                    this.mWorkflowItemPresenter = new WorkflowItemPresenter(this);
                }
                return this.mWorkflowItemPresenter;
            }
        }
        #endregion
        
        #region Fields
        private WorkflowItemPresenter mWorkflowItemPresenter;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WorkflowItemPresenter : WpfCustom
    {
        
        public WorkflowItemPresenter(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.WorkflowItemPresenter";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "WorkflowItemPresenter";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Flowchart Flowchart
        {
            get
            {
                if ((this.mFlowchart == null))
                {
                    this.mFlowchart = new Flowchart(this);
                }
                return this.mFlowchart;
            }
        }
        #endregion
        
        #region Fields
        private Flowchart mFlowchart;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Flowchart : WpfCustom
    {
        
        public Flowchart(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public MySqlDatabase MySqlDatabase
        {
            get
            {
                if ((this.mMySqlDatabase == null))
                {
                    this.mMySqlDatabase = new MySqlDatabase(this);
                }
                return this.mMySqlDatabase;
            }
        }
        
        public ODBCDatabaseActivCustom ODBCDatabaseActivCustom
        {
            get
            {
                if ((this.mODBCDatabaseActivCustom == null))
                {
                    this.mODBCDatabaseActivCustom = new ODBCDatabaseActivCustom(this);
                }
                return this.mODBCDatabaseActivCustom;
            }
        }
        
        public OracleDatabaseActCustom OracleDatabaseActCustom
        {
            get
            {
                if ((this.mOracleDatabaseActCustom == null))
                {
                    this.mOracleDatabaseActCustom = new OracleDatabaseActCustom(this);
                }
                return this.mOracleDatabaseActCustom;
            }
        }
        
        public SqlServerDatabase SqlServerDatabase
        {
            get
            {
                if ((this.mSqlServerDatabase == null))
                {
                    this.mSqlServerDatabase = new SqlServerDatabase(this);
                }
                return this.mSqlServerDatabase;
            }
        }
        
        public SqlBulkInsert SqlBulkInsert
        {
            get
            {
                if ((this.mSqlBulkInsert == null))
                {
                    this.mSqlBulkInsert = new SqlBulkInsert(this);
                }
                return this.mSqlBulkInsert;
            }
        }
        
        public PostgreSqlActivitCustom PostgreSqlActivitCustom
        {
            get
            {
                if ((this.mPostgreSqlActivitCustom == null))
                {
                    this.mPostgreSqlActivitCustom = new PostgreSqlActivitCustom(this);
                }
                return this.mPostgreSqlActivitCustom;
            }
        }
        #endregion
        
        #region Fields
        private MySqlDatabase mMySqlDatabase;
        
        private ODBCDatabaseActivCustom mODBCDatabaseActivCustom;
        
        private OracleDatabaseActCustom mOracleDatabaseActCustom;
        
        private SqlServerDatabase mSqlServerDatabase;
        
        private SqlBulkInsert mSqlBulkInsert;
        
        private PostgreSqlActivitCustom mPostgreSqlActivitCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class MySqlDatabase : WpfCustom
    {
        
        public MySqlDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MySqlDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "MySql Database(MySqlDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeView LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mDoneButton;
        
        private LargeView mLargeView;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView : WpfCustom
    {
        
        public LargeView(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfTable InputLargeDataGridTable
        {
            get
            {
                if ((this.mInputLargeDataGridTable == null))
                {
                    this.mInputLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mInputLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mInputLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mInputLargeDataGridTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mActionsComboBox;
        
        private WpfButton mRefreshButton;
        
        private WpfTable mInputLargeDataGridTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox : WpfComboBox
    {
        
        public SourcesComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem MySQLSourceFromToolListItem
        {
            get
            {
                if ((this.mMySQLSourceFromToolListItem == null))
                {
                    this.mMySQLSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mMySQLSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "MySQLSourceFromTool";
                    this.mMySQLSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mMySQLSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mMySQLSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom : WpfCustom
    {
        
        public OnErrorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup : WpfGroup
    {
        
        public OnErrorGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox mErrorVariableComboBox;
        
        private WebServiceComboBox mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox : WpfComboBox
    {
        
        public ErrorVariableComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox : WpfComboBox
    {
        
        public WebServiceComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ODBCDatabaseActivCustom : WpfCustom
    {
        
        public ODBCDatabaseActivCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ODBCDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ODBC Data Source(ODBCDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView1 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView1(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView1 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView1 : WpfCustom
    {
        
        public LargeView1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox1 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox1(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EdistSourceButton
        {
            get
            {
                if ((this.mEdistSourceButton == null))
                {
                    this.mEdistSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEdistSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEdistSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEdistSourceButton;
            }
        }
        
        public ActionCommandComboBox ActionCommandComboBox
        {
            get
            {
                if ((this.mActionCommandComboBox == null))
                {
                    this.mActionCommandComboBox = new ActionCommandComboBox(this);
                }
                return this.mActionCommandComboBox;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom1 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom1(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox1 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEdistSourceButton;
        
        private ActionCommandComboBox mActionCommandComboBox;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom1 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox1 : WpfComboBox
    {
        
        public SourcesComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem ODBCSourceFromToolListItem
        {
            get
            {
                if ((this.mODBCSourceFromToolListItem == null))
                {
                    this.mODBCSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mODBCSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "ODBCSourceFromTool";
                    this.mODBCSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mODBCSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mODBCSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionCommandComboBox : WpfComboBox
    {
        
        public ActionCommandComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__FileOrFoldertxt_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom1 : WpfCustom
    {
        
        public OnErrorCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup1 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup1(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup1 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup1 : WpfGroup
    {
        
        public OnErrorGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox1 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox1(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox1 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox1(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox1 mErrorVariableComboBox;
        
        private WebServiceComboBox1 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox1 : WpfComboBox
    {
        
        public ErrorVariableComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox1 : WpfComboBox
    {
        
        public WebServiceComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OracleDatabaseActCustom : WpfCustom
    {
        
        public OracleDatabaseActCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OracleDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "Oracle Database(OracleDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView2 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView2(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView2 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView2 : WpfCustom
    {
        
        public LargeView2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox2 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox2(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mActionsComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
                    this.mActionsComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom2 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom2(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox2 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mActionsComboBox;
        
        private WpfTable mLargeDataGridTable;
        
        private WpfButton mRefreshButton;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom2 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox2 : WpfComboBox
    {
        
        public SourcesComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem OracleSourceFromToolListItem
        {
            get
            {
                if ((this.mOracleSourceFromToolListItem == null))
                {
                    this.mOracleSourceFromToolListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mOracleSourceFromToolListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "OracleSourceFromTool";
                    this.mOracleSourceFromToolListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mOracleSourceFromToolListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mOracleSourceFromToolListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom2 : WpfCustom
    {
        
        public OnErrorCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup2 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup2(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup2 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup2 : WpfGroup
    {
        
        public OnErrorGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox2 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox2(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox2 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox2(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox2 mErrorVariableComboBox;
        
        private WebServiceComboBox2 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox2 : WpfComboBox
    {
        
        public ErrorVariableComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox2 : WpfComboBox
    {
        
        public WebServiceComboBox2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SqlServerDatabase : WpfCustom
    {
        
        public SqlServerDatabase(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SqlServerDatabaseDesigner";
            this.SearchProperties.Add(new PropertyExpression(WpfControl.PropertyNames.AutomationId, "SQL Server Database", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView3 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView3(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView3 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView3 : WpfCustom
    {
        
        public LargeView3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ActionsCombobox ActionsCombobox
        {
            get
            {
                if ((this.mActionsCombobox == null))
                {
                    this.mActionsCombobox = new ActionsCombobox(this);
                }
                return this.mActionsCombobox;
            }
        }
        
        public SourcesCombobox3 SourcesCombobox
        {
            get
            {
                if ((this.mSourcesCombobox == null))
                {
                    this.mSourcesCombobox = new SourcesCombobox3(this);
                }
                return this.mSourcesCombobox;
            }
        }
        
        public InputsTable InputsTable
        {
            get
            {
                if ((this.mInputsTable == null))
                {
                    this.mInputsTable = new InputsTable(this);
                }
                return this.mInputsTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public TestInputsTable TestInputsTable
        {
            get
            {
                if ((this.mTestInputsTable == null))
                {
                    this.mTestInputsTable = new TestInputsTable(this);
                }
                return this.mTestInputsTable;
            }
        }
        
        public WpfButton TestInputsButton
        {
            get
            {
                if ((this.mTestInputsButton == null))
                {
                    this.mTestInputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestInputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestActionButton";
                    this.mTestInputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestInputsButton;
            }
        }
        
        public WpfButton TestInputsDoneButton
        {
            get
            {
                if ((this.mTestInputsDoneButton == null))
                {
                    this.mTestInputsDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mTestInputsDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateOutputsDoneButton";
                    this.mTestInputsDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestInputsDoneButton;
            }
        }
        
        public WpfButton NewDbSourceButton
        {
            get
            {
                if ((this.mNewDbSourceButton == null))
                {
                    this.mNewDbSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewDbSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewDbSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDbSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public OnErrorCustom3 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom3(this);
                }
                return this.mOnErrorCustom;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private ActionsCombobox mActionsCombobox;
        
        private SourcesCombobox3 mSourcesCombobox;
        
        private InputsTable mInputsTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private TestInputsTable mTestInputsTable;
        
        private WpfButton mTestInputsButton;
        
        private WpfButton mTestInputsDoneButton;
        
        private WpfButton mNewDbSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private OnErrorCustom3 mOnErrorCustom;
        
        private WpfButton mRefreshButton;
        
        private WpfEdit mRecordSetTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsCombobox : WpfComboBox
    {
        
        public ActionsCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem GetCountriesListItem
        {
            get
            {
                if ((this.mGetCountriesListItem == null))
                {
                    this.mGetCountriesListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mGetCountriesListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "dbo.GetCountries";
                    this.mGetCountriesListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGetCountriesListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mGetCountriesListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesCombobox3 : WpfComboBox
    {
        
        public SourcesCombobox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem UITestingDBSourceListItem
        {
            get
            {
                if ((this.mUITestingDBSourceListItem == null))
                {
                    this.mUITestingDBSourceListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITestingDBSourceListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "UITestingDBSource";
                    this.mUITestingDBSourceListItem.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUITestingDBSourceListItem;
            }
        }
        
        public WpfListItem SQLServerSourceFromTListItem
        {
            get
            {
                if ((this.mSQLServerSourceFromTListItem == null))
                {
                    this.mSQLServerSourceFromTListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mSQLServerSourceFromTListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "SQLServerSourceFromTool";
                    this.mSQLServerSourceFromTListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mSQLServerSourceFromTListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUITestingDBSourceListItem;
        
        private WpfListItem mSQLServerSourceFromTListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InputsTable : WpfTable
    {
        
        public InputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row1 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row1(this);
                }
                return this.mRow1;
            }
        }
        
        public Row2 Row2
        {
            get
            {
                if ((this.mRow2 == null))
                {
                    this.mRow2 = new Row2(this);
                }
                return this.mRow2;
            }
        }
        #endregion
        
        #region Fields
        private Row1 mRow1;
        
        private Row2 mRow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row1 : WpfRow
    {
        
        public Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCell DataCell
        {
            get
            {
                if ((this.mDataCell == null))
                {
                    this.mDataCell = new DataCell(this);
                }
                return this.mDataCell;
            }
        }
        #endregion
        
        #region Fields
        private DataCell mDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCell : WpfCell
    {
        
        public DataCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCombobox DataCombobox
        {
            get
            {
                if ((this.mDataCombobox == null))
                {
                    this.mDataCombobox = new DataCombobox(this);
                }
                return this.mDataCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DataCombobox mDataCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCombobox : WpfComboBox
    {
        
        public DataCombobox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DataTextbox
        {
            get
            {
                if ((this.mDataTextbox == null))
                {
                    this.mDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row2 : WpfRow
    {
        
        public Row2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfRow.PropertyNames.Instance] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCell1 DataCell
        {
            get
            {
                if ((this.mDataCell == null))
                {
                    this.mDataCell = new DataCell1(this);
                }
                return this.mDataCell;
            }
        }
        #endregion
        
        #region Fields
        private DataCell1 mDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCell1 : WpfCell
    {
        
        public DataCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Input Data or [[Variable]]";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DataCombobox1 DataCombobox
        {
            get
            {
                if ((this.mDataCombobox == null))
                {
                    this.mDataCombobox = new DataCombobox1(this);
                }
                return this.mDataCombobox;
            }
        }
        #endregion
        
        #region Fields
        private DataCombobox1 mDataCombobox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DataCombobox1 : WpfComboBox
    {
        
        public DataCombobox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "Hard coded values or variables.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit DataTextbox
        {
            get
            {
                if ((this.mDataTextbox == null))
                {
                    this.mDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInputsTable : WpfTable
    {
        
        public TestInputsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
            this.SearchProperties[WpfTable.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public Row11 Row1
        {
            get
            {
                if ((this.mRow1 == null))
                {
                    this.mRow1 = new Row11(this);
                }
                return this.mRow1;
            }
        }
        #endregion
        
        #region Fields
        private Row11 mRow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class Row11 : WpfRow
    {
        
        public Row11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestDataCell TestDataCell
        {
            get
            {
                if ((this.mTestDataCell == null))
                {
                    this.mTestDataCell = new TestDataCell(this);
                }
                return this.mTestDataCell;
            }
        }
        #endregion
        
        #region Fields
        private TestDataCell mTestDataCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestDataCell : WpfCell
    {
        
        public TestDataCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Test Data";
            this.SearchProperties[WpfCell.PropertyNames.AutomationId] = "UI_DataGridCell_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public TestDataComboBox TestDataComboBox
        {
            get
            {
                if ((this.mTestDataComboBox == null))
                {
                    this.mTestDataComboBox = new TestDataComboBox(this);
                }
                return this.mTestDataComboBox;
            }
        }
        #endregion
        
        #region Fields
        private TestDataComboBox mTestDataComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestDataComboBox : WpfComboBox
    {
        
        public TestDataComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.HelpText] = "This data is used for testing and not at run time.";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TestDataTextbox
        {
            get
            {
                if ((this.mTestDataTextbox == null))
                {
                    this.mTestDataTextbox = new WpfEdit(this);
                    #region Search Criteria
                    this.mTestDataTextbox.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTestDataTextbox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTestDataTextbox;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTestDataTextbox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom3 : WpfCustom
    {
        
        public OnErrorCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup3 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup3(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup3 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup3 : WpfGroup
    {
        
        public OnErrorGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox3 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox3(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox3 mErrorVariableComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox3 : WpfComboBox
    {
        
        public ErrorVariableComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SqlBulkInsert : WpfCustom
    {
        
        public SqlBulkInsert(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.SqlBulkInsertDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SQL Bulk Insert(SqlBulkInsertDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfToggleButton QVIToggleButton
        {
            get
            {
                if ((this.mQVIToggleButton == null))
                {
                    this.mQVIToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mQVIToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Open Quick Variable Input";
                    this.mQVIToggleButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mQVIToggleButton;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public LargeViewContentCustom LargeViewContentCustom
        {
            get
            {
                if ((this.mLargeViewContentCustom == null))
                {
                    this.mLargeViewContentCustom = new LargeViewContentCustom(this);
                }
                return this.mLargeViewContentCustom;
            }
        }
        
        public SmallViewContentCustom SmallViewContentCustom
        {
            get
            {
                if ((this.mSmallViewContentCustom == null))
                {
                    this.mSmallViewContentCustom = new SmallViewContentCustom(this);
                }
                return this.mSmallViewContentCustom;
            }
        }
        
        public WpfCustom QuickVariableInputContentPane
        {
            get
            {
                if ((this.mQuickVariableInputContentPane == null))
                {
                    this.mQuickVariableInputContentPane = new WpfCustom(this);
                    #region Search Criteria
                    this.mQuickVariableInputContentPane.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuickVariableInputView";
                    this.mQuickVariableInputContentPane.SearchProperties[WpfControl.PropertyNames.AutomationId] = "QuickVariableInputContent";
                    this.mQuickVariableInputContentPane.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mQuickVariableInputContentPane;
            }
        }
        #endregion
        
        #region Fields
        private WpfToggleButton mQVIToggleButton;
        
        private WpfButton mDoneButton;
        
        private LargeViewContentCustom mLargeViewContentCustom;
        
        private SmallViewContentCustom mSmallViewContentCustom;
        
        private WpfCustom mQuickVariableInputContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeViewContentCustom : WpfCustom
    {
        
        public LargeViewContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatabaseComboBox DatabaseComboBox
        {
            get
            {
                if ((this.mDatabaseComboBox == null))
                {
                    this.mDatabaseComboBox = new DatabaseComboBox(this);
                }
                return this.mDatabaseComboBox;
            }
        }
        
        public WpfButton ItemButton
        {
            get
            {
                if ((this.mItemButton == null))
                {
                    this.mItemButton = new WpfButton(this);
                    #region Search Criteria
                    this.mItemButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mItemButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mItemButton;
            }
        }
        
        public TableNameComboBox TableNameComboBox
        {
            get
            {
                if ((this.mTableNameComboBox == null))
                {
                    this.mTableNameComboBox = new TableNameComboBox(this);
                }
                return this.mTableNameComboBox;
            }
        }
        
        public WpfButton RfreshTableButton
        {
            get
            {
                if ((this.mRfreshTableButton == null))
                {
                    this.mRfreshTableButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRfreshTableButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRfreshTableButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRfreshTableButton;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public BatchSizeComboBox BatchSizeComboBox
        {
            get
            {
                if ((this.mBatchSizeComboBox == null))
                {
                    this.mBatchSizeComboBox = new BatchSizeComboBox(this);
                }
                return this.mBatchSizeComboBox;
            }
        }
        
        public TimeoutComboBox TimeoutComboBox
        {
            get
            {
                if ((this.mTimeoutComboBox == null))
                {
                    this.mTimeoutComboBox = new TimeoutComboBox(this);
                }
                return this.mTimeoutComboBox;
            }
        }
        
        public WpfCheckBox CheckConstraintsCheckBox
        {
            get
            {
                if ((this.mCheckConstraintsCheckBox == null))
                {
                    this.mCheckConstraintsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mCheckConstraintsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__CheckConstraints_AutoID";
                    this.mCheckConstraintsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mCheckConstraintsCheckBox;
            }
        }
        
        public WpfCheckBox KeepTableLockCheckBox
        {
            get
            {
                if ((this.mKeepTableLockCheckBox == null))
                {
                    this.mKeepTableLockCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mKeepTableLockCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__KeepTableLock_AutoID";
                    this.mKeepTableLockCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKeepTableLockCheckBox;
            }
        }
        
        public WpfCheckBox FireTriggersCheckBox
        {
            get
            {
                if ((this.mFireTriggersCheckBox == null))
                {
                    this.mFireTriggersCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mFireTriggersCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__FireTriggers_AutoID";
                    this.mFireTriggersCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mFireTriggersCheckBox;
            }
        }
        
        public WpfCheckBox UseInternalTransactiCheckBox
        {
            get
            {
                if ((this.mUseInternalTransactiCheckBox == null))
                {
                    this.mUseInternalTransactiCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUseInternalTransactiCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__UseInternalTransaction_AutoID";
                    this.mUseInternalTransactiCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mUseInternalTransactiCheckBox;
            }
        }
        
        public WpfCheckBox SkipblankrowsCheckBox
        {
            get
            {
                if ((this.mSkipblankrowsCheckBox == null))
                {
                    this.mSkipblankrowsCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mSkipblankrowsCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IgnoreBlankRows_AutoID";
                    this.mSkipblankrowsCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSkipblankrowsCheckBox;
            }
        }
        
        public WpfCheckBox KeepIdentityCheckBox
        {
            get
            {
                if ((this.mKeepIdentityCheckBox == null))
                {
                    this.mKeepIdentityCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mKeepIdentityCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__KeepIdentity_AutoID";
                    this.mKeepIdentityCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mKeepIdentityCheckBox;
            }
        }
        
        public ResultComboBox ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public OnErrorCustom4 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom4(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private DatabaseComboBox mDatabaseComboBox;
        
        private WpfButton mItemButton;
        
        private TableNameComboBox mTableNameComboBox;
        
        private WpfButton mRfreshTableButton;
        
        private WpfTable mLargeDataGridTable;
        
        private BatchSizeComboBox mBatchSizeComboBox;
        
        private TimeoutComboBox mTimeoutComboBox;
        
        private WpfCheckBox mCheckConstraintsCheckBox;
        
        private WpfCheckBox mKeepTableLockCheckBox;
        
        private WpfCheckBox mFireTriggersCheckBox;
        
        private WpfCheckBox mUseInternalTransactiCheckBox;
        
        private WpfCheckBox mSkipblankrowsCheckBox;
        
        private WpfCheckBox mKeepIdentityCheckBox;
        
        private ResultComboBox mResultComboBox;
        
        private OnErrorCustom4 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseComboBox : WpfComboBox
    {
        
        public DatabaseComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem TestingDB
        {
            get
            {
                if ((this.mTestingDB == null))
                {
                    this.mTestingDB = new WpfListItem(this);
                    #region Search Criteria
                    this.mTestingDB.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
                    this.mTestingDB.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mTestingDB;
            }
        }
        
        public WpfListItem NewDatabaseSource
        {
            get
            {
                if ((this.mNewDatabaseSource == null))
                {
                    this.mNewDatabaseSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDatabaseSource.SearchProperties[WpfListItem.PropertyNames.Instance] = "1";
                    this.mNewDatabaseSource.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mNewDatabaseSource;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mTestingDB;
        
        private WpfListItem mNewDatabaseSource;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TableNameComboBox : WpfComboBox
    {
        
        public TableNameComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem DboBig
        {
            get
            {
                if ((this.mDboBig == null))
                {
                    this.mDboBig = new WpfListItem(this);
                    #region Search Criteria
                    this.mDboBig.SearchProperties[WpfListItem.PropertyNames.Name] = "dbo.[Big]";
                    this.mDboBig.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDboBig;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mDboBig;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BatchSizeComboBox : WpfComboBox
    {
        
        public BatchSizeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__BatchSize_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TimeoutComboBox : WpfComboBox
    {
        
        public TimeoutComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Timeout_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox : WpfComboBox
    {
        
        public ResultComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom4 : WpfCustom
    {
        
        public OnErrorCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup4 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup4(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup4 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup4 : WpfGroup
    {
        
        public OnErrorGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox4 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox4(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox3 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox3(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox4 mErrorVariableComboBox;
        
        private WebServiceComboBox3 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox4 : WpfComboBox
    {
        
        public ErrorVariableComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox3 : WpfComboBox
    {
        
        public WebServiceComboBox3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SmallViewContentCustom : WpfCustom
    {
        
        public SmallViewContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public DatabaseComboBox1 DatabaseComboBox
        {
            get
            {
                if ((this.mDatabaseComboBox == null))
                {
                    this.mDatabaseComboBox = new DatabaseComboBox1(this);
                }
                return this.mDatabaseComboBox;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__EditDatabaseCommand_AutoID";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public WpfComboBox TableNameComboBox
        {
            get
            {
                if ((this.mTableNameComboBox == null))
                {
                    this.mTableNameComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mTableNameComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__TableName_AutoID";
                    this.mTableNameComboBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTableNameComboBox;
            }
        }
        
        public WpfTable SmallDataGridTable
        {
            get
            {
                if ((this.mSmallDataGridTable == null))
                {
                    this.mSmallDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mSmallDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "SmallDataGrid";
                    this.mSmallDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallDataGridTable;
            }
        }
        
        public ResultComboBox1 ResultComboBox
        {
            get
            {
                if ((this.mResultComboBox == null))
                {
                    this.mResultComboBox = new ResultComboBox1(this);
                }
                return this.mResultComboBox;
            }
        }
        
        public WpfButton RefreshTableButton
        {
            get
            {
                if ((this.mRefreshTableButton == null))
                {
                    this.mRefreshTableButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshTableButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "UI__RefreshTablesCommand_AutoID";
                    this.mRefreshTableButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshTableButton;
            }
        }
        #endregion
        
        #region Fields
        private DatabaseComboBox1 mDatabaseComboBox;
        
        private WpfButton mEditSourceButton;
        
        private WpfComboBox mTableNameComboBox;
        
        private WpfTable mSmallDataGridTable;
        
        private ResultComboBox1 mResultComboBox;
        
        private WpfButton mRefreshTableButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class DatabaseComboBox1 : WpfComboBox
    {
        
        public DatabaseComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Database_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem NewDataBaseSource
        {
            get
            {
                if ((this.mNewDataBaseSource == null))
                {
                    this.mNewDataBaseSource = new WpfListItem(this);
                    #region Search Criteria
                    this.mNewDataBaseSource.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":null,""DatabaseName"":null,""Port"":0,""AuthenticationType"":""Windows"",""UserID"":null,""Password"":null,""DataList"":null,""ConnectionString"":""Data Source=;Initial Catalog=;Integrated Security=SSPI;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""4bc4d063-c49c-4fcc-829a-9d6efd41ce68"",""ResourceType"":""DbSource"",""ResourceName"":""New Database Source..."",""IsValid"":false,""Errors"":null,""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mNewDataBaseSource.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewDataBaseSource;
            }
        }
        
        public WpfListItem GenDev
        {
            get
            {
                if ((this.mGenDev == null))
                {
                    this.mGenDev = new WpfListItem(this);
                    #region Search Criteria
                    this.mGenDev.SearchProperties[WpfListItem.PropertyNames.Name] = @"{""ServerType"":""SqlDatabase"",""Server"":"""",""DatabaseName"":"""",""Port"":1433,""AuthenticationType"":""Windows"",""UserID"":null,""Password"":null,""DataList"":"""",""ConnectionString"":""Data Source=,1433;Initial Catalog=;Integrated Security=SSPI;"",""IsSource"":true,""IsService"":false,""IsFolder"":false,""IsReservedService"":false,""IsServer"":false,""IsResourceVersion"":false,""Version"":null,""ResourceID"":""62505a00-b304-4ac0-a55c-50ce85111f16"",""ResourceType"":""DbSource"",""ResourceName"":""GenDev"",""IsValid"":false,""Errors"":[],""ReloadActions"":false,""UserPermissions"":0,""VersionInfo"":null}";
                    this.mGenDev.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenDev;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mNewDataBaseSource;
        
        private WpfListItem mGenDev;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ResultComboBox1 : WpfComboBox
    {
        
        public ResultComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Result_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class PostgreSqlActivitCustom : WpfCustom
    {
        
        public PostgreSqlActivitCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.PostgreSqlDatabaseDesigner";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PostgreSQL Database(PostgreSqlDatabaseDesigner)";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public LargeView4 LargeView
        {
            get
            {
                if ((this.mLargeView == null))
                {
                    this.mLargeView = new LargeView4(this);
                }
                return this.mLargeView;
            }
        }
        
        public WpfButton DoneButton
        {
            get
            {
                if ((this.mDoneButton == null))
                {
                    this.mDoneButton = new WpfButton(this);
                    #region Search Criteria
                    this.mDoneButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "DoneButton";
                    this.mDoneButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mDoneButton;
            }
        }
        
        public WpfCustom SmallView
        {
            get
            {
                if ((this.mSmallView == null))
                {
                    this.mSmallView = new WpfCustom(this);
                    #region Search Criteria
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Small";
                    this.mSmallView.SearchProperties[WpfControl.PropertyNames.AutomationId] = "SmallViewContent";
                    this.mSmallView.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mSmallView;
            }
        }
        #endregion
        
        #region Fields
        private LargeView4 mLargeView;
        
        private WpfButton mDoneButton;
        
        private WpfCustom mSmallView;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LargeView4 : WpfCustom
    {
        
        public LargeView4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Large";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "LargeViewContent";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public SourcesComboBox4 SourcesComboBox
        {
            get
            {
                if ((this.mSourcesComboBox == null))
                {
                    this.mSourcesComboBox = new SourcesComboBox4(this);
                }
                return this.mSourcesComboBox;
            }
        }
        
        public WpfButton NewSourceButton
        {
            get
            {
                if ((this.mNewSourceButton == null))
                {
                    this.mNewSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mNewSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceNewButton";
                    this.mNewSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mNewSourceButton;
            }
        }
        
        public WpfButton EditSourceButton
        {
            get
            {
                if ((this.mEditSourceButton == null))
                {
                    this.mEditSourceButton = new WpfButton(this);
                    #region Search Criteria
                    this.mEditSourceButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "SourceEditButton";
                    this.mEditSourceButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEditSourceButton;
            }
        }
        
        public ActionsComboBox1 ActionsComboBox
        {
            get
            {
                if ((this.mActionsComboBox == null))
                {
                    this.mActionsComboBox = new ActionsComboBox1(this);
                }
                return this.mActionsComboBox;
            }
        }
        
        public WpfButton RefreshButton
        {
            get
            {
                if ((this.mRefreshButton == null))
                {
                    this.mRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mRefreshButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ActionRefreshButton";
                    this.mRefreshButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRefreshButton;
            }
        }
        
        public WpfTable LargeDataGridTable
        {
            get
            {
                if ((this.mLargeDataGridTable == null))
                {
                    this.mLargeDataGridTable = new WpfTable(this);
                    #region Search Criteria
                    this.mLargeDataGridTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "LargeDataGrid";
                    this.mLargeDataGridTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mLargeDataGridTable;
            }
        }
        
        public WpfButton GenerateOutputsButton
        {
            get
            {
                if ((this.mGenerateOutputsButton == null))
                {
                    this.mGenerateOutputsButton = new WpfButton(this);
                    #region Search Criteria
                    this.mGenerateOutputsButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "TestInputButton";
                    this.mGenerateOutputsButton.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGenerateOutputsButton;
            }
        }
        
        public WpfTable OutputsMappingDataGrTable
        {
            get
            {
                if ((this.mOutputsMappingDataGrTable == null))
                {
                    this.mOutputsMappingDataGrTable = new WpfTable(this);
                    #region Search Criteria
                    this.mOutputsMappingDataGrTable.SearchProperties[WpfTable.PropertyNames.AutomationId] = "OutputsMappingDataGrid";
                    this.mOutputsMappingDataGrTable.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mOutputsMappingDataGrTable;
            }
        }
        
        public WpfEdit RecordSetTextBoxEdit
        {
            get
            {
                if ((this.mRecordSetTextBoxEdit == null))
                {
                    this.mRecordSetTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mRecordSetTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RecordSetTextBox";
                    this.mRecordSetTextBoxEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mRecordSetTextBoxEdit;
            }
        }
        
        public OnErrorCustom5 OnErrorCustom
        {
            get
            {
                if ((this.mOnErrorCustom == null))
                {
                    this.mOnErrorCustom = new OnErrorCustom5(this);
                }
                return this.mOnErrorCustom;
            }
        }
        #endregion
        
        #region Fields
        private SourcesComboBox4 mSourcesComboBox;
        
        private WpfButton mNewSourceButton;
        
        private WpfButton mEditSourceButton;
        
        private ActionsComboBox1 mActionsComboBox;
        
        private WpfButton mRefreshButton;
        
        private WpfTable mLargeDataGridTable;
        
        private WpfButton mGenerateOutputsButton;
        
        private WpfTable mOutputsMappingDataGrTable;
        
        private WpfEdit mRecordSetTextBoxEdit;
        
        private OnErrorCustom5 mOnErrorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SourcesComboBox4 : WpfComboBox
    {
        
        public SourcesComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "SourcesComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem PostgreSourceTest
        {
            get
            {
                if ((this.mPostgreSourceTest == null))
                {
                    this.mPostgreSourceTest = new WpfListItem(this);
                    #region Search Criteria
                    this.mPostgreSourceTest.SearchProperties[WpfListItem.PropertyNames.Name] = "PostgreSourceTest";
                    this.mPostgreSourceTest.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mPostgreSourceTest;
            }
        }
        
        public WpfListItem PostgreSQLSourceFromListItem
        {
            get
            {
                if ((this.mPostgreSQLSourceFromListItem == null))
                {
                    this.mPostgreSQLSourceFromListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mPostgreSQLSourceFromListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "PostgreSQLSourceFromTool";
                    this.mPostgreSQLSourceFromListItem.WindowTitles.Add("Warewolf (DEV2\\DYLAN.DELPORT)");
                    #endregion
                }
                return this.mPostgreSQLSourceFromListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mPostgreSourceTest;
        
        private WpfListItem mPostgreSQLSourceFromListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ActionsComboBox1 : WpfComboBox
    {
        
        public ActionsComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ActionsComboBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfListItem GetCountries
        {
            get
            {
                if ((this.mGetCountries == null))
                {
                    this.mGetCountries = new WpfListItem(this);
                    #region Search Criteria
                    this.mGetCountries.SearchProperties[WpfListItem.PropertyNames.Name] = "get_countries";
                    this.mGetCountries.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mGetCountries;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mGetCountries;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorCustom5 : WpfCustom
    {
        
        public OnErrorCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.OnError";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "On Error";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public OnErrorGroup5 OnErrorGroup
        {
            get
            {
                if ((this.mOnErrorGroup == null))
                {
                    this.mOnErrorGroup = new OnErrorGroup5(this);
                }
                return this.mOnErrorGroup;
            }
        }
        #endregion
        
        #region Fields
        private OnErrorGroup5 mOnErrorGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OnErrorGroup5 : WpfGroup
    {
        
        public OnErrorGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "OnErrorGroupBox";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public ErrorVariableComboBox5 ErrorVariableComboBox
        {
            get
            {
                if ((this.mErrorVariableComboBox == null))
                {
                    this.mErrorVariableComboBox = new ErrorVariableComboBox5(this);
                }
                return this.mErrorVariableComboBox;
            }
        }
        
        public WebServiceComboBox4 WebServiceComboBox
        {
            get
            {
                if ((this.mWebServiceComboBox == null))
                {
                    this.mWebServiceComboBox = new WebServiceComboBox4(this);
                }
                return this.mWebServiceComboBox;
            }
        }
        
        public WpfCheckBox EndthisworkflowCheckBox
        {
            get
            {
                if ((this.mEndthisworkflowCheckBox == null))
                {
                    this.mEndthisworkflowCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mEndthisworkflowCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "UI__IsEnded_AutoID";
                    this.mEndthisworkflowCheckBox.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mEndthisworkflowCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private ErrorVariableComboBox5 mErrorVariableComboBox;
        
        private WebServiceComboBox4 mWebServiceComboBox;
        
        private WpfCheckBox mEndthisworkflowCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ErrorVariableComboBox5 : WpfComboBox
    {
        
        public ErrorVariableComboBox5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Variable_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class WebServiceComboBox4 : WpfComboBox
    {
        
        public WebServiceComboBox4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Workflow_AutoID";
            this.WindowTitles.Add("Warewolf");
            #endregion
        }
        
        #region Properties
        public WpfEdit TextEdit
        {
            get
            {
                if ((this.mTextEdit == null))
                {
                    this.mTextEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mTextEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Text";
                    this.mTextEdit.WindowTitles.Add("Warewolf");
                    #endregion
                }
                return this.mTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mTextEdit;
        #endregion
    }
}
