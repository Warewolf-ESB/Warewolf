schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - "*"

pool:
  name: Default

jobs:

- job: build
  displayName: 'Compile'

  steps:
  - script: |
      IF NOT EXIST "D:\Builds\SonarQube" git -C "D:\Builds" clone "$(Build.Repository.Uri)" SonarQube
      IF EXIST "D:\Builds\SonarQube\.git\index.lock" DEL /F "D:\Builds\SonarQube\.git\index.lock"
      git -C "D:\Builds\SonarQube" reset --hard HEAD
      git -C "D:\Builds\SonarQube" clean -xdf --exclude Dev/packages/
      git -C "D:\Builds\SonarQube" fetch --all
      IF [$(Build.SourceVersion)] NEQ [] (
          echo Checking out version $(Build.SourceVersion)
          git -C "D:\Builds\SonarQube" checkout $(Build.SourceVersion)
      ) ELSE (
          IF [$(Build.SourceBranch)] NEQ [] (
              echo Checking out branch $(Build.SourceBranch)
              git -C "D:\Builds\SonarQube" checkout $(Build.SourceBranch)
          )
          git -C "D:\Builds\SonarQube" pull
      )
    displayName: 'Scorch Sonar Shared Working Directory'

  - task: PowerShell@2
    inputs:
      filePath: 'D:\\Builds\\SonarQube\\Compile.ps1'
      arguments: '-AcceptanceTesting -MSBuildPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe"'

  - task: DeleteFiles@1
    inputs:
      SourceFolder: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting'
      Contents: 'TestResults'

  - script: "\"D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage\\Other Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unit Tests'
      
  - script: 'if not exist "D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\*.trx" "D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\\TestResults'

  - task: DeleteFiles@1
    inputs:
      SourceFolder: 'D:\\Builds\\SonarQube\\bin\\AcceptanceTesting'
      Contents: 'TestResults'

  - script: "(robocopy \"D:\\Builds\\SonarQube\\bin\\AcceptanceTesting\" \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Upload Artifacts'
      
- job: Zip_Tool_Specs
  displayName: 'Zip Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Zip Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Zip Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Zip Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Email_Tools_Specs
  displayName: 'Email Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Email Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Email Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Email Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Email Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Resource_Tools_Specs
  displayName: 'Resource Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Resource Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Resource Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Resource Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Resource Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: File_And_Folder_Copy_Tool_Specs
  displayName: 'File And Folder Copy Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\File And Folder Copy Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Copy Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'File And Folder Copy Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'File And Folder Copy Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Data_Tools_Specs
  displayName: 'Data Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Data Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Data Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Data Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Data Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Request_Service_Name_View_Models_Unit_Tests
  displayName: 'Request Service Name View Models Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Request Service Name View Models Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Request Service Name View Models Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Request Service Name View Models Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Request Service Name View Models Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Unzip_Tool_Specs_Validation
  displayName: 'Unzip Tool Specs Validation'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Unzip Tool Specs Validation.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs Validation'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Unzip Tool Specs Validation Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Unzip Tool Specs Validation Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Recordset_Tools_Specs
  displayName: 'Recordset Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Recordset Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Recordset Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Recordset Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Recordset Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: File_And_Folder_Rename_Tool_Specs
  displayName: 'File And Folder Rename Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\File And Folder Rename Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Rename Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'File And Folder Rename Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'File And Folder Rename Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Other_Tools_Specs
  displayName: 'Other Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Other Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Other Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Other Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Other Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: File_And_Folder_Move_Tool_Specs
  displayName: 'File And Folder Move Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\File And Folder Move Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Move Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'File And Folder Move Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'File And Folder Move Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: File_Read_Tool_Specs
  displayName: 'File Read Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\File Read Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File Read Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'File Read Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'File Read Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Infrastructure_Unit_Tests
  displayName: 'Infrastructure Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Infrastructure Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Infrastructure Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Infrastructure Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Infrastructure Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: New_Folder_Read_Tool_Specs
  displayName: 'New Folder Read Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\New Folder Read Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'New Folder Read Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'New Folder Read Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'New Folder Read Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Write_File_Tool_Specs
  displayName: 'Write File Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Write File Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Write File Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Write File Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Write File Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Loop_Construct_Tools_Specs
  displayName: 'Loop Construct Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Loop Construct Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Loop Construct Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Loop Construct Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Loop Construct Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Utility_Tools_Specs
  displayName: 'Utility Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Utility Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Utility Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Utility Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Utility Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Folder_Read_Tool_Specs
  displayName: 'Folder Read Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Folder Read Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Folder Read Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Folder Read Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Folder Read Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: SQL_Bulk_Insert_Tool_Specs
  displayName: 'SQL Bulk Insert Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\SQL Bulk Insert Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'SQL Bulk Insert Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'SQL Bulk Insert Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'SQL Bulk Insert Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Control_Flow_Tools_Specs
  displayName: 'Control Flow Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Control Flow Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Control Flow Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Control Flow Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Control Flow Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_View_Models_Unit_Tests
  displayName: 'Studio View Models Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio View Models Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio View Models Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio View Models Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio View Models Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: File_And_Folder_Create_Tool_Specs
  displayName: 'File And Folder Create Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\File And Folder Create Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Create Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'File And Folder Create Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'File And Folder Create Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Storage_Unit_Tests
  displayName: 'Storage Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Storage Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Storage Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Storage Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Storage Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Storage_Tools_Specs
  displayName: 'Storage Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Storage Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Storage Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Storage Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Storage Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: File_And_Folder_Delete_Tool_Specs
  displayName: 'File And Folder Delete Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\File And Folder Delete Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Delete Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'File And Folder Delete Tool Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'File And Folder Delete Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Scripting_Tools_Specs
  displayName: 'Scripting Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Scripting Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Scripting Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Scripting Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Scripting Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Database_Tools_Specs
  displayName: 'Database Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Database Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Database Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Database Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Database Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Auditing_Unit_Tests
  displayName: 'Auditing Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Auditing Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Auditing Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Auditing Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Auditing Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Workflow_Execution_Specs
  displayName: 'Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Workflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Workflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Workflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_Hello_World_Workflow_Specs
  displayName: 'Studio Test Framework With Hello World Workflow Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With Hello World Workflow Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Hello World Workflow Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With Hello World Workflow Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With Hello World Workflow Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_Utility_Tools_Specs
  displayName: 'Studio Test Framework With Utility Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With Utility Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Utility Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With Utility Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With Utility Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: MS_SQL_Server_Specs
  displayName: 'MS SQL Server Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\MS SQL Server Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'MS SQL Server Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'MS SQL Server Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'MS SQL Server Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_Data_Tools_Specs
  displayName: 'Studio Test Framework With Data Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With Data Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Data Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With Data Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'MS SQL Server Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Assign_Workflow_Execution_Specs
  displayName: 'Assign Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Assign Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Assign Workflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Assign Workflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Assign Workflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Integration_Tests
  displayName: 'Integration Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Integration Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Integration Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Integration Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Integration Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_Scripting_Tools_Specs
  displayName: 'Studio Test Framework With Scripting Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With Scripting Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Scripting Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With Scripting Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With Scripting Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Other_Activities_Specs
  displayName: 'Other Activities Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Other Activities Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Other Activities Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Other Activities Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Other Activities Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_File_And_Folder_Tools_Specs
  displayName: 'Studio Test Framework With File And Folder Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With File And Folder Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With File And Folder Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With File And Folder Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With File And Folder Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_HTTP_Web_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With HTTP Web Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With HTTP Web Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With HTTP Web Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_Subworkflow_Specs
  displayName: 'Studio Test Framework With Subworkflow Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With Subworkflow Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Subworkflow Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With Subworkflow Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With Subworkflow Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Workflow_Merging_Specs
  displayName: 'Workflow Merging Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Workflow Merging Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Workflow Merging Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Workflow Merging Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Workflow Merging Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Example_Workflow_Execution_Specs
  displayName: 'Example Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Example Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Example Workflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Example Workflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Example Workflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_Specs
  displayName: 'Studio Test Framework Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Subworkflow_Execution_Specs
  displayName: 'Subworkflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Subworkflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Subworkflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Subworkflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Subworkflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Other_Specs
  displayName: 'Other Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Other Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Other Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Other Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Other Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_Deleted_Resources_Specs
  displayName: 'Studio Test Framework With Deleted Resources Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With Deleted Resources Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Deleted Resources Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With Deleted Resources Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With Deleted Resources Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: SQL_Integration_Tests
  displayName: 'SQL Integration Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\SQL Integration Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'SQL Integration Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'SQL Integration Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'SQL Integration Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: For_Each_Workflow_Execution_Specs
  displayName: 'For Each Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\For Each Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'For Each Workflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'For Each Workflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'For Each Workflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Copy_Tool_Specs_From_Local
  displayName: 'Copy Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Copy Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From Local'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Copy Tool Specs From Local Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Copy Tool Specs From Local Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Move_Tool_Specs_From_Local
  displayName: 'Move Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Move Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From Local'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Move Tool Specs From Local Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Move Tool Specs From Local Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Rename_Tool_Specs_From_Local
  displayName: 'Rename Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Rename Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From Local'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Rename Tool Specs From Local Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Rename Tool Specs From Local Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Unzip_Tool_Specs_From_Local
  displayName: 'Unzip Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Unzip Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From Local'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Unzip Tool Specs From Local Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Unzip Tool Specs From Local Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Zip_Tool_Specs_From_Local
  displayName: 'Zip Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Zip Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From Local'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Zip Tool Specs From Local Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Zip Tool Specs From Local Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Copy_Tool_Specs_From_FTP
  displayName: 'Copy Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Copy Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Copy Tool Specs From FTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Zip Tool Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Move_Tool_Specs_From_FTP
  displayName: 'Move Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Move Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From FTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Move Tool Specs From FTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Move Tool Specs From FTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Rename_Tool_Specs_From_FTP
  displayName: 'Rename Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Rename Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From FTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Rename Tool Specs From FTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Rename Tool Specs From FTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Unzip_Tool_Specs_From_FTP
  displayName: 'Unzip Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Unzip Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From FTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Unzip Tool Specs From FTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Unzip Tool Specs From FTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Zip_Tool_Specs_From_FTP
  displayName: 'Zip Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Zip Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From FTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Zip Tool Specs From FTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Zip Tool Specs From FTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Copy_Tool_Specs_From_FTPS
  displayName: 'Copy Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Copy Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From FTPS'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Copy Tool Specs From FTPS Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Copy Tool Specs From FTPS Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Move_Tool_Specs_From_FTPS
  displayName: 'Move Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Move Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From FTPS'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Move Tool Specs From FTPS Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Move Tool Specs From FTPS Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Rename_Tool_Specs_From_FTPS
  displayName: 'Rename Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Rename Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From FTPS'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Rename Tool Specs From FTPS Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Rename Tool Specs From FTPS Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Unzip_Tool_Specs_From_FTPS
  displayName: 'Unzip Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Unzip Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From FTPS'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Unzip Tool Specs From FTPS Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Unzip Tool Specs From FTPS Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Zip_Tool_Specs_From_FTPS
  displayName: 'Zip Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Zip Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From FTPS'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Zip Tool Specs From FTPS Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Zip Tool Specs From FTPS Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Copy_Tool_Specs_From_SFTP
  displayName: 'Copy Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Copy Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From SFTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Copy Tool Specs From SFTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Copy Tool Specs From SFTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Move_Tool_Specs_From_SFTP
  displayName: 'Move Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Move Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From SFTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Move Tool Specs From SFTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Move Tool Specs From SFTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Rename_Tool_Specs_From_SFTP
  displayName: 'Rename Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Rename Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From SFTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Rename Tool Specs From SFTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Rename Tool Specs From SFTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Unzip_Tool_Specs_From_SFTP
  displayName: 'Unzip Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Unzip Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From SFTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Unzip Tool Specs From SFTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Unzip Tool Specs From SFTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Zip_Tool_Specs_From_SFTP
  displayName: 'Zip Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Zip Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From SFTP'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Zip Tool Specs From SFTP Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Zip Tool Specs From SFTP Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Copy_Tool_Specs_From_UNC
  displayName: 'Copy Tool Specs From UNC'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Copy Tool Specs From UNC.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From UNC'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Copy Tool Specs From UNC Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Copy Tool Specs From UNC Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Move_Tool_Specs_From_UNC
  displayName: 'Move Tool Specs From UNC'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Move Tool Specs From UNC.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From UNC'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Move Tool Specs From UNC Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Move Tool Specs From UNC Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Core_Unit_Tests
  displayName: 'Studio Core Unit Tests'
  dependsOn: build
  pool: VM

  steps:
  - checkout: none

  - script: |
      IF NOT EXIST "D:\Builds\SonarQube" git -C "D:\Builds" clone "$(Build.Repository.Uri)" SonarQube
      IF EXIST "D:\Builds\SonarQube\.git\index.lock" DEL /F "D:\Builds\SonarQube\.git\index.lock"
      git -C "D:\Builds\SonarQube" reset --hard HEAD
      git -C "D:\Builds\SonarQube" clean -xdf --exclude Dev/packages/
      git -C "D:\Builds\SonarQube" fetch --all
      IF [$(Build.SourceVersion)] NEQ [] (
          echo Checking out version $(Build.SourceVersion)
          git -C "D:\Builds\SonarQube" checkout $(Build.SourceVersion)
      ) ELSE (
          IF [$(Build.SourceBranch)] NEQ [] (
              echo Checking out branch $(Build.SourceBranch)
              git -C "D:\Builds\SonarQube" checkout $(Build.SourceBranch)
          )
          git -C "D:\Builds\SonarQube" pull
      )
    displayName: 'Scorch Sonar Shared Working Directory'

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage\\Studio Core Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Core Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Core Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Core Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Elasticsearch_View_Models_Unit_Tests
  displayName: 'Elasticsearch View Models Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Elasticsearch View Models Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Elasticsearch View Models Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Elasticsearch View Models Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Elasticsearch View Models Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Search_Specs
  displayName: 'Search Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Search Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Search Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Search Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Search Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Logger_Unit_Tests
  displayName: 'Logger Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Logger Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Logger Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Logger Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Logger Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Rename_Tool_Specs_From_UNC
  displayName: 'Rename Tool Specs From UNC'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Rename Tool Specs From UNC.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From UNC'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Rename Tool Specs From UNC Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Rename Tool Specs From UNC Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Not_Parallelizable_Unit_Tests
  displayName: 'Not Parallelizable Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage\\Not Parallelizable Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Not Parallelizable Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Not Parallelizable Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Not Parallelizable Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Database_Workflow_Execution_Specs
  displayName: 'Database Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Database Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Database Workflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Database Workflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Database Workflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: RabbitMQ_Workflow_Execution_Specs
  displayName: 'RabbitMQ Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\RabbitMQ Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'RabbitMQ Workflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'RabbitMQ Workflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'RabbitMQ Workflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_HTTP_Web_Get_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Get Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With HTTP Web Get Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Get Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With HTTP Web Get Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With HTTP Web Get Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_HTTP_Web_Delete_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Delete Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With HTTP Web Delete Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Delete Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With HTTP Web Delete Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With HTTP Web Delete Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_HTTP_Web_Post_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Post Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With HTTP Web Post Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Post Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With HTTP Web Post Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With HTTP Web Post Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_HTTP_Web_Put_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Put Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With HTTP Web Put Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Put Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With HTTP Web Put Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With HTTP Web Put Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Studio_Test_Framework_With_RabbitMQ_Tools_Specs
  displayName: 'Studio Test Framework With RabbitMQ Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Studio Test Framework With RabbitMQ Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With RabbitMQ Tools Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Studio Test Framework With RabbitMQ Tools Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Studio Test Framework With RabbitMQ Tools Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Database_Subworkflow_Execution_Specs
  displayName: 'Database Subworkflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Database Subworkflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Database Subworkflow Execution Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Database Subworkflow Execution Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Database Subworkflow Execution Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Intellisense_Textbox_Visual_Tree_Unit_Tests
  displayName: 'Intellisense Textbox Visual Tree Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage\\Intellisense Textbox Visual Tree Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Intellisense Textbox Visual Tree Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Intellisense Textbox Visual Tree Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Intellisense Textbox Visual Tree Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Workflow_Execution_Logging_Specs
  displayName: 'Workflow Execution Logging Specs'
  dependsOn: build
  pool: VM

  steps:
  - checkout: none

  - script: |
      IF NOT EXIST "D:\Builds\SonarQube" git -C "D:\Builds" clone "$(Build.Repository.Uri)" SonarQube
      IF EXIST "D:\Builds\SonarQube\.git\index.lock" DEL /F "D:\Builds\SonarQube\.git\index.lock"
      git -C "D:\Builds\SonarQube" reset --hard HEAD
      git -C "D:\Builds\SonarQube" clean -xdf --exclude Dev/packages/
      git -C "D:\Builds\SonarQube" fetch --all
      IF [$(Build.SourceVersion)] NEQ [] (
          echo Checking out version $(Build.SourceVersion)
          git -C "D:\Builds\SonarQube" checkout $(Build.SourceVersion)
      ) ELSE (
          IF [$(Build.SourceBranch)] NEQ [] (
              echo Checking out branch $(Build.SourceBranch)
              git -C "D:\Builds\SonarQube" checkout $(Build.SourceBranch)
          )
          git -C "D:\Builds\SonarQube" pull
      )
    displayName: 'Scorch Sonar Shared Working Directory'

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage\\Workflow Execution Logging Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Workflow Execution Logging Specs'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Workflow Execution Logging Specs Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Workflow Execution Logging Specs Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Server_Startup_Tests
  displayName: 'Server Startup Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Server Startup Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Server Startup Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Server Startup Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Server Startup Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

- job: Plugin_Handler_Unit_Tests
  displayName: 'Plugin Handler Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\Job Shortcuts\\Coverage Container\\Plugin Handler Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Plugin Handler Unit Tests'
      
  - script: 'if not exist "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" (exit 1) else (copy "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\*.trx" "$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx")'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Merged.coveragexml'
      ArtifactName: 'Plugin Handler Unit Tests Coverage Snapshot'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\TestResults.trx'
      ArtifactName: 'Plugin Handler Unit Tests Results'
      publishLocation: 'Container'
      StoreAsTar: false

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults\\Cobertura.xml'
      reportDirectory: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\\TestResults'