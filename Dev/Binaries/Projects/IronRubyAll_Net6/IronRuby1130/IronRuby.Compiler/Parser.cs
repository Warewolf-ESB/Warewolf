using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Threading;
using IronRuby.Builtins;
using IronRuby.Compiler.Ast;
using IronRuby.Runtime;
using Microsoft.Scripting;
using Microsoft.Scripting.Utils;

namespace IronRuby.Compiler
{
	public class Parser : ILexicalVariableResolver
	{
		internal sealed class InternalSyntaxError : Exception
		{
		}

		private static ParserTables _tables;

		private static readonly object _tablesLock = new object();

		private TokenValue yyval;

		private SourceSpan yyloc;

		private SourceSpan _lastTokenSpan;

		private int _nextToken;

		private State _currentState;

		private bool _recovering;

		private int _tokensSinceLastError;

		private ParserStack<State, TokenValue, SourceSpan> _stack;

		private int _errorToken;

		private int _eofToken;

		private State[] _states;

		private int[] _rules;

		private int _inSingletonMethodDefinition;

		private int _inInstanceMethodDefinition;

		private SourceUnitTree _ast;

		private List<FileInitializerStatement> _initializers;

		private Stack<LexicalScope> _lexicalScopes = new Stack<LexicalScope>();

		private SourceUnit _sourceUnit;

		private readonly Tokenizer _tokenizer;

		private Action<Tokens, SourceSpan> _tokenSink;

		private int _generatedNameId;

		private Expression[] _argumentStack = new Expression[10];

		private int _argumentCount;

		internal RubyEncoding Encoding
		{
			get
			{
				return _tokenizer.Encoding;
			}
		}

		private bool InMethod
		{
			get
			{
				if (_inSingletonMethodDefinition <= 0)
				{
					return _inInstanceMethodDefinition > 0;
				}
				return true;
			}
		}

		public Tokenizer Tokenizer
		{
			get
			{
				return _tokenizer;
			}
		}

		public ErrorSink ErrorSink
		{
			get
			{
				return _tokenizer.ErrorSink;
			}
		}

		public Action<Tokens, SourceSpan> TokenSink
		{
			get
			{
				return _tokenSink;
			}
			set
			{
				_tokenSink = value;
			}
		}

		public LexicalScope CurrentScope
		{
			get
			{
				return _lexicalScopes.Peek();
			}
		}

		private void InitializeGeneratedTables(ParserTables tables)
		{
			tables.ErrorToken = 2;
			tables.EofToken = 3;
			tables.States = BuildStates(new short[45645]
			{
				938, 63, 42, 86, 27, 14, 28, 57, 43, 18,
				142, 59, 148, 60, 153, 131, 136, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 84, 372, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 423, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, 42, 525, 33, 539, 34, 541, 35,
				544, 36, 545, 89, 591, 2, 598, 3, -529, -1,
				1, -4, 3, -108, 4, -109, 5, -132, 26, -3,
				29, -2, 31, -10, 42, -68, 158, -11, 352, -14,
				353, -13, 354, -27, 18, -29, 19, -69, 34, -12,
				355, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				371, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 510, -104, 520, -7,
				523, -8, 524, -9, 543, -99, 546, -100, 547, -102,
				589, -103, 556, 1, 0, 3, 2, -1, -2, -3,
				71, 37, 86, 6, 57, 43, 18, 142, 59, 148,
				60, 153, 131, 136, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 84, 372, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 342, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 423,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 147, 498, 64, 501, 65, 504, 148, 507,
				42, 525, 33, 539, 34, 541, 35, 544, 36, 545,
				89, 591, 2, 598, 3, -530, 22, -530, 102, -530,
				108, -530, 27, -530, 26, -530, 21, -530, 29, -530,
				97, -530, 20, -530, -3, 7, -2, 31, -10, 42,
				-68, 158, -11, 352, -14, 353, -13, 354, -27, 18,
				-29, 19, -69, 34, -12, 355, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -70, 371, -25, 345, -18, 394,
				-22, 415, -23, 439, -28, 483, -26, 484, -19, 509,
				-105, 510, -104, 520, -7, 523, -8, 524, -9, 543,
				-99, 546, -100, 547, -102, 589, -103, 556, -541, 12,
				3, 86, 27, 14, 28, 3, -529, 22, -529, 102,
				-529, 108, -529, 27, -529, 26, -529, 21, -529, 29,
				-529, 97, -529, 20, -529, -108, 8, -109, 9, -132,
				26, -4, 70, 36, 86, 6, 57, 43, 18, 142,
				59, 148, 60, 153, 131, 136, 118, 225, 122, 228,
				119, 286, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 121, 226, 120, 227, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 84, 372, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 423, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, 42, 525, 33, 539, 34, 541, 35, 544,
				36, 545, 89, 591, 3, -530, 22, -530, 102, -530,
				108, -530, 27, -530, 26, -530, 21, -530, 29, -530,
				97, -530, 20, -530, -2, 10, -10, 42, -68, 158,
				-11, 352, -14, 353, -13, 354, -27, 18, -29, 19,
				-69, 34, -12, 355, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -70, 371, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 510,
				-104, 520, -7, 523, -8, 524, -9, 543, -99, 546,
				-100, 547, -102, 589, -103, 556, 17, 0, 52, 11,
				53, 32, 54, 600, 55, 602, 56, 604, 86, -7,
				14, -7, 3, -7, 22, -7, 102, -7, 108, -7,
				27, -7, 26, -7, 21, -7, 29, -7, 97, -7,
				20, -7, 49, 25, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 131, 136, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, -13, 12, -27, 18, -29, 19, -69, 34,
				-12, 326, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 224, -68, 284, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 218,
				-104, 472, 19, 0, 49, 13, 50, 15, 52, -45,
				53, -45, 54, -45, 55, -45, 56, -45, 86, -45,
				14, -45, 3, -45, 22, -45, 102, -45, 108, -45,
				27, -45, 26, -45, 21, -45, 29, -45, 97, -45,
				20, -45, 54, 28, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 131, 136, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, 42, 525, 33, 539, 34, 541, 35, 544,
				36, 545, -13, 14, -7, 937, -27, 18, -29, 19,
				-69, 34, -12, 326, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -70, 224, -68, 284, -25, 345, -18, 394,
				-22, 415, -23, 439, -28, 483, -26, 484, -19, 509,
				-105, 218, -104, 472, -8, 524, -9, 543, -51, 54,
				28, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 131,
				136, 84, 287, 103, 291, 98, 300, 43, 335, 58,
				321, 51, 342, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				465, 147, 498, 64, 501, 65, 504, 148, 507, 42,
				525, 33, 539, 34, 541, 35, 544, 36, 545, -13,
				16, -7, 17, -27, 18, -29, 19, -69, 34, -12,
				326, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				224, -68, 284, -25, 345, -18, 394, -22, 415, -23,
				439, -28, 483, -26, 484, -19, 509, -105, 218, -104,
				472, -8, 524, -9, 543, -52, -54, -50, 22, 1,
				40, 21, 49, -58, 50, -58, 52, -58, 53, -58,
				54, -58, 55, -58, 56, -58, 86, -58, 14, -58,
				3, -58, 22, -58, 102, -58, 108, -58, 27, -58,
				26, -58, 21, -58, 29, -58, 97, -58, 20, -58,
				25, -58, 39, -58, -37, 20, -394, 0, 1, -392,
				-140, 22, 65, 2, 74, 609, 139, 610, 86, -378,
				14, -378, 57, -378, 18, -378, 59, -378, 60, -378,
				131, -378, 118, -378, 122, -378, 119, -378, 128, -378,
				129, -378, 130, -378, 146, -378, 116, -378, 126, -378,
				111, -378, 113, -378, 112, -378, 114, -378, 115, -378,
				121, -378, 120, -378, 123, -378, 46, -378, 45, -378,
				47, -378, 48, -378, 62, -378, 61, -378, 63, -378,
				84, -378, 103, -378, 98, -378, 43, -378, 58, -378,
				51, -378, 23, -378, 24, -378, 30, -378, 31, -378,
				28, -378, 32, -378, 96, -378, 95, -378, 19, -378,
				15, -378, 16, -378, 17, -378, 93, -378, 44, -378,
				147, -378, 64, -378, 65, -378, 148, -378, 42, -378,
				33, -378, 34, -378, 35, -378, 36, -378, 89, -378,
				2, -378, 22, -378, -78, 23, -77, 608, 63, 41,
				86, 27, 14, 28, 57, 43, 18, 142, 59, 148,
				60, 153, 131, 136, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 84, 372, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 342, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 423,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 147, 498, 64, 501, 65, 504, 148, 507,
				42, 525, 33, 539, 34, 541, 35, 544, 36, 545,
				89, 591, 2, 598, 22, -529, -4, 24, -108, 4,
				-109, 5, -132, 26, -3, 29, -2, 31, -10, 42,
				-68, 158, -11, 352, -14, 353, -13, 354, -27, 18,
				-29, 19, -69, 34, -12, 355, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -70, 371, -25, 345, -18, 394,
				-22, 415, -23, 439, -28, 483, -26, 484, -19, 509,
				-105, 510, -104, 520, -7, 523, -8, 524, -9, 543,
				-99, 546, -100, 547, -102, 589, -103, 556, 1, 0,
				22, 25, -393, -540, -538, -539, 12, 3, 86, 27,
				14, 28, 3, -529, 22, -529, 102, -529, 108, -529,
				27, -529, 26, -529, 21, -529, 29, -529, 97, -529,
				20, -529, -108, 30, -109, 9, -132, 26, -5, 17,
				0, 52, 11, 53, 32, 54, 600, 55, 602, 56,
				604, 86, -6, 14, -6, 3, -6, 22, -6, 102,
				-6, 108, -6, 27, -6, 26, -6, 21, -6, 29,
				-6, 97, -6, 20, -6, 49, 25, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 131, 136, 84, 287, 103,
				291, 98, 300, 43, 335, 58, 321, 51, 342, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 465, 147, 498, 64,
				501, 65, 504, 148, 507, -13, 33, -27, 18, -29,
				19, -69, 34, -12, 326, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -70, 224, -68, 284, -25, 345, -18,
				394, -22, 415, -23, 439, -28, 483, -26, 484, -19,
				509, -105, 218, -104, 472, 19, 0, 49, 13, 50,
				15, 52, -46, 53, -46, 54, -46, 55, -46, 56,
				-46, 86, -46, 14, -46, 3, -46, 22, -46, 102,
				-46, 108, -46, 27, -46, 26, -46, 21, -46, 29,
				-46, 97, -46, 20, -46, 55, 4, 99, 347, 38,
				478, 94, 468, 118, -265, 121, -265, 120, -265, 122,
				-265, 123, -265, 46, -265, 45, -265, 47, -265, 48,
				-265, 62, -265, 61, -265, 63, -265, 128, -265, 129,
				-265, 130, -265, 146, -265, 116, -265, 126, -265, 111,
				-265, 113, -265, 112, -265, 114, -265, 115, -265, 131,
				-265, 119, -265, 84, -265, 103, -265, 98, -265, 43,
				-265, 58, -265, 51, -265, 23, -265, 24, -265, 30,
				-265, 31, -265, 28, -265, 32, -265, 96, -265, 95,
				-265, 19, -265, 15, -265, 16, -265, 17, -265, 93,
				-265, 44, -265, 64, -265, 65, -265, 147, -265, 148,
				-265, 89, -265, 125, -265, 90, -265, -44, 35, -36,
				476, -40, 477, -120, 332, 24, 1, 100, 37, 40,
				-65, 49, -65, 50, -65, 52, -65, 53, -65, 54,
				-65, 55, -65, 56, -65, 86, -65, 14, -65, 3,
				-65, 22, -65, 102, -65, 108, -65, 27, -65, 26,
				-65, 21, -65, 29, -65, 97, -65, 20, -65, 25,
				-65, 39, -65, 105, -65, -35, 36, -66, 0, 1,
				-63, -115, 38, 65, 2, 74, 609, 139, 610, 86,
				-378, 14, -378, 57, -378, 18, -378, 59, -378, 60,
				-378, 131, -378, 118, -378, 122, -378, 119, -378, 128,
				-378, 129, -378, 130, -378, 146, -378, 116, -378, 126,
				-378, 111, -378, 113, -378, 112, -378, 114, -378, 115,
				-378, 121, -378, 120, -378, 123, -378, 46, -378, 45,
				-378, 47, -378, 48, -378, 62, -378, 61, -378, 63,
				-378, 84, -378, 103, -378, 98, -378, 43, -378, 58,
				-378, 51, -378, 23, -378, 24, -378, 30, -378, 31,
				-378, 28, -378, 32, -378, 96, -378, 95, -378, 19,
				-378, 15, -378, 16, -378, 17, -378, 93, -378, 44,
				-378, 147, -378, 64, -378, 65, -378, 148, -378, 42,
				-378, 33, -378, 34, -378, 35, -378, 36, -378, 89,
				-378, 2, -378, 102, -378, -78, 39, -77, 608, 63,
				41, 86, 27, 14, 28, 57, 43, 18, 142, 59,
				148, 60, 153, 131, 136, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 84, 372, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 342, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				423, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 147, 498, 64, 501, 65, 504, 148,
				507, 42, 525, 33, 539, 34, 541, 35, 544, 36,
				545, 89, 591, 2, 598, 102, -529, -4, 40, -108,
				4, -109, 5, -132, 26, -3, 29, -2, 31, -10,
				42, -68, 158, -11, 352, -14, 353, -13, 354, -27,
				18, -29, 19, -69, 34, -12, 355, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 371, -25, 345, -18,
				394, -22, 415, -23, 439, -28, 483, -26, 484, -19,
				509, -105, 510, -104, 520, -7, 523, -8, 524, -9,
				543, -99, 546, -100, 547, -102, 589, -103, 556, 1,
				0, 102, 41, -64, -9, 77, 5, 120, 934, 118,
				48, 122, 49, 119, 50, 139, 52, 140, 53, 91,
				54, 67, 55, 68, 56, 69, 57, 75, 58, 76,
				59, 137, 60, 71, 61, 138, 62, 72, 63, 70,
				64, 81, 65, 82, 66, 141, 67, 142, 68, 143,
				69, 89, 70, 144, 71, 145, 72, 66, 73, 147,
				74, 148, 75, 64, 76, 65, 77, 79, 78, 80,
				79, 92, 80, 61, 82, 62, 83, 63, 84, 59,
				85, 60, 86, 57, 87, 49, 88, 19, 89, 33,
				90, 28, 91, 15, 92, 17, 93, 58, 94, 38,
				95, 40, 96, 27, 97, 26, 98, 22, 99, 21,
				100, 48, 101, 32, 102, 37, 103, 16, 104, 34,
				105, 46, 106, 51, 107, 50, 108, 35, 109, 20,
				110, 36, 111, 42, 112, 45, 113, 44, 114, 25,
				115, 47, 116, 18, 117, 29, 118, 43, 119, 52,
				120, 53, 121, 54, 122, 55, 123, 56, 124, 116,
				126, -67, 44, -76, 47, -75, 51, -117, 81, -66,
				125, 0, 1, -18, -112, 45, 76, 5, 118, 48,
				122, 49, 119, 50, 139, 52, 140, 53, 91, 54,
				67, 55, 68, 56, 69, 57, 75, 58, 76, 59,
				137, 60, 71, 61, 138, 62, 72, 63, 70, 64,
				81, 65, 82, 66, 141, 67, 142, 68, 143, 69,
				89, 70, 144, 71, 145, 72, 66, 73, 147, 74,
				148, 75, 64, 76, 65, 77, 79, 78, 80, 79,
				92, 80, 61, 82, 62, 83, 63, 84, 59, 85,
				60, 86, 57, 87, 49, 88, 19, 89, 33, 90,
				28, 91, 15, 92, 17, 93, 58, 94, 38, 95,
				40, 96, 27, 97, 26, 98, 22, 99, 21, 100,
				48, 101, 32, 102, 37, 103, 16, 104, 34, 105,
				46, 106, 51, 107, 50, 108, 35, 109, 20, 110,
				36, 111, 42, 112, 45, 113, 44, 114, 25, 115,
				47, 116, 18, 117, 29, 118, 43, 119, 52, 120,
				53, 121, 54, 122, 55, 123, 56, 124, 116, 126,
				-67, 46, -76, 47, -75, 51, -117, 81, -66, 125,
				-19, -116, -111, -112, -113, -114, -128, -129, -130, -131,
				-132, -133, -134, -135, -136, -137, -138, -139, -140, -141,
				-142, -143, -144, -145, -146, -147, -148, -149, -150, -151,
				-152, -153, -154, -155, -156, -115, -157, -158, -159, -160,
				-161, -162, -163, -164, -165, -166, -167, -168, -169, -170,
				-171, -172, -173, -174, -175, -176, -177, -178, -179, -180,
				-181, -182, -183, -184, -185, -186, -187, -188, -189, -190,
				-191, -192, -193, -194, -195, -196, -197, -198, -199, -117,
				83, 6, 118, 48, 122, 49, 119, 50, 139, 52,
				140, 53, 91, 54, 67, 55, 68, 56, 69, 57,
				75, 58, 76, 59, 137, 60, 71, 61, 138, 62,
				72, 63, 70, 64, 81, 65, 82, 66, 141, 67,
				142, 68, 143, 69, 89, 70, 144, 71, 145, 72,
				66, 73, 147, 74, 148, 75, 64, 76, 65, 77,
				79, 78, 80, 79, 92, 80, 61, 82, 62, 83,
				63, 84, 59, 85, 60, 86, 57, 87, 49, 88,
				19, 89, 33, 90, 28, 91, 15, 92, 17, 93,
				58, 94, 38, 95, 40, 96, 27, 97, 26, 98,
				22, 99, 21, 100, 48, 101, 32, 102, 37, 103,
				16, 104, 34, 105, 46, 106, 51, 107, 50, 108,
				35, 109, 20, 110, 36, 111, 42, 112, 45, 113,
				44, 114, 25, 115, 47, 116, 18, 117, 29, 118,
				43, 119, 52, 120, 53, 121, 54, 122, 55, 123,
				56, 124, 121, 930, 120, 931, 123, 932, 131, 136,
				117, -439, 127, -439, 106, -439, 107, -439, -71, 127,
				-55, 128, -76, 929, -75, 51, -117, 81, -68, 933,
				-118, 4, 1, 117, 129, 127, 131, 106, 132, 107,
				139, -54, 130, -119, -440, -441, 4, 2, 120, 134,
				131, 136, 121, 137, 123, 138, -53, 133, -68, 135,
				-442, -444, -445, -468, -446, -447, 63, 41, 86, 27,
				14, 28, 57, 43, 18, 142, 59, 148, 60, 153,
				131, 136, 118, 225, 122, 228, 119, 286, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				121, 226, 120, 227, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				84, 372, 103, 291, 98, 300, 43, 335, 58, 321,
				51, 342, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 423, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 465,
				147, 498, 64, 501, 65, 504, 148, 507, 42, 525,
				33, 539, 34, 541, 35, 544, 36, 545, 89, 591,
				2, 598, 108, -529, -4, 140, -108, 4, -109, 5,
				-132, 26, -3, 29, -2, 31, -10, 42, -68, 158,
				-11, 352, -14, 353, -13, 354, -27, 18, -29, 19,
				-69, 34, -12, 355, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -70, 371, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 510,
				-104, 520, -7, 523, -8, 524, -9, 543, -99, 546,
				-100, 547, -102, 589, -103, 556, 1, 0, 108, 141,
				-443, 76, 6, 118, 48, 122, 49, 119, 50, 139,
				52, 140, 53, 91, 54, 67, 55, 68, 56, 69,
				57, 75, 58, 76, 59, 137, 60, 71, 61, 138,
				62, 72, 63, 70, 64, 81, 65, 82, 66, 141,
				67, 142, 68, 143, 69, 89, 70, 144, 71, 145,
				72, 66, 73, 147, 74, 148, 75, 64, 76, 65,
				77, 79, 78, 80, 79, 92, 80, 61, 82, 62,
				83, 63, 84, 59, 85, 60, 86, 57, 87, 49,
				88, 19, 89, 33, 90, 28, 91, 15, 92, 17,
				93, 58, 94, 38, 95, 40, 96, 27, 97, 26,
				98, 22, 99, 21, 100, 48, 101, 32, 102, 37,
				103, 16, 104, 34, 105, 46, 106, 51, 107, 50,
				108, 35, 109, 20, 110, 36, 111, 42, 112, 45,
				113, 44, 114, 25, 115, 47, 116, 18, 117, 29,
				118, 43, 119, 52, 120, 53, 121, 54, 122, 55,
				123, 56, 124, 116, 126, -32, 143, -67, 147, -76,
				47, -75, 51, -117, 81, -66, 125, 18, 0, 87,
				144, 52, -10, 53, -10, 54, -10, 55, -10, 56,
				-10, 86, -10, 14, -10, 3, -10, 22, -10, 102,
				-10, 108, -10, 27, -10, 26, -10, 21, -10, 29,
				-10, 97, -10, 20, -10, 0, 1, -126, -118, 145,
				76, 5, 118, 48, 122, 49, 119, 50, 139, 52,
				140, 53, 91, 54, 67, 55, 68, 56, 69, 57,
				75, 58, 76, 59, 137, 60, 71, 61, 138, 62,
				72, 63, 70, 64, 81, 65, 82, 66, 141, 67,
				142, 68, 143, 69, 89, 70, 144, 71, 145, 72,
				66, 73, 147, 74, 148, 75, 64, 76, 65, 77,
				79, 78, 80, 79, 92, 80, 61, 82, 62, 83,
				63, 84, 59, 85, 60, 86, 57, 87, 49, 88,
				19, 89, 33, 90, 28, 91, 15, 92, 17, 93,
				58, 94, 38, 95, 40, 96, 27, 97, 26, 98,
				22, 99, 21, 100, 48, 101, 32, 102, 37, 103,
				16, 104, 34, 105, 46, 106, 51, 107, 50, 108,
				35, 109, 20, 110, 36, 111, 42, 112, 45, 113,
				44, 114, 25, 115, 47, 116, 18, 117, 29, 118,
				43, 119, 52, 120, 53, 121, 54, 122, 55, 123,
				56, 124, 116, 126, -67, 146, -76, 47, -75, 51,
				-117, 81, -66, 125, -127, -125, 0, 1, -11, -110,
				149, 1, 0, 99, 150, 63, 41, 86, 27, 14,
				28, 57, 43, 18, 142, 59, 148, 60, 153, 131,
				136, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 84,
				372, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 423, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, 42, 525, 33,
				539, 34, 541, 35, 544, 36, 545, 89, 591, 2,
				598, 102, -529, -4, 151, -108, 4, -109, 5, -132,
				26, -3, 29, -2, 31, -10, 42, -68, 158, -11,
				352, -14, 353, -13, 354, -27, 18, -29, 19, -69,
				34, -12, 355, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 371, -25, 345, -18, 394, -22, 415, -23,
				439, -28, 483, -26, 484, -19, 509, -105, 510, -104,
				520, -7, 523, -8, 524, -9, 543, -99, 546, -100,
				547, -102, 589, -103, 556, 1, 0, 102, 152, -12,
				0, 1, -13, -111, 154, 1, 0, 99, 155, 63,
				41, 86, 27, 14, 28, 57, 43, 18, 142, 59,
				148, 60, 153, 131, 136, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 84, 372, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 342, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				423, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 147, 498, 64, 501, 65, 504, 148,
				507, 42, 525, 33, 539, 34, 541, 35, 544, 36,
				545, 89, 591, 2, 598, 102, -529, -4, 156, -108,
				4, -109, 5, -132, 26, -3, 29, -2, 31, -10,
				42, -68, 158, -11, 352, -14, 353, -13, 354, -27,
				18, -29, 19, -69, 34, -12, 355, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 371, -25, 345, -18,
				394, -22, 415, -23, 439, -28, 483, -26, 484, -19,
				509, -105, 510, -104, 520, -7, 523, -8, 524, -9,
				543, -99, 546, -100, 547, -102, 589, -103, 556, 1,
				0, 102, 157, -14, 51, 0, 124, 159, 88, -284,
				83, -284, 104, -284, 141, -284, 142, -284, 143, -284,
				144, -284, 145, -284, 66, -284, 139, -284, 140, -284,
				91, -284, 67, -284, 137, -284, 71, -284, 138, -284,
				72, -284, 68, -284, 69, -284, 70, -284, 75, -284,
				76, -284, 81, -284, 82, -284, 73, -284, 74, -284,
				77, -284, 78, -284, 135, -284, 49, -284, 50, -284,
				52, -284, 53, -284, 54, -284, 55, -284, 56, -284,
				86, -284, 14, -284, 3, -284, 22, -284, 102, -284,
				108, -284, 27, -284, 26, -284, 21, -284, 29, -284,
				97, -284, 20, -284, 134, -105, 87, -97, 49, 24,
				118, 225, 122, 228, 119, 286, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 121, 226,
				120, 227, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 131, 136,
				84, 287, 103, 291, 98, 300, 43, 335, 58, 321,
				51, 337, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 420, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 465,
				64, 501, 65, 504, 147, 506, 148, 507, -27, 160,
				-19, 161, -29, 19, -69, 34, -12, 326, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -70, 224, -68, 284,
				-25, 345, -18, 394, -22, 415, -23, 439, -28, 483,
				-26, 484, -105, 218, -104, 472, -15, 55, 0, 141,
				162, 142, 164, 143, 166, 144, 168, 145, 170, 66,
				172, 139, 174, 140, 176, 91, 178, 67, 180, 137,
				182, 71, 184, 138, 186, 72, 188, 68, 190, 69,
				192, 70, 194, 75, 196, 76, 198, 81, 200, 82,
				202, 73, 204, 74, 206, 77, 208, 78, 210, 135,
				212, 49, -210, 50, -210, 52, -210, 53, -210, 54,
				-210, 55, -210, 56, -210, 86, -210, 14, -210, 3,
				-210, 22, -210, 102, -210, 108, -210, 27, -210, 26,
				-210, 21, -210, 29, -210, 97, -210, 20, -210, 25,
				-210, 39, -210, 136, -210, 85, -210, 87, -210, 105,
				-210, 100, -210, 40, -210, 101, -210, 41, -210, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				163, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, -211, 142, -211, 143, 166, 144, 168, 145,
				170, 66, 172, 139, -211, 140, -211, 91, -211, 67,
				-211, 137, -211, 71, -211, 138, -211, 72, -211, 68,
				-211, 69, -211, 70, -211, 75, -211, 76, -211, 81,
				-211, 82, -211, 73, -211, 74, -211, 77, -211, 78,
				-211, 135, -211, 49, -211, 50, -211, 52, -211, 53,
				-211, 54, -211, 55, -211, 56, -211, 86, -211, 14,
				-211, 3, -211, 22, -211, 102, -211, 108, -211, 27,
				-211, 26, -211, 21, -211, 29, -211, 97, -211, 20,
				-211, 25, -211, 39, -211, 136, -211, 85, -211, 87,
				-211, 105, -211, 100, -211, 40, -211, 101, -211, 41,
				-211, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 165, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 55, 0, 141, -212, 142, -212, 143, 166, 144,
				168, 145, 170, 66, 172, 139, -212, 140, -212, 91,
				-212, 67, -212, 137, -212, 71, -212, 138, -212, 72,
				-212, 68, -212, 69, -212, 70, -212, 75, -212, 76,
				-212, 81, -212, 82, -212, 73, -212, 74, -212, 77,
				-212, 78, -212, 135, -212, 49, -212, 50, -212, 52,
				-212, 53, -212, 54, -212, 55, -212, 56, -212, 86,
				-212, 14, -212, 3, -212, 22, -212, 102, -212, 108,
				-212, 27, -212, 26, -212, 21, -212, 29, -212, 97,
				-212, 20, -212, 25, -212, 39, -212, 136, -212, 85,
				-212, 87, -212, 105, -212, 100, -212, 40, -212, 101,
				-212, 41, -212, 49, 20, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 308, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 64, 501, 65, 504, 147,
				506, 148, 507, -19, 167, -105, 218, -70, 224, -12,
				237, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 475, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, 55, 0, 141, -213, 142, -213, 143,
				-213, 144, -213, 145, -213, 66, 172, 139, -213, 140,
				-213, 91, -213, 67, -213, 137, -213, 71, -213, 138,
				-213, 72, -213, 68, -213, 69, -213, 70, -213, 75,
				-213, 76, -213, 81, -213, 82, -213, 73, -213, 74,
				-213, 77, -213, 78, -213, 135, -213, 49, -213, 50,
				-213, 52, -213, 53, -213, 54, -213, 55, -213, 56,
				-213, 86, -213, 14, -213, 3, -213, 22, -213, 102,
				-213, 108, -213, 27, -213, 26, -213, 21, -213, 29,
				-213, 97, -213, 20, -213, 25, -213, 39, -213, 136,
				-213, 85, -213, 87, -213, 105, -213, 100, -213, 40,
				-213, 101, -213, 41, -213, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 169, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, -214, 142,
				-214, 143, -214, 144, -214, 145, -214, 66, 172, 139,
				-214, 140, -214, 91, -214, 67, -214, 137, -214, 71,
				-214, 138, -214, 72, -214, 68, -214, 69, -214, 70,
				-214, 75, -214, 76, -214, 81, -214, 82, -214, 73,
				-214, 74, -214, 77, -214, 78, -214, 135, -214, 49,
				-214, 50, -214, 52, -214, 53, -214, 54, -214, 55,
				-214, 56, -214, 86, -214, 14, -214, 3, -214, 22,
				-214, 102, -214, 108, -214, 27, -214, 26, -214, 21,
				-214, 29, -214, 97, -214, 20, -214, 25, -214, 39,
				-214, 136, -214, 85, -214, 87, -214, 105, -214, 100,
				-214, 40, -214, 101, -214, 41, -214, 49, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, -19, 171, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				-215, 142, -215, 143, -215, 144, -215, 145, -215, 66,
				172, 139, -215, 140, -215, 91, -215, 67, -215, 137,
				-215, 71, -215, 138, -215, 72, -215, 68, -215, 69,
				-215, 70, -215, 75, -215, 76, -215, 81, -215, 82,
				-215, 73, -215, 74, -215, 77, -215, 78, -215, 135,
				-215, 49, -215, 50, -215, 52, -215, 53, -215, 54,
				-215, 55, -215, 56, -215, 86, -215, 14, -215, 3,
				-215, 22, -215, 102, -215, 108, -215, 27, -215, 26,
				-215, 21, -215, 29, -215, 97, -215, 20, -215, 25,
				-215, 39, -215, 136, -215, 85, -215, 87, -215, 105,
				-215, 100, -215, 40, -215, 101, -215, 41, -215, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				173, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, -216, 142, -216, 143, -216, 144, -216, 145,
				-216, 66, 172, 139, -216, 140, -216, 91, -216, 67,
				-216, 137, -216, 71, -216, 138, -216, 72, -216, 68,
				-216, 69, -216, 70, -216, 75, -216, 76, -216, 81,
				-216, 82, -216, 73, -216, 74, -216, 77, -216, 78,
				-216, 135, -216, 49, -216, 50, -216, 52, -216, 53,
				-216, 54, -216, 55, -216, 56, -216, 86, -216, 14,
				-216, 3, -216, 22, -216, 102, -216, 108, -216, 27,
				-216, 26, -216, 21, -216, 29, -216, 97, -216, 20,
				-216, 25, -216, 39, -216, 136, -216, 85, -216, 87,
				-216, 105, -216, 100, -216, 40, -216, 101, -216, 41,
				-216, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 175, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 55, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, -222, 140, -222, 91,
				178, 67, -222, 137, -222, 71, -222, 138, -222, 72,
				-222, 68, -222, 69, -222, 70, -222, 75, -222, 76,
				-222, 81, 200, 82, 202, 73, -222, 74, -222, 77,
				-222, 78, -222, 135, -222, 49, -222, 50, -222, 52,
				-222, 53, -222, 54, -222, 55, -222, 56, -222, 86,
				-222, 14, -222, 3, -222, 22, -222, 102, -222, 108,
				-222, 27, -222, 26, -222, 21, -222, 29, -222, 97,
				-222, 20, -222, 25, -222, 39, -222, 136, -222, 85,
				-222, 87, -222, 105, -222, 100, -222, 40, -222, 101,
				-222, 41, -222, 49, 20, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 308, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 64, 501, 65, 504, 147,
				506, 148, 507, -19, 177, -105, 218, -70, 224, -12,
				237, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 475, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, 55, 0, 141, 162, 142, 164, 143,
				166, 144, 168, 145, 170, 66, 172, 139, -223, 140,
				-223, 91, 178, 67, -223, 137, -223, 71, -223, 138,
				-223, 72, -223, 68, -223, 69, -223, 70, -223, 75,
				-223, 76, -223, 81, 200, 82, 202, 73, -223, 74,
				-223, 77, -223, 78, -223, 135, -223, 49, -223, 50,
				-223, 52, -223, 53, -223, 54, -223, 55, -223, 56,
				-223, 86, -223, 14, -223, 3, -223, 22, -223, 102,
				-223, 108, -223, 27, -223, 26, -223, 21, -223, 29,
				-223, 97, -223, 20, -223, 25, -223, 39, -223, 136,
				-223, 85, -223, 87, -223, 105, -223, 100, -223, 40,
				-223, 101, -223, 41, -223, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 179, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, 162, 142,
				164, 143, 166, 144, 168, 145, 170, 66, 172, 139,
				-224, 140, -224, 91, -224, 67, -224, 137, -224, 71,
				-224, 138, -224, 72, -224, 68, -224, 69, -224, 70,
				-224, 75, -224, 76, -224, 81, 200, 82, 202, 73,
				-224, 74, -224, 77, -224, 78, -224, 135, -224, 49,
				-224, 50, -224, 52, -224, 53, -224, 54, -224, 55,
				-224, 56, -224, 86, -224, 14, -224, 3, -224, 22,
				-224, 102, -224, 108, -224, 27, -224, 26, -224, 21,
				-224, 29, -224, 97, -224, 20, -224, 25, -224, 39,
				-224, 136, -224, 85, -224, 87, -224, 105, -224, 100,
				-224, 40, -224, 101, -224, 41, -224, 49, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, -19, 181, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				162, 142, 164, 143, 166, 144, 168, 145, 170, 66,
				172, 139, 174, 140, 176, 91, 178, 67, 180, 137,
				182, 71, 184, 138, 186, 72, 188, 68, 190, 69,
				192, 70, 194, 75, 196, 76, 198, 81, 200, 82,
				202, 73, -225, 74, -225, 77, -225, 78, -225, 135,
				-225, 49, -225, 50, -225, 52, -225, 53, -225, 54,
				-225, 55, -225, 56, -225, 86, -225, 14, -225, 3,
				-225, 22, -225, 102, -225, 108, -225, 27, -225, 26,
				-225, 21, -225, 29, -225, 97, -225, 20, -225, 25,
				-225, 39, -225, 136, -225, 85, -225, 87, -225, 105,
				-225, 100, -225, 40, -225, 101, -225, 41, -225, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				183, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, 162, 142, 164, 143, 166, 144, 168, 145,
				170, 66, 172, 139, 174, 140, 176, 91, 178, 67,
				-226, 137, -226, 71, -226, 138, -226, 72, -226, 68,
				-226, 69, -226, 70, -226, 75, -226, 76, -226, 81,
				200, 82, 202, 73, -226, 74, -226, 77, -226, 78,
				-226, 135, -226, 49, -226, 50, -226, 52, -226, 53,
				-226, 54, -226, 55, -226, 56, -226, 86, -226, 14,
				-226, 3, -226, 22, -226, 102, -226, 108, -226, 27,
				-226, 26, -226, 21, -226, 29, -226, 97, -226, 20,
				-226, 25, -226, 39, -226, 136, -226, 85, -226, 87,
				-226, 105, -226, 100, -226, 40, -226, 101, -226, 41,
				-226, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 185, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 55, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, 174, 140, 176, 91,
				178, 67, -227, 137, -227, 71, -227, 138, -227, 72,
				-227, 68, -227, 69, -227, 70, -227, 75, -227, 76,
				-227, 81, 200, 82, 202, 73, -227, 74, -227, 77,
				-227, 78, -227, 135, -227, 49, -227, 50, -227, 52,
				-227, 53, -227, 54, -227, 55, -227, 56, -227, 86,
				-227, 14, -227, 3, -227, 22, -227, 102, -227, 108,
				-227, 27, -227, 26, -227, 21, -227, 29, -227, 97,
				-227, 20, -227, 25, -227, 39, -227, 136, -227, 85,
				-227, 87, -227, 105, -227, 100, -227, 40, -227, 101,
				-227, 41, -227, 49, 20, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 308, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 64, 501, 65, 504, 147,
				506, 148, 507, -19, 187, -105, 218, -70, 224, -12,
				237, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 475, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, 55, 0, 141, 162, 142, 164, 143,
				166, 144, 168, 145, 170, 66, 172, 139, 174, 140,
				176, 91, 178, 67, -228, 137, -228, 71, -228, 138,
				-228, 72, -228, 68, -228, 69, -228, 70, -228, 75,
				-228, 76, -228, 81, 200, 82, 202, 73, -228, 74,
				-228, 77, -228, 78, -228, 135, -228, 49, -228, 50,
				-228, 52, -228, 53, -228, 54, -228, 55, -228, 56,
				-228, 86, -228, 14, -228, 3, -228, 22, -228, 102,
				-228, 108, -228, 27, -228, 26, -228, 21, -228, 29,
				-228, 97, -228, 20, -228, 25, -228, 39, -228, 136,
				-228, 85, -228, 87, -228, 105, -228, 100, -228, 40,
				-228, 101, -228, 41, -228, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 189, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, 162, 142,
				164, 143, 166, 144, 168, 145, 170, 66, 172, 139,
				174, 140, 176, 91, 178, 67, -229, 137, -229, 71,
				-229, 138, -229, 72, -229, 68, -229, 69, -229, 70,
				-229, 75, -229, 76, -229, 81, 200, 82, 202, 73,
				-229, 74, -229, 77, -229, 78, -229, 135, -229, 49,
				-229, 50, -229, 52, -229, 53, -229, 54, -229, 55,
				-229, 56, -229, 86, -229, 14, -229, 3, -229, 22,
				-229, 102, -229, 108, -229, 27, -229, 26, -229, 21,
				-229, 29, -229, 97, -229, 20, -229, 25, -229, 39,
				-229, 136, -229, 85, -229, 87, -229, 105, -229, 100,
				-229, 40, -229, 101, -229, 41, -229, 49, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, -19, 191, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				162, 142, 164, 143, 166, 144, 168, 145, 170, 66,
				172, 139, 174, 140, 176, 91, 178, 67, 180, 137,
				182, 71, 184, 138, 186, 72, 188, 68, 190, 69,
				192, 70, 194, 75, 196, 76, 198, 81, 200, 82,
				202, 73, -230, 74, -230, 77, -230, 78, -230, 135,
				-230, 49, -230, 50, -230, 52, -230, 53, -230, 54,
				-230, 55, -230, 56, -230, 86, -230, 14, -230, 3,
				-230, 22, -230, 102, -230, 108, -230, 27, -230, 26,
				-230, 21, -230, 29, -230, 97, -230, 20, -230, 25,
				-230, 39, -230, 136, -230, 85, -230, 87, -230, 105,
				-230, 100, -230, 40, -230, 101, -230, 41, -230, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				193, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, 162, 142, 164, 143, 166, 144, 168, 145,
				170, 66, 172, 139, 174, 140, 176, 91, 178, 67,
				180, 137, 182, 71, 184, 138, 186, 72, 188, 68,
				190, 69, 192, 70, 194, 75, 196, 76, 198, 81,
				200, 82, 202, 73, -231, 74, -231, 77, -231, 78,
				-231, 135, -231, 49, -231, 50, -231, 52, -231, 53,
				-231, 54, -231, 55, -231, 56, -231, 86, -231, 14,
				-231, 3, -231, 22, -231, 102, -231, 108, -231, 27,
				-231, 26, -231, 21, -231, 29, -231, 97, -231, 20,
				-231, 25, -231, 39, -231, 136, -231, 85, -231, 87,
				-231, 105, -231, 100, -231, 40, -231, 101, -231, 41,
				-231, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 195, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 55, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, 174, 140, 176, 91,
				178, 67, 180, 137, 182, 71, 184, 138, 186, 72,
				188, 68, 190, 69, 192, 70, 194, 75, 196, 76,
				198, 81, 200, 82, 202, 73, -232, 74, -232, 77,
				-232, 78, -232, 135, -232, 49, -232, 50, -232, 52,
				-232, 53, -232, 54, -232, 55, -232, 56, -232, 86,
				-232, 14, -232, 3, -232, 22, -232, 102, -232, 108,
				-232, 27, -232, 26, -232, 21, -232, 29, -232, 97,
				-232, 20, -232, 25, -232, 39, -232, 136, -232, 85,
				-232, 87, -232, 105, -232, 100, -232, 40, -232, 101,
				-232, 41, -232, 49, 20, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 308, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 64, 501, 65, 504, 147,
				506, 148, 507, -19, 197, -105, 218, -70, 224, -12,
				237, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 475, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, 55, 0, 141, 162, 142, 164, 143,
				166, 144, 168, 145, 170, 66, 172, 139, 174, 140,
				176, 91, 178, 67, 180, 137, 182, 71, 184, 138,
				186, 72, 188, 68, 190, 69, 192, 70, 194, 75,
				196, 76, 198, 81, 200, 82, 202, 73, -233, 74,
				-233, 77, -233, 78, -233, 135, -233, 49, -233, 50,
				-233, 52, -233, 53, -233, 54, -233, 55, -233, 56,
				-233, 86, -233, 14, -233, 3, -233, 22, -233, 102,
				-233, 108, -233, 27, -233, 26, -233, 21, -233, 29,
				-233, 97, -233, 20, -233, 25, -233, 39, -233, 136,
				-233, 85, -233, 87, -233, 105, -233, 100, -233, 40,
				-233, 101, -233, 41, -233, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 199, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, 162, 142,
				164, 143, 166, 144, 168, 145, 170, 66, 172, 139,
				174, 140, 176, 91, 178, 67, 180, 137, 182, 71,
				184, 138, 186, 72, 188, 68, 190, 69, 192, 70,
				194, 75, 196, 76, 198, 81, 200, 82, 202, 73,
				-234, 74, -234, 77, -234, 78, -234, 135, -234, 49,
				-234, 50, -234, 52, -234, 53, -234, 54, -234, 55,
				-234, 56, -234, 86, -234, 14, -234, 3, -234, 22,
				-234, 102, -234, 108, -234, 27, -234, 26, -234, 21,
				-234, 29, -234, 97, -234, 20, -234, 25, -234, 39,
				-234, 136, -234, 85, -234, 87, -234, 105, -234, 100,
				-234, 40, -234, 101, -234, 41, -234, 49, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, -19, 201, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				162, 142, 164, 143, 166, 144, 168, 145, 170, 66,
				172, 139, -237, 140, -237, 91, -237, 67, -237, 137,
				-237, 71, -237, 138, -237, 72, -237, 68, -237, 69,
				-237, 70, -237, 75, -237, 76, -237, 81, -237, 82,
				-237, 73, -237, 74, -237, 77, -237, 78, -237, 135,
				-237, 49, -237, 50, -237, 52, -237, 53, -237, 54,
				-237, 55, -237, 56, -237, 86, -237, 14, -237, 3,
				-237, 22, -237, 102, -237, 108, -237, 27, -237, 26,
				-237, 21, -237, 29, -237, 97, -237, 20, -237, 25,
				-237, 39, -237, 136, -237, 85, -237, 87, -237, 105,
				-237, 100, -237, 40, -237, 101, -237, 41, -237, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				203, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, 162, 142, 164, 143, 166, 144, 168, 145,
				170, 66, 172, 139, -238, 140, -238, 91, -238, 67,
				-238, 137, -238, 71, -238, 138, -238, 72, -238, 68,
				-238, 69, -238, 70, -238, 75, -238, 76, -238, 81,
				-238, 82, -238, 73, -238, 74, -238, 77, -238, 78,
				-238, 135, -238, 49, -238, 50, -238, 52, -238, 53,
				-238, 54, -238, 55, -238, 56, -238, 86, -238, 14,
				-238, 3, -238, 22, -238, 102, -238, 108, -238, 27,
				-238, 26, -238, 21, -238, 29, -238, 97, -238, 20,
				-238, 25, -238, 39, -238, 136, -238, 85, -238, 87,
				-238, 105, -238, 100, -238, 40, -238, 101, -238, 41,
				-238, 54, 21, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, 42, 919, 33, 920, 34, 921, 35, 544, 36,
				545, -19, 205, -9, 928, -105, 218, -70, 224, -12,
				237, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 475, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, 55, 0, 141, 162, 142, 164, 143,
				166, 144, 168, 145, 170, 66, 172, 139, 174, 140,
				176, 91, 178, 67, 180, 137, 182, 71, 184, 138,
				186, 72, 188, 68, 190, 69, 192, 70, 194, 75,
				196, 76, 198, 81, 200, 82, 202, 73, -239, 74,
				-239, 77, -239, 78, -239, 135, -239, 49, -239, 50,
				-239, 52, -239, 53, -239, 54, -239, 55, -239, 56,
				-239, 86, -239, 14, -239, 3, -239, 22, -239, 102,
				-239, 108, -239, 27, -239, 26, -239, 21, -239, 29,
				-239, 97, -239, 20, -239, 25, -239, 39, -239, 136,
				-239, 85, -239, 87, -239, 105, -239, 100, -239, 40,
				-239, 101, -239, 41, -239, 54, 21, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, 42, 919, 33, 920, 34,
				921, 35, 544, 36, 545, -19, 207, -9, 927, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				162, 142, 164, 143, 166, 144, 168, 145, 170, 66,
				172, 139, 174, 140, 176, 91, 178, 67, 180, 137,
				182, 71, 184, 138, 186, 72, 188, 68, 190, 69,
				192, 70, 194, 75, 196, 76, 198, 81, 200, 82,
				202, 73, 204, 74, -240, 77, -240, 78, -240, 135,
				-240, 49, -240, 50, -240, 52, -240, 53, -240, 54,
				-240, 55, -240, 56, -240, 86, -240, 14, -240, 3,
				-240, 22, -240, 102, -240, 108, -240, 27, -240, 26,
				-240, 21, -240, 29, -240, 97, -240, 20, -240, 25,
				-240, 39, -240, 136, -240, 85, -240, 87, -240, 105,
				-240, 100, -240, 40, -240, 101, -240, 41, -240, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				209, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, 162, 142, 164, 143, 166, 144, 168, 145,
				170, 66, 172, 139, 174, 140, 176, 91, 178, 67,
				180, 137, 182, 71, 184, 138, 186, 72, 188, 68,
				190, 69, 192, 70, 194, 75, 196, 76, 198, 81,
				200, 82, 202, 73, 204, 74, 206, 77, 208, 78,
				210, 135, -243, 49, -243, 50, -243, 52, -243, 53,
				-243, 54, -243, 55, -243, 56, -243, 86, -243, 14,
				-243, 3, -243, 22, -243, 102, -243, 108, -243, 27,
				-243, 26, -243, 21, -243, 29, -243, 97, -243, 20,
				-243, 25, -243, 39, -243, 136, -243, 85, -243, 87,
				-243, 105, -243, 100, -243, 40, -243, 101, -243, 41,
				-243, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 211, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 55, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, 174, 140, 176, 91,
				178, 67, 180, 137, 182, 71, 184, 138, 186, 72,
				188, 68, 190, 69, 192, 70, 194, 75, 196, 76,
				198, 81, 200, 82, 202, 73, 204, 74, 206, 77,
				208, 78, 210, 135, -244, 49, -244, 50, -244, 52,
				-244, 53, -244, 54, -244, 55, -244, 56, -244, 86,
				-244, 14, -244, 3, -244, 22, -244, 102, -244, 108,
				-244, 27, -244, 26, -244, 21, -244, 29, -244, 97,
				-244, 20, -244, 25, -244, 39, -244, 136, -244, 85,
				-244, 87, -244, 105, -244, 100, -244, 40, -244, 101,
				-244, 41, -244, 54, 21, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 308, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 64, 501, 65, 504, 147,
				506, 148, 507, 42, 919, 33, 920, 34, 921, 35,
				544, 36, 545, -19, 213, -9, 922, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 28, 1, 141, 162, 142,
				164, 143, 166, 144, 168, 145, 170, 66, 172, 139,
				174, 140, 176, 91, 178, 67, 180, 137, 182, 71,
				184, 138, 186, 72, 188, 68, 190, 69, 192, 70,
				194, 75, 196, 76, 198, 81, 200, 82, 202, 73,
				204, 74, 206, 77, 208, 78, 210, 135, 212, 14,
				314, 136, -531, -114, 214, 1, 0, 136, 215, 54,
				21, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, 42,
				919, 33, 920, 34, 921, 35, 544, 36, 545, -19,
				216, -9, 217, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 55, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, 174, 140, 176, 91,
				178, 67, 180, 137, 182, 71, 184, 138, 186, 72,
				188, 68, 190, 69, 192, 70, 194, 75, 196, 76,
				198, 81, 200, 82, 202, 73, 204, 74, 206, 77,
				208, 78, 210, 135, 212, 49, -246, 50, -246, 52,
				-246, 53, -246, 54, -246, 55, -246, 56, -246, 86,
				-246, 14, -246, 3, -246, 22, -246, 102, -246, 108,
				-246, 27, -246, 26, -246, 21, -246, 29, -246, 97,
				-246, 20, -246, 25, -246, 39, -246, 136, -246, 85,
				-246, 87, -246, 105, -246, 100, -246, 40, -246, 101,
				-246, 41, -246, -248, 1, 0, 134, 219, 49, 20,
				118, 225, 121, 226, 120, 227, 122, 228, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 131, 136, 119, 286,
				84, 287, 103, 291, 98, 300, 43, 308, 58, 321,
				51, 337, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 420, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 503,
				64, 501, 65, 504, 147, 506, 148, 507, -19, 220,
				-105, 218, -70, 224, -12, 237, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -68, 284, -69, 475, -25, 345,
				-18, 394, -22, 415, -23, 439, -104, 472, 55, 0,
				56, 221, 141, 162, 142, 164, 143, 166, 144, 168,
				145, 170, 66, 172, 139, 174, 140, 176, 91, 178,
				67, 180, 137, 182, 71, 184, 138, 186, 72, 188,
				68, 190, 69, 192, 70, 194, 75, 196, 76, 198,
				81, 200, 82, 202, 73, 204, 74, 206, 77, 208,
				78, 210, 135, 212, 49, -200, 50, -200, 52, -200,
				53, -200, 54, -200, 55, -200, 86, -200, 14, -200,
				3, -200, 22, -200, 102, -200, 108, -200, 27, -200,
				26, -200, 21, -200, 29, -200, 97, -200, 20, -200,
				25, -200, 39, -200, 136, -200, 85, -200, 87, -200,
				105, -200, 100, -200, 40, -200, 101, -200, 41, -200,
				54, 21, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 308,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 64, 501, 65, 504, 147, 506, 148, 507,
				42, 919, 33, 920, 34, 921, 35, 544, 36, 545,
				-19, 222, -9, 223, -105, 218, -70, 224, -12, 237,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 475, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, 55, 0, 141, 162, 142, 164, 143, 166,
				144, 168, 145, 170, 66, 172, 139, 174, 140, 176,
				91, 178, 67, 180, 137, 182, 71, 184, 138, 186,
				72, 188, 68, 190, 69, 192, 70, 194, 75, 196,
				76, 198, 81, 200, 82, 202, 73, 204, 74, 206,
				77, 208, 78, 210, 135, 212, 49, -201, 50, -201,
				52, -201, 53, -201, 54, -201, 55, -201, 56, -201,
				86, -201, 14, -201, 3, -201, 22, -201, 102, -201,
				108, -201, 27, -201, 26, -201, 21, -201, 29, -201,
				97, -201, 20, -201, 25, -201, 39, -201, 136, -201,
				85, -201, 87, -201, 105, -201, 100, -201, 40, -201,
				101, -201, 41, -201, -202, 60, 0, 134, -98, 88,
				-466, 83, -466, 104, -466, 141, -466, 142, -466, 143,
				-466, 144, -466, 145, -466, 66, -466, 139, -466, 140,
				-466, 91, -466, 67, -466, 137, -466, 71, -466, 138,
				-466, 72, -466, 68, -466, 69, -466, 70, -466, 75,
				-466, 76, -466, 81, -466, 82, -466, 73, -466, 74,
				-466, 77, -466, 78, -466, 135, -466, 49, -466, 50,
				-466, 52, -466, 53, -466, 54, -466, 55, -466, 56,
				-466, 86, -466, 14, -466, 3, -466, 22, -466, 102,
				-466, 108, -466, 27, -466, 26, -466, 21, -466, 29,
				-466, 97, -466, 20, -466, 25, -466, 39, -466, 136,
				-466, 85, -466, 87, -466, 105, -466, 100, -466, 40,
				-466, 101, -466, 41, -466, 124, -467, 116, 0, 88,
				-454, 83, -454, 104, -454, 141, -454, 142, -454, 143,
				-454, 144, -454, 145, -454, 66, -454, 139, -454, 140,
				-454, 91, -454, 67, -454, 137, -454, 71, -454, 138,
				-454, 72, -454, 68, -454, 69, -454, 70, -454, 75,
				-454, 76, -454, 81, -454, 82, -454, 73, -454, 74,
				-454, 77, -454, 78, -454, 135, -454, 49, -454, 50,
				-454, 52, -454, 53, -454, 54, -454, 55, -454, 56,
				-454, 86, -454, 14, -454, 3, -454, 134, -454, 124,
				-454, 87, -454, 22, -454, 102, -454, 108, -454, 27,
				-454, 26, -454, 21, -454, 29, -454, 97, -454, 20,
				-454, 25, -454, 39, -454, 136, -454, 85, -454, 105,
				-454, 100, -454, 40, -454, 101, -454, 41, -454, 37,
				-454, 99, -517, 38, -517, 94, -517, 118, -517, 121,
				-517, 120, -517, 122, -517, 123, -517, 46, -517, 45,
				-517, 47, -517, 48, -517, 62, -517, 61, -517, 63,
				-517, 128, -517, 129, -517, 130, -517, 146, -517, 116,
				-517, 126, -517, 111, -517, 113, -517, 112, -517, 114,
				-517, 115, -517, 131, -517, 119, -517, 84, -517, 103,
				-517, 98, -517, 43, -517, 58, -517, 51, -517, 23,
				-517, 24, -517, 30, -517, 31, -517, 28, -517, 32,
				-517, 96, -517, 95, -517, 19, -517, 15, -517, 16,
				-517, 17, -517, 93, -517, 44, -517, 64, -517, 65,
				-517, 147, -517, 148, -517, 89, -517, 125, -517, 90,
				-517, -455, -456, 116, 0, 88, -457, 83, -457, 104,
				-457, 141, -457, 142, -457, 143, -457, 144, -457, 145,
				-457, 66, -457, 139, -457, 140, -457, 91, -457, 67,
				-457, 137, -457, 71, -457, 138, -457, 72, -457, 68,
				-457, 69, -457, 70, -457, 75, -457, 76, -457, 81,
				-457, 82, -457, 73, -457, 74, -457, 77, -457, 78,
				-457, 135, -457, 49, -457, 50, -457, 52, -457, 53,
				-457, 54, -457, 55, -457, 56, -457, 86, -457, 14,
				-457, 3, -457, 134, -457, 124, -457, 87, -457, 22,
				-457, 102, -457, 108, -457, 27, -457, 26, -457, 21,
				-457, 29, -457, 97, -457, 20, -457, 25, -457, 39,
				-457, 136, -457, 85, -457, 105, -457, 100, -457, 40,
				-457, 101, -457, 41, -457, 37, -457, 99, -518, 38,
				-518, 94, -518, 118, -518, 121, -518, 120, -518, 122,
				-518, 123, -518, 46, -518, 45, -518, 47, -518, 48,
				-518, 62, -518, 61, -518, 63, -518, 128, -518, 129,
				-518, 130, -518, 146, -518, 116, -518, 126, -518, 111,
				-518, 113, -518, 112, -518, 114, -518, 115, -518, 131,
				-518, 119, -518, 84, -518, 103, -518, 98, -518, 43,
				-518, 58, -518, 51, -518, 23, -518, 24, -518, 30,
				-518, 31, -518, 28, -518, 32, -518, 96, -518, 95,
				-518, 19, -518, 15, -518, 16, -518, 17, -518, 93,
				-518, 44, -518, 64, -518, 65, -518, 147, -518, 148,
				-518, 89, -518, 125, -518, 90, -518, -458, -459, -460,
				-461, -462, -463, -464, -465, 58, 0, 104, 238, 83,
				917, 88, 918, 141, -250, 142, -250, 143, -250, 144,
				-250, 145, -250, 66, -250, 139, -250, 140, -250, 91,
				-250, 67, -250, 137, -250, 71, -250, 138, -250, 72,
				-250, 68, -250, 69, -250, 70, -250, 75, -250, 76,
				-250, 81, -250, 82, -250, 73, -250, 74, -250, 77,
				-250, 78, -250, 135, -250, 49, -250, 50, -250, 52,
				-250, 53, -250, 54, -250, 55, -250, 56, -250, 86,
				-250, 14, -250, 3, -250, 22, -250, 102, -250, 108,
				-250, 27, -250, 26, -250, 21, -250, 29, -250, 97,
				-250, 20, -250, 25, -250, 39, -250, 136, -250, 85,
				-250, 87, -250, 105, -250, 100, -250, 40, -250, 101,
				-250, 41, -250, 54, 28, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 64, 501, 65, 504, 147,
				506, 148, 507, 89, 515, 125, 532, 90, 534, 14,
				-258, 105, -258, -43, 239, -42, 471, -20, 316, -19,
				334, -105, 218, -70, 224, -12, 326, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 34, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, -21,
				527, -51, 528, -52, 536, -33, 537, -29, 538, 2,
				2, 14, 314, 105, -531, -113, 240, -114, 562, 62,
				0, 124, 241, 134, -99, 99, -403, 38, -403, 88,
				-403, 83, -403, 104, -403, 141, -403, 142, -403, 143,
				-403, 144, -403, 145, -403, 66, -403, 139, -403, 140,
				-403, 91, -403, 67, -403, 137, -403, 71, -403, 138,
				-403, 72, -403, 68, -403, 69, -403, 70, -403, 75,
				-403, 76, -403, 81, -403, 82, -403, 73, -403, 74,
				-403, 77, -403, 78, -403, 135, -403, 49, -403, 50,
				-403, 52, -403, 53, -403, 54, -403, 55, -403, 56,
				-403, 86, -403, 14, -403, 3, -403, 22, -403, 102,
				-403, 108, -403, 27, -403, 26, -403, 21, -403, 29,
				-403, 97, -403, 20, -403, 25, -403, 39, -403, 136,
				-403, 85, -403, 87, -403, 105, -403, 100, -403, 40,
				-403, 101, -403, 41, -403, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 242, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, 162, 142,
				164, 143, 166, 144, 168, 145, 170, 66, 172, 139,
				174, 140, 176, 91, 178, 67, 180, 137, 182, 71,
				184, 138, 186, 72, 188, 68, 190, 69, 192, 70,
				194, 75, 196, 76, 198, 81, 200, 82, 202, 73,
				204, 74, 206, 77, 208, 78, 210, 135, 212, 49,
				-204, 50, -204, 52, -204, 53, -204, 54, -204, 55,
				-204, 56, -204, 86, -204, 14, -204, 3, -204, 22,
				-204, 102, -204, 108, -204, 27, -204, 26, -204, 21,
				-204, 29, -204, 97, -204, 20, -204, 25, -204, 39,
				-204, 136, -204, 85, -204, 87, -204, 105, -204, 100,
				-204, 40, -204, 101, -204, 41, -204, -276, -448, -449,
				-450, 3, 0, 128, 248, 129, 911, 130, 914, 58,
				0, 66, 249, 88, -451, 83, -451, 104, -451, 141,
				-451, 142, -451, 143, -451, 144, -451, 145, -451, 139,
				-451, 140, -451, 91, -451, 67, -451, 137, -451, 71,
				-451, 138, -451, 72, -451, 68, -451, 69, -451, 70,
				-451, 75, -451, 76, -451, 81, -451, 82, -451, 73,
				-451, 74, -451, 77, -451, 78, -451, 135, -451, 49,
				-451, 50, -451, 52, -451, 53, -451, 54, -451, 55,
				-451, 56, -451, 86, -451, 14, -451, 3, -451, 22,
				-451, 102, -451, 108, -451, 27, -451, 26, -451, 21,
				-451, 29, -451, 97, -451, 20, -451, 25, -451, 39,
				-451, 136, -451, 85, -451, 87, -451, 105, -451, 100,
				-451, 40, -451, 101, -451, 41, -451, 49, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, -19, 250, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				-217, 142, -217, 143, -217, 144, -217, 145, -217, 66,
				172, 139, -217, 140, -217, 91, -217, 67, -217, 137,
				-217, 71, -217, 138, -217, 72, -217, 68, -217, 69,
				-217, 70, -217, 75, -217, 76, -217, 81, -217, 82,
				-217, 73, -217, 74, -217, 77, -217, 78, -217, 135,
				-217, 49, -217, 50, -217, 52, -217, 53, -217, 54,
				-217, 55, -217, 56, -217, 86, -217, 14, -217, 3,
				-217, 22, -217, 102, -217, 108, -217, 27, -217, 26,
				-217, 21, -217, 29, -217, 97, -217, 20, -217, 25,
				-217, 39, -217, 136, -217, 85, -217, 87, -217, 105,
				-217, 100, -217, 40, -217, 101, -217, 41, -217, -277,
				59, 1, 111, 254, 88, -278, 83, -278, 104, -278,
				141, -278, 142, -278, 143, -278, 144, -278, 145, -278,
				66, -278, 139, -278, 140, -278, 91, -278, 67, -278,
				137, -278, 71, -278, 138, -278, 72, -278, 68, -278,
				69, -278, 70, -278, 75, -278, 76, -278, 81, -278,
				82, -278, 73, -278, 74, -278, 77, -278, 78, -278,
				135, -278, 49, -278, 50, -278, 52, -278, 53, -278,
				54, -278, 55, -278, 56, -278, 86, -278, 14, -278,
				3, -278, 22, -278, 102, -278, 108, -278, 27, -278,
				26, -278, 21, -278, 29, -278, 97, -278, 20, -278,
				25, -278, 39, -278, 136, -278, 85, -278, 87, -278,
				105, -278, 100, -278, 40, -278, 101, -278, 41, -278,
				-56, 253, -425, 0, 1, -439, -55, 255, 4, 1,
				117, 256, 127, 131, 106, 132, 107, 139, -54, 130,
				-426, -423, -424, -279, 0, 1, -439, -55, 261, 4,
				1, 117, 262, 127, 131, 106, 132, 107, 139, -54,
				130, -427, -280, 0, 1, -439, -55, 265, 4, 1,
				132, 266, 127, 131, 106, 132, 107, 139, -54, 130,
				-428, -281, 4, 1, 117, 269, 127, -431, 106, -431,
				107, -431, -60, 270, -429, 3, 2, 127, 131, 106,
				132, 107, 139, -59, 271, -54, 275, 5, 1, 117,
				272, 13, 273, 127, 131, 106, 132, 107, 139, -54,
				274, -430, -432, -434, -433, -282, 2, 1, 117, 278,
				127, -437, -61, 279, -435, 1, 0, 127, 280, 2,
				0, 117, 281, 13, 282, -436, -438, -283, 60, 0,
				124, 285, 88, -284, 83, -284, 104, -284, 141, -284,
				142, -284, 143, -284, 144, -284, 145, -284, 66, -284,
				139, -284, 140, -284, 91, -284, 67, -284, 137, -284,
				71, -284, 138, -284, 72, -284, 68, -284, 69, -284,
				70, -284, 75, -284, 76, -284, 81, -284, 82, -284,
				73, -284, 74, -284, 77, -284, 78, -284, 135, -284,
				49, -284, 50, -284, 52, -284, 53, -284, 54, -284,
				55, -284, 56, -284, 86, -284, 14, -284, 3, -284,
				22, -284, 102, -284, 108, -284, 27, -284, 26, -284,
				21, -284, 29, -284, 97, -284, 20, -284, 25, -284,
				39, -284, 136, -284, 85, -284, 87, -284, 105, -284,
				100, -284, 40, -284, 101, -284, 41, -284, 134, -105,
				49, 20, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 308,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 64, 501, 65, 504, 147, 506, 148, 507,
				-19, 161, -105, 218, -70, 224, -12, 237, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 475,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				113, 0, 88, -285, 83, -285, 104, -285, 141, -285,
				142, -285, 143, -285, 144, -285, 145, -285, 66, -285,
				139, -285, 140, -285, 91, -285, 67, -285, 137, -285,
				71, -285, 138, -285, 72, -285, 68, -285, 69, -285,
				70, -285, 75, -285, 76, -285, 81, -285, 82, -285,
				73, -285, 74, -285, 77, -285, 78, -285, 135, -285,
				49, -285, 50, -285, 52, -285, 53, -285, 54, -285,
				55, -285, 56, -285, 86, -285, 14, -285, 3, -285,
				22, -285, 102, -285, 108, -285, 27, -285, 26, -285,
				21, -285, 29, -285, 97, -285, 20, -285, 25, -285,
				39, -285, 136, -285, 85, -285, 87, -285, 105, -285,
				100, -285, 40, -285, 101, -285, 41, -285, 99, -519,
				38, -519, 94, -519, 118, -519, 121, -519, 120, -519,
				122, -519, 123, -519, 46, -519, 45, -519, 47, -519,
				48, -519, 62, -519, 61, -519, 63, -519, 128, -519,
				129, -519, 130, -519, 146, -519, 116, -519, 126, -519,
				111, -519, 113, -519, 112, -519, 114, -519, 115, -519,
				131, -519, 119, -519, 84, -519, 103, -519, 98, -519,
				43, -519, 58, -519, 51, -519, 23, -519, 24, -519,
				30, -519, 31, -519, 28, -519, 32, -519, 96, -519,
				95, -519, 19, -519, 15, -519, 16, -519, 17, -519,
				93, -519, 44, -519, 64, -519, 65, -519, 147, -519,
				148, -519, 89, -519, 125, -519, 90, -519, 1, 0,
				122, 288, 60, 0, 124, 289, 88, -287, 83, -287,
				104, -287, 141, -287, 142, -287, 143, -287, 144, -287,
				145, -287, 66, -287, 139, -287, 140, -287, 91, -287,
				67, -287, 137, -287, 71, -287, 138, -287, 72, -287,
				68, -287, 69, -287, 70, -287, 75, -287, 76, -287,
				81, -287, 82, -287, 73, -287, 74, -287, 77, -287,
				78, -287, 135, -287, 49, -287, 50, -287, 52, -287,
				53, -287, 54, -287, 55, -287, 56, -287, 86, -287,
				14, -287, 3, -287, 22, -287, 102, -287, 108, -287,
				27, -287, 26, -287, 21, -287, 29, -287, 97, -287,
				20, -287, 25, -287, 39, -287, 136, -287, 85, -287,
				87, -287, 105, -287, 100, -287, 40, -287, 101, -287,
				41, -287, 134, -104, 49, 20, 118, 225, 121, 226,
				120, 227, 122, 228, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 131, 136, 119, 286, 84, 287, 103, 291,
				98, 300, 43, 308, 58, 321, 51, 337, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 503, 64, 501, 65, 504,
				147, 506, 148, 507, -19, 290, -105, 218, -70, 224,
				-12, 237, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-68, 284, -69, 475, -25, 345, -18, 394, -22, 415,
				-23, 439, -104, 472, 55, 0, 141, 162, 142, 164,
				143, 166, 144, 168, 145, 170, 66, 172, 139, 174,
				140, 176, 91, 178, 67, 180, 137, 182, 71, 184,
				138, 186, 72, 188, 68, 190, 69, 192, 70, 194,
				75, 196, 76, 198, 81, 200, 82, 202, 73, 204,
				74, 206, 77, 208, 78, 210, 135, 212, 49, -209,
				50, -209, 52, -209, 53, -209, 54, -209, 55, -209,
				56, -209, 86, -209, 14, -209, 3, -209, 22, -209,
				102, -209, 108, -209, 27, -209, 26, -209, 21, -209,
				29, -209, 97, -209, 20, -209, 25, -209, 39, -209,
				136, -209, 85, -209, 87, -209, 105, -209, 100, -209,
				40, -209, 101, -209, 41, -209, 52, 25, 118, 225,
				121, 226, 120, 227, 122, 228, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 131, 136, 119, 286, 84, 287,
				103, 291, 98, 300, 43, 308, 58, 321, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 503, 64, 501,
				65, 504, 147, 506, 148, 507, 89, 515, 125, 532,
				105, -251, -39, 292, -20, 294, -19, 334, -105, 218,
				-70, 224, -12, 237, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 284, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, -104, 472, -21, 527, -51, 909,
				-52, 536, 1, 0, 105, 293, -288, 3, 1, 87,
				296, 14, 906, 105, -535, -119, 295, -252, 52, 22,
				89, 319, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 308,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 64, 501, 65, 504, 147, 506, 148, 507,
				125, 532, 105, -537, -19, 297, -51, 907, -105, 218,
				-70, 224, -12, 237, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 284, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, -104, 472, -52, 536, 52, 0,
				141, 162, 142, 164, 143, 166, 144, 168, 145, 170,
				66, 172, 139, 174, 140, 176, 91, 178, 67, 180,
				137, 182, 71, 184, 138, 186, 72, 188, 68, 190,
				69, 192, 70, 194, 75, 196, 76, 198, 81, 200,
				82, 202, 73, 204, 74, 206, 77, 208, 78, 210,
				135, 212, 85, 298, 87, -274, 14, -274, 105, -274,
				97, -274, 100, -274, 40, -274, 49, -274, 50, -274,
				52, -274, 53, -274, 54, -274, 55, -274, 56, -274,
				86, -274, 3, -274, 22, -274, 102, -274, 108, -274,
				27, -274, 26, -274, 21, -274, 29, -274, 20, -274,
				25, -274, 39, -274, 49, 20, 118, 225, 121, 226,
				120, 227, 122, 228, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 131, 136, 119, 286, 84, 287, 103, 291,
				98, 300, 43, 308, 58, 321, 51, 337, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 503, 64, 501, 65, 504,
				147, 506, 148, 507, -19, 299, -105, 218, -70, 224,
				-12, 237, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-68, 284, -69, 475, -25, 345, -18, 394, -22, 415,
				-23, 439, -104, 472, 51, 0, 141, 162, 142, 164,
				143, 166, 144, 168, 145, 170, 66, 172, 139, 174,
				140, 176, 91, 178, 67, 180, 137, 182, 71, 184,
				138, 186, 72, 188, 68, 190, 69, 192, 70, 194,
				75, 196, 76, 198, 81, 200, 82, 202, 73, 204,
				74, 206, 77, 208, 78, 210, 135, 212, 87, -515,
				14, -515, 105, -515, 102, -515, 97, -515, 100, -515,
				40, -515, 49, -515, 50, -515, 52, -515, 53, -515,
				54, -515, 55, -515, 56, -515, 86, -515, 3, -515,
				22, -515, 108, -515, 27, -515, 26, -515, 21, -515,
				29, -515, 20, -515, 25, -515, 39, -515, 51, 22,
				102, 301, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 308,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 64, 501, 65, 504, 147, 506, 148, 507,
				125, 532, -51, 302, -52, 536, -19, 307, -105, 218,
				-70, 224, -12, 237, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 284, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, -104, 472, -289, 3, 1, 87,
				305, 14, 906, 102, -535, -119, 303, 1, 0, 102,
				304, -290, 52, 21, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 287, 103, 291, 98, 300,
				43, 308, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 503, 64, 501, 65, 504, 147, 506,
				148, 507, 125, 532, 102, -537, 105, -537, -52, 306,
				-19, 307, -105, 218, -70, 224, -12, 237, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 475,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				-514, 27, 0, 85, 298, 141, 162, 142, 164, 143,
				166, 144, 168, 145, 170, 66, 172, 139, 174, 140,
				176, 91, 178, 67, 180, 137, 182, 71, 184, 138,
				186, 72, 188, 68, 190, 69, 192, 70, 194, 75,
				196, 76, 198, 81, 200, 82, 202, 73, 204, 74,
				206, 77, 208, 78, 210, 135, 212, 59, 0, 94,
				309, 104, -293, 83, -293, 88, -293, 141, -293, 142,
				-293, 143, -293, 144, -293, 145, -293, 66, -293, 139,
				-293, 140, -293, 91, -293, 67, -293, 137, -293, 71,
				-293, 138, -293, 72, -293, 68, -293, 69, -293, 70,
				-293, 75, -293, 76, -293, 81, -293, 82, -293, 73,
				-293, 74, -293, 77, -293, 78, -293, 135, -293, 49,
				-293, 50, -293, 52, -293, 53, -293, 54, -293, 55,
				-293, 56, -293, 86, -293, 14, -293, 3, -293, 22,
				-293, 102, -293, 108, -293, 27, -293, 26, -293, 21,
				-293, 29, -293, 97, -293, 20, -293, 25, -293, 39,
				-293, 136, -293, 85, -293, 87, -293, 105, -293, 100,
				-293, 40, -293, 101, -293, 41, -293, 54, 29, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 64,
				501, 65, 504, 147, 506, 148, 507, 89, 515, 125,
				532, 90, 534, 14, 314, 97, -531, -42, 310, -116,
				315, -20, 316, -19, 334, -105, 218, -70, 224, -12,
				326, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 34, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, -21, 527, -51, 528, -52, 536, -33,
				537, -29, 538, -114, 312, 2, 2, 14, 314, 97,
				-531, -116, 311, -114, 312, -291, 1, 0, 97, 313,
				-533, -532, -292, 25, 1, 87, 318, 14, -270, 105,
				-270, 97, -270, 100, -270, 40, -270, 49, -270, 50,
				-270, 52, -270, 53, -270, 54, -270, 55, -270, 56,
				-270, 86, -270, 3, -270, 22, -270, 102, -270, 108,
				-270, 27, -270, 26, -270, 21, -270, 29, -270, 20,
				-270, 25, -270, 39, -270, -34, 317, -260, 76, 23,
				89, 319, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 308,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 64, 501, 65, 504, 147, 506, 148, 507,
				125, 532, 90, 534, 14, -269, 105, -269, 97, -269,
				100, -269, 40, -269, 49, -269, 50, -269, 52, -269,
				53, -269, 54, -269, 55, -269, 56, -269, 86, -269,
				3, -269, 22, -269, 102, -269, 108, -269, 27, -269,
				26, -269, 21, -269, 29, -269, 20, -269, 25, -269,
				39, -269, -19, 297, -51, 904, -33, 531, -105, 218,
				-70, 224, -12, 237, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 284, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, -104, 472, -52, 536, 49, 20,
				118, 225, 121, 226, 120, 227, 122, 228, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 131, 136, 119, 286,
				84, 287, 103, 291, 98, 300, 43, 308, 58, 321,
				51, 337, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 420, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 503,
				64, 501, 65, 504, 147, 506, 148, 507, -19, 320,
				-105, 218, -70, 224, -12, 237, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -68, 284, -69, 475, -25, 345,
				-18, 394, -22, 415, -23, 439, -104, 472, 52, 0,
				141, 162, 142, 164, 143, 166, 144, 168, 145, 170,
				66, 172, 139, 174, 140, 176, 91, 178, 67, 180,
				137, 182, 71, 184, 138, 186, 72, 188, 68, 190,
				69, 192, 70, 194, 75, 196, 76, 198, 81, 200,
				82, 202, 73, 204, 74, 206, 77, 208, 78, 210,
				135, 212, 87, -275, 14, -275, 105, -275, 97, -275,
				100, -275, 40, -275, 49, -275, 50, -275, 52, -275,
				53, -275, 54, -275, 55, -275, 56, -275, 86, -275,
				3, -275, 22, -275, 102, -275, 108, -275, 27, -275,
				26, -275, 21, -275, 29, -275, 20, -275, 25, -275,
				39, -275, 85, -275, 51, 1, 14, 314, 94, -531,
				118, -531, 121, -531, 120, -531, 122, -531, 123, -531,
				46, -531, 45, -531, 47, -531, 48, -531, 62, -531,
				61, -531, 63, -531, 128, -531, 129, -531, 130, -531,
				146, -531, 116, -531, 126, -531, 111, -531, 113, -531,
				112, -531, 114, -531, 115, -531, 131, -531, 119, -531,
				84, -531, 103, -531, 98, -531, 43, -531, 58, -531,
				51, -531, 23, -531, 24, -531, 30, -531, 31, -531,
				28, -531, 32, -531, 96, -531, 95, -531, 19, -531,
				15, -531, 16, -531, 17, -531, 93, -531, 44, -531,
				64, -531, 65, -531, 147, -531, 148, -531, -114, 322,
				50, 20, 94, 323, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 287, 103, 291, 98, 300,
				43, 308, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 503, 64, 501, 65, 504, 147, 506,
				148, 507, -19, 903, -105, 218, -70, 224, -12, 237,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 475, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, 49, 25, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 131, 136, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, -13, 324, -27, 18, -29, 19, -69, 34,
				-12, 326, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 224, -68, 284, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 218,
				-104, 472, 4, 2, 49, 13, 50, 15, 14, 314,
				97, -531, -116, 325, -114, 312, -294, 55, 0, 88,
				327, 83, 898, 104, 238, 141, -250, 142, -250, 143,
				-250, 144, -250, 145, -250, 66, -250, 139, -250, 140,
				-250, 91, -250, 67, -250, 137, -250, 71, -250, 138,
				-250, 72, -250, 68, -250, 69, -250, 70, -250, 75,
				-250, 76, -250, 81, -250, 82, -250, 73, -250, 74,
				-250, 77, -250, 78, -250, 135, -250, 49, -250, 50,
				-250, 52, -250, 53, -250, 54, -250, 55, -250, 56,
				-250, 86, -250, 14, -250, 3, -250, 22, -250, 102,
				-250, 108, -250, 27, -250, 26, -250, 21, -250, 29,
				-250, 97, -250, 20, -250, 25, -250, 39, -250, 85,
				-250, 87, -250, 105, -250, 100, -250, 40, -250, 33,
				3, 118, 894, 122, 896, 119, 492, 139, 52, 140,
				53, 91, 54, 67, 55, 68, 56, 69, 57, 75,
				58, 76, 59, 137, 60, 71, 61, 138, 62, 72,
				63, 70, 64, 81, 65, 82, 66, 141, 67, 142,
				68, 143, 69, 89, 70, 144, 71, 145, 72, 66,
				73, 147, 74, 148, 75, 64, 76, 65, 77, 79,
				78, 80, 79, 92, 80, 94, 468, -72, 328, -40,
				357, -75, 493, 110, 4, 94, 468, 118, -265, 121,
				-265, 120, -265, 122, -265, 123, -265, 46, -265, 45,
				-265, 47, -265, 48, -265, 62, -265, 61, -265, 63,
				-265, 128, -265, 129, -265, 130, -265, 146, -265, 116,
				-265, 126, -265, 111, -265, 113, -265, 112, -265, 114,
				-265, 115, -265, 131, -265, 119, -265, 84, -265, 103,
				-265, 98, -265, 43, -265, 58, -265, 51, -265, 23,
				-265, 24, -265, 30, -265, 31, -265, 28, -265, 32,
				-265, 96, -265, 95, -265, 19, -265, 15, -265, 16,
				-265, 17, -265, 93, -265, 44, -265, 64, -265, 65,
				-265, 147, -265, 148, -265, 89, -265, 125, -265, 90,
				-265, 99, -256, 38, -256, 88, -256, 83, -256, 104,
				-256, 141, -256, 142, -256, 143, -256, 144, -256, 145,
				-256, 66, -256, 139, -256, 140, -256, 91, -256, 67,
				-256, 137, -256, 71, -256, 138, -256, 72, -256, 68,
				-256, 69, -256, 70, -256, 75, -256, 76, -256, 81,
				-256, 82, -256, 73, -256, 74, -256, 77, -256, 78,
				-256, 135, -256, 49, -256, 50, -256, 52, -256, 53,
				-256, 54, -256, 55, -256, 56, -256, 86, -256, 14,
				-256, 3, -256, 22, -256, 102, -256, 108, -256, 27,
				-256, 26, -256, 21, -256, 29, -256, 97, -256, 20,
				-256, 25, -256, 39, -256, 85, -256, 87, -256, 105,
				-256, 100, -256, 40, -256, -44, 329, -41, 331, -120,
				332, -40, 489, 24, 1, 100, 37, 40, -67, 49,
				-67, 50, -67, 52, -67, 53, -67, 54, -67, 55,
				-67, 56, -67, 86, -67, 14, -67, 3, -67, 22,
				-67, 102, -67, 108, -67, 27, -67, 26, -67, 21,
				-67, 29, -67, 97, -67, 20, -67, 25, -67, 39,
				-67, 105, -67, -35, 330, -68, -398, 52, 27, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 64,
				501, 65, 504, 147, 506, 148, 507, 89, 515, 125,
				532, 90, 534, -42, 333, -20, 316, -19, 334, -105,
				218, -70, 224, -12, 326, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 34, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, -21, 527, -51,
				528, -52, 536, -33, 537, -29, 538, -266, 52, 0,
				141, 162, 142, 164, 143, 166, 144, 168, 145, 170,
				66, 172, 139, 174, 140, 176, 91, 178, 67, 180,
				137, 182, 71, 184, 138, 186, 72, 188, 68, 190,
				69, 192, 70, 194, 75, 196, 76, 198, 81, 200,
				82, 202, 73, 204, 74, 206, 77, 208, 78, 210,
				135, 212, 85, 298, 87, -271, 14, -271, 105, -271,
				97, -271, 100, -271, 40, -271, 49, -271, 50, -271,
				52, -271, 53, -271, 54, -271, 55, -271, 56, -271,
				86, -271, 3, -271, 22, -271, 102, -271, 108, -271,
				27, -271, 26, -271, 21, -271, 29, -271, 20, -271,
				25, -271, 39, -271, 108, 2, 94, 309, 88, -293,
				83, -293, 104, -293, 141, -293, 142, -293, 143, -293,
				144, -293, 145, -293, 66, -293, 139, -293, 140, -293,
				91, -293, 67, -293, 137, -293, 71, -293, 138, -293,
				72, -293, 68, -293, 69, -293, 70, -293, 75, -293,
				76, -293, 81, -293, 82, -293, 73, -293, 74, -293,
				77, -293, 78, -293, 135, -293, 49, -293, 50, -293,
				52, -293, 53, -293, 54, -293, 55, -293, 56, -293,
				86, -293, 14, -293, 3, -293, 22, -293, 102, -293,
				108, -293, 27, -293, 26, -293, 21, -293, 29, -293,
				97, -293, 20, -293, 25, -293, 39, -293, 85, -293,
				87, -293, 105, -293, 100, -293, 40, -293, 118, -265,
				121, -265, 120, -265, 122, -265, 123, -265, 46, -265,
				45, -265, 47, -265, 48, -265, 62, -265, 61, -265,
				63, -265, 128, -265, 129, -265, 130, -265, 146, -265,
				116, -265, 126, -265, 111, -265, 113, -265, 112, -265,
				114, -265, 115, -265, 131, -265, 119, -265, 84, -265,
				103, -265, 98, -265, 43, -265, 58, -265, 51, -265,
				23, -265, 24, -265, 30, -265, 31, -265, 28, -265,
				32, -265, 96, -265, 95, -265, 19, -265, 15, -265,
				16, -265, 17, -265, 93, -265, 44, -265, 64, -265,
				65, -265, 147, -265, 148, -265, 89, -265, 125, -265,
				90, -265, -44, 336, -120, 332, -72, 1, 0, 94,
				338, 51, 27, 118, 225, 122, 228, 119, 286, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 121, 226, 120, 227, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 131, 136, 84, 287, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 342, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 147, 498, 64, 501, 65, 504, 148,
				507, 14, 314, 97, -531, -13, 339, -116, 341, -27,
				18, -29, 19, -69, 34, -12, 326, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 224, -68, 284, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 218, -104, 472, -114, 312, 4,
				2, 49, 13, 50, 15, 14, 314, 97, -531, -116,
				340, -114, 312, -295, -296, 51, 1, 94, 338, 14,
				314, 118, -531, 122, -531, 119, -531, 128, -531, 129,
				-531, 130, -531, 146, -531, 116, -531, 126, -531, 111,
				-531, 113, -531, 112, -531, 114, -531, 115, -531, 121,
				-531, 120, -531, 123, -531, 46, -531, 45, -531, 47,
				-531, 48, -531, 62, -531, 61, -531, 63, -531, 131,
				-531, 84, -531, 103, -531, 98, -531, 43, -531, 58,
				-531, 51, -531, 23, -531, 24, -531, 30, -531, 31,
				-531, 28, -531, 32, -531, 96, -531, 95, -531, 19,
				-531, 15, -531, 16, -531, 17, -531, 93, -531, 44,
				-531, 147, -531, 64, -531, 65, -531, 148, -531, -114,
				343, 49, 25, 118, 225, 122, 228, 119, 286, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 121, 226, 120, 227, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 131, 136, 84, 287, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 342, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 147, 498, 64, 501, 65, 504, 148,
				507, -13, 344, -27, 18, -29, 19, -69, 34, -12,
				326, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				224, -68, 284, -25, 345, -18, 394, -22, 415, -23,
				439, -28, 483, -26, 484, -19, 509, -105, 218, -104,
				472, -55, 60, 1, 99, 347, 38, 478, 88, -298,
				83, -298, 104, -298, 141, -298, 142, -298, 143, -298,
				144, -298, 145, -298, 66, -298, 139, -298, 140, -298,
				91, -298, 67, -298, 137, -298, 71, -298, 138, -298,
				72, -298, 68, -298, 69, -298, 70, -298, 75, -298,
				76, -298, 81, -298, 82, -298, 73, -298, 74, -298,
				77, -298, 78, -298, 135, -298, 49, -298, 50, -298,
				52, -298, 53, -298, 54, -298, 55, -298, 56, -298,
				86, -298, 14, -298, 3, -298, 22, -298, 102, -298,
				108, -298, 27, -298, 26, -298, 21, -298, 29, -298,
				97, -298, 20, -298, 25, -298, 39, -298, 136, -298,
				85, -298, 87, -298, 105, -298, 100, -298, 40, -298,
				101, -298, 41, -298, -36, 346, -299, 0, 1, -406,
				-141, 348, 65, 2, 74, 609, 139, 610, 86, -378,
				14, -378, 57, -378, 18, -378, 59, -378, 60, -378,
				131, -378, 118, -378, 122, -378, 119, -378, 128, -378,
				129, -378, 130, -378, 146, -378, 116, -378, 126, -378,
				111, -378, 113, -378, 112, -378, 114, -378, 115, -378,
				121, -378, 120, -378, 123, -378, 46, -378, 45, -378,
				47, -378, 48, -378, 62, -378, 61, -378, 63, -378,
				84, -378, 103, -378, 98, -378, 43, -378, 58, -378,
				51, -378, 23, -378, 24, -378, 30, -378, 31, -378,
				28, -378, 32, -378, 96, -378, 95, -378, 19, -378,
				15, -378, 16, -378, 17, -378, 93, -378, 44, -378,
				147, -378, 64, -378, 65, -378, 148, -378, 42, -378,
				33, -378, 34, -378, 35, -378, 36, -378, 89, -378,
				2, -378, 102, -378, -78, 349, -77, 608, 63, 41,
				86, 27, 14, 28, 57, 43, 18, 142, 59, 148,
				60, 153, 131, 136, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 84, 372, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 342, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 423,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 147, 498, 64, 501, 65, 504, 148, 507,
				42, 525, 33, 539, 34, 541, 35, 544, 36, 545,
				89, 591, 2, 598, 102, -529, -4, 350, -108, 4,
				-109, 5, -132, 26, -3, 29, -2, 31, -10, 42,
				-68, 158, -11, 352, -14, 353, -13, 354, -27, 18,
				-29, 19, -69, 34, -12, 355, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -70, 371, -25, 345, -18, 394,
				-22, 415, -23, 439, -28, 483, -26, 484, -19, 509,
				-105, 510, -104, 520, -7, 523, -8, 524, -9, 543,
				-99, 546, -100, 547, -102, 589, -103, 556, 1, 0,
				102, 351, -407, -16, -17, 19, 0, 49, 13, 50,
				15, 52, -32, 53, -32, 54, -32, 55, -32, 56,
				-32, 86, -32, 14, -32, 3, -32, 22, -32, 102,
				-32, 108, -32, 27, -32, 26, -32, 21, -32, 29,
				-32, 97, -32, 20, -32, 48, 0, 88, 356, 83,
				877, 104, 889, 141, -250, 142, -250, 143, -250, 144,
				-250, 145, -250, 66, -250, 139, -250, 140, -250, 91,
				-250, 67, -250, 137, -250, 71, -250, 138, -250, 72,
				-250, 68, -250, 69, -250, 70, -250, 75, -250, 76,
				-250, 81, -250, 82, -250, 73, -250, 74, -250, 77,
				-250, 78, -250, 135, -250, 49, -250, 50, -250, 52,
				-250, 53, -250, 54, -250, 55, -250, 56, -250, 86,
				-250, 14, -250, 3, -250, 22, -250, 102, -250, 108,
				-250, 27, -250, 26, -250, 21, -250, 29, -250, 97,
				-250, 20, -250, 33, 3, 118, 358, 122, 873, 119,
				492, 139, 52, 140, 53, 91, 54, 67, 55, 68,
				56, 69, 57, 75, 58, 76, 59, 137, 60, 71,
				61, 138, 62, 72, 63, 70, 64, 81, 65, 82,
				66, 141, 67, 142, 68, 143, 69, 89, 70, 144,
				71, 145, 72, 66, 73, 147, 74, 148, 75, 64,
				76, 65, 77, 79, 78, 80, 79, 92, 80, 94,
				468, -72, 328, -40, 357, -75, 493, -401, 106, 0,
				124, 359, 134, -100, 87, -92, 94, -520, 118, -520,
				121, -520, 120, -520, 122, -520, 123, -520, 46, -520,
				45, -520, 47, -520, 48, -520, 62, -520, 61, -520,
				63, -520, 128, -520, 129, -520, 130, -520, 146, -520,
				116, -520, 126, -520, 111, -520, 113, -520, 112, -520,
				114, -520, 115, -520, 131, -520, 119, -520, 84, -520,
				103, -520, 98, -520, 43, -520, 58, -520, 51, -520,
				23, -520, 24, -520, 30, -520, 31, -520, 28, -520,
				32, -520, 96, -520, 95, -520, 19, -520, 15, -520,
				16, -520, 17, -520, 93, -520, 44, -520, 64, -520,
				65, -520, 147, -520, 148, -520, 89, -520, 125, -520,
				90, -520, 99, -520, 38, -520, 88, -520, 83, -520,
				104, -520, 141, -520, 142, -520, 143, -520, 144, -520,
				145, -520, 66, -520, 139, -520, 140, -520, 91, -520,
				67, -520, 137, -520, 71, -520, 138, -520, 72, -520,
				68, -520, 69, -520, 70, -520, 75, -520, 76, -520,
				81, -520, 82, -520, 73, -520, 74, -520, 77, -520,
				78, -520, 135, -520, 49, -520, 50, -520, 52, -520,
				53, -520, 54, -520, 55, -520, 56, -520, 86, -520,
				14, -520, 3, -520, 22, -520, 102, -520, 108, -520,
				27, -520, 26, -520, 21, -520, 29, -520, 97, -520,
				20, -520, 49, 24, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 64, 501, 65, 504, 147, 506,
				148, 507, -19, 360, -27, 361, -105, 218, -70, 224,
				-12, 326, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-68, 284, -69, 34, -25, 345, -18, 394, -22, 415,
				-23, 439, -104, 472, -29, 19, -28, 483, -26, 484,
				55, 0, 141, 162, 142, 164, 143, 166, 144, 168,
				145, 170, 66, 172, 139, 174, 140, 176, 91, 178,
				67, 180, 137, 182, 71, 184, 138, 186, 72, 188,
				68, 190, 69, 192, 70, 194, 75, 196, 76, 198,
				81, 200, 82, 202, 73, 204, 74, 206, 77, 208,
				78, 210, 135, 212, 49, -205, 50, -205, 52, -205,
				53, -205, 54, -205, 55, -205, 56, -205, 86, -205,
				14, -205, 3, -205, 22, -205, 102, -205, 108, -205,
				27, -205, 26, -205, 21, -205, 29, -205, 97, -205,
				20, -205, 25, -205, 39, -205, 136, -205, 85, -205,
				87, -205, 105, -205, 100, -205, 40, -205, 101, -205,
				41, -205, -38, 49, 25, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 131, 136, 84, 287, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, -13, 363, -27, 18, -29, 19, -69,
				34, -12, 326, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 224, -68, 284, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -19, 509, -105,
				218, -104, 472, 5, 2, 49, 13, 50, 15, 86,
				27, 14, 28, 25, 821, -121, 364, -132, 819, 65,
				41, 86, 27, 14, 28, 57, 43, 18, 142, 59,
				148, 60, 153, 131, 136, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 84, 372, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 342, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				423, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 147, 498, 64, 501, 65, 504, 148,
				507, 42, 525, 33, 539, 34, 541, 35, 544, 36,
				545, 89, 591, 2, 598, 27, -529, 26, -529, 22,
				-529, -4, 365, -108, 4, -109, 5, -132, 26, -3,
				29, -2, 31, -10, 42, -68, 158, -11, 352, -14,
				353, -13, 354, -27, 18, -29, 19, -69, 34, -12,
				355, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				371, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 510, -104, 520, -7,
				523, -8, 524, -9, 543, -99, 546, -100, 547, -102,
				589, -103, 556, 3, 2, 27, 369, 26, 868, 22,
				-341, -31, 366, -30, 368, 1, 0, 22, 367, -300,
				-339, 64, 41, 86, 27, 14, 28, 57, 43, 18,
				142, 59, 148, 60, 153, 131, 136, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 84, 372, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 423, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, 42, 525, 33, 539, 34, 541, 35,
				544, 36, 545, 89, 591, 2, 598, 22, -529, 21,
				-529, -4, 370, -108, 4, -109, 5, -132, 26, -3,
				29, -2, 31, -10, 42, -68, 158, -11, 352, -14,
				353, -13, 354, -27, 18, -29, 19, -69, 34, -12,
				355, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				371, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 510, -104, 520, -7,
				523, -8, 524, -9, 543, -99, 546, -100, 547, -102,
				589, -103, 556, -342, 51, 0, 88, -466, 83, -466,
				104, -466, 141, -466, 142, -466, 143, -466, 144, -466,
				145, -466, 66, -466, 139, -466, 140, -466, 91, -466,
				67, -466, 137, -466, 71, -466, 138, -466, 72, -466,
				68, -466, 69, -466, 70, -466, 75, -466, 76, -466,
				81, -466, 82, -466, 73, -466, 74, -466, 77, -466,
				78, -466, 135, -466, 49, -466, 50, -466, 52, -466,
				53, -466, 54, -466, 55, -466, 56, -466, 86, -466,
				14, -466, 3, -466, 22, -466, 102, -466, 108, -466,
				27, -466, 26, -466, 21, -466, 29, -466, 97, -466,
				20, -466, 134, -98, 124, -467, 87, -90, 1, 0,
				122, 373, 51, 0, 124, 289, 88, -287, 83, -287,
				104, -287, 141, -287, 142, -287, 143, -287, 144, -287,
				145, -287, 66, -287, 139, -287, 140, -287, 91, -287,
				67, -287, 137, -287, 71, -287, 138, -287, 72, -287,
				68, -287, 69, -287, 70, -287, 75, -287, 76, -287,
				81, -287, 82, -287, 73, -287, 74, -287, 77, -287,
				78, -287, 135, -287, 49, -287, 50, -287, 52, -287,
				53, -287, 54, -287, 55, -287, 56, -287, 86, -287,
				14, -287, 3, -287, 22, -287, 102, -287, 108, -287,
				27, -287, 26, -287, 21, -287, 29, -287, 97, -287,
				20, -287, 134, -104, 87, -96, 49, 25, 118, 225,
				122, 228, 119, 286, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 121, 226, 120, 227,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 131, 136, 84, 287,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 342,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 147, 498,
				64, 501, 65, 504, 148, 507, -13, 375, -27, 18,
				-29, 19, -69, 34, -12, 326, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -70, 224, -68, 284, -25, 345,
				-18, 394, -22, 415, -23, 439, -28, 483, -26, 484,
				-19, 509, -105, 218, -104, 472, 5, 2, 49, 13,
				50, 15, 86, 27, 14, 28, 25, 821, -121, 376,
				-132, 819, 64, 41, 86, 27, 14, 28, 57, 43,
				18, 142, 59, 148, 60, 153, 131, 136, 118, 225,
				122, 228, 119, 286, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 121, 226, 120, 227,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 84, 372, 103, 291,
				98, 300, 43, 335, 58, 321, 51, 342, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 423, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 465, 147, 498, 64, 501,
				65, 504, 148, 507, 42, 525, 33, 539, 34, 541,
				35, 544, 36, 545, 89, 591, 2, 598, 27, -529,
				22, -529, -4, 377, -108, 4, -109, 5, -132, 26,
				-3, 29, -2, 31, -10, 42, -68, 158, -11, 352,
				-14, 353, -13, 354, -27, 18, -29, 19, -69, 34,
				-12, 355, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 371, -25, 345, -18, 394, -22, 415, -23, 439,
				-28, 483, -26, 484, -19, 509, -105, 510, -104, 520,
				-7, 523, -8, 524, -9, 543, -99, 546, -100, 547,
				-102, 589, -103, 556, 2, 1, 27, 369, 22, -341,
				-30, 378, 1, 0, 22, 379, -301, 0, 1, -302,
				-122, 381, 49, 25, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 131, 136, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, -13, 382, -27, 18, -29, 19, -69, 34,
				-12, 326, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 224, -68, 284, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 218,
				-104, 472, 5, 2, 49, 13, 50, 15, 86, 27,
				14, 28, 39, 845, -123, 383, -132, 844, 0, 1,
				-303, -124, 384, 63, 41, 86, 27, 14, 28, 57,
				43, 18, 142, 59, 148, 60, 153, 131, 136, 118,
				225, 122, 228, 119, 286, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 121, 226, 120,
				227, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 84, 372, 103,
				291, 98, 300, 43, 335, 58, 321, 51, 342, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 423, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 465, 147, 498, 64,
				501, 65, 504, 148, 507, 42, 525, 33, 539, 34,
				541, 35, 544, 36, 545, 89, 591, 2, 598, 22,
				-529, -4, 385, -108, 4, -109, 5, -132, 26, -3,
				29, -2, 31, -10, 42, -68, 158, -11, 352, -14,
				353, -13, 354, -27, 18, -29, 19, -69, 34, -12,
				355, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				371, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 510, -104, 520, -7,
				523, -8, 524, -9, 543, -99, 546, -100, 547, -102,
				589, -103, 556, 1, 0, 22, 386, -304, 0, 1,
				-305, -125, 388, 49, 25, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 131, 136, 84, 287, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, -13, 389, -27, 18, -29, 19, -69,
				34, -12, 326, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 224, -68, 284, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -19, 509, -105,
				218, -104, 472, 5, 2, 49, 13, 50, 15, 86,
				27, 14, 28, 39, 845, -123, 390, -132, 844, 0,
				1, -306, -126, 391, 63, 41, 86, 27, 14, 28,
				57, 43, 18, 142, 59, 148, 60, 153, 131, 136,
				118, 225, 122, 228, 119, 286, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 121, 226,
				120, 227, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 84, 372,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 342,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 423, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 147, 498,
				64, 501, 65, 504, 148, 507, 42, 525, 33, 539,
				34, 541, 35, 544, 36, 545, 89, 591, 2, 598,
				22, -529, -4, 392, -108, 4, -109, 5, -132, 26,
				-3, 29, -2, 31, -10, 42, -68, 158, -11, 352,
				-14, 353, -13, 354, -27, 18, -29, 19, -69, 34,
				-12, 355, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 371, -25, 345, -18, 394, -22, 415, -23, 439,
				-28, 483, -26, 484, -19, 509, -105, 510, -104, 520,
				-7, 523, -8, 524, -9, 543, -99, 546, -100, 547,
				-102, 589, -103, 556, 1, 0, 22, 393, -307, -308,
				52, 28, 118, 225, 122, 228, 119, 286, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				121, 226, 120, 227, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				131, 136, 84, 287, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 342, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 147, 498, 64, 501, 65, 504, 148, 507,
				86, 27, 14, 28, 29, -529, -13, 396, -108, 864,
				-27, 18, -29, 19, -69, 34, -12, 326, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -70, 224, -68, 284,
				-25, 345, -18, 394, -22, 415, -23, 439, -28, 483,
				-26, 484, -19, 509, -105, 218, -104, 472, -109, 863,
				-132, 26, 5, 3, 49, 13, 50, 15, 86, 27,
				14, 28, 29, -529, -108, 397, -109, 863, -132, 26,
				1, 2, 29, 402, -49, 398, -50, 862, 3, 2,
				27, 369, 29, 402, 22, -341, -30, 399, -50, 401,
				1, 0, 22, 400, -332, -411, 50, 22, 118, 225,
				121, 226, 120, 227, 122, 228, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 131, 136, 119, 286, 84, 287,
				103, 291, 98, 300, 43, 308, 58, 321, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 503, 64, 501,
				65, 504, 147, 506, 148, 507, 89, 515, -20, 403,
				-19, 842, -105, 218, -70, 224, -12, 237, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 475,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				-21, 527, 4, 2, 87, 518, 86, 27, 14, 28,
				25, 821, -121, 404, -132, 819, 65, 41, 86, 27,
				14, 28, 57, 43, 18, 142, 59, 148, 60, 153,
				131, 136, 118, 225, 122, 228, 119, 286, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				121, 226, 120, 227, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				84, 372, 103, 291, 98, 300, 43, 335, 58, 321,
				51, 342, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 423, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 465,
				147, 498, 64, 501, 65, 504, 148, 507, 42, 525,
				33, 539, 34, 541, 35, 544, 36, 545, 89, 591,
				2, 598, 27, -529, 29, -529, 22, -529, -4, 405,
				-108, 4, -109, 5, -132, 26, -3, 29, -2, 31,
				-10, 42, -68, 158, -11, 352, -14, 353, -13, 354,
				-27, 18, -29, 19, -69, 34, -12, 355, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -70, 371, -25, 345,
				-18, 394, -22, 415, -23, 439, -28, 483, -26, 484,
				-19, 509, -105, 510, -104, 520, -7, 523, -8, 524,
				-9, 543, -99, 546, -100, 547, -102, 589, -103, 556,
				-412, 46, 23, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 577, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 859, 103, 291, 98, 300, 43,
				308, 58, 584, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				423, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 89, 591, -89, 407, -105, 846, -70,
				847, -12, 848, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 858, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -99, 861, -100, 547, -102, 589, -103,
				556, 1, 0, 37, 408, 0, 1, -309, -127, 409,
				49, 25, 118, 225, 122, 228, 119, 286, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				121, 226, 120, 227, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				131, 136, 84, 287, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 342, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 147, 498, 64, 501, 65, 504, 148, 507,
				-13, 410, -27, 18, -29, 19, -69, 34, -12, 326,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -70, 224,
				-68, 284, -25, 345, -18, 394, -22, 415, -23, 439,
				-28, 483, -26, 484, -19, 509, -105, 218, -104, 472,
				5, 2, 49, 13, 50, 15, 86, 27, 14, 28,
				39, 845, -123, 411, -132, 844, 0, 1, -310, -128,
				412, 63, 41, 86, 27, 14, 28, 57, 43, 18,
				142, 59, 148, 60, 153, 131, 136, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 84, 372, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 423, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, 42, 525, 33, 539, 34, 541, 35,
				544, 36, 545, 89, 591, 2, 598, 22, -529, -4,
				413, -108, 4, -109, 5, -132, 26, -3, 29, -2,
				31, -10, 42, -68, 158, -11, 352, -14, 353, -13,
				354, -27, 18, -29, 19, -69, 34, -12, 355, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -70, 371, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 510, -104, 520, -7, 523, -8,
				524, -9, 543, -99, 546, -100, 547, -102, 589, -103,
				556, 1, 0, 22, 414, -311, -312, 49, 25, 118,
				225, 122, 228, 119, 286, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 121, 226, 120,
				227, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 131, 136, 84,
				287, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, -13, 417, -27,
				18, -29, 19, -69, 34, -12, 326, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 224, -68, 284, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 218, -104, 472, 4, 1, 49,
				13, 50, 15, 14, -314, 97, -314, -129, 418, 2,
				2, 14, 314, 97, -531, -116, 419, -114, 312, -315,
				63, 41, 86, 27, 14, 28, 57, 43, 18, 142,
				59, 148, 60, 153, 131, 136, 118, 225, 122, 228,
				119, 286, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 121, 226, 120, 227, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 84, 372, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 423, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, 42, 525, 33, 539, 34, 541, 35, 544,
				36, 545, 89, 591, 2, 598, 97, -529, -4, 421,
				-108, 4, -109, 5, -132, 26, -3, 29, -2, 31,
				-10, 42, -68, 158, -11, 352, -14, 353, -13, 354,
				-27, 18, -29, 19, -69, 34, -12, 355, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -70, 371, -25, 345,
				-18, 394, -22, 415, -23, 439, -28, 483, -26, 484,
				-19, 509, -105, 510, -104, 520, -7, 523, -8, 524,
				-9, 543, -99, 546, -100, 547, -102, 589, -103, 556,
				1, 0, 97, 422, -316, 63, 41, 86, 27, 14,
				28, 57, 43, 18, 142, 59, 148, 60, 153, 131,
				136, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 84,
				372, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 423, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, 42, 525, 33,
				539, 34, 541, 35, 544, 36, 545, 89, 591, 2,
				598, 97, -529, -4, 421, -99, 424, -108, 4, -109,
				5, -132, 26, -3, 29, -2, 31, -10, 42, -68,
				158, -11, 352, -14, 353, -13, 354, -27, 18, -29,
				19, -69, 34, -12, 355, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -70, 371, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -19, 509, -105,
				510, -104, 520, -7, 523, -8, 524, -9, 543, -100,
				547, -102, 589, -103, 556, 3, 2, 134, 426, 14,
				314, 97, -531, -116, 425, -114, 312, 5, 0, 134,
				-73, 37, -73, 14, -73, 97, -73, 87, -89, 50,
				26, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 131,
				136, 84, 287, 103, 291, 98, 300, 43, 335, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				465, 64, 501, 65, 504, 147, 506, 148, 507, 89,
				515, -27, 427, -19, 428, -21, 429, -29, 19, -69,
				34, -12, 326, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 224, -68, 284, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -105, 218, -104,
				472, -20, 517, -35, 44, 0, 141, 162, 142, 164,
				143, 166, 144, 168, 145, 170, 66, 172, 139, 174,
				140, 176, 91, 178, 67, 180, 137, 182, 71, 184,
				138, 186, 72, 188, 68, 190, 69, 192, 70, 194,
				75, 196, 76, 198, 81, 200, 82, 202, 73, 204,
				74, 206, 77, 208, 78, 210, 135, 212, 52, -43,
				53, -43, 54, -43, 55, -43, 56, -43, 86, -43,
				14, -43, 3, -43, 22, -43, 102, -43, 108, -43,
				27, -43, 26, -43, 21, -43, 29, -43, 97, -43,
				20, -43, 87, -271, 18, 0, 52, -44, 53, -44,
				54, -44, 55, -44, 56, -44, 86, -44, 14, -44,
				3, -44, 22, -44, 102, -44, 108, -44, 27, -44,
				26, -44, 21, -44, 29, -44, 97, -44, 20, -44,
				87, -272, 66, 42, 86, 27, 14, 28, 57, 43,
				18, 142, 59, 148, 60, 153, 131, 136, 118, 225,
				122, 228, 119, 286, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 121, 226, 120, 227,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 84, 372, 103, 291,
				98, 300, 43, 335, 58, 321, 51, 342, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 423, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 465, 147, 498, 64, 501,
				65, 504, 148, 507, 42, 525, 33, 539, 34, 541,
				35, 544, 36, 545, 89, 591, 2, 598, 20, -529,
				27, -529, 21, -529, 22, -529, -24, 431, -4, 433,
				-108, 4, -109, 5, -132, 26, -3, 29, -2, 31,
				-10, 42, -68, 158, -11, 352, -14, 353, -13, 354,
				-27, 18, -29, 19, -69, 34, -12, 355, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -70, 371, -25, 345,
				-18, 394, -22, 415, -23, 439, -28, 483, -26, 484,
				-19, 509, -105, 510, -104, 520, -7, 523, -8, 524,
				-9, 543, -99, 546, -100, 547, -102, 589, -103, 556,
				1, 0, 22, 432, -317, 4, 3, 20, 815, 27,
				-413, 21, -413, 22, -413, -47, 434, -46, 813, -48,
				843, 3, 1, 27, 369, 21, -341, 22, -341, -30,
				435, 2, 1, 21, 437, 22, -421, -6, 436, -331,
				63, 41, 86, 27, 14, 28, 57, 43, 18, 142,
				59, 148, 60, 153, 131, 136, 118, 225, 122, 228,
				119, 286, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 121, 226, 120, 227, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 84, 372, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 423, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, 42, 525, 33, 539, 34, 541, 35, 544,
				36, 545, 89, 591, 2, 598, 22, -529, -4, 438,
				-108, 4, -109, 5, -132, 26, -3, 29, -2, 31,
				-10, 42, -68, 158, -11, 352, -14, 353, -13, 354,
				-27, 18, -29, 19, -69, 34, -12, 355, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -70, 371, -25, 345,
				-18, 394, -22, 415, -23, 439, -28, 483, -26, 484,
				-19, 509, -105, 510, -104, 520, -7, 523, -8, 524,
				-9, 543, -99, 546, -100, 547, -102, 589, -103, 556,
				-422, -313, 46, 19, 81, 806, 84, 787, 122, 792,
				118, 793, 128, 244, 129, 245, 130, 246, 146, 577,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 121, 226, 120, 227, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 131, 136, 119, 286, 103, 291,
				98, 300, 43, 308, 58, 584, 51, 337, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 503, -45, 441, -74, 791,
				-12, 794, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 683, -68, 684, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, 4, 2, 86, 27, 14, 28,
				138, 800, 2, 804, -15, 442, -132, 799, 0, 1,
				-318, -130, 443, 66, 42, 86, 27, 14, 28, 57,
				43, 18, 142, 59, 148, 60, 153, 131, 136, 118,
				225, 122, 228, 119, 286, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 121, 226, 120,
				227, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 84, 372, 103,
				291, 98, 300, 43, 335, 58, 321, 51, 342, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 423, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 465, 147, 498, 64,
				501, 65, 504, 148, 507, 42, 525, 33, 539, 34,
				541, 35, 544, 36, 545, 89, 591, 2, 598, 20,
				-529, 27, -529, 21, -529, 22, -529, -24, 444, -4,
				433, -108, 4, -109, 5, -132, 26, -3, 29, -2,
				31, -10, 42, -68, 158, -11, 352, -14, 353, -13,
				354, -27, 18, -29, 19, -69, 34, -12, 355, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -70, 371, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 510, -104, 520, -7, 523, -8,
				524, -9, 543, -99, 546, -100, 547, -102, 589, -103,
				556, 1, 0, 22, 445, -319, 45, 19, 84, 787,
				122, 792, 118, 793, 128, 244, 129, 245, 130, 246,
				146, 577, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 121, 226, 120, 227,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 131, 136, 119, 286,
				103, 291, 98, 300, 43, 308, 58, 584, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 503, -45, 447,
				-74, 791, -12, 794, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -70, 683, -68, 684, -69, 475, -25, 345,
				-18, 394, -22, 415, -23, 439, 0, 1, -323, -134,
				448, 66, 42, 86, 27, 14, 28, 57, 43, 18,
				142, 59, 148, 60, 153, 131, 136, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 84, 372, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 423, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, 42, 525, 33, 539, 34, 541, 35,
				544, 36, 545, 89, 591, 2, 598, 20, -529, 27,
				-529, 21, -529, 22, -529, -24, 449, -4, 433, -108,
				4, -109, 5, -132, 26, -3, 29, -2, 31, -10,
				42, -68, 158, -11, 352, -14, 353, -13, 354, -27,
				18, -29, 19, -69, 34, -12, 355, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 371, -25, 345, -18,
				394, -22, 415, -23, 439, -28, 483, -26, 484, -19,
				509, -105, 510, -104, 520, -7, 523, -8, 524, -9,
				543, -99, 546, -100, 547, -102, 589, -103, 556, 1,
				0, 22, 450, -324, 79, 6, 118, 773, 122, 774,
				119, 50, 139, 52, 140, 53, 91, 54, 67, 55,
				68, 56, 69, 57, 75, 58, 76, 59, 137, 60,
				71, 61, 138, 62, 72, 63, 70, 64, 81, 65,
				82, 66, 141, 67, 142, 68, 143, 69, 89, 70,
				144, 71, 145, 72, 66, 73, 147, 74, 148, 75,
				64, 76, 65, 77, 79, 78, 80, 79, 92, 80,
				61, 775, 62, 776, 63, 777, 59, 85, 60, 86,
				57, 87, 49, 88, 19, 89, 33, 90, 28, 91,
				15, 92, 17, 93, 58, 94, 38, 95, 40, 96,
				27, 97, 26, 98, 22, 99, 21, 100, 48, 778,
				32, 102, 37, 103, 16, 104, 34, 105, 46, 779,
				51, 107, 50, 108, 35, 109, 20, 110, 36, 111,
				42, 112, 45, 780, 44, 114, 25, 115, 47, 781,
				18, 117, 29, 118, 43, 119, 52, 120, 53, 121,
				54, 122, 55, 123, 56, 124, 121, 226, 120, 227,
				123, 229, 94, 783, -76, 452, -17, 763, -75, 51,
				-117, 81, -16, 782, -70, 683, 0, 1, -325, -135,
				453, 13, 11, 94, 758, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 730, 95, 637, 143, 671, 89,
				672, 91, 663, 90, 664, 86, -489, 14, -489, -80,
				454, -82, 761, -95, 718, -98, 665, -90, 636, -85,
				741, -87, 739, -91, 751, -144, 669, -92, 756, -145,
				661, 66, 42, 86, 27, 14, 28, 57, 43, 18,
				142, 59, 148, 60, 153, 131, 136, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 84, 372, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 423, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, 42, 525, 33, 539, 34, 541, 35,
				544, 36, 545, 89, 591, 2, 598, 20, -529, 27,
				-529, 21, -529, 22, -529, -24, 455, -4, 433, -108,
				4, -109, 5, -132, 26, -3, 29, -2, 31, -10,
				42, -68, 158, -11, 352, -14, 353, -13, 354, -27,
				18, -29, 19, -69, 34, -12, 355, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 371, -25, 345, -18,
				394, -22, 415, -23, 439, -28, 483, -26, 484, -19,
				509, -105, 510, -104, 520, -7, 523, -8, 524, -9,
				543, -99, 546, -100, 547, -102, 589, -103, 556, 1,
				0, 22, 456, -326, 0, 2, -386, -38, 458, -139,
				459, -330, 13, 11, 94, 714, 122, 618, 121, 619,
				120, 620, 123, 621, 118, 730, 95, 637, 143, 671,
				89, 672, 91, 663, 90, 664, 101, -489, 41, -489,
				-79, 460, -82, 757, -95, 718, -98, 665, -90, 636,
				-85, 741, -87, 739, -91, 751, -144, 669, -92, 756,
				-145, 661, 2, 1, 101, 462, 41, 711, -5, 461,
				-387, 63, 41, 86, 27, 14, 28, 57, 43, 18,
				142, 59, 148, 60, 153, 131, 136, 118, 225, 122,
				228, 119, 286, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 121, 226, 120, 227, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 84, 372, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 423, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, 42, 525, 33, 539, 34, 541, 35,
				544, 36, 545, 89, 591, 2, 598, 102, -529, -4,
				463, -108, 4, -109, 5, -132, 26, -3, 29, -2,
				31, -10, 42, -68, 158, -11, 352, -14, 353, -13,
				354, -27, 18, -29, 19, -69, 34, -12, 355, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -70, 371, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 510, -104, 520, -7, 523, -8,
				524, -9, 543, -99, 546, -100, 547, -102, 589, -103,
				556, 1, 0, 102, 464, -390, 110, 3, 94, 468,
				99, -405, 38, -405, 88, -405, 83, -405, 104, -405,
				141, -405, 142, -405, 143, -405, 144, -405, 145, -405,
				66, -405, 139, -405, 140, -405, 91, -405, 67, -405,
				137, -405, 71, -405, 138, -405, 72, -405, 68, -405,
				69, -405, 70, -405, 75, -405, 76, -405, 81, -405,
				82, -405, 73, -405, 74, -405, 77, -405, 78, -405,
				135, -405, 49, -405, 50, -405, 52, -405, 53, -405,
				54, -405, 55, -405, 56, -405, 86, -405, 14, -405,
				3, -405, 22, -405, 102, -405, 108, -405, 27, -405,
				26, -405, 21, -405, 29, -405, 97, -405, 20, -405,
				25, -405, 39, -405, 85, -405, 87, -405, 105, -405,
				100, -405, 40, -405, 118, -265, 121, -265, 120, -265,
				122, -265, 123, -265, 46, -265, 45, -265, 47, -265,
				48, -265, 62, -265, 61, -265, 63, -265, 128, -265,
				129, -265, 130, -265, 146, -265, 116, -265, 126, -265,
				111, -265, 113, -265, 112, -265, 114, -265, 115, -265,
				131, -265, 119, -265, 84, -265, 103, -265, 98, -265,
				43, -265, 58, -265, 51, -265, 23, -265, 24, -265,
				30, -265, 31, -265, 28, -265, 32, -265, 96, -265,
				95, -265, 19, -265, 15, -265, 16, -265, 17, -265,
				93, -265, 44, -265, 64, -265, 65, -265, 147, -265,
				148, -265, 89, -265, 125, -265, 90, -265, -40, 466,
				-44, 467, -120, 332, -404, -71, 54, 28, 118, 225,
				121, 226, 120, 227, 122, 228, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 131, 136, 119, 286, 84, 287,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 64, 501,
				65, 504, 147, 506, 148, 507, 89, 515, 125, 532,
				90, 534, 14, -258, 97, -258, -43, 469, -42, 471,
				-20, 316, -19, 334, -105, 218, -70, 224, -12, 326,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 34, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, -21, 527, -51, 528, -52, 536, -33, 537,
				-29, 538, 2, 2, 14, 314, 97, -531, -116, 470,
				-114, 312, -255, -259, 1, 0, 124, 473, 49, 20,
				118, 225, 121, 226, 120, 227, 122, 228, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 131, 136, 119, 286,
				84, 287, 103, 291, 98, 300, 43, 308, 58, 321,
				51, 337, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 420, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 503,
				64, 501, 65, 504, 147, 506, 148, 507, -19, 474,
				-105, 218, -70, 224, -12, 237, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -68, 284, -69, 475, -25, 345,
				-18, 394, -22, 415, -23, 439, -104, 472, 55, 0,
				141, 162, 142, 164, 143, 166, 144, 168, 145, 170,
				66, 172, 139, 174, 140, 176, 91, 178, 67, 180,
				137, 182, 71, 184, 138, 186, 72, 188, 68, 190,
				69, 192, 70, 194, 75, 196, 76, 198, 81, 200,
				82, 202, 73, 204, 74, 206, 77, 208, 78, 210,
				135, 212, 49, -203, 50, -203, 52, -203, 53, -203,
				54, -203, 55, -203, 56, -203, 86, -203, 14, -203,
				3, -203, 22, -203, 102, -203, 108, -203, 27, -203,
				26, -203, 21, -203, 29, -203, 97, -203, 20, -203,
				25, -203, 39, -203, 136, -203, 85, -203, 87, -203,
				105, -203, 100, -203, 40, -203, 101, -203, 41, -203,
				3, 2, 99, 347, 38, 478, 94, 468, -36, 476,
				-40, 477, -297, -397, 0, 1, -408, -142, 479, 65,
				2, 74, 609, 139, 610, 86, -378, 14, -378, 57,
				-378, 18, -378, 59, -378, 60, -378, 131, -378, 118,
				-378, 122, -378, 119, -378, 128, -378, 129, -378, 130,
				-378, 146, -378, 116, -378, 126, -378, 111, -378, 113,
				-378, 112, -378, 114, -378, 115, -378, 121, -378, 120,
				-378, 123, -378, 46, -378, 45, -378, 47, -378, 48,
				-378, 62, -378, 61, -378, 63, -378, 84, -378, 103,
				-378, 98, -378, 43, -378, 58, -378, 51, -378, 23,
				-378, 24, -378, 30, -378, 31, -378, 28, -378, 32,
				-378, 96, -378, 95, -378, 19, -378, 15, -378, 16,
				-378, 17, -378, 93, -378, 44, -378, 147, -378, 64,
				-378, 65, -378, 148, -378, 42, -378, 33, -378, 34,
				-378, 35, -378, 36, -378, 89, -378, 2, -378, 22,
				-378, -78, 480, -77, 608, 63, 41, 86, 27, 14,
				28, 57, 43, 18, 142, 59, 148, 60, 153, 131,
				136, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 84,
				372, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 423, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, 42, 525, 33,
				539, 34, 541, 35, 544, 36, 545, 89, 591, 2,
				598, 22, -529, -4, 481, -108, 4, -109, 5, -132,
				26, -3, 29, -2, 31, -10, 42, -68, 158, -11,
				352, -14, 353, -13, 354, -27, 18, -29, 19, -69,
				34, -12, 355, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 371, -25, 345, -18, 394, -22, 415, -23,
				439, -28, 483, -26, 484, -19, 509, -105, 510, -104,
				520, -7, 523, -8, 524, -9, 543, -99, 546, -100,
				547, -102, 589, -103, 556, 1, 0, 22, 482, -409,
				-59, 23, 0, 88, 485, 83, 494, 49, -60, 50,
				-60, 52, -60, 53, -60, 54, -60, 55, -60, 56,
				-60, 86, -60, 14, -60, 3, -60, 22, -60, 102,
				-60, 108, -60, 27, -60, 26, -60, 21, -60, 29,
				-60, 97, -60, 20, -60, 25, -60, 39, -60, 32,
				2, 118, 490, 122, 491, 119, 492, 139, 52, 140,
				53, 91, 54, 67, 55, 68, 56, 69, 57, 75,
				58, 76, 59, 137, 60, 71, 61, 138, 62, 72,
				63, 70, 64, 81, 65, 82, 66, 141, 67, 142,
				68, 143, 69, 89, 70, 144, 71, 145, 72, 66,
				73, 147, 74, 148, 75, 64, 76, 65, 77, 79,
				78, 80, 79, 92, 80, -72, 486, -75, 493, 76,
				4, 94, 468, 88, -256, 83, -256, 49, -256, 50,
				-256, 52, -256, 53, -256, 54, -256, 55, -256, 56,
				-256, 86, -256, 14, -256, 3, -256, 22, -256, 102,
				-256, 108, -256, 27, -256, 26, -256, 21, -256, 29,
				-256, 97, -256, 20, -256, 25, -256, 39, -256, 118,
				-265, 121, -265, 120, -265, 122, -265, 123, -265, 46,
				-265, 45, -265, 47, -265, 48, -265, 62, -265, 61,
				-265, 63, -265, 128, -265, 129, -265, 130, -265, 146,
				-265, 116, -265, 126, -265, 111, -265, 113, -265, 112,
				-265, 114, -265, 115, -265, 131, -265, 119, -265, 84,
				-265, 103, -265, 98, -265, 43, -265, 58, -265, 51,
				-265, 23, -265, 24, -265, 30, -265, 31, -265, 28,
				-265, 32, -265, 96, -265, 95, -265, 19, -265, 15,
				-265, 16, -265, 17, -265, 93, -265, 44, -265, 64,
				-265, 65, -265, 147, -265, 148, -265, 89, -265, 125,
				-265, 90, -265, -41, 487, -44, 488, -40, 489, -120,
				332, -395, -61, -257, -520, -521, -522, -523, 32, 2,
				118, 490, 122, 491, 119, 492, 139, 52, 140, 53,
				91, 54, 67, 55, 68, 56, 69, 57, 75, 58,
				76, 59, 137, 60, 71, 61, 138, 62, 72, 63,
				70, 64, 81, 65, 82, 66, 141, 67, 142, 68,
				143, 69, 89, 70, 144, 71, 145, 72, 66, 73,
				147, 74, 148, 75, 64, 76, 65, 77, 79, 78,
				80, 79, 92, 80, -72, 495, -75, 493, 76, 4,
				94, 468, 88, -256, 83, -256, 49, -256, 50, -256,
				52, -256, 53, -256, 54, -256, 55, -256, 56, -256,
				86, -256, 14, -256, 3, -256, 22, -256, 102, -256,
				108, -256, 27, -256, 26, -256, 21, -256, 29, -256,
				97, -256, 20, -256, 25, -256, 39, -256, 118, -265,
				121, -265, 120, -265, 122, -265, 123, -265, 46, -265,
				45, -265, 47, -265, 48, -265, 62, -265, 61, -265,
				63, -265, 128, -265, 129, -265, 130, -265, 146, -265,
				116, -265, 126, -265, 111, -265, 113, -265, 112, -265,
				114, -265, 115, -265, 131, -265, 119, -265, 84, -265,
				103, -265, 98, -265, 43, -265, 58, -265, 51, -265,
				23, -265, 24, -265, 30, -265, 31, -265, 28, -265,
				32, -265, 96, -265, 95, -265, 19, -265, 15, -265,
				16, -265, 17, -265, 93, -265, 44, -265, 64, -265,
				65, -265, 147, -265, 148, -265, 89, -265, 125, -265,
				90, -265, -41, 496, -44, 497, -40, 489, -120, 332,
				-396, -62, 49, 24, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 131, 136, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 64, 501, 65, 504, 147, 506,
				148, 507, -27, 499, -19, 500, -29, 19, -69, 34,
				-12, 326, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 224, -68, 284, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -105, 218, -104, 472,
				-56, -235, 49, 20, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 287, 103, 291, 98, 300,
				43, 308, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 503, 64, 501, 65, 504, 147, 506,
				148, 507, -19, 502, -105, 218, -70, 224, -12, 237,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 475, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, -220, 61, 1, 94, 468, 99, -405, 38,
				-405, 104, -405, 83, -405, 88, -405, 141, -405, 142,
				-405, 143, -405, 144, -405, 145, -405, 66, -405, 139,
				-405, 140, -405, 91, -405, 67, -405, 137, -405, 71,
				-405, 138, -405, 72, -405, 68, -405, 69, -405, 70,
				-405, 75, -405, 76, -405, 81, -405, 82, -405, 73,
				-405, 74, -405, 77, -405, 78, -405, 135, -405, 49,
				-405, 50, -405, 52, -405, 53, -405, 54, -405, 55,
				-405, 56, -405, 86, -405, 14, -405, 3, -405, 22,
				-405, 102, -405, 108, -405, 27, -405, 26, -405, 21,
				-405, 29, -405, 97, -405, 20, -405, 25, -405, 39,
				-405, 136, -405, 85, -405, 87, -405, 105, -405, 100,
				-405, 40, -405, 101, -405, 41, -405, -40, 466, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				505, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 55,
				0, 141, -221, 142, -221, 143, -221, 144, -221, 145,
				-221, 66, 172, 139, -221, 140, -221, 91, -221, 67,
				-221, 137, -221, 71, -221, 138, -221, 72, -221, 68,
				-221, 69, -221, 70, -221, 75, -221, 76, -221, 81,
				-221, 82, -221, 73, -221, 74, -221, 77, -221, 78,
				-221, 135, -221, 49, -221, 50, -221, 52, -221, 53,
				-221, 54, -221, 55, -221, 56, -221, 86, -221, 14,
				-221, 3, -221, 22, -221, 102, -221, 108, -221, 27,
				-221, 26, -221, 21, -221, 29, -221, 97, -221, 20,
				-221, 25, -221, 39, -221, 136, -221, 85, -221, 87,
				-221, 105, -221, 100, -221, 40, -221, 101, -221, 41,
				-221, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 500, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 508, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, -236, 47, 0, 141, 162, 142, 164, 143, 166,
				144, 168, 145, 170, 66, 172, 139, 174, 140, 176,
				91, 178, 67, 180, 137, 182, 71, 184, 138, 186,
				72, 188, 68, 190, 69, 192, 70, 194, 75, 196,
				76, 198, 81, 200, 82, 202, 73, 204, 74, 206,
				77, 208, 78, 210, 135, 212, 49, -57, 50, -57,
				52, -57, 53, -57, 54, -57, 55, -57, 56, -57,
				86, -57, 14, -57, 3, -57, 22, -57, 102, -57,
				108, -57, 27, -57, 26, -57, 21, -57, 29, -57,
				97, -57, 20, -57, 25, -57, 39, -57, 1, 0,
				134, 511, 50, 26, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 64, 501, 65, 504, 147, 506,
				148, 507, 89, 515, -19, 512, -27, 513, -21, 514,
				-105, 218, -70, 224, -12, 326, -65, 243, -66, 251,
				-57, 252, -56, 258, -58, 259, -64, 263, -62, 267,
				-63, 276, -16, 283, -68, 284, -69, 34, -25, 345,
				-18, 394, -22, 415, -23, 439, -104, 472, -29, 19,
				-28, 483, -26, 484, -20, 517, 46, 0, 56, 221,
				141, 162, 142, 164, 143, 166, 144, 168, 145, 170,
				66, 172, 139, 174, 140, 176, 91, 178, 67, 180,
				137, 182, 71, 184, 138, 186, 72, 188, 68, 190,
				69, 192, 70, 194, 75, 196, 76, 198, 81, 200,
				82, 202, 73, 204, 74, 206, 77, 208, 78, 210,
				135, 212, 49, -200, 50, -200, 52, -200, 53, -200,
				54, -200, 55, -200, 86, -200, 14, -200, 3, -200,
				22, -200, 102, -200, 108, -200, 27, -200, 26, -200,
				21, -200, 29, -200, 97, -200, 20, -200, 87, -271,
				-34, 18, 0, 52, -42, 53, -42, 54, -42, 55,
				-42, 56, -42, 86, -42, 14, -42, 3, -42, 22,
				-42, 102, -42, 108, -42, 27, -42, 26, -42, 21,
				-42, 29, -42, 97, -42, 20, -42, 87, -272, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				516, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 52,
				0, 141, 162, 142, 164, 143, 166, 144, 168, 145,
				170, 66, 172, 139, 174, 140, 176, 91, 178, 67,
				180, 137, 182, 71, 184, 138, 186, 72, 188, 68,
				190, 69, 192, 70, 194, 75, 196, 76, 198, 81,
				200, 82, 202, 73, 204, 74, 206, 77, 208, 78,
				210, 135, 212, 87, -273, 14, -273, 105, -273, 97,
				-273, 100, -273, 40, -273, 49, -273, 50, -273, 52,
				-273, 53, -273, 54, -273, 55, -273, 56, -273, 86,
				-273, 3, -273, 22, -273, 102, -273, 108, -273, 27,
				-273, 26, -273, 21, -273, 29, -273, 20, -273, 25,
				-273, 39, -273, 85, -273, 1, 0, 87, 518, 50,
				20, 89, 319, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 519, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 46, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, 174, 140, 176, 91,
				178, 67, 180, 137, 182, 71, 184, 138, 186, 72,
				188, 68, 190, 69, 192, 70, 194, 75, 196, 76,
				198, 81, 200, 82, 202, 73, 204, 74, 206, 77,
				208, 78, 210, 135, 212, 87, -274, 86, -274, 14,
				-274, 25, -274, 52, -274, 53, -274, 54, -274, 55,
				-274, 56, -274, 3, -274, 22, -274, 102, -274, 108,
				-274, 27, -274, 26, -274, 21, -274, 29, -274, 97,
				-274, 20, -274, 85, -274, 1, 0, 124, 521, 49,
				24, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 335, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				465, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				474, -27, 522, -105, 218, -70, 224, -12, 326, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				34, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, -29, 19, -28, 483, -26, 484, -36, -33, -22,
				73, 27, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 64, 501, 65, 504, 147, 506, 148, 507,
				89, 515, 125, 532, 90, 534, 52, -27, 53, -27,
				54, -27, 55, -27, 56, -27, 86, -27, 14, -27,
				3, -27, 22, -27, 102, -27, 108, -27, 27, -27,
				26, -27, 21, -27, 29, -27, 97, -27, 20, -27,
				49, -27, 50, -27, 25, -27, 39, -27, -42, 526,
				-20, 316, -19, 334, -105, 218, -70, 224, -12, 326,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 34, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, -21, 527, -51, 528, -52, 536, -33, 537,
				-29, 538, -24, -272, 25, 1, 87, 530, 14, -270,
				105, -270, 97, -270, 100, -270, 40, -270, 49, -270,
				50, -270, 52, -270, 53, -270, 54, -270, 55, -270,
				56, -270, 86, -270, 3, -270, 22, -270, 102, -270,
				108, -270, 27, -270, 26, -270, 21, -270, 29, -270,
				20, -270, 25, -270, 39, -270, -34, 529, -262, 75,
				22, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, 125,
				532, 90, 534, 14, -269, 105, -269, 97, -269, 100,
				-269, 40, -269, 49, -269, 50, -269, 52, -269, 53,
				-269, 54, -269, 55, -269, 56, -269, 86, -269, 3,
				-269, 22, -269, 102, -269, 108, -269, 27, -269, 26,
				-269, 21, -269, 29, -269, 20, -269, 25, -269, 39,
				-269, -52, 306, -33, 531, -19, 307, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, -268, 49, 20, 118, 225,
				121, 226, 120, 227, 122, 228, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 131, 136, 119, 286, 84, 287,
				103, 291, 98, 300, 43, 308, 58, 321, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 503, 64, 501,
				65, 504, 147, 506, 148, 507, -19, 533, -105, 218,
				-70, 224, -12, 237, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 284, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, -104, 472, 51, 0, 141, 162,
				142, 164, 143, 166, 144, 168, 145, 170, 66, 172,
				139, 174, 140, 176, 91, 178, 67, 180, 137, 182,
				71, 184, 138, 186, 72, 188, 68, 190, 69, 192,
				70, 194, 75, 196, 76, 198, 81, 200, 82, 202,
				73, 204, 74, 206, 77, 208, 78, 210, 135, 212,
				87, -516, 14, -516, 105, -516, 102, -516, 97, -516,
				100, -516, 40, -516, 49, -516, 50, -516, 52, -516,
				53, -516, 54, -516, 55, -516, 56, -516, 86, -516,
				3, -516, 22, -516, 108, -516, 27, -516, 26, -516,
				21, -516, 29, -516, 20, -516, 25, -516, 39, -516,
				49, 20, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 287, 103, 291, 98, 300, 43, 308,
				58, 321, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 420,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 64, 501, 65, 504, 147, 506, 148, 507,
				-19, 535, -105, 218, -70, 224, -12, 237, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 475,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				50, 0, 141, 162, 142, 164, 143, 166, 144, 168,
				145, 170, 66, 172, 139, 174, 140, 176, 91, 178,
				67, 180, 137, 182, 71, 184, 138, 186, 72, 188,
				68, 190, 69, 192, 70, 194, 75, 196, 76, 198,
				81, 200, 82, 202, 73, 204, 74, 206, 77, 208,
				78, 210, 135, 212, 14, -267, 105, -267, 97, -267,
				100, -267, 40, -267, 49, -267, 50, -267, 52, -267,
				53, -267, 54, -267, 55, -267, 56, -267, 86, -267,
				3, -267, 22, -267, 102, -267, 108, -267, 27, -267,
				26, -267, 21, -267, 29, -267, 20, -267, 25, -267,
				39, -267, -513, -263, -264, 73, 27, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 335, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 465, 64, 501, 65,
				504, 147, 506, 148, 507, 89, 515, 125, 532, 90,
				534, 52, -28, 53, -28, 54, -28, 55, -28, 56,
				-28, 86, -28, 14, -28, 3, -28, 22, -28, 102,
				-28, 108, -28, 27, -28, 26, -28, 21, -28, 29,
				-28, 97, -28, 20, -28, 49, -28, 50, -28, 25,
				-28, 39, -28, -42, 540, -20, 316, -19, 334, -105,
				218, -70, 224, -12, 326, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 34, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, -21, 527, -51,
				528, -52, 536, -33, 537, -29, 538, -25, 73, 27,
				118, 225, 121, 226, 120, 227, 122, 228, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 131, 136, 119, 286,
				84, 287, 103, 291, 98, 300, 43, 335, 58, 321,
				51, 337, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 420, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 465,
				64, 501, 65, 504, 147, 506, 148, 507, 89, 515,
				125, 532, 90, 534, 52, -29, 53, -29, 54, -29,
				55, -29, 56, -29, 86, -29, 14, -29, 3, -29,
				22, -29, 102, -29, 108, -29, 27, -29, 26, -29,
				21, -29, 29, -29, 97, -29, 20, -29, 49, -29,
				50, -29, 25, -29, 39, -29, -42, 542, -20, 316,
				-19, 334, -105, 218, -70, 224, -12, 326, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 34,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				-21, 527, -51, 528, -52, 536, -33, 537, -29, 538,
				-26, -23, -30, -31, 1, 0, 134, 426, 50, 19,
				89, 550, 118, 225, 121, 226, 120, 227, 122, 228,
				123, 229, 46, 230, 45, 231, 47, 232, 48, 233,
				62, 234, 61, 235, 63, 236, 128, 244, 129, 245,
				130, 246, 146, 577, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 131, 136,
				119, 286, 84, 582, 103, 291, 98, 300, 43, 308,
				58, 584, 51, 337, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 586,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 503, 134, -74, 37, -74, 14, -74, 97, -74,
				-102, 548, -103, 556, -70, 557, -12, 558, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 581, -69, 475,
				-25, 345, -18, 394, -22, 415, -23, 439, 5, 0,
				87, 549, 134, -75, 37, -75, 14, -75, 97, -75,
				-84, 50, 18, 87, 606, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 577, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 582, 103, 291, 98,
				300, 43, 308, 58, 584, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 134, -78, 37, -78, 14,
				-78, 97, -78, -103, 551, -70, 557, -12, 558, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 581, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, 5,
				0, 87, 552, 134, -76, 37, -76, 14, -76, 97,
				-76, 45, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 577, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 582, 103, 291, 98, 300, 43,
				308, 58, 584, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				586, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, -101, 553, -102, 595, -103, 556, -70,
				557, -12, 558, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 581, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, 5, 0, 87, 554, 134, -77, 37,
				-77, 14, -77, 97, -77, 45, 19, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 577, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 582, 103,
				291, 98, 300, 43, 308, 58, 584, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 586, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, -102, 555, -103,
				556, -70, 557, -12, 558, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 581, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -86, -88, 8, 0, 87,
				-90, 134, -90, 37, -90, 14, -90, 97, -90, 104,
				-466, 83, -466, 88, -466, 3, 0, 104, 559, 83,
				564, 88, 573, 54, 28, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 64, 501, 65, 504, 147,
				506, 148, 507, 89, 515, 125, 532, 90, 534, 14,
				-258, 105, -258, -43, 560, -42, 471, -20, 316, -19,
				334, -105, 218, -70, 224, -12, 326, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 34, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, -21,
				527, -51, 528, -52, 536, -33, 537, -29, 538, 2,
				2, 14, 314, 105, -531, -113, 561, -114, 562, 10,
				0, 87, -91, 134, -91, 37, -91, 14, -91, 97,
				-91, 99, -403, 38, -403, 104, -403, 83, -403, 88,
				-403, 1, 0, 105, 563, -534, 33, 4, 122, 565,
				118, 570, 119, 571, 139, 52, 140, 53, 91, 54,
				67, 55, 68, 56, 69, 57, 75, 58, 76, 59,
				137, 60, 71, 61, 138, 62, 72, 63, 70, 64,
				81, 65, 82, 66, 141, 67, 142, 68, 143, 69,
				89, 70, 144, 71, 145, 72, 66, 73, 147, 74,
				148, 75, 64, 76, 65, 77, 79, 78, 80, 79,
				92, 80, 94, 468, -72, 566, -73, 568, -40, 569,
				-75, 572, 9, 0, 104, -286, 83, -286, 88, -286,
				87, -95, 134, -95, 37, -95, 14, -95, 97, -95,
				94, -521, 1, 1, 94, 468, -40, 567, -399, -400,
				-402, 11, 0, 87, -93, 134, -93, 37, -93, 14,
				-93, 97, -93, 94, -520, 99, -524, 38, -524, 104,
				-524, 83, -524, 88, -524, 113, 0, 94, -522, 118,
				-522, 121, -522, 120, -522, 122, -522, 123, -522, 46,
				-522, 45, -522, 47, -522, 48, -522, 62, -522, 61,
				-522, 63, -522, 128, -522, 129, -522, 130, -522, 146,
				-522, 116, -522, 126, -522, 111, -522, 113, -522, 112,
				-522, 114, -522, 115, -522, 131, -522, 119, -522, 84,
				-522, 103, -522, 98, -522, 43, -522, 58, -522, 51,
				-522, 23, -522, 24, -522, 30, -522, 31, -522, 28,
				-522, 32, -522, 96, -522, 95, -522, 19, -522, 15,
				-522, 16, -522, 17, -522, 93, -522, 44, -522, 64,
				-522, 65, -522, 147, -522, 148, -522, 89, -522, 125,
				-522, 90, -522, 99, -525, 38, -525, 104, -525, 83,
				-525, 88, -525, 87, -525, 86, -525, 139, -525, 141,
				-525, 142, -525, 143, -525, 144, -525, 145, -525, 66,
				-525, 140, -525, 91, -525, 67, -525, 137, -525, 71,
				-525, 138, -525, 72, -525, 68, -525, 69, -525, 70,
				-525, 75, -525, 76, -525, 81, -525, 82, -525, 73,
				-525, 74, -525, 77, -525, 78, -525, 135, -525, 49,
				-525, 50, -525, 52, -525, 53, -525, 54, -525, 55,
				-525, 56, -525, 14, -525, 3, -525, 22, -525, 102,
				-525, 108, -525, 27, -525, 26, -525, 21, -525, 29,
				-525, 97, -525, 20, -525, 25, -525, 39, -525, 85,
				-525, 105, -525, 100, -525, 40, -525, 136, -525, 101,
				-525, 41, -525, 113, 0, 94, -523, 118, -523, 121,
				-523, 120, -523, 122, -523, 123, -523, 46, -523, 45,
				-523, 47, -523, 48, -523, 62, -523, 61, -523, 63,
				-523, 128, -523, 129, -523, 130, -523, 146, -523, 116,
				-523, 126, -523, 111, -523, 113, -523, 112, -523, 114,
				-523, 115, -523, 131, -523, 119, -523, 84, -523, 103,
				-523, 98, -523, 43, -523, 58, -523, 51, -523, 23,
				-523, 24, -523, 30, -523, 31, -523, 28, -523, 32,
				-523, 96, -523, 95, -523, 19, -523, 15, -523, 16,
				-523, 17, -523, 93, -523, 44, -523, 64, -523, 65,
				-523, 147, -523, 148, -523, 89, -523, 125, -523, 90,
				-523, 99, -526, 38, -526, 104, -526, 83, -526, 88,
				-526, 87, -526, 86, -526, 139, -526, 141, -526, 142,
				-526, 143, -526, 144, -526, 145, -526, 66, -526, 140,
				-526, 91, -526, 67, -526, 137, -526, 71, -526, 138,
				-526, 72, -526, 68, -526, 69, -526, 70, -526, 75,
				-526, 76, -526, 81, -526, 82, -526, 73, -526, 74,
				-526, 77, -526, 78, -526, 135, -526, 49, -526, 50,
				-526, 52, -526, 53, -526, 54, -526, 55, -526, 56,
				-526, 14, -526, 3, -526, 22, -526, 102, -526, 108,
				-526, 27, -526, 26, -526, 21, -526, 29, -526, 97,
				-526, 20, -526, 25, -526, 39, -526, 85, -526, 105,
				-526, 100, -526, 40, -526, 136, -526, 101, -526, 41,
				-526, 33, 3, 118, 575, 122, 576, 119, 492, 139,
				52, 140, 53, 91, 54, 67, 55, 68, 56, 69,
				57, 75, 58, 76, 59, 137, 60, 71, 61, 138,
				62, 72, 63, 70, 64, 81, 65, 82, 66, 141,
				67, 142, 68, 143, 69, 89, 70, 144, 71, 145,
				72, 66, 73, 147, 74, 148, 75, 64, 76, 65,
				77, 79, 78, 80, 79, 92, 80, 94, 468, -72,
				574, -40, 357, -75, 493, 61, 2, 94, 468, 99,
				-256, 38, -256, 104, -256, 83, -256, 88, -256, 141,
				-256, 142, -256, 143, -256, 144, -256, 145, -256, 66,
				-256, 139, -256, 140, -256, 91, -256, 67, -256, 137,
				-256, 71, -256, 138, -256, 72, -256, 68, -256, 69,
				-256, 70, -256, 75, -256, 76, -256, 81, -256, 82,
				-256, 73, -256, 74, -256, 77, -256, 78, -256, 135,
				-256, 49, -256, 50, -256, 52, -256, 53, -256, 54,
				-256, 55, -256, 56, -256, 86, -256, 14, -256, 3,
				-256, 22, -256, 102, -256, 108, -256, 27, -256, 26,
				-256, 21, -256, 29, -256, 97, -256, 20, -256, 25,
				-256, 39, -256, 136, -256, 85, -256, 87, -256, 105,
				-256, 100, -256, 40, -256, 101, -256, 41, -256, -41,
				331, -40, 489, 11, 0, 87, -92, 134, -92, 37,
				-92, 14, -92, 97, -92, 94, -520, 99, -520, 38,
				-520, 104, -520, 83, -520, 88, -520, 11, 0, 87,
				-94, 134, -94, 37, -94, 14, -94, 97, -94, 94,
				-521, 99, -521, 38, -521, 104, -521, 83, -521, 88,
				-521, 3, 0, 128, 578, 129, 579, 130, 580, -451,
				-452, -453, 8, 0, 104, -284, 83, -284, 88, -284,
				87, -97, 134, -97, 37, -97, 14, -97, 97, -97,
				1, 0, 122, 583, 8, 0, 104, -287, 83, -287,
				88, -287, 87, -96, 134, -96, 37, -96, 14, -96,
				97, -96, 2, 1, 14, 314, 94, -531, -114, 585,
				1, 0, 94, 323, 63, 41, 86, 27, 14, 28,
				57, 43, 18, 142, 59, 148, 60, 153, 131, 136,
				118, 225, 122, 228, 119, 286, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 121, 226,
				120, 227, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 84, 372,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 342,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 423, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 147, 498,
				64, 501, 65, 504, 148, 507, 42, 525, 33, 539,
				34, 541, 35, 544, 36, 545, 89, 591, 2, 598,
				97, -529, -4, 421, -99, 587, -108, 4, -109, 5,
				-132, 26, -3, 29, -2, 31, -10, 42, -68, 158,
				-11, 352, -14, 353, -13, 354, -27, 18, -29, 19,
				-69, 34, -12, 355, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -70, 371, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 510,
				-104, 520, -7, 523, -8, 524, -9, 543, -100, 547,
				-102, 589, -103, 556, 3, 2, 134, 426, 14, 314,
				97, -531, -116, 588, -114, 312, -89, 1, 0, 87,
				590, -85, 50, 18, 87, 596, 118, 225, 121, 226,
				120, 227, 122, 228, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				128, 244, 129, 245, 130, 246, 146, 577, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 131, 136, 119, 286, 84, 582, 103, 291,
				98, 300, 43, 308, 58, 584, 51, 337, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 503, 134, -83, 37, -83,
				14, -83, 97, -83, -103, 592, -70, 557, -12, 558,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 581,
				-69, 475, -25, 345, -18, 394, -22, 415, -23, 439,
				5, 0, 87, 593, 134, -82, 37, -82, 14, -82,
				97, -82, 45, 20, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 577, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 582, 103, 291, 98, 300,
				43, 308, 58, 584, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 586, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 503, -101, 594, -102, 595, -103, 556,
				-70, 557, -12, 558, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 581, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, 5, 0, 87, 554, 134, -80,
				37, -80, 14, -80, 97, -80, -87, 45, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				577, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				582, 103, 291, 98, 300, 43, 308, 58, 584, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 586, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, -101,
				597, -102, 595, -103, 556, -70, 557, -12, 558, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 581, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, 5,
				0, 87, 554, 134, -81, 37, -81, 14, -81, 97,
				-81, 59, 36, 57, 43, 18, 142, 59, 148, 60,
				153, 131, 136, 118, 225, 122, 228, 119, 286, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 121, 226, 120, 227, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 84, 372, 103, 291, 98, 300, 43, 335, 58,
				321, 51, 342, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 423, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				465, 147, 498, 64, 501, 65, 504, 148, 507, 42,
				525, 33, 539, 34, 541, 35, 544, 36, 545, 89,
				591, -2, 599, -10, 42, -68, 158, -11, 352, -14,
				353, -13, 354, -27, 18, -29, 19, -69, 34, -12,
				355, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -70,
				371, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 510, -104, 520, -7,
				523, -8, 524, -9, 543, -99, 546, -100, 547, -102,
				589, -103, 556, 17, 0, 52, 11, 53, 32, 54,
				600, 55, 602, 56, 604, 86, -8, 14, -8, 3,
				-8, 22, -8, 102, -8, 108, -8, 27, -8, 26,
				-8, 21, -8, 29, -8, 97, -8, 20, -8, 49,
				25, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 131,
				136, 84, 287, 103, 291, 98, 300, 43, 335, 58,
				321, 51, 342, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				465, 147, 498, 64, 501, 65, 504, 148, 507, -13,
				601, -27, 18, -29, 19, -69, 34, -12, 326, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -70, 224, -68,
				284, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 218, -104, 472, 19,
				0, 49, 13, 50, 15, 52, -47, 53, -47, 54,
				-47, 55, -47, 56, -47, 86, -47, 14, -47, 3,
				-47, 22, -47, 102, -47, 108, -47, 27, -47, 26,
				-47, 21, -47, 29, -47, 97, -47, 20, -47, 49,
				25, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 131,
				136, 84, 287, 103, 291, 98, 300, 43, 335, 58,
				321, 51, 342, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				465, 147, 498, 64, 501, 65, 504, 148, 507, -13,
				603, -27, 18, -29, 19, -69, 34, -12, 326, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -70, 224, -68,
				284, -25, 345, -18, 394, -22, 415, -23, 439, -28,
				483, -26, 484, -19, 509, -105, 218, -104, 472, 19,
				0, 49, 13, 50, 15, 52, -48, 53, -48, 54,
				-48, 55, -48, 56, -48, 86, -48, 14, -48, 3,
				-48, 22, -48, 102, -48, 108, -48, 27, -48, 26,
				-48, 21, -48, 29, -48, 97, -48, 20, -48, 59,
				36, 57, 43, 18, 142, 59, 148, 60, 153, 131,
				136, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 84,
				372, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 423, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, 42, 525, 33,
				539, 34, 541, 35, 544, 36, 545, 89, 591, -2,
				605, -10, 42, -68, 158, -11, 352, -14, 353, -13,
				354, -27, 18, -29, 19, -69, 34, -12, 355, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -70, 371, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 510, -104, 520, -7, 523, -8,
				524, -9, 543, -99, 546, -100, 547, -102, 589, -103,
				556, -49, 45, 20, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 577, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 582, 103, 291, 98, 300,
				43, 308, 58, 584, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 586, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 503, -101, 607, -102, 595, -103, 556,
				-70, 557, -12, 558, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 581, -69, 475, -25, 345, -18, 394,
				-22, 415, -23, 439, 5, 0, 87, 554, 134, -79,
				37, -79, 14, -79, 97, -79, -379, -380, 12, 10,
				122, 618, 121, 619, 120, 620, 123, 621, 118, 673,
				95, 637, 143, 671, 89, 672, 91, 663, 90, 664,
				86, -377, 139, -377, -81, 611, -95, 624, -98, 665,
				-90, 636, -86, 695, -88, 693, -91, 705, -144, 669,
				-92, 710, -145, 661, 2, 1, 86, 614, 139, -382,
				-84, 612, 1, 0, 139, 613, -381, 5, 2, 122,
				618, 121, 619, 120, 620, 123, 621, 118, 622, -83,
				615, -90, 623, 4, 0, 87, 616, 139, -383, 14,
				-383, 97, -383, 5, 1, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 622, -90, 617, -385, -490, -491,
				-492, -493, -494, -384, 3, 1, 87, 625, 86, -508,
				139, -508, -93, 694, 12, 8, 118, 673, 122, 618,
				121, 619, 120, 620, 123, 621, 95, 637, 143, 671,
				89, 672, 91, 663, 90, 664, 86, -367, 139, -367,
				-86, 626, -98, 634, -91, 688, -92, 635, -88, 693,
				-90, 636, -144, 669, -145, 661, 3, 1, 87, 627,
				86, -508, 139, -508, -93, 687, 10, 8, 143, 671,
				89, 672, 122, 618, 121, 619, 120, 620, 123, 621,
				118, 673, 95, 637, 91, 663, 90, 664, -91, 628,
				-95, 666, -88, 668, -92, 635, -144, 669, -98, 665,
				-90, 636, -145, 661, 3, 1, 87, 630, 86, -508,
				139, -508, -93, 629, -362, 8, 5, 122, 618, 121,
				619, 120, 620, 123, 621, 118, 622, 95, 637, 91,
				663, 90, 664, -95, 631, -92, 635, -98, 665, -90,
				636, -145, 661, 3, 1, 87, 633, 86, -508, 139,
				-508, -93, 632, -363, 8, 4, 122, 618, 121, 619,
				120, 620, 123, 621, 118, 622, 95, 637, 91, 663,
				90, 664, -98, 634, -92, 635, -90, 636, -145, 661,
				-346, -509, -347, 7, 4, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 622, 95, 649, 89, 653, -94,
				638, -96, 640, -97, 652, -90, 648, 2, 2, 14,
				314, 97, -531, -116, 639, -114, 312, -348, 3, 0,
				87, 641, 14, -349, 97, -349, 7, 2, 89, 643,
				122, 618, 121, 619, 120, 620, 123, 621, 118, 622,
				95, 649, -97, 642, -90, 648, -359, 8, 1, 87,
				659, 122, 618, 121, 619, 120, 620, 123, 621, 118,
				622, 14, -351, 97, -351, -90, 644, 3, 0, 87,
				645, 14, -350, 97, -350, 6, 3, 122, 618, 121,
				619, 120, 620, 123, 621, 118, 622, 95, 649, -96,
				646, -97, 652, -90, 648, 3, 0, 87, 647, 14,
				-352, 97, -352, 6, 2, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 622, 95, 649, -97, 642, -90,
				648, -360, 7, 4, 122, 618, 121, 619, 120, 620,
				123, 621, 118, 622, 95, 649, 89, 653, -94, 650,
				-96, 640, -97, 652, -90, 648, 2, 2, 14, 314,
				97, -531, -116, 651, -114, 312, -361, -358, 8, 1,
				87, 657, 122, 618, 121, 619, 120, 620, 123, 621,
				118, 622, 14, -357, 97, -357, -90, 654, 3, 0,
				87, 655, 14, -356, 97, -356, 6, 3, 122, 618,
				121, 619, 120, 620, 123, 621, 118, 622, 95, 649,
				-96, 656, -97, 652, -90, 648, 3, 0, 87, 647,
				14, -354, 97, -354, 6, 3, 122, 618, 121, 619,
				120, 620, 123, 621, 118, 622, 95, 649, -96, 658,
				-97, 652, -90, 648, 3, 0, 87, 647, 14, -355,
				97, -355, 6, 3, 122, 618, 121, 619, 120, 620,
				123, 621, 118, 622, 95, 649, -96, 660, -97, 652,
				-90, 648, 3, 0, 87, 647, 14, -353, 97, -353,
				5, 1, 122, 618, 121, 619, 120, 620, 123, 621,
				118, 622, -90, 662, -507, -505, -506, -345, 3, 1,
				87, 633, 86, -508, 139, -508, -93, 667, -365, -500,
				12, 1, 122, 618, 121, 619, 120, 620, 123, 621,
				118, 622, 87, -504, 86, -504, 14, -504, 101, -504,
				41, -504, 139, -504, 97, -504, -90, 670, -503, -501,
				-502, 4, 0, 134, 674, 87, -494, 86, -494, 139,
				-494, 45, 17, 128, 244, 129, 245, 130, 246, 146,
				577, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 131,
				136, 119, 286, 84, 685, 103, 291, 98, 300, 43,
				308, 58, 584, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, -12, 675, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -70, 683, -68, 684, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, 6, 0, 83,
				676, 88, 679, 104, 680, 87, -496, 86, -496, 139,
				-496, 33, 4, 122, 677, 118, 678, 119, 571, 139,
				52, 140, 53, 91, 54, 67, 55, 68, 56, 69,
				57, 75, 58, 76, 59, 137, 60, 71, 61, 138,
				62, 72, 63, 70, 64, 81, 65, 82, 66, 141,
				67, 142, 68, 143, 69, 89, 70, 144, 71, 145,
				72, 66, 73, 147, 74, 148, 75, 64, 76, 65,
				77, 79, 78, 80, 79, 92, 80, 94, 468, -72,
				566, -73, 568, -40, 569, -75, 572, 7, 0, 83,
				-286, 88, -286, 104, -286, 87, -286, 86, -286, 139,
				-286, 94, -521, 9, 0, 94, -520, 99, -524, 38,
				-524, 83, -524, 88, -524, 104, -524, 87, -524, 86,
				-524, 139, -524, 33, 3, 118, 490, 122, 491, 119,
				492, 139, 52, 140, 53, 91, 54, 67, 55, 68,
				56, 69, 57, 75, 58, 76, 59, 137, 60, 71,
				61, 138, 62, 72, 63, 70, 64, 81, 65, 82,
				66, 141, 67, 142, 68, 143, 69, 89, 70, 144,
				71, 145, 72, 66, 73, 147, 74, 148, 75, 64,
				76, 65, 77, 79, 78, 80, 79, 92, 80, 94,
				468, -72, 574, -40, 357, -75, 493, 54, 28, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 64,
				501, 65, 504, 147, 506, 148, 507, 89, 515, 125,
				532, 90, 534, 14, -258, 105, -258, -43, 681, -42,
				471, -20, 316, -19, 334, -105, 218, -70, 224, -12,
				326, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 34, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, -21, 527, -51, 528, -52, 536, -33,
				537, -29, 538, 2, 2, 14, 314, 105, -531, -113,
				682, -114, 562, -403, -466, -284, 1, 0, 122, 686,
				-287, -364, 3, 1, 87, 690, 86, -508, 139, -508,
				-93, 689, -366, 8, 5, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 622, 95, 637, 91, 663, 90,
				664, -95, 691, -92, 635, -98, 665, -90, 636, -145,
				661, 3, 1, 87, 633, 86, -508, 139, -508, -93,
				692, -368, -499, -369, 3, 1, 87, 696, 86, -508,
				139, -508, -93, 704, 10, 8, 143, 671, 89, 672,
				118, 673, 122, 618, 121, 619, 120, 620, 123, 621,
				95, 637, 91, 663, 90, 664, -91, 697, -88, 668,
				-95, 702, -92, 635, -144, 669, -98, 665, -90, 636,
				-145, 661, 3, 1, 87, 699, 86, -508, 139, -508,
				-93, 698, -370, 8, 5, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 622, 95, 637, 91, 663, 90,
				664, -95, 700, -92, 635, -98, 665, -90, 636, -145,
				661, 3, 1, 87, 633, 86, -508, 139, -508, -93,
				701, -371, 3, 1, 87, 633, 86, -508, 139, -508,
				-93, 703, -373, -372, 3, 1, 87, 707, 86, -508,
				139, -508, -93, 706, -374, 8, 5, 122, 618, 121,
				619, 120, 620, 123, 621, 118, 622, 95, 637, 91,
				663, 90, 664, -95, 708, -92, 635, -98, 665, -90,
				636, -145, 661, 3, 1, 87, 633, 86, -508, 139,
				-508, -93, 709, -375, -376, 63, 41, 86, 27, 14,
				28, 57, 43, 18, 142, 59, 148, 60, 153, 131,
				136, 118, 225, 122, 228, 119, 286, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 121,
				226, 120, 227, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 84,
				372, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 423, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, 42, 525, 33,
				539, 34, 541, 35, 544, 36, 545, 89, 591, 2,
				598, 22, -529, -4, 712, -108, 4, -109, 5, -132,
				26, -3, 29, -2, 31, -10, 42, -68, 158, -11,
				352, -14, 353, -13, 354, -27, 18, -29, 19, -69,
				34, -12, 355, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 371, -25, 345, -18, 394, -22, 415, -23,
				439, -28, 483, -26, 484, -19, 509, -105, 510, -104,
				520, -7, 523, -8, 524, -9, 543, -99, 546, -100,
				547, -102, 589, -103, 556, 1, 0, 22, 713, -391,
				13, 10, 122, 618, 121, 619, 120, 620, 123, 621,
				118, 730, 95, 637, 143, 671, 89, 672, 91, 663,
				90, 664, 86, -489, 14, -489, 97, -489, -82, 715,
				-95, 718, -98, 665, -90, 636, -85, 741, -87, 739,
				-91, 751, -144, 669, -92, 756, -145, 661, 3, 1,
				86, 614, 14, -382, 97, -382, -84, 716, 2, 2,
				14, 314, 97, -531, -116, 717, -114, 312, -388, 6,
				1, 87, 719, 86, -508, 14, -508, 101, -508, 41,
				-508, 97, -508, -93, 740, 10, 8, 118, 730, 122,
				618, 121, 619, 120, 620, 123, 621, 95, 637, 143,
				671, 89, 672, 91, 663, 90, 664, -85, 720, -98,
				634, -91, 734, -92, 635, -87, 739, -90, 636, -144,
				669, -145, 661, 6, 1, 87, 721, 86, -508, 14,
				-508, 101, -508, 41, -508, 97, -508, -93, 733, 10,
				8, 143, 671, 89, 672, 122, 618, 121, 619, 120,
				620, 123, 621, 118, 730, 95, 637, 91, 663, 90,
				664, -91, 722, -95, 727, -87, 729, -92, 635, -144,
				669, -98, 665, -90, 636, -145, 661, 6, 1, 87,
				724, 86, -508, 14, -508, 101, -508, 41, -508, 97,
				-508, -93, 723, -475, 8, 5, 122, 618, 121, 619,
				120, 620, 123, 621, 118, 622, 95, 637, 91, 663,
				90, 664, -95, 725, -92, 635, -98, 665, -90, 636,
				-145, 661, 6, 1, 87, 633, 86, -508, 14, -508,
				101, -508, 41, -508, 97, -508, -93, 726, -476, 6,
				1, 87, 633, 86, -508, 14, -508, 101, -508, 41,
				-508, 97, -508, -93, 728, -478, -498, 7, 0, 134,
				731, 87, -494, 86, -494, 14, -494, 101, -494, 41,
				-494, 97, -494, 49, 20, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 308, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 503, 64, 501, 65, 504, 147,
				506, 148, 507, -19, 732, -105, 218, -70, 224, -12,
				237, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 475, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, 32, 0, 141, 162, 142, 164, 143,
				166, 144, 168, 145, 170, 66, 172, 139, 174, 140,
				176, 91, 178, 67, 180, 137, 182, 71, 184, 138,
				186, 72, 188, 68, 190, 69, 192, 70, 194, 75,
				196, 76, 198, 81, 200, 82, 202, 73, 204, 74,
				206, 77, 208, 78, 210, 135, 212, 87, -495, 86,
				-495, 14, -495, 101, -495, 41, -495, 97, -495, -477,
				6, 1, 87, 736, 86, -508, 14, -508, 101, -508,
				41, -508, 97, -508, -93, 735, -479, 8, 5, 122,
				618, 121, 619, 120, 620, 123, 621, 118, 622, 95,
				637, 91, 663, 90, 664, -95, 737, -92, 635, -98,
				665, -90, 636, -145, 661, 6, 1, 87, 633, 86,
				-508, 14, -508, 101, -508, 41, -508, 97, -508, -93,
				738, -480, -497, -481, 6, 1, 87, 742, 86, -508,
				14, -508, 101, -508, 41, -508, 97, -508, -93, 750,
				10, 8, 143, 671, 89, 672, 118, 730, 122, 618,
				121, 619, 120, 620, 123, 621, 95, 637, 91, 663,
				90, 664, -91, 743, -87, 729, -95, 748, -92, 635,
				-144, 669, -98, 665, -90, 636, -145, 661, 6, 1,
				87, 745, 86, -508, 14, -508, 101, -508, 41, -508,
				97, -508, -93, 744, -482, 8, 5, 122, 618, 121,
				619, 120, 620, 123, 621, 118, 622, 95, 637, 91,
				663, 90, 664, -95, 746, -92, 635, -98, 665, -90,
				636, -145, 661, 6, 1, 87, 633, 86, -508, 14,
				-508, 101, -508, 41, -508, 97, -508, -93, 747, -483,
				6, 1, 87, 633, 86, -508, 14, -508, 101, -508,
				41, -508, 97, -508, -93, 749, -485, -484, 6, 1,
				87, 753, 86, -508, 14, -508, 101, -508, 41, -508,
				97, -508, -93, 752, -486, 8, 5, 122, 618, 121,
				619, 120, 620, 123, 621, 118, 622, 95, 637, 91,
				663, 90, 664, -95, 754, -92, 635, -98, 665, -90,
				636, -145, 661, 6, 1, 87, 633, 86, -508, 14,
				-508, 101, -508, 41, -508, 97, -508, -93, 755, -487,
				-488, -389, 12, 10, 122, 618, 121, 619, 120, 620,
				123, 621, 118, 730, 95, 637, 143, 671, 89, 672,
				91, 663, 90, 664, 14, -489, 97, -489, -82, 759,
				-95, 718, -98, 665, -90, 636, -85, 741, -87, 739,
				-91, 751, -144, 669, -92, 756, -145, 661, 2, 2,
				14, 314, 97, -531, -116, 760, -114, 312, -473, 2,
				1, 86, 27, 14, 28, -132, 762, -474, 2, 1,
				88, 771, 83, 772, -136, 764, 0, 1, -327, -137,
				765, 75, 3, 118, 48, 122, 49, 119, 50, 139,
				52, 140, 53, 91, 54, 67, 55, 68, 56, 69,
				57, 75, 58, 76, 59, 137, 60, 71, 61, 138,
				62, 72, 63, 70, 64, 81, 65, 82, 66, 141,
				67, 142, 68, 143, 69, 89, 70, 144, 71, 145,
				72, 66, 73, 147, 74, 148, 75, 64, 76, 65,
				77, 79, 78, 80, 79, 92, 80, 61, 82, 62,
				83, 63, 84, 59, 85, 60, 86, 57, 87, 49,
				88, 19, 89, 33, 90, 28, 91, 15, 92, 17,
				93, 58, 94, 38, 95, 40, 96, 27, 97, 26,
				98, 22, 99, 21, 100, 48, 101, 32, 102, 37,
				103, 16, 104, 34, 105, 46, 106, 51, 107, 50,
				108, 35, 109, 20, 110, 36, 111, 42, 112, 45,
				113, 44, 114, 25, 115, 47, 116, 18, 117, 29,
				118, 43, 119, 52, 120, 53, 121, 54, 122, 55,
				123, 56, 124, -76, 766, -75, 51, -117, 81, 0,
				1, -328, -138, 767, 13, 11, 94, 758, 122, 618,
				121, 619, 120, 620, 123, 621, 118, 730, 95, 637,
				143, 671, 89, 672, 91, 663, 90, 664, 86, -489,
				14, -489, -80, 768, -82, 761, -95, 718, -98, 665,
				-90, 636, -85, 741, -87, 739, -91, 751, -144, 669,
				-92, 756, -145, 661, 66, 42, 86, 27, 14, 28,
				57, 43, 18, 142, 59, 148, 60, 153, 131, 136,
				118, 225, 122, 228, 119, 286, 128, 244, 129, 245,
				130, 246, 146, 247, 116, 126, 126, 257, 111, 254,
				113, 260, 112, 264, 114, 268, 115, 277, 121, 226,
				120, 227, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 84, 372,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 342,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 423, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 147, 498,
				64, 501, 65, 504, 148, 507, 42, 525, 33, 539,
				34, 541, 35, 544, 36, 545, 89, 591, 2, 598,
				20, -529, 27, -529, 21, -529, 22, -529, -24, 769,
				-4, 433, -108, 4, -109, 5, -132, 26, -3, 29,
				-2, 31, -10, 42, -68, 158, -11, 352, -14, 353,
				-13, 354, -27, 18, -29, 19, -69, 34, -12, 355,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -70, 371,
				-25, 345, -18, 394, -22, 415, -23, 439, -28, 483,
				-26, 484, -19, 509, -105, 510, -104, 520, -7, 523,
				-8, 524, -9, 543, -99, 546, -100, 547, -102, 589,
				-103, 556, 1, 0, 22, 770, -329, -527, -528, 15,
				0, 94, -111, 122, -111, 121, -111, 120, -111, 123,
				-111, 118, -111, 95, -111, 143, -111, 89, -111, 91,
				-111, 90, -111, 86, -111, 14, -111, 88, -454, 83,
				-454, 15, 0, 94, -112, 122, -112, 121, -112, 120,
				-112, 123, -112, 118, -112, 95, -112, 143, -112, 89,
				-112, 91, -112, 90, -112, 86, -112, 14, -112, 88,
				-457, 83, -457, 15, 0, 94, -157, 122, -157, 121,
				-157, 120, -157, 123, -157, 118, -157, 95, -157, 143,
				-157, 89, -157, 91, -157, 90, -157, 86, -157, 14,
				-157, 88, -464, 83, -464, 15, 0, 94, -158, 122,
				-158, 121, -158, 120, -158, 123, -158, 118, -158, 95,
				-158, 143, -158, 89, -158, 91, -158, 90, -158, 86,
				-158, 14, -158, 88, -463, 83, -463, 15, 0, 94,
				-159, 122, -159, 121, -159, 120, -159, 123, -159, 118,
				-159, 95, -159, 143, -159, 89, -159, 91, -159, 90,
				-159, 86, -159, 14, -159, 88, -465, 83, -465, 15,
				0, 94, -176, 122, -176, 121, -176, 120, -176, 123,
				-176, 118, -176, 95, -176, 143, -176, 89, -176, 91,
				-176, 90, -176, 86, -176, 14, -176, 88, -462, 83,
				-462, 15, 0, 94, -181, 122, -181, 121, -181, 120,
				-181, 123, -181, 118, -181, 95, -181, 143, -181, 89,
				-181, 91, -181, 90, -181, 86, -181, 14, -181, 88,
				-459, 83, -459, 15, 0, 94, -188, 122, -188, 121,
				-188, 120, -188, 123, -188, 118, -188, 95, -188, 143,
				-188, 89, -188, 91, -188, 90, -188, 86, -188, 14,
				-188, 88, -460, 83, -460, 15, 0, 94, -191, 122,
				-191, 121, -191, 120, -191, 123, -191, 118, -191, 95,
				-191, 143, -191, 89, -191, 91, -191, 90, -191, 86,
				-191, 14, -191, 88, -461, 83, -461, -510, 0, 1,
				-511, -146, 784, 49, 25, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 131, 136, 84, 287, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 342, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 147, 498, 64, 501, 65,
				504, 148, 507, -13, 785, -27, 18, -29, 19, -69,
				34, -12, 326, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -70, 224, -68, 284, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -19, 509, -105,
				218, -104, 472, 4, 2, 49, 13, 50, 15, 14,
				314, 97, -531, -116, 786, -114, 312, -512, 2, 1,
				122, 789, 118, 790, -74, 788, -108, 70, 0, 83,
				-287, 88, -287, 104, -287, 86, -106, 14, -106, 138,
				-106, 2, -106, 57, -106, 18, -106, 59, -106, 60,
				-106, 131, -106, 118, -106, 122, -106, 119, -106, 128,
				-106, 129, -106, 130, -106, 146, -106, 116, -106, 126,
				-106, 111, -106, 113, -106, 112, -106, 114, -106, 115,
				-106, 121, -106, 120, -106, 123, -106, 46, -106, 45,
				-106, 47, -106, 48, -106, 62, -106, 61, -106, 63,
				-106, 84, -106, 103, -106, 98, -106, 43, -106, 58,
				-106, 51, -106, 23, -106, 24, -106, 30, -106, 31,
				-106, 28, -106, 32, -106, 96, -106, 95, -106, 19,
				-106, 15, -106, 16, -106, 17, -106, 93, -106, 44,
				-106, 147, -106, 64, -106, 65, -106, 148, -106, 42,
				-106, 33, -106, 34, -106, 35, -106, 36, -106, 89,
				-106, 22, -106, 20, -106, 27, -106, 21, -106, -107,
				-109, 73, 0, 86, -106, 14, -106, 138, -106, 2,
				-106, 57, -106, 18, -106, 59, -106, 60, -106, 131,
				-106, 118, -106, 122, -106, 119, -106, 128, -106, 129,
				-106, 130, -106, 146, -106, 116, -106, 126, -106, 111,
				-106, 113, -106, 112, -106, 114, -106, 115, -106, 121,
				-106, 120, -106, 123, -106, 46, -106, 45, -106, 47,
				-106, 48, -106, 62, -106, 61, -106, 63, -106, 84,
				-106, 103, -106, 98, -106, 43, -106, 58, -106, 51,
				-106, 23, -106, 24, -106, 30, -106, 31, -106, 28,
				-106, 32, -106, 96, -106, 95, -106, 19, -106, 15,
				-106, 16, -106, 17, -106, 93, -106, 44, -106, 147,
				-106, 64, -106, 65, -106, 148, -106, 42, -106, 33,
				-106, 34, -106, 35, -106, 36, -106, 89, -106, 22,
				-106, 20, -106, 27, -106, 21, -106, 83, -457, 88,
				-457, 104, -457, 99, -518, 38, -518, 94, -518, 73,
				0, 86, -107, 14, -107, 138, -107, 2, -107, 57,
				-107, 18, -107, 59, -107, 60, -107, 131, -107, 118,
				-107, 122, -107, 119, -107, 128, -107, 129, -107, 130,
				-107, 146, -107, 116, -107, 126, -107, 111, -107, 113,
				-107, 112, -107, 114, -107, 115, -107, 121, -107, 120,
				-107, 123, -107, 46, -107, 45, -107, 47, -107, 48,
				-107, 62, -107, 61, -107, 63, -107, 84, -107, 103,
				-107, 98, -107, 43, -107, 58, -107, 51, -107, 23,
				-107, 24, -107, 30, -107, 31, -107, 28, -107, 32,
				-107, 96, -107, 95, -107, 19, -107, 15, -107, 16,
				-107, 17, -107, 93, -107, 44, -107, 147, -107, 64,
				-107, 65, -107, 148, -107, 42, -107, 33, -107, 34,
				-107, 35, -107, 36, -107, 89, -107, 22, -107, 20,
				-107, 27, -107, 21, -107, 83, -454, 88, -454, 104,
				-454, 99, -517, 38, -517, 94, -517, 3, 0, 83,
				795, 88, 679, 104, 680, 33, 5, 122, 797, 118,
				798, 119, 571, 139, 52, 140, 53, 91, 54, 67,
				55, 68, 56, 69, 57, 75, 58, 76, 59, 137,
				60, 71, 61, 138, 62, 72, 63, 70, 64, 81,
				65, 82, 66, 141, 67, 142, 68, 143, 69, 89,
				70, 144, 71, 145, 72, 66, 73, 147, 74, 148,
				75, 64, 76, 65, 77, 79, 78, 80, 79, 92,
				80, 94, 468, -74, 796, -72, 566, -73, 568, -40,
				569, -75, 572, -110, 71, 0, 83, -286, 88, -286,
				104, -286, 86, -106, 14, -106, 138, -106, 2, -106,
				57, -106, 18, -106, 59, -106, 60, -106, 131, -106,
				118, -106, 122, -106, 119, -106, 128, -106, 129, -106,
				130, -106, 146, -106, 116, -106, 126, -106, 111, -106,
				113, -106, 112, -106, 114, -106, 115, -106, 121, -106,
				120, -106, 123, -106, 46, -106, 45, -106, 47, -106,
				48, -106, 62, -106, 61, -106, 63, -106, 84, -106,
				103, -106, 98, -106, 43, -106, 58, -106, 51, -106,
				23, -106, 24, -106, 30, -106, 31, -106, 28, -106,
				32, -106, 96, -106, 95, -106, 19, -106, 15, -106,
				16, -106, 17, -106, 93, -106, 44, -106, 147, -106,
				64, -106, 65, -106, 148, -106, 42, -106, 33, -106,
				34, -106, 35, -106, 36, -106, 89, -106, 22, -106,
				20, -106, 27, -106, 21, -106, 94, -521, 73, 0,
				86, -107, 14, -107, 138, -107, 2, -107, 57, -107,
				18, -107, 59, -107, 60, -107, 131, -107, 118, -107,
				122, -107, 119, -107, 128, -107, 129, -107, 130, -107,
				146, -107, 116, -107, 126, -107, 111, -107, 113, -107,
				112, -107, 114, -107, 115, -107, 121, -107, 120, -107,
				123, -107, 46, -107, 45, -107, 47, -107, 48, -107,
				62, -107, 61, -107, 63, -107, 84, -107, 103, -107,
				98, -107, 43, -107, 58, -107, 51, -107, 23, -107,
				24, -107, 30, -107, 31, -107, 28, -107, 32, -107,
				96, -107, 95, -107, 19, -107, 15, -107, 16, -107,
				17, -107, 93, -107, 44, -107, 147, -107, 64, -107,
				65, -107, 148, -107, 42, -107, 33, -107, 34, -107,
				35, -107, 36, -107, 89, -107, 22, -107, 20, -107,
				27, -107, 21, -107, 94, -520, 99, -524, 38, -524,
				83, -524, 88, -524, 104, -524, -469, 0, 1, -470,
				-143, 801, 49, 25, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 131, 136, 84, 287, 103, 291, 98, 300,
				43, 335, 58, 321, 51, 342, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 465, 147, 498, 64, 501, 65, 504,
				148, 507, -13, 802, -27, 18, -29, 19, -69, 34,
				-12, 326, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 224, -68, 284, -25, 345, -18, 394, -22, 415,
				-23, 439, -28, 483, -26, 484, -19, 509, -105, 218,
				-104, 472, 4, 1, 49, 13, 50, 15, 86, 27,
				14, 28, -132, 803, -471, 2, 1, 86, 27, 14,
				28, -132, 805, -472, 49, 25, 118, 225, 122, 228,
				119, 286, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 121, 226, 120, 227, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 131, 136, 84, 287, 103, 291,
				98, 300, 43, 335, 58, 321, 51, 342, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 465, 147, 498, 64, 501,
				65, 504, 148, 507, -13, 807, -27, 18, -29, 19,
				-69, 34, -12, 326, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -70, 224, -68, 284, -25, 345, -18, 394,
				-22, 415, -23, 439, -28, 483, -26, 484, -19, 509,
				-105, 218, -104, 472, 4, 1, 49, 13, 50, 15,
				86, -320, 14, -320, -131, 808, 2, 1, 86, 27,
				14, 28, -132, 809, 0, 1, -321, -133, 810, 66,
				42, 86, 27, 14, 28, 57, 43, 18, 142, 59,
				148, 60, 153, 131, 136, 118, 225, 122, 228, 119,
				286, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 121, 226, 120, 227, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 84, 372, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 342, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				423, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 147, 498, 64, 501, 65, 504, 148,
				507, 42, 525, 33, 539, 34, 541, 35, 544, 36,
				545, 89, 591, 2, 598, 20, -529, 27, -529, 21,
				-529, 22, -529, -24, 811, -4, 433, -108, 4, -109,
				5, -132, 26, -3, 29, -2, 31, -10, 42, -68,
				158, -11, 352, -14, 353, -13, 354, -27, 18, -29,
				19, -69, 34, -12, 355, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -70, 371, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -19, 509, -105,
				510, -104, 520, -7, 523, -8, 524, -9, 543, -99,
				546, -100, 547, -102, 589, -103, 556, 1, 0, 22,
				812, -322, 4, 1, 20, 815, 27, -414, 21, -414,
				22, -414, -48, 814, -416, 54, 23, 85, 826, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, 89, 515, 86,
				-419, 14, -419, 25, -419, -106, 816, -20, 822, -19,
				842, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, -21,
				527, 3, 2, 86, 27, 14, 28, 25, 821, -121,
				817, -132, 819, 66, 41, 86, 27, 14, 28, 57,
				43, 18, 142, 59, 148, 60, 153, 131, 136, 118,
				225, 122, 228, 119, 286, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 121, 226, 120,
				227, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 84, 372, 103,
				291, 98, 300, 43, 335, 58, 321, 51, 342, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 423, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 465, 147, 498, 64,
				501, 65, 504, 148, 507, 42, 525, 33, 539, 34,
				541, 35, 544, 36, 545, 89, 591, 2, 598, 20,
				-529, 27, -529, 21, -529, 22, -529, -4, 818, -108,
				4, -109, 5, -132, 26, -3, 29, -2, 31, -10,
				42, -68, 158, -11, 352, -14, 353, -13, 354, -27,
				18, -29, 19, -69, 34, -12, 355, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 371, -25, 345, -18,
				394, -22, 415, -23, 439, -28, 483, -26, 484, -19,
				509, -105, 510, -104, 520, -7, 523, -8, 524, -9,
				543, -99, 546, -100, 547, -102, 589, -103, 556, -417,
				69, 0, 25, 820, 86, -334, 14, -334, 57, -334,
				18, -334, 59, -334, 60, -334, 131, -334, 118, -334,
				122, -334, 119, -334, 128, -334, 129, -334, 130, -334,
				146, -334, 116, -334, 126, -334, 111, -334, 113, -334,
				112, -334, 114, -334, 115, -334, 121, -334, 120, -334,
				123, -334, 46, -334, 45, -334, 47, -334, 48, -334,
				62, -334, 61, -334, 63, -334, 84, -334, 103, -334,
				98, -334, 43, -334, 58, -334, 51, -334, 23, -334,
				24, -334, 30, -334, 31, -334, 28, -334, 32, -334,
				96, -334, 95, -334, 19, -334, 15, -334, 16, -334,
				17, -334, 93, -334, 44, -334, 147, -334, 64, -334,
				65, -334, 148, -334, 42, -334, 33, -334, 34, -334,
				35, -334, 36, -334, 89, -334, 2, -334, 27, -334,
				26, -334, 22, -334, 29, -334, 20, -334, 21, -334,
				-336, -335, 5, 1, 87, 518, 85, 826, 86, -419,
				14, -419, 25, -419, -106, 823, 3, 2, 86, 27,
				14, 28, 25, 821, -121, 824, -132, 819, 66, 41,
				86, 27, 14, 28, 57, 43, 18, 142, 59, 148,
				60, 153, 131, 136, 118, 225, 122, 228, 119, 286,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 121, 226, 120, 227, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 84, 372, 103, 291, 98, 300, 43, 335,
				58, 321, 51, 342, 23, 362, 24, 374, 30, 380,
				31, 387, 28, 395, 32, 406, 96, 416, 95, 423,
				19, 430, 15, 440, 16, 446, 17, 451, 93, 457,
				44, 465, 147, 498, 64, 501, 65, 504, 148, 507,
				42, 525, 33, 539, 34, 541, 35, 544, 36, 545,
				89, 591, 2, 598, 20, -529, 27, -529, 21, -529,
				22, -529, -4, 825, -108, 4, -109, 5, -132, 26,
				-3, 29, -2, 31, -10, 42, -68, 158, -11, 352,
				-14, 353, -13, 354, -27, 18, -29, 19, -69, 34,
				-12, 355, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-70, 371, -25, 345, -18, 394, -22, 415, -23, 439,
				-28, 483, -26, 484, -19, 509, -105, 510, -104, 520,
				-7, 523, -8, 524, -9, 543, -99, 546, -100, 547,
				-102, 589, -103, 556, -418, 45, 18, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 577, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 840, 103,
				291, 98, 300, 43, 308, 58, 584, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, -105, 827, -70,
				828, -12, 829, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 839, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -420, 6, 0, 86, -98, 14, -98,
				25, -98, 104, -466, 83, -466, 88, -466, 3, 0,
				104, 830, 83, 833, 88, 836, 54, 28, 118, 225,
				121, 226, 120, 227, 122, 228, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 131, 136, 119, 286, 84, 287,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 64, 501,
				65, 504, 147, 506, 148, 507, 89, 515, 125, 532,
				90, 534, 14, -258, 105, -258, -43, 831, -42, 471,
				-20, 316, -19, 334, -105, 218, -70, 224, -12, 326,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 34, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, -21, 527, -51, 528, -52, 536, -33, 537,
				-29, 538, 2, 2, 14, 314, 105, -531, -113, 832,
				-114, 562, 8, 0, 86, -99, 14, -99, 25, -99,
				99, -403, 38, -403, 104, -403, 83, -403, 88, -403,
				33, 4, 122, 834, 118, 835, 119, 571, 139, 52,
				140, 53, 91, 54, 67, 55, 68, 56, 69, 57,
				75, 58, 76, 59, 137, 60, 71, 61, 138, 62,
				72, 63, 70, 64, 81, 65, 82, 66, 141, 67,
				142, 68, 143, 69, 89, 70, 144, 71, 145, 72,
				66, 73, 147, 74, 148, 75, 64, 76, 65, 77,
				79, 78, 80, 79, 92, 80, 94, 468, -72, 566,
				-73, 568, -40, 569, -75, 572, 7, 0, 104, -286,
				83, -286, 88, -286, 86, -103, 14, -103, 25, -103,
				94, -521, 9, 0, 86, -101, 14, -101, 25, -101,
				94, -520, 99, -524, 38, -524, 104, -524, 83, -524,
				88, -524, 33, 3, 118, 837, 122, 838, 119, 492,
				139, 52, 140, 53, 91, 54, 67, 55, 68, 56,
				69, 57, 75, 58, 76, 59, 137, 60, 71, 61,
				138, 62, 72, 63, 70, 64, 81, 65, 82, 66,
				141, 67, 142, 68, 143, 69, 89, 70, 144, 71,
				145, 72, 66, 73, 147, 74, 148, 75, 64, 76,
				65, 77, 79, 78, 80, 79, 92, 80, 94, 468,
				-72, 574, -40, 357, -75, 493, 9, 0, 86, -100,
				14, -100, 25, -100, 94, -520, 99, -520, 38, -520,
				104, -520, 83, -520, 88, -520, 9, 0, 86, -102,
				14, -102, 25, -102, 94, -521, 99, -521, 38, -521,
				104, -521, 83, -521, 88, -521, 6, 0, 104, -284,
				83, -284, 88, -284, 86, -105, 14, -105, 25, -105,
				1, 0, 122, 841, 6, 0, 104, -287, 83, -287,
				88, -287, 86, -104, 14, -104, 25, -104, 31, 0,
				141, 162, 142, 164, 143, 166, 144, 168, 145, 170,
				66, 172, 139, 174, 140, 176, 91, 178, 67, 180,
				137, 182, 71, 184, 138, 186, 72, 188, 68, 190,
				69, 192, 70, 194, 75, 196, 76, 198, 81, 200,
				82, 202, 73, 204, 74, 206, 77, 208, 78, 210,
				135, 212, 87, -271, 86, -271, 14, -271, 25, -271,
				85, -271, -415, -337, -338, -343, 5, 0, 37, -98,
				104, -466, 83, -466, 88, -466, 87, -90, 3, 0,
				104, 849, 83, 852, 88, 855, 54, 28, 118, 225,
				121, 226, 120, 227, 122, 228, 123, 229, 46, 230,
				45, 231, 47, 232, 48, 233, 62, 234, 61, 235,
				63, 236, 128, 244, 129, 245, 130, 246, 146, 247,
				116, 126, 126, 257, 111, 254, 113, 260, 112, 264,
				114, 268, 115, 277, 131, 136, 119, 286, 84, 287,
				103, 291, 98, 300, 43, 335, 58, 321, 51, 337,
				23, 362, 24, 374, 30, 380, 31, 387, 28, 395,
				32, 406, 96, 416, 95, 420, 19, 430, 15, 440,
				16, 446, 17, 451, 93, 457, 44, 465, 64, 501,
				65, 504, 147, 506, 148, 507, 89, 515, 125, 532,
				90, 534, 14, -258, 105, -258, -43, 850, -42, 471,
				-20, 316, -19, 334, -105, 218, -70, 224, -12, 326,
				-65, 243, -66, 251, -57, 252, -56, 258, -58, 259,
				-64, 263, -62, 267, -63, 276, -16, 283, -68, 284,
				-69, 34, -25, 345, -18, 394, -22, 415, -23, 439,
				-104, 472, -21, 527, -51, 528, -52, 536, -33, 537,
				-29, 538, 2, 2, 14, 314, 105, -531, -113, 851,
				-114, 562, 7, 0, 37, -99, 99, -403, 38, -403,
				104, -403, 83, -403, 88, -403, 87, -91, 33, 4,
				122, 853, 118, 854, 119, 571, 139, 52, 140, 53,
				91, 54, 67, 55, 68, 56, 69, 57, 75, 58,
				76, 59, 137, 60, 71, 61, 138, 62, 72, 63,
				70, 64, 81, 65, 82, 66, 141, 67, 142, 68,
				143, 69, 89, 70, 144, 71, 145, 72, 66, 73,
				147, 74, 148, 75, 64, 76, 65, 77, 79, 78,
				80, 79, 92, 80, 94, 468, -72, 566, -73, 568,
				-40, 569, -75, 572, 6, 0, 104, -286, 83, -286,
				88, -286, 37, -103, 87, -95, 94, -521, 8, 0,
				37, -101, 87, -93, 94, -520, 99, -524, 38, -524,
				104, -524, 83, -524, 88, -524, 33, 3, 118, 856,
				122, 857, 119, 492, 139, 52, 140, 53, 91, 54,
				67, 55, 68, 56, 69, 57, 75, 58, 76, 59,
				137, 60, 71, 61, 138, 62, 72, 63, 70, 64,
				81, 65, 82, 66, 141, 67, 142, 68, 143, 69,
				89, 70, 144, 71, 145, 72, 66, 73, 147, 74,
				148, 75, 64, 76, 65, 77, 79, 78, 80, 79,
				92, 80, 94, 468, -72, 574, -40, 357, -75, 493,
				8, 0, 37, -100, 87, -92, 94, -520, 99, -520,
				38, -520, 104, -520, 83, -520, 88, -520, 8, 0,
				37, -102, 87, -94, 94, -521, 99, -521, 38, -521,
				104, -521, 83, -521, 88, -521, 5, 0, 104, -284,
				83, -284, 88, -284, 37, -105, 87, -97, 1, 0,
				122, 860, 5, 0, 104, -287, 83, -287, 88, -287,
				37, -104, 87, -96, -344, -410, 2, 0, 86, 6,
				29, -530, 1, 2, 29, 402, -49, 865, -50, 862,
				3, 2, 27, 369, 29, 402, 22, -341, -30, 866,
				-50, 401, 1, 0, 22, 867, -333, 49, 25, 118,
				225, 122, 228, 119, 286, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 121, 226, 120,
				227, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 131, 136, 84,
				287, 103, 291, 98, 300, 43, 335, 58, 321, 51,
				342, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 465, 147,
				498, 64, 501, 65, 504, 148, 507, -13, 869, -27,
				18, -29, 19, -69, 34, -12, 326, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -70, 224, -68, 284, -25,
				345, -18, 394, -22, 415, -23, 439, -28, 483, -26,
				484, -19, 509, -105, 218, -104, 472, 5, 2, 49,
				13, 50, 15, 86, 27, 14, 28, 25, 821, -121,
				870, -132, 819, 65, 41, 86, 27, 14, 28, 57,
				43, 18, 142, 59, 148, 60, 153, 131, 136, 118,
				225, 122, 228, 119, 286, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 121, 226, 120,
				227, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 84, 372, 103,
				291, 98, 300, 43, 335, 58, 321, 51, 342, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 423, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 465, 147, 498, 64,
				501, 65, 504, 148, 507, 42, 525, 33, 539, 34,
				541, 35, 544, 36, 545, 89, 591, 2, 598, 27,
				-529, 26, -529, 22, -529, -4, 871, -108, 4, -109,
				5, -132, 26, -3, 29, -2, 31, -10, 42, -68,
				158, -11, 352, -14, 353, -13, 354, -27, 18, -29,
				19, -69, 34, -12, 355, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -70, 371, -25, 345, -18, 394, -22,
				415, -23, 439, -28, 483, -26, 484, -19, 509, -105,
				510, -104, 520, -7, 523, -8, 524, -9, 543, -99,
				546, -100, 547, -102, 589, -103, 556, 3, 2, 27,
				369, 26, 868, 22, -341, -31, 872, -30, 368, -340,
				106, 0, 124, 874, 134, -102, 87, -94, 94, -521,
				118, -521, 121, -521, 120, -521, 122, -521, 123, -521,
				46, -521, 45, -521, 47, -521, 48, -521, 62, -521,
				61, -521, 63, -521, 128, -521, 129, -521, 130, -521,
				146, -521, 116, -521, 126, -521, 111, -521, 113, -521,
				112, -521, 114, -521, 115, -521, 131, -521, 119, -521,
				84, -521, 103, -521, 98, -521, 43, -521, 58, -521,
				51, -521, 23, -521, 24, -521, 30, -521, 31, -521,
				28, -521, 32, -521, 96, -521, 95, -521, 19, -521,
				15, -521, 16, -521, 17, -521, 93, -521, 44, -521,
				64, -521, 65, -521, 147, -521, 148, -521, 89, -521,
				125, -521, 90, -521, 99, -521, 38, -521, 88, -521,
				83, -521, 104, -521, 141, -521, 142, -521, 143, -521,
				144, -521, 145, -521, 66, -521, 139, -521, 140, -521,
				91, -521, 67, -521, 137, -521, 71, -521, 138, -521,
				72, -521, 68, -521, 69, -521, 70, -521, 75, -521,
				76, -521, 81, -521, 82, -521, 73, -521, 74, -521,
				77, -521, 78, -521, 135, -521, 49, -521, 50, -521,
				52, -521, 53, -521, 54, -521, 55, -521, 56, -521,
				86, -521, 14, -521, 3, -521, 22, -521, 102, -521,
				108, -521, 27, -521, 26, -521, 21, -521, 29, -521,
				97, -521, 20, -521, 49, 24, 118, 225, 121, 226,
				120, 227, 122, 228, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 131, 136, 119, 286, 84, 287, 103, 291,
				98, 300, 43, 335, 58, 321, 51, 337, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 465, 64, 501, 65, 504,
				147, 506, 148, 507, -19, 875, -27, 876, -105, 218,
				-70, 224, -12, 326, -65, 243, -66, 251, -57, 252,
				-56, 258, -58, 259, -64, 263, -62, 267, -63, 276,
				-16, 283, -68, 284, -69, 34, -25, 345, -18, 394,
				-22, 415, -23, 439, -104, 472, -29, 19, -28, 483,
				-26, 484, 55, 0, 141, 162, 142, 164, 143, 166,
				144, 168, 145, 170, 66, 172, 139, 174, 140, 176,
				91, 178, 67, 180, 137, 182, 71, 184, 138, 186,
				72, 188, 68, 190, 69, 192, 70, 194, 75, 196,
				76, 198, 81, 200, 82, 202, 73, 204, 74, 206,
				77, 208, 78, 210, 135, 212, 49, -206, 50, -206,
				52, -206, 53, -206, 54, -206, 55, -206, 56, -206,
				86, -206, 14, -206, 3, -206, 22, -206, 102, -206,
				108, -206, 27, -206, 26, -206, 21, -206, 29, -206,
				97, -206, 20, -206, 25, -206, 39, -206, 136, -206,
				85, -206, 87, -206, 105, -206, 100, -206, 40, -206,
				101, -206, 41, -206, -39, 33, 4, 122, 878, 118,
				885, 119, 571, 139, 52, 140, 53, 91, 54, 67,
				55, 68, 56, 69, 57, 75, 58, 76, 59, 137,
				60, 71, 61, 138, 62, 72, 63, 70, 64, 81,
				65, 82, 66, 141, 67, 142, 68, 143, 69, 89,
				70, 144, 71, 145, 72, 66, 73, 147, 74, 148,
				75, 64, 76, 65, 77, 79, 78, 80, 79, 92,
				80, 94, 468, -72, 882, -73, 568, -40, 569, -75,
				572, 104, 0, 124, 879, 88, -286, 83, -286, 104,
				-286, 141, -286, 142, -286, 143, -286, 144, -286, 145,
				-286, 66, -286, 139, -286, 140, -286, 91, -286, 67,
				-286, 137, -286, 71, -286, 138, -286, 72, -286, 68,
				-286, 69, -286, 70, -286, 75, -286, 76, -286, 81,
				-286, 82, -286, 73, -286, 74, -286, 77, -286, 78,
				-286, 135, -286, 49, -286, 50, -286, 52, -286, 53,
				-286, 54, -286, 55, -286, 56, -286, 86, -286, 14,
				-286, 3, -286, 22, -286, 102, -286, 108, -286, 27,
				-286, 26, -286, 21, -286, 29, -286, 97, -286, 20,
				-286, 134, -103, 87, -95, 94, -521, 118, -521, 121,
				-521, 120, -521, 122, -521, 123, -521, 46, -521, 45,
				-521, 47, -521, 48, -521, 62, -521, 61, -521, 63,
				-521, 128, -521, 129, -521, 130, -521, 146, -521, 116,
				-521, 126, -521, 111, -521, 113, -521, 112, -521, 114,
				-521, 115, -521, 131, -521, 119, -521, 84, -521, 103,
				-521, 98, -521, 43, -521, 58, -521, 51, -521, 23,
				-521, 24, -521, 30, -521, 31, -521, 28, -521, 32,
				-521, 96, -521, 95, -521, 19, -521, 15, -521, 16,
				-521, 17, -521, 93, -521, 44, -521, 64, -521, 65,
				-521, 147, -521, 148, -521, 89, -521, 125, -521, 90,
				-521, 49, 24, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				335, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 465, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 880, -27, 881, -105, 218, -70, 224, -12,
				326, -65, 243, -66, 251, -57, 252, -56, 258, -58,
				259, -64, 263, -62, 267, -63, 276, -16, 283, -68,
				284, -69, 34, -25, 345, -18, 394, -22, 415, -23,
				439, -104, 472, -29, 19, -28, 483, -26, 484, 55,
				0, 141, 162, 142, 164, 143, 166, 144, 168, 145,
				170, 66, 172, 139, 174, 140, 176, 91, 178, 67,
				180, 137, 182, 71, 184, 138, 186, 72, 188, 68,
				190, 69, 192, 70, 194, 75, 196, 76, 198, 81,
				200, 82, 202, 73, 204, 74, 206, 77, 208, 78,
				210, 135, 212, 49, -208, 50, -208, 52, -208, 53,
				-208, 54, -208, 55, -208, 56, -208, 86, -208, 14,
				-208, 3, -208, 22, -208, 102, -208, 108, -208, 27,
				-208, 26, -208, 21, -208, 29, -208, 97, -208, 20,
				-208, 25, -208, 39, -208, 136, -208, 85, -208, 87,
				-208, 105, -208, 100, -208, 40, -208, 101, -208, 41,
				-208, -40, 53, 3, 94, 468, 118, -265, 121, -265,
				120, -265, 122, -265, 123, -265, 46, -265, 45, -265,
				47, -265, 48, -265, 62, -265, 61, -265, 63, -265,
				128, -265, 129, -265, 130, -265, 146, -265, 116, -265,
				126, -265, 111, -265, 113, -265, 112, -265, 114, -265,
				115, -265, 131, -265, 119, -265, 84, -265, 103, -265,
				98, -265, 43, -265, 58, -265, 51, -265, 23, -265,
				24, -265, 30, -265, 31, -265, 28, -265, 32, -265,
				96, -265, 95, -265, 19, -265, 15, -265, 16, -265,
				17, -265, 93, -265, 44, -265, 64, -265, 65, -265,
				147, -265, 148, -265, 89, -265, 125, -265, 90, -265,
				-40, 567, -44, 883, -120, 332, 24, 1, 100, 37,
				40, -69, 49, -69, 50, -69, 52, -69, 53, -69,
				54, -69, 55, -69, 56, -69, 86, -69, 14, -69,
				3, -69, 22, -69, 102, -69, 108, -69, 27, -69,
				26, -69, 21, -69, 29, -69, 97, -69, 20, -69,
				25, -69, 39, -69, 105, -69, -35, 884, -70, 106,
				0, 124, 886, 134, -101, 87, -93, 94, -520, 118,
				-520, 121, -520, 120, -520, 122, -520, 123, -520, 46,
				-520, 45, -520, 47, -520, 48, -520, 62, -520, 61,
				-520, 63, -520, 128, -520, 129, -520, 130, -520, 146,
				-520, 116, -520, 126, -520, 111, -520, 113, -520, 112,
				-520, 114, -520, 115, -520, 131, -520, 119, -520, 84,
				-520, 103, -520, 98, -520, 43, -520, 58, -520, 51,
				-520, 23, -520, 24, -520, 30, -520, 31, -520, 28,
				-520, 32, -520, 96, -520, 95, -520, 19, -520, 15,
				-520, 16, -520, 17, -520, 93, -520, 44, -520, 64,
				-520, 65, -520, 147, -520, 148, -520, 89, -520, 125,
				-520, 90, -520, 99, -524, 38, -524, 88, -524, 83,
				-524, 104, -524, 141, -524, 142, -524, 143, -524, 144,
				-524, 145, -524, 66, -524, 139, -524, 140, -524, 91,
				-524, 67, -524, 137, -524, 71, -524, 138, -524, 72,
				-524, 68, -524, 69, -524, 70, -524, 75, -524, 76,
				-524, 81, -524, 82, -524, 73, -524, 74, -524, 77,
				-524, 78, -524, 135, -524, 49, -524, 50, -524, 52,
				-524, 53, -524, 54, -524, 55, -524, 56, -524, 86,
				-524, 14, -524, 3, -524, 22, -524, 102, -524, 108,
				-524, 27, -524, 26, -524, 21, -524, 29, -524, 97,
				-524, 20, -524, 49, 24, 118, 225, 121, 226, 120,
				227, 122, 228, 123, 229, 46, 230, 45, 231, 47,
				232, 48, 233, 62, 234, 61, 235, 63, 236, 128,
				244, 129, 245, 130, 246, 146, 247, 116, 126, 126,
				257, 111, 254, 113, 260, 112, 264, 114, 268, 115,
				277, 131, 136, 119, 286, 84, 287, 103, 291, 98,
				300, 43, 335, 58, 321, 51, 337, 23, 362, 24,
				374, 30, 380, 31, 387, 28, 395, 32, 406, 96,
				416, 95, 420, 19, 430, 15, 440, 16, 446, 17,
				451, 93, 457, 44, 465, 64, 501, 65, 504, 147,
				506, 148, 507, -19, 887, -27, 888, -105, 218, -70,
				224, -12, 326, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 34, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, -29, 19, -28, 483, -26,
				484, 55, 0, 141, 162, 142, 164, 143, 166, 144,
				168, 145, 170, 66, 172, 139, 174, 140, 176, 91,
				178, 67, 180, 137, 182, 71, 184, 138, 186, 72,
				188, 68, 190, 69, 192, 70, 194, 75, 196, 76,
				198, 81, 200, 82, 202, 73, 204, 74, 206, 77,
				208, 78, 210, 135, 212, 49, -207, 50, -207, 52,
				-207, 53, -207, 54, -207, 55, -207, 56, -207, 86,
				-207, 14, -207, 3, -207, 22, -207, 102, -207, 108,
				-207, 27, -207, 26, -207, 21, -207, 29, -207, 97,
				-207, 20, -207, 25, -207, 39, -207, 136, -207, 85,
				-207, 87, -207, 105, -207, 100, -207, 40, -207, 101,
				-207, 41, -207, -41, 54, 28, 118, 225, 121, 226,
				120, 227, 122, 228, 123, 229, 46, 230, 45, 231,
				47, 232, 48, 233, 62, 234, 61, 235, 63, 236,
				128, 244, 129, 245, 130, 246, 146, 247, 116, 126,
				126, 257, 111, 254, 113, 260, 112, 264, 114, 268,
				115, 277, 131, 136, 119, 286, 84, 287, 103, 291,
				98, 300, 43, 335, 58, 321, 51, 337, 23, 362,
				24, 374, 30, 380, 31, 387, 28, 395, 32, 406,
				96, 416, 95, 420, 19, 430, 15, 440, 16, 446,
				17, 451, 93, 457, 44, 465, 64, 501, 65, 504,
				147, 506, 148, 507, 89, 515, 125, 532, 90, 534,
				14, -258, 105, -258, -43, 890, -42, 471, -20, 316,
				-19, 334, -105, 218, -70, 224, -12, 326, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 34,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				-21, 527, -51, 528, -52, 536, -33, 537, -29, 538,
				2, 2, 14, 314, 105, -531, -113, 891, -114, 562,
				53, 0, 124, 892, 99, -403, 38, -403, 88, -403,
				83, -403, 104, -403, 141, -403, 142, -403, 143, -403,
				144, -403, 145, -403, 66, -403, 139, -403, 140, -403,
				91, -403, 67, -403, 137, -403, 71, -403, 138, -403,
				72, -403, 68, -403, 69, -403, 70, -403, 75, -403,
				76, -403, 81, -403, 82, -403, 73, -403, 74, -403,
				77, -403, 78, -403, 135, -403, 49, -403, 50, -403,
				52, -403, 53, -403, 54, -403, 55, -403, 56, -403,
				86, -403, 14, -403, 3, -403, 22, -403, 102, -403,
				108, -403, 27, -403, 26, -403, 21, -403, 29, -403,
				97, -403, 20, -403, 134, -99, 87, -91, 49, 24,
				118, 225, 121, 226, 120, 227, 122, 228, 123, 229,
				46, 230, 45, 231, 47, 232, 48, 233, 62, 234,
				61, 235, 63, 236, 128, 244, 129, 245, 130, 246,
				146, 247, 116, 126, 126, 257, 111, 254, 113, 260,
				112, 264, 114, 268, 115, 277, 131, 136, 119, 286,
				84, 287, 103, 291, 98, 300, 43, 335, 58, 321,
				51, 337, 23, 362, 24, 374, 30, 380, 31, 387,
				28, 395, 32, 406, 96, 416, 95, 420, 19, 430,
				15, 440, 16, 446, 17, 451, 93, 457, 44, 465,
				64, 501, 65, 504, 147, 506, 148, 507, -19, 242,
				-27, 893, -105, 218, -70, 224, -12, 326, -65, 243,
				-66, 251, -57, 252, -56, 258, -58, 259, -64, 263,
				-62, 267, -63, 276, -16, 283, -68, 284, -69, 34,
				-25, 345, -18, 394, -22, 415, -23, 439, -104, 472,
				-29, 19, -28, 483, -26, 484, -37, 115, 0, 124,
				895, 134, -100, 94, -520, 118, -520, 121, -520, 120,
				-520, 122, -520, 123, -520, 46, -520, 45, -520, 47,
				-520, 48, -520, 62, -520, 61, -520, 63, -520, 128,
				-520, 129, -520, 130, -520, 146, -520, 116, -520, 126,
				-520, 111, -520, 113, -520, 112, -520, 114, -520, 115,
				-520, 131, -520, 119, -520, 84, -520, 103, -520, 98,
				-520, 43, -520, 58, -520, 51, -520, 23, -520, 24,
				-520, 30, -520, 31, -520, 28, -520, 32, -520, 96,
				-520, 95, -520, 19, -520, 15, -520, 16, -520, 17,
				-520, 93, -520, 44, -520, 64, -520, 65, -520, 147,
				-520, 148, -520, 89, -520, 125, -520, 90, -520, 99,
				-520, 38, -520, 88, -520, 83, -520, 104, -520, 141,
				-520, 142, -520, 143, -520, 144, -520, 145, -520, 66,
				-520, 139, -520, 140, -520, 91, -520, 67, -520, 137,
				-520, 71, -520, 138, -520, 72, -520, 68, -520, 69,
				-520, 70, -520, 75, -520, 76, -520, 81, -520, 82,
				-520, 73, -520, 74, -520, 77, -520, 78, -520, 135,
				-520, 49, -520, 50, -520, 52, -520, 53, -520, 54,
				-520, 55, -520, 56, -520, 86, -520, 14, -520, 3,
				-520, 22, -520, 102, -520, 108, -520, 27, -520, 26,
				-520, 21, -520, 29, -520, 97, -520, 20, -520, 25,
				-520, 39, -520, 85, -520, 87, -520, 105, -520, 100,
				-520, 40, -520, 136, -520, 101, -520, 41, -520, 49,
				20, 118, 225, 121, 226, 120, 227, 122, 228, 123,
				229, 46, 230, 45, 231, 47, 232, 48, 233, 62,
				234, 61, 235, 63, 236, 128, 244, 129, 245, 130,
				246, 146, 247, 116, 126, 126, 257, 111, 254, 113,
				260, 112, 264, 114, 268, 115, 277, 131, 136, 119,
				286, 84, 287, 103, 291, 98, 300, 43, 308, 58,
				321, 51, 337, 23, 362, 24, 374, 30, 380, 31,
				387, 28, 395, 32, 406, 96, 416, 95, 420, 19,
				430, 15, 440, 16, 446, 17, 451, 93, 457, 44,
				503, 64, 501, 65, 504, 147, 506, 148, 507, -19,
				360, -105, 218, -70, 224, -12, 237, -65, 243, -66,
				251, -57, 252, -56, 258, -58, 259, -64, 263, -62,
				267, -63, 276, -16, 283, -68, 284, -69, 475, -25,
				345, -18, 394, -22, 415, -23, 439, -104, 472, 115,
				0, 124, 897, 134, -102, 94, -521, 118, -521, 121,
				-521, 120, -521, 122, -521, 123, -521, 46, -521, 45,
				-521, 47, -521, 48, -521, 62, -521, 61, -521, 63,
				-521, 128, -521, 129, -521, 130, -521, 146, -521, 116,
				-521, 126, -521, 111, -521, 113, -521, 112, -521, 114,
				-521, 115, -521, 131, -521, 119, -521, 84, -521, 103,
				-521, 98, -521, 43, -521, 58, -521, 51, -521, 23,
				-521, 24, -521, 30, -521, 31, -521, 28, -521, 32,
				-521, 96, -521, 95, -521, 19, -521, 15, -521, 16,
				-521, 17, -521, 93, -521, 44, -521, 64, -521, 65,
				-521, 147, -521, 148, -521, 89, -521, 125, -521, 90,
				-521, 99, -521, 38, -521, 88, -521, 83, -521, 104,
				-521, 141, -521, 142, -521, 143, -521, 144, -521, 145,
				-521, 66, -521, 139, -521, 140, -521, 91, -521, 67,
				-521, 137, -521, 71, -521, 138, -521, 72, -521, 68,
				-521, 69, -521, 70, -521, 75, -521, 76, -521, 81,
				-521, 82, -521, 73, -521, 74, -521, 77, -521, 78,
				-521, 135, -521, 49, -521, 50, -521, 52, -521, 53,
				-521, 54, -521, 55, -521, 56, -521, 86, -521, 14,
				-521, 3, -521, 22, -521, 102, -521, 108, -521, 27,
				-521, 26, -521, 21, -521, 29, -521, 97, -521, 20,
				-521, 25, -521, 39, -521, 85, -521, 87, -521, 105,
				-521, 100, -521, 40, -521, 136, -521, 101, -521, 41,
				-521, 49, 20, 118, 225, 121, 226, 120, 227, 122,
				228, 123, 229, 46, 230, 45, 231, 47, 232, 48,
				233, 62, 234, 61, 235, 63, 236, 128, 244, 129,
				245, 130, 246, 146, 247, 116, 126, 126, 257, 111,
				254, 113, 260, 112, 264, 114, 268, 115, 277, 131,
				136, 119, 286, 84, 287, 103, 291, 98, 300, 43,
				308, 58, 321, 51, 337, 23, 362, 24, 374, 30,
				380, 31, 387, 28, 395, 32, 406, 96, 416, 95,
				420, 19, 430, 15, 440, 16, 446, 17, 451, 93,
				457, 44, 503, 64, 501, 65, 504, 147, 506, 148,
				507, -19, 875, -105, 218, -70, 224, -12, 237, -65,
				243, -66, 251, -57, 252, -56, 258, -58, 259, -64,
				263, -62, 267, -63, 276, -16, 283, -68, 284, -69,
				475, -25, 345, -18, 394, -22, 415, -23, 439, -104,
				472, 33, 4, 122, 899, 118, 901, 119, 571, 139,
				52, 140, 53, 91, 54, 67, 55, 68, 56, 69,
				57, 75, 58, 76, 59, 137, 60, 71, 61, 138,
				62, 72, 63, 70, 64, 81, 65, 82, 66, 141,
				67, 142, 68, 143, 69, 89, 70, 144, 71, 145,
				72, 66, 73, 147, 74, 148, 75, 64, 76, 65,
				77, 79, 78, 80, 79, 92, 80, 94, 468, -72,
				882, -73, 568, -40, 569, -75, 572, 113, 0, 124,
				900, 88, -286, 83, -286, 104, -286, 141, -286, 142,
				-286, 143, -286, 144, -286, 145, -286, 66, -286, 139,
				-286, 140, -286, 91, -286, 67, -286, 137, -286, 71,
				-286, 138, -286, 72, -286, 68, -286, 69, -286, 70,
				-286, 75, -286, 76, -286, 81, -286, 82, -286, 73,
				-286, 74, -286, 77, -286, 78, -286, 135, -286, 49,
				-286, 50, -286, 52, -286, 53, -286, 54, -286, 55,
				-286, 56, -286, 86, -286, 14, -286, 3, -286, 22,
				-286, 102, -286, 108, -286, 27, -286, 26, -286, 21,
				-286, 29, -286, 97, -286, 20, -286, 25, -286, 39,
				-286, 136, -286, 85, -286, 87, -286, 105, -286, 100,
				-286, 40, -286, 101, -286, 41, -286, 134, -103, 94,
				-521, 118, -521, 121, -521, 120, -521, 122, -521, 123,
				-521, 46, -521, 45, -521, 47, -521, 48, -521, 62,
				-521, 61, -521, 63, -521, 128, -521, 129, -521, 130,
				-521, 146, -521, 116, -521, 126, -521, 111, -521, 113,
				-521, 112, -521, 114, -521, 115, -521, 131, -521, 119,
				-521, 84, -521, 103, -521, 98, -521, 43, -521, 58,
				-521, 51, -521, 23, -521, 24, -521, 30, -521, 31,
				-521, 28, -521, 32, -521, 96, -521, 95, -521, 19,
				-521, 15, -521, 16, -521, 17, -521, 93, -521, 44,
				-521, 64, -521, 65, -521, 147, -521, 148, -521, 89,
				-521, 125, -521, 90, -521, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 880, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 115, 0, 124, 902, 134,
				-101, 94, -520, 118, -520, 121, -520, 120, -520, 122,
				-520, 123, -520, 46, -520, 45, -520, 47, -520, 48,
				-520, 62, -520, 61, -520, 63, -520, 128, -520, 129,
				-520, 130, -520, 146, -520, 116, -520, 126, -520, 111,
				-520, 113, -520, 112, -520, 114, -520, 115, -520, 131,
				-520, 119, -520, 84, -520, 103, -520, 98, -520, 43,
				-520, 58, -520, 51, -520, 23, -520, 24, -520, 30,
				-520, 31, -520, 28, -520, 32, -520, 96, -520, 95,
				-520, 19, -520, 15, -520, 16, -520, 17, -520, 93,
				-520, 44, -520, 64, -520, 65, -520, 147, -520, 148,
				-520, 89, -520, 125, -520, 90, -520, 99, -524, 38,
				-524, 88, -524, 83, -524, 104, -524, 141, -524, 142,
				-524, 143, -524, 144, -524, 145, -524, 66, -524, 139,
				-524, 140, -524, 91, -524, 67, -524, 137, -524, 71,
				-524, 138, -524, 72, -524, 68, -524, 69, -524, 70,
				-524, 75, -524, 76, -524, 81, -524, 82, -524, 73,
				-524, 74, -524, 77, -524, 78, -524, 135, -524, 49,
				-524, 50, -524, 52, -524, 53, -524, 54, -524, 55,
				-524, 56, -524, 86, -524, 14, -524, 3, -524, 22,
				-524, 102, -524, 108, -524, 27, -524, 26, -524, 21,
				-524, 29, -524, 97, -524, 20, -524, 25, -524, 39,
				-524, 85, -524, 87, -524, 105, -524, 100, -524, 40,
				-524, 136, -524, 101, -524, 41, -524, 49, 20, 118,
				225, 121, 226, 120, 227, 122, 228, 123, 229, 46,
				230, 45, 231, 47, 232, 48, 233, 62, 234, 61,
				235, 63, 236, 128, 244, 129, 245, 130, 246, 146,
				247, 116, 126, 126, 257, 111, 254, 113, 260, 112,
				264, 114, 268, 115, 277, 131, 136, 119, 286, 84,
				287, 103, 291, 98, 300, 43, 308, 58, 321, 51,
				337, 23, 362, 24, 374, 30, 380, 31, 387, 28,
				395, 32, 406, 96, 416, 95, 420, 19, 430, 15,
				440, 16, 446, 17, 451, 93, 457, 44, 503, 64,
				501, 65, 504, 147, 506, 148, 507, -19, 887, -105,
				218, -70, 224, -12, 237, -65, 243, -66, 251, -57,
				252, -56, 258, -58, 259, -64, 263, -62, 267, -63,
				276, -16, 283, -68, 284, -69, 475, -25, 345, -18,
				394, -22, 415, -23, 439, -104, 472, 55, 0, 141,
				162, 142, 164, 143, 166, 144, 168, 145, 170, 66,
				172, 139, 174, 140, 176, 91, 178, 67, 180, 137,
				182, 71, 184, 138, 186, 72, 188, 68, 190, 69,
				192, 70, 194, 75, 196, 76, 198, 81, 200, 82,
				202, 73, 204, 74, 206, 77, 208, 78, 210, 135,
				212, 49, -245, 50, -245, 52, -245, 53, -245, 54,
				-245, 55, -245, 56, -245, 86, -245, 14, -245, 3,
				-245, 22, -245, 102, -245, 108, -245, 27, -245, 26,
				-245, 21, -245, 29, -245, 97, -245, 20, -245, 25,
				-245, 39, -245, 136, -245, 85, -245, 87, -245, 105,
				-245, 100, -245, 40, -245, 101, -245, 41, -245, 25,
				1, 87, 530, 14, -270, 105, -270, 97, -270, 100,
				-270, 40, -270, 49, -270, 50, -270, 52, -270, 53,
				-270, 54, -270, 55, -270, 56, -270, 86, -270, 3,
				-270, 22, -270, 102, -270, 108, -270, 27, -270, 26,
				-270, 21, -270, 29, -270, 20, -270, 25, -270, 39,
				-270, -34, 905, -261, -536, 3, 1, 87, 305, 14,
				906, 105, -535, -119, 908, -253, 3, 1, 87, 305,
				14, 906, 105, -535, -119, 910, -254, 58, 0, 66,
				912, 88, -452, 83, -452, 104, -452, 141, -452, 142,
				-452, 143, -452, 144, -452, 145, -452, 139, -452, 140,
				-452, 91, -452, 67, -452, 137, -452, 71, -452, 138,
				-452, 72, -452, 68, -452, 69, -452, 70, -452, 75,
				-452, 76, -452, 81, -452, 82, -452, 73, -452, 74,
				-452, 77, -452, 78, -452, 135, -452, 49, -452, 50,
				-452, 52, -452, 53, -452, 54, -452, 55, -452, 56,
				-452, 86, -452, 14, -452, 3, -452, 22, -452, 102,
				-452, 108, -452, 27, -452, 26, -452, 21, -452, 29,
				-452, 97, -452, 20, -452, 25, -452, 39, -452, 136,
				-452, 85, -452, 87, -452, 105, -452, 100, -452, 40,
				-452, 101, -452, 41, -452, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 913, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, -218, 142,
				-218, 143, -218, 144, -218, 145, -218, 66, 172, 139,
				-218, 140, -218, 91, -218, 67, -218, 137, -218, 71,
				-218, 138, -218, 72, -218, 68, -218, 69, -218, 70,
				-218, 75, -218, 76, -218, 81, -218, 82, -218, 73,
				-218, 74, -218, 77, -218, 78, -218, 135, -218, 49,
				-218, 50, -218, 52, -218, 53, -218, 54, -218, 55,
				-218, 56, -218, 86, -218, 14, -218, 3, -218, 22,
				-218, 102, -218, 108, -218, 27, -218, 26, -218, 21,
				-218, 29, -218, 97, -218, 20, -218, 25, -218, 39,
				-218, 136, -218, 85, -218, 87, -218, 105, -218, 100,
				-218, 40, -218, 101, -218, 41, -218, 58, 0, 66,
				915, 88, -453, 83, -453, 104, -453, 141, -453, 142,
				-453, 143, -453, 144, -453, 145, -453, 139, -453, 140,
				-453, 91, -453, 67, -453, 137, -453, 71, -453, 138,
				-453, 72, -453, 68, -453, 69, -453, 70, -453, 75,
				-453, 76, -453, 81, -453, 82, -453, 73, -453, 74,
				-453, 77, -453, 78, -453, 135, -453, 49, -453, 50,
				-453, 52, -453, 53, -453, 54, -453, 55, -453, 56,
				-453, 86, -453, 14, -453, 3, -453, 22, -453, 102,
				-453, 108, -453, 27, -453, 26, -453, 21, -453, 29,
				-453, 97, -453, 20, -453, 25, -453, 39, -453, 136,
				-453, 85, -453, 87, -453, 105, -453, 100, -453, 40,
				-453, 101, -453, 41, -453, 49, 20, 118, 225, 121,
				226, 120, 227, 122, 228, 123, 229, 46, 230, 45,
				231, 47, 232, 48, 233, 62, 234, 61, 235, 63,
				236, 128, 244, 129, 245, 130, 246, 146, 247, 116,
				126, 126, 257, 111, 254, 113, 260, 112, 264, 114,
				268, 115, 277, 131, 136, 119, 286, 84, 287, 103,
				291, 98, 300, 43, 308, 58, 321, 51, 337, 23,
				362, 24, 374, 30, 380, 31, 387, 28, 395, 32,
				406, 96, 416, 95, 420, 19, 430, 15, 440, 16,
				446, 17, 451, 93, 457, 44, 503, 64, 501, 65,
				504, 147, 506, 148, 507, -19, 916, -105, 218, -70,
				224, -12, 237, -65, 243, -66, 251, -57, 252, -56,
				258, -58, 259, -64, 263, -62, 267, -63, 276, -16,
				283, -68, 284, -69, 475, -25, 345, -18, 394, -22,
				415, -23, 439, -104, 472, 55, 0, 141, -219, 142,
				-219, 143, -219, 144, -219, 145, -219, 66, 172, 139,
				-219, 140, -219, 91, -219, 67, -219, 137, -219, 71,
				-219, 138, -219, 72, -219, 68, -219, 69, -219, 70,
				-219, 75, -219, 76, -219, 81, -219, 82, -219, 73,
				-219, 74, -219, 77, -219, 78, -219, 135, -219, 49,
				-219, 50, -219, 52, -219, 53, -219, 54, -219, 55,
				-219, 56, -219, 86, -219, 14, -219, 3, -219, 22,
				-219, 102, -219, 108, -219, 27, -219, 26, -219, 21,
				-219, 29, -219, 97, -219, 20, -219, 25, -219, 39,
				-219, 136, -219, 85, -219, 87, -219, 105, -219, 100,
				-219, 40, -219, 101, -219, 41, -219, 33, 4, 122,
				899, 118, 901, 119, 571, 139, 52, 140, 53, 91,
				54, 67, 55, 68, 56, 69, 57, 75, 58, 76,
				59, 137, 60, 71, 61, 138, 62, 72, 63, 70,
				64, 81, 65, 82, 66, 141, 67, 142, 68, 143,
				69, 89, 70, 144, 71, 145, 72, 66, 73, 147,
				74, 148, 75, 64, 76, 65, 77, 79, 78, 80,
				79, 92, 80, 94, 468, -72, 566, -73, 568, -40,
				569, -75, 572, 33, 3, 118, 894, 122, 896, 119,
				492, 139, 52, 140, 53, 91, 54, 67, 55, 68,
				56, 69, 57, 75, 58, 76, 59, 137, 60, 71,
				61, 138, 62, 72, 63, 70, 64, 81, 65, 82,
				66, 141, 67, 142, 68, 143, 69, 89, 70, 144,
				71, 145, 72, 66, 73, 147, 74, 148, 75, 64,
				76, 65, 77, 79, 78, 80, 79, 92, 80, 94,
				468, -72, 574, -40, 357, -75, 493, -27, -28, -29,
				2, 1, 14, 314, 136, -531, -114, 923, 1, 0,
				136, 924, 54, 21, 118, 225, 121, 226, 120, 227,
				122, 228, 123, 229, 46, 230, 45, 231, 47, 232,
				48, 233, 62, 234, 61, 235, 63, 236, 128, 244,
				129, 245, 130, 246, 146, 247, 116, 126, 126, 257,
				111, 254, 113, 260, 112, 264, 114, 268, 115, 277,
				131, 136, 119, 286, 84, 287, 103, 291, 98, 300,
				43, 308, 58, 321, 51, 337, 23, 362, 24, 374,
				30, 380, 31, 387, 28, 395, 32, 406, 96, 416,
				95, 420, 19, 430, 15, 440, 16, 446, 17, 451,
				93, 457, 44, 503, 64, 501, 65, 504, 147, 506,
				148, 507, 42, 919, 33, 920, 34, 921, 35, 544,
				36, 545, -19, 925, -9, 926, -105, 218, -70, 224,
				-12, 237, -65, 243, -66, 251, -57, 252, -56, 258,
				-58, 259, -64, 263, -62, 267, -63, 276, -16, 283,
				-68, 284, -69, 475, -25, 345, -18, 394, -22, 415,
				-23, 439, -104, 472, 55, 0, 141, 162, 142, 164,
				143, 166, 144, 168, 145, 170, 66, 172, 139, 174,
				140, 176, 91, 178, 67, 180, 137, 182, 71, 184,
				138, 186, 72, 188, 68, 190, 69, 192, 70, 194,
				75, 196, 76, 198, 81, 200, 82, 202, 73, 204,
				74, 206, 77, 208, 78, 210, 135, 212, 49, -247,
				50, -247, 52, -247, 53, -247, 54, -247, 55, -247,
				56, -247, 86, -247, 14, -247, 3, -247, 22, -247,
				102, -247, 108, -247, 27, -247, 26, -247, 21, -247,
				29, -247, 97, -247, 20, -247, 25, -247, 39, -247,
				136, -247, 85, -247, 87, -247, 105, -247, 100, -247,
				40, -247, 101, -247, 41, -247, -249, -242, -241, -120,
				-121, -122, -123, -124, 2, 1, 120, 935, 131, 136,
				-68, 936, -20, -21, -53
			});
			tables.Rules = new int[541]
			{
				7012354, 65537, 262145, 262147, 262146, 196609, 196611, 196610, 131073, 131074,
				7208960, 131077, 7274496, 131077, 131075, 131073, 131073, 7340032, 655364, 655363,
				655363, 458753, 458753, 524290, 524290, 524290, 589825, 589825, 589825, 589825,
				589825, 917505, 917505, 917507, 917507, 917507, 917510, 917509, 917509, 917509,
				917509, 917507, 917507, 917507, 720899, 720899, 720899, 720899, 720899, 851969,
				851971, 851971, 851971, 851971, 851971, 851970, 851969, 1769473, 1769473, 1835009,
				1835012, 1835012, 7536640, 2293765, 1900546, 1900547, 1900548, 1900549, 1900548, 1900549,
				1900546, 1900546, 6488067, 6488065, 6488066, 6488067, 6488069, 6488066, 6488068, 6488068,
				6488067, 6488066, 6488065, 6553603, 6553602, 6619139, 6619137, 6684673, 6684675, 6750209,
				6750212, 6750211, 6750211, 6750211, 6750211, 6750210, 6750209, 6881281, 6881284, 6881283,
				6881283, 6881283, 6881283, 6881282, 6881281, 4849665, 4849665, 2949122, 2949121, 2949123,
				4980737, 4980737, 4980737, 4980737, 4980737, 4390913, 4390913, 4325378, 4325379, 4653057,
				4653057, 4653057, 4653057, 4653057, 2097153, 7733248, 2097156, 4915201, 4915201, 4915201,
				4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201,
				4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 4915201,
				4915201, 4915201, 4915201, 4915201, 4915201, 4915201, 7667713, 7667713, 7667713, 7667713,
				7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713,
				7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713,
				7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713,
				7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 7667713, 1245187,
				1245189, 1245189, 1245187, 1245190, 1245189, 1245189, 1245189, 1245189, 1245188, 1245187,
				1245187, 1245187, 1245187, 1245187, 1245187, 1245187, 1245188, 1245188, 1245188, 1245186,
				1245186, 1245187, 1245187, 1245187, 1245187, 1245187, 1245187, 1245187, 1245187, 1245187,
				1245187, 1245187, 1245187, 1245187, 1245186, 1245186, 1245187, 1245187, 1245187, 1245187,
				1245187, 1245187, 1245187, 1245187, 1245187, 1245190, 1245190, 1245190, 1245190, 1245185,
				2555904, 2555906, 2555908, 2555906, 2621443, 2686976, 2686977, 2818048, 2818049, 2752514,
				2752516, 2752514, 2752513, 2752513, 7864320, 2883586, 2162690, 2228226, 2228225, 2228224,
				1310721, 1310721, 1376258, 1376259, 1376260, 786433, 786433, 786433, 786433, 786433,
				786433, 786433, 786433, 786433, 786433, 786435, 786434, 786435, 786434, 786436,
				786436, 786435, 786433, 786437, 786436, 786435, 786434, 786433, 786434, 786438,
				786438, 7995392, 8126464, 786439, 8192000, 8257536, 786439, 786433, 8323072, 8388608,
				786441, 786433, 786433, 8454144, 1441796, 1441795, 1441795, 8519680, 1507334, 8585216,
				8716288, 1507336, 8781824, 1507333, 8847360, 1507334, 8978432, 9043968, 1507337, 1507330,
				1572868, 1179654, 1179653, 7929857, 7929857, 7929858, 8060929, 8060929, 2031617, 2031621,
				1966080, 1966082, 5832705, 5832705, 6225921, 6225923, 6422529, 6422531, 6160385, 6160388,
				6160387, 6160390, 6160389, 6160388, 6160387, 6160386, 6160385, 6291457, 6291459, 6356993,
				6356995, 5308422, 5308424, 5308420, 5308422, 5308420, 5308418, 5308422, 5308418, 5308420,
				5308422, 5308418, 5308420, 5308418, 5308420, 5308417, 5308416, 5111808, 5111809, 5046273,
				5046276, 5505024, 5505026, 5439489, 5439491, 9109504, 2490371, 5177348, 5177345, 327683,
				327683, 9175040, 2424837, 1703938, 1703940, 1703940, 1638402, 1638404, 1638404, 1638403,
				1638403, 1638403, 1638404, 1638402, 1638401, 9240576, 2359301, 9306112, 2359301, 3211265,
				3211266, 3276804, 3080192, 3080193, 3014657, 3014658, 3145732, 3145733, 6946816, 6946818,
				393216, 393218, 3735553, 3735553, 3735554, 3670019, 3801091, 4194307, 4063234, 4063236,
				3932160, 3932163, 3866625, 3866626, 4128770, 4128772, 3997696, 3997699, 3604480, 3604482,
				3538945, 3538946, 3538947, 3473409, 3473409, 3473409, 3473409, 4259841, 4259841, 4259841,
				4259842, 4259842, 4259842, 4587521, 4587521, 4587521, 4587521, 4587521, 4587521, 4587521,
				4587521, 4587521, 4587521, 4587521, 4587521, 1048577, 6815745, 4456449, 983041, 9371648,
				983044, 983042, 5242883, 5242882, 5373958, 5373960, 5373956, 5373958, 5373956, 5373958,
				5373954, 5373956, 5373958, 5373954, 5373956, 5373954, 5373956, 5373953, 5373952, 5898241,
				5898241, 5898241, 5898241, 5898241, 5701635, 5767171, 5570561, 5570563, 5636097, 5636099,
				9437185, 9437185, 5963778, 5963777, 9502721, 9502721, 6029314, 6094848, 6094850, 1114113,
				9568256, 1114116, 3342337, 3342339, 3407875, 3407874, 4521985, 4521985, 4521985, 4718593,
				4718593, 4718593, 4718593, 4784129, 4784129, 4784129, 8912897, 8912897, 7077888, 7077889,
				7471104, 7471105, 7602178, 7405570, 7798784, 7798785, 7798785, 8650753, 8650753, 7143425,
				7143426
			};
		}

		private void DoAction(int action)
		{
			switch (action)
			{
			default:
				DoDefaultAction();
				break;
			case 1:
				_1();
				break;
			case 2:
				_2();
				break;
			case 3:
				_3();
				break;
			case 4:
				_4();
				break;
			case 5:
				_5();
				break;
			case 6:
				_6();
				break;
			case 7:
				_7();
				break;
			case 9:
				_9();
				break;
			case 10:
				_10();
				break;
			case 11:
				_11();
				break;
			case 12:
				_12();
				break;
			case 13:
				_13();
				break;
			case 14:
				_14();
				break;
			case 15:
				_15();
				break;
			case 16:
				_16();
				break;
			case 17:
				_17();
				break;
			case 18:
				_18();
				break;
			case 19:
				_19();
				break;
			case 20:
				_20();
				break;
			case 21:
				_21();
				break;
			case 22:
				_22();
				break;
			case 23:
				_23();
				break;
			case 24:
				_24();
				break;
			case 25:
				_25();
				break;
			case 26:
				_26();
				break;
			case 27:
				_27();
				break;
			case 28:
				_28();
				break;
			case 29:
				_29();
				break;
			case 30:
				_30();
				break;
			case 31:
				_31();
				break;
			case 32:
				_32();
				break;
			case 33:
				_33();
				break;
			case 34:
				_34();
				break;
			case 35:
				_35();
				break;
			case 36:
				_36();
				break;
			case 37:
				_37();
				break;
			case 38:
				_38();
				break;
			case 39:
				_39();
				break;
			case 40:
				_40();
				break;
			case 41:
				_41();
				break;
			case 42:
				_42();
				break;
			case 43:
				_43();
				break;
			case 44:
				_44();
				break;
			case 45:
				_45();
				break;
			case 46:
				_46();
				break;
			case 47:
				_47();
				break;
			case 48:
				_48();
				break;
			case 50:
				_50();
				break;
			case 51:
				_51();
				break;
			case 52:
				_52();
				break;
			case 53:
				_53();
				break;
			case 54:
				_54();
				break;
			case 55:
				_55();
				break;
			case 57:
				_57();
				break;
			case 58:
				_58();
				break;
			case 59:
				_59();
				break;
			case 60:
				_60();
				break;
			case 61:
				_61();
				break;
			case 62:
				_62();
				break;
			case 63:
				_63();
				break;
			case 64:
				_64();
				break;
			case 65:
				_65();
				break;
			case 66:
				_66();
				break;
			case 67:
				_67();
				break;
			case 68:
				_68();
				break;
			case 69:
				_69();
				break;
			case 70:
				_70();
				break;
			case 71:
				_71();
				break;
			case 72:
				_72();
				break;
			case 73:
				_73();
				break;
			case 74:
				_74();
				break;
			case 75:
				_75();
				break;
			case 76:
				_76();
				break;
			case 77:
				_77();
				break;
			case 78:
				_78();
				break;
			case 79:
				_79();
				break;
			case 80:
				_80();
				break;
			case 81:
				_81();
				break;
			case 82:
				_82();
				break;
			case 83:
				_83();
				break;
			case 84:
				_84();
				break;
			case 85:
				_85();
				break;
			case 86:
				_86();
				break;
			case 87:
				_87();
				break;
			case 88:
				_88();
				break;
			case 89:
				_89();
				break;
			case 90:
				_90();
				break;
			case 91:
				_91();
				break;
			case 92:
				_92();
				break;
			case 93:
				_93();
				break;
			case 94:
				_94();
				break;
			case 95:
				_95();
				break;
			case 96:
				_96();
				break;
			case 97:
				_97();
				break;
			case 98:
				_98();
				break;
			case 99:
				_99();
				break;
			case 100:
				_100();
				break;
			case 101:
				_101();
				break;
			case 102:
				_102();
				break;
			case 103:
				_103();
				break;
			case 104:
				_104();
				break;
			case 105:
				_105();
				break;
			case 106:
				_106();
				break;
			case 107:
				_107();
				break;
			case 108:
				_108();
				break;
			case 109:
				_109();
				break;
			case 110:
				_110();
				break;
			case 111:
				_111();
				break;
			case 112:
				_112();
				break;
			case 113:
				_113();
				break;
			case 114:
				_114();
				break;
			case 115:
				_115();
				break;
			case 116:
				_116();
				break;
			case 117:
				_117();
				break;
			case 118:
				_118();
				break;
			case 121:
				_121();
				break;
			case 123:
				_123();
				break;
			case 124:
				_124();
				break;
			case 125:
				_125();
				break;
			case 126:
				_126();
				break;
			case 127:
				_127();
				break;
			case 128:
				_128();
				break;
			case 129:
				_129();
				break;
			case 130:
				_130();
				break;
			case 131:
				_131();
				break;
			case 132:
				_132();
				break;
			case 133:
				_133();
				break;
			case 134:
				_134();
				break;
			case 135:
				_135();
				break;
			case 136:
				_136();
				break;
			case 137:
				_137();
				break;
			case 138:
				_138();
				break;
			case 139:
				_139();
				break;
			case 140:
				_140();
				break;
			case 141:
				_141();
				break;
			case 142:
				_142();
				break;
			case 143:
				_143();
				break;
			case 144:
				_144();
				break;
			case 145:
				_145();
				break;
			case 146:
				_146();
				break;
			case 147:
				_147();
				break;
			case 148:
				_148();
				break;
			case 149:
				_149();
				break;
			case 150:
				_150();
				break;
			case 151:
				_151();
				break;
			case 152:
				_152();
				break;
			case 153:
				_153();
				break;
			case 154:
				_154();
				break;
			case 155:
				_155();
				break;
			case 199:
				_199();
				break;
			case 200:
				_200();
				break;
			case 201:
				_201();
				break;
			case 202:
				_202();
				break;
			case 203:
				_203();
				break;
			case 204:
				_204();
				break;
			case 205:
				_205();
				break;
			case 206:
				_206();
				break;
			case 207:
				_207();
				break;
			case 208:
				_208();
				break;
			case 209:
				_209();
				break;
			case 210:
				_210();
				break;
			case 211:
				_211();
				break;
			case 212:
				_212();
				break;
			case 213:
				_213();
				break;
			case 214:
				_214();
				break;
			case 215:
				_215();
				break;
			case 216:
				_216();
				break;
			case 217:
				_217();
				break;
			case 218:
				_218();
				break;
			case 219:
				_219();
				break;
			case 220:
				_220();
				break;
			case 221:
				_221();
				break;
			case 222:
				_222();
				break;
			case 223:
				_223();
				break;
			case 224:
				_224();
				break;
			case 225:
				_225();
				break;
			case 226:
				_226();
				break;
			case 227:
				_227();
				break;
			case 228:
				_228();
				break;
			case 229:
				_229();
				break;
			case 230:
				_230();
				break;
			case 231:
				_231();
				break;
			case 232:
				_232();
				break;
			case 233:
				_233();
				break;
			case 234:
				_234();
				break;
			case 235:
				_235();
				break;
			case 236:
				_236();
				break;
			case 237:
				_237();
				break;
			case 238:
				_238();
				break;
			case 239:
				_239();
				break;
			case 240:
				_240();
				break;
			case 241:
				_241();
				break;
			case 242:
				_242();
				break;
			case 243:
				_243();
				break;
			case 244:
				_244();
				break;
			case 245:
				_245();
				break;
			case 246:
				_246();
				break;
			case 247:
				_247();
				break;
			case 248:
				_248();
				break;
			case 249:
				_249();
				break;
			case 250:
				_250();
				break;
			case 251:
				_251();
				break;
			case 252:
				_252();
				break;
			case 253:
				_253();
				break;
			case 254:
				_254();
				break;
			case 255:
				_255();
				break;
			case 256:
				_256();
				break;
			case 257:
				_257();
				break;
			case 258:
				_258();
				break;
			case 259:
				_259();
				break;
			case 260:
				_260();
				break;
			case 261:
				_261();
				break;
			case 262:
				_262();
				break;
			case 263:
				_263();
				break;
			case 264:
				_264();
				break;
			case 265:
				_265();
				break;
			case 266:
				_266();
				break;
			case 267:
				_267();
				break;
			case 268:
				_268();
				break;
			case 269:
				_269();
				break;
			case 270:
				_270();
				break;
			case 271:
				_271();
				break;
			case 272:
				_272();
				break;
			case 273:
				_273();
				break;
			case 274:
				_274();
				break;
			case 276:
				_276();
				break;
			case 277:
				_277();
				break;
			case 283:
				_283();
				break;
			case 284:
				_284();
				break;
			case 285:
				_285();
				break;
			case 286:
				_286();
				break;
			case 287:
				_287();
				break;
			case 288:
				_288();
				break;
			case 289:
				_289();
				break;
			case 290:
				_290();
				break;
			case 291:
				_291();
				break;
			case 292:
				_292();
				break;
			case 293:
				_293();
				break;
			case 294:
				_294();
				break;
			case 295:
				_295();
				break;
			case 296:
				_296();
				break;
			case 298:
				_298();
				break;
			case 299:
				_299();
				break;
			case 300:
				_300();
				break;
			case 301:
				_301();
				break;
			case 302:
				_302();
				break;
			case 303:
				_303();
				break;
			case 304:
				_304();
				break;
			case 305:
				_305();
				break;
			case 306:
				_306();
				break;
			case 308:
				_308();
				break;
			case 309:
				_309();
				break;
			case 310:
				_310();
				break;
			case 311:
				_311();
				break;
			case 312:
				_312();
				break;
			case 313:
				_313();
				break;
			case 314:
				_314();
				break;
			case 315:
				_315();
				break;
			case 316:
				_316();
				break;
			case 317:
				_317();
				break;
			case 318:
				_318();
				break;
			case 319:
				_319();
				break;
			case 320:
				_320();
				break;
			case 321:
				_321();
				break;
			case 322:
				_322();
				break;
			case 323:
				_323();
				break;
			case 324:
				_324();
				break;
			case 325:
				_325();
				break;
			case 326:
				_326();
				break;
			case 327:
				_327();
				break;
			case 328:
				_328();
				break;
			case 329:
				_329();
				break;
			case 330:
				_330();
				break;
			case 331:
				_331();
				break;
			case 332:
				_332();
				break;
			case 338:
				_338();
				break;
			case 339:
				_339();
				break;
			case 340:
				_340();
				break;
			case 341:
				_341();
				break;
			case 342:
				_342();
				break;
			case 343:
				_343();
				break;
			case 344:
				_344();
				break;
			case 345:
				_345();
				break;
			case 346:
				_346();
				break;
			case 347:
				_347();
				break;
			case 348:
				_348();
				break;
			case 349:
				_349();
				break;
			case 350:
				_350();
				break;
			case 351:
				_351();
				break;
			case 352:
				_352();
				break;
			case 353:
				_353();
				break;
			case 354:
				_354();
				break;
			case 355:
				_355();
				break;
			case 356:
				_356();
				break;
			case 357:
				_357();
				break;
			case 358:
				_358();
				break;
			case 359:
				_359();
				break;
			case 360:
				_360();
				break;
			case 361:
				_361();
				break;
			case 362:
				_362();
				break;
			case 363:
				_363();
				break;
			case 364:
				_364();
				break;
			case 365:
				_365();
				break;
			case 366:
				_366();
				break;
			case 367:
				_367();
				break;
			case 368:
				_368();
				break;
			case 369:
				_369();
				break;
			case 370:
				_370();
				break;
			case 371:
				_371();
				break;
			case 372:
				_372();
				break;
			case 373:
				_373();
				break;
			case 374:
				_374();
				break;
			case 375:
				_375();
				break;
			case 376:
				_376();
				break;
			case 377:
				_377();
				break;
			case 378:
				_378();
				break;
			case 379:
				_379();
				break;
			case 380:
				_380();
				break;
			case 381:
				_381();
				break;
			case 385:
				_385();
				break;
			case 386:
				_386();
				break;
			case 387:
				_387();
				break;
			case 388:
				_388();
				break;
			case 389:
				_389();
				break;
			case 390:
				_390();
				break;
			case 391:
				_391();
				break;
			case 392:
				_392();
				break;
			case 393:
				_393();
				break;
			case 394:
				_394();
				break;
			case 395:
				_395();
				break;
			case 396:
				_396();
				break;
			case 397:
				_397();
				break;
			case 398:
				_398();
				break;
			case 399:
				_399();
				break;
			case 400:
				_400();
				break;
			case 401:
				_401();
				break;
			case 402:
				_402();
				break;
			case 403:
				_403();
				break;
			case 404:
				_404();
				break;
			case 405:
				_405();
				break;
			case 406:
				_406();
				break;
			case 407:
				_407();
				break;
			case 408:
				_408();
				break;
			case 409:
				_409();
				break;
			case 410:
				_410();
				break;
			case 411:
				_411();
				break;
			case 412:
				_412();
				break;
			case 414:
				_414();
				break;
			case 415:
				_415();
				break;
			case 416:
				_416();
				break;
			case 417:
				_417();
				break;
			case 418:
				_418();
				break;
			case 419:
				_419();
				break;
			case 420:
				_420();
				break;
			case 421:
				_421();
				break;
			case 422:
				_422();
				break;
			case 423:
				_423();
				break;
			case 424:
				_424();
				break;
			case 425:
				_425();
				break;
			case 426:
				_426();
				break;
			case 427:
				_427();
				break;
			case 428:
				_428();
				break;
			case 429:
				_429();
				break;
			case 430:
				_430();
				break;
			case 431:
				_431();
				break;
			case 432:
				_432();
				break;
			case 433:
				_433();
				break;
			case 434:
				_434();
				break;
			case 435:
				_435();
				break;
			case 436:
				_436();
				break;
			case 437:
				_437();
				break;
			case 438:
				_438();
				break;
			case 439:
				_439();
				break;
			case 440:
				_440();
				break;
			case 441:
				_441();
				break;
			case 442:
				_442();
				break;
			case 443:
				_443();
				break;
			case 444:
				_444();
				break;
			case 445:
				_445();
				break;
			case 446:
				_446();
				break;
			case 447:
				_447();
				break;
			case 448:
				_448();
				break;
			case 449:
				_449();
				break;
			case 450:
				_450();
				break;
			case 451:
				_451();
				break;
			case 452:
				_452();
				break;
			case 453:
				_453();
				break;
			case 454:
				_454();
				break;
			case 455:
				_455();
				break;
			case 456:
				_456();
				break;
			case 457:
				_457();
				break;
			case 458:
				_458();
				break;
			case 459:
				_459();
				break;
			case 460:
				_460();
				break;
			case 461:
				_461();
				break;
			case 462:
				_462();
				break;
			case 463:
				_463();
				break;
			case 464:
				_464();
				break;
			case 465:
				_465();
				break;
			case 466:
				_466();
				break;
			case 467:
				_467();
				break;
			case 468:
				_468();
				break;
			case 469:
				_469();
				break;
			case 470:
				_470();
				break;
			case 471:
				_471();
				break;
			case 472:
				_472();
				break;
			case 473:
				_473();
				break;
			case 474:
				_474();
				break;
			case 475:
				_475();
				break;
			case 476:
				_476();
				break;
			case 477:
				_477();
				break;
			case 478:
				_478();
				break;
			case 479:
				_479();
				break;
			case 480:
				_480();
				break;
			case 481:
				_481();
				break;
			case 482:
				_482();
				break;
			case 483:
				_483();
				break;
			case 484:
				_484();
				break;
			case 485:
				_485();
				break;
			case 486:
				_486();
				break;
			case 487:
				_487();
				break;
			case 488:
				_488();
				break;
			case 489:
				_489();
				break;
			case 490:
				_490();
				break;
			case 491:
				_491();
				break;
			case 492:
				_492();
				break;
			case 493:
				_493();
				break;
			case 494:
				_494();
				break;
			case 495:
				_495();
				break;
			case 496:
				_496();
				break;
			case 497:
				_497();
				break;
			case 498:
				_498();
				break;
			case 499:
				_499();
				break;
			case 502:
				_502();
				break;
			case 503:
				_503();
				break;
			case 506:
				_506();
				break;
			case 507:
				_507();
				break;
			case 508:
				_508();
				break;
			case 510:
				_510();
				break;
			case 511:
				_511();
				break;
			case 512:
				_512();
				break;
			case 513:
				_513();
				break;
			case 514:
				_514();
				break;
			case 515:
				_515();
				break;
			case 528:
				_528();
				break;
			case 530:
				_530();
				break;
			case 534:
				_534();
				break;
			case 537:
				_537();
				break;
			case 540:
				_540();
				break;
			}
		}

		private void _1()
		{
			_ast = new SourceUnitTree(CurrentScope, GetValue(1).Statements, _initializers, Encoding, _tokenizer.DataOffset);
		}

		private void _2()
		{
			yyval.Statements = Statements.Empty;
		}

		private void _3()
		{
			yyval.Statements = GetValue(2).Statements;
		}

		private void _4()
		{
			yyval.Statements = GetValue(2).Statements;
		}

		private void _5()
		{
			yyval.Statements = new Statements(GetValue(1).Expression);
		}

		private void _6()
		{
			Statements statements2 = (yyval.Statements = GetValue(3).Statements);
			statements2.Add(GetValue(1).Expression);
		}

		private void _7()
		{
			yyval.Statements = new Statements(GetValue(1).Expression);
		}

		private void _9()
		{
			yyval.Expression = new UndefineStatement(GetValue(1).ConstructedSymbols, yyloc);
		}

		private void _10()
		{
			if (InMethod)
			{
				_tokenizer.ReportError(Errors.FileInitializerInMethod);
			}
			EnterFileInitializerScope();
		}

		private void _11()
		{
			yyval.Expression = AddInitializer(new FileInitializerStatement(CurrentScope, GetValue(2).Statements, yyloc));
			LeaveScope();
		}

		private void _12()
		{
			if (InMethod)
			{
				_tokenizer.ReportWarning(Errors.ShutdownHandlerInMethod);
			}
			EnterNestedScope();
		}

		private void _13()
		{
			yyval.Expression = new ShutdownHandlerStatement(CurrentScope, GetValue(2).Statements, yyloc);
			LeaveScope();
		}

		private void _14()
		{
			MatchReferenceReadOnlyError(GetValue(3).RegexMatchReference);
			yyval.Expression = new ErrorExpression(yyloc);
		}

		private void _15()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _16()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _17()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_FNAME;
		}

		private void _18()
		{
			yyval.Expression = new AliasStatement(true, GetValue(3).ConstructedSymbol, GetValue(1).ConstructedSymbol, yyloc);
		}

		private void _19()
		{
			yyval.Expression = MakeGlobalAlias(GetValue(2).String, GetValue(1).String, yyloc);
		}

		private void _20()
		{
			yyval.Expression = MakeGlobalAlias(GetValue(2).String, GetValue(1).RegexMatchReference, yyloc);
		}

		private void _21()
		{
			yyval.JumpStatement = GetValue(1).JumpStatement;
		}

		private void _22()
		{
			yyval.JumpStatement = GetValue(1).JumpStatement;
		}

		private void _23()
		{
			yyval.JumpStatement = new ReturnStatement(RequireNoBlockArg(GetValue(1)), yyloc);
		}

		private void _24()
		{
			yyval.JumpStatement = new BreakStatement(RequireNoBlockArg(GetValue(1)), yyloc);
		}

		private void _25()
		{
			yyval.JumpStatement = new NextStatement(RequireNoBlockArg(GetValue(1)), yyloc);
		}

		private void _26()
		{
			yyval.JumpStatement = new ReturnStatement(null, yyloc);
		}

		private void _27()
		{
			yyval.JumpStatement = new BreakStatement(null, yyloc);
		}

		private void _28()
		{
			yyval.JumpStatement = new NextStatement(null, yyloc);
		}

		private void _29()
		{
			yyval.JumpStatement = new RedoStatement(yyloc);
		}

		private void _30()
		{
			yyval.JumpStatement = new RetryStatement(yyloc);
		}

		private void _31()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _32()
		{
			yyval.Expression = GetValue(1).JumpStatement;
		}

		private void _33()
		{
			yyval.Expression = new SimpleAssignmentExpression(GetValue(3).LeftValue, GetValue(1).CallExpression, null, yyloc);
		}

		private void _34()
		{
			yyval.Expression = new ParallelAssignmentExpression(GetValue(3).CompoundLeftValue, new Expression[1] { GetValue(1).CallExpression }, yyloc);
		}

		private void _35()
		{
			yyval.Expression = new SimpleAssignmentExpression(GetValue(3).LeftValue, GetValue(1).CallExpression, GetValue(2).String, yyloc);
		}

		private void _36()
		{
			yyval.Expression = new SimpleAssignmentExpression(MakeArrayItemAccess(GetValue(6).Expression, GetValue(4), GetLocation(5)), GetValue(1).CallExpression, GetValue(2).String, yyloc);
		}

		private void _37()
		{
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).CallExpression, yyloc);
		}

		private void _38()
		{
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).CallExpression, yyloc);
		}

		private void _39()
		{
			_tokenizer.ReportError(Errors.ConstantReassigned);
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).CallExpression, yyloc);
		}

		private void _40()
		{
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).CallExpression, yyloc);
		}

		private void _41()
		{
			yyval.Expression = new ParallelAssignmentExpression(new CompoundLeftValue(new LeftValue[1] { GetValue(3).LeftValue }), PopArguments(GetValue(1).ArgumentCount), yyloc);
		}

		private void _42()
		{
			yyval.Expression = new ParallelAssignmentExpression(GetValue(3).CompoundLeftValue, new Expression[1] { GetValue(1).Expression }, yyloc);
		}

		private void _43()
		{
			yyval.Expression = new ParallelAssignmentExpression(GetValue(3).CompoundLeftValue, PopArguments(GetValue(1).ArgumentCount), yyloc);
		}

		private void _44()
		{
			yyval.Expression = new ConditionalStatement(ToCondition(GetValue(1).Expression), false, GetValue(3).Expression, null, yyloc);
		}

		private void _45()
		{
			yyval.Expression = new ConditionalStatement(ToCondition(GetValue(1).Expression), true, GetValue(3).Expression, null, yyloc);
		}

		private void _46()
		{
			yyval.Expression = MakeLoopStatement(GetValue(3).Expression, ToCondition(GetValue(1).Expression), true, yyloc);
		}

		private void _47()
		{
			yyval.Expression = MakeLoopStatement(GetValue(3).Expression, ToCondition(GetValue(1).Expression), false, yyloc);
		}

		private void _48()
		{
			yyval.Expression = new RescueExpression(GetValue(3).Expression, GetValue(1).Expression, MergeLocations(GetLocation(2), GetLocation(1)), yyloc);
		}

		private void _50()
		{
			yyval.Expression = new AndExpression(GetValue(3).Expression, GetValue(1).Expression, yyloc);
		}

		private void _51()
		{
			yyval.Expression = new OrExpression(GetValue(3).Expression, GetValue(1).Expression, yyloc);
		}

		private void _52()
		{
			yyval.Expression = new ConditionalJumpExpression(GetValue(3).Expression, GetValue(1).JumpStatement, false, null, yyloc);
		}

		private void _53()
		{
			yyval.Expression = new ConditionalJumpExpression(GetValue(3).Expression, GetValue(1).JumpStatement, true, null, yyloc);
		}

		private void _54()
		{
			yyval.Expression = new NotExpression(GetValue(1).Expression, yyloc);
		}

		private void _55()
		{
			yyval.Expression = new NotExpression(GetValue(1).CallExpression, yyloc);
		}

		private void _57()
		{
			yyval.CallExpression = GetValue(1).CallExpression;
		}

		private void _58()
		{
			yyval.CallExpression = GetValue(1).CallExpression;
		}

		private void _59()
		{
			yyval.CallExpression = GetValue(1).CallExpression;
		}

		private void _60()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).CallExpression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _61()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).CallExpression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _62()
		{
			EnterNestedScope();
		}

		private void _63()
		{
			yyval.BlockDefinition = MakeBlockDefinition(GetValue(3).Parameters, GetValue(2).Statements, yyloc);
			LeaveScope();
		}

		private void _64()
		{
			yyval.CallExpression = MakeMethodCall(null, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _65()
		{
			yyval.CallExpression = MakeMethodCall(null, GetValue(3).String, GetValue(2), GetValue(1).BlockDefinition, yyloc);
		}

		private void _66()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).Expression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _67()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(5).Expression, GetValue(3).String, GetValue(2), GetValue(1).BlockDefinition, yyloc);
		}

		private void _68()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).Expression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _69()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(5).Expression, GetValue(3).String, GetValue(2), GetValue(1).BlockDefinition, yyloc);
		}

		private void _70()
		{
			yyval.CallExpression = MakeSuperCall(GetValue(1), yyloc);
		}

		private void _71()
		{
			yyval.CallExpression = new YieldCall(RequireNoBlockArg(GetValue(1)), yyloc);
		}

		private void _72()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(new LeftValue[1] { GetValue(2).CompoundLeftValue });
		}

		private void _73()
		{
			GetValue(1).LeftValues.Add(Placeholder.Singleton);
			yyval.CompoundLeftValue = new CompoundLeftValue(GetValue(1).LeftValues.ToArray());
		}

		private void _74()
		{
			GetValue(2).LeftValues.Add(GetValue(1).LeftValue);
			yyval.CompoundLeftValue = new CompoundLeftValue(GetValue(2).LeftValues.ToArray());
		}

		private void _75()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(3).LeftValues, GetValue(1).LeftValue, null);
		}

		private void _76()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(5).LeftValues, GetValue(3).LeftValue, GetValue(1).LeftValues);
		}

		private void _77()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(2).LeftValues, Placeholder.Singleton, null);
		}

		private void _78()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(4).LeftValues, Placeholder.Singleton, GetValue(1).LeftValues);
		}

		private void _79()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(null, GetValue(3).LeftValue, GetValue(1).LeftValues);
		}

		private void _80()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(null, Placeholder.Singleton, GetValue(1).LeftValues);
		}

		private void _81()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(new LeftValue[1] { GetValue(1).LeftValue }, 0);
		}

		private void _82()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(new LeftValue[1] { Placeholder.Singleton }, 0);
		}

		private void _83()
		{
			List<LeftValue> list = (yyval.LeftValues = GetValue(3).LeftValues);
			list.Add(GetValue(2).LeftValue);
		}

		private void _84()
		{
			yyval.LeftValues = CollectionUtils.MakeList(GetValue(2).LeftValue);
		}

		private void _85()
		{
			List<LeftValue> list = (yyval.LeftValues = GetValue(3).LeftValues);
			list.Add(GetValue(1).LeftValue);
		}

		private void _86()
		{
			yyval.LeftValues = CollectionUtils.MakeList(GetValue(1).LeftValue);
		}

		private void _87()
		{
			yyval.LeftValue = GetValue(1).LeftValue;
		}

		private void _88()
		{
			yyval.LeftValue = GetValue(2).CompoundLeftValue;
		}

		private void _89()
		{
			yyval.LeftValue = VariableFactory.MakeLeftValue(GetValue(1).VariableFactory, this, GetValue(1).String, yyloc);
		}

		private void _90()
		{
			yyval.LeftValue = MakeArrayItemAccess(GetValue(4).Expression, GetValue(2), yyloc);
		}

		private void _91()
		{
			yyval.LeftValue = new AttributeAccess(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _92()
		{
			yyval.LeftValue = new AttributeAccess(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _93()
		{
			yyval.LeftValue = new AttributeAccess(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _94()
		{
			yyval.LeftValue = new ConstantVariable(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _95()
		{
			yyval.LeftValue = new ConstantVariable(null, GetValue(1).String, yyloc);
		}

		private void _96()
		{
			MatchReferenceReadOnlyError(GetValue(1).RegexMatchReference);
			yyval.LeftValue = new IronRuby.Compiler.Ast.GlobalVariable(Symbols.Error, yyloc);
		}

		private void _97()
		{
			yyval.LeftValue = VariableFactory.MakeLeftValue(GetValue(1).VariableFactory, this, GetValue(1).String, yyloc);
		}

		private void _98()
		{
			yyval.LeftValue = MakeArrayItemAccess(GetValue(4).Expression, GetValue(2), yyloc);
		}

		private void _99()
		{
			yyval.LeftValue = new AttributeAccess(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _100()
		{
			yyval.LeftValue = new AttributeAccess(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _101()
		{
			yyval.LeftValue = new AttributeAccess(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _102()
		{
			yyval.LeftValue = new ConstantVariable(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _103()
		{
			yyval.LeftValue = new ConstantVariable(null, GetValue(1).String, yyloc);
		}

		private void _104()
		{
			MatchReferenceReadOnlyError(GetValue(1).RegexMatchReference);
			yyval.LeftValue = new IronRuby.Compiler.Ast.GlobalVariable(Symbols.Error, yyloc);
		}

		private void _105()
		{
			yyval.String = GetValue(1).String;
		}

		private void _106()
		{
			_tokenizer.ReportError(Errors.ModuleNameNotConstant);
			yyval.String = GetValue(1).String;
		}

		private void _107()
		{
			yyval.ConstantVariable = new ConstantVariable(null, GetValue(1).String, yyloc);
		}

		private void _108()
		{
			yyval.ConstantVariable = new ConstantVariable(GetValue(1).String, yyloc);
		}

		private void _109()
		{
			yyval.ConstantVariable = new ConstantVariable(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _110()
		{
			yyval.String = GetValue(1).String;
		}

		private void _111()
		{
			yyval.String = GetValue(1).String;
		}

		private void _112()
		{
			yyval.String = GetValue(1).String;
		}

		private void _113()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_ENDFN;
			yyval.String = GetValue(1).String;
		}

		private void _114()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_ENDFN;
			yyval.String = GetValue(1).String;
		}

		private void _115()
		{
			yyval.ConstructedSymbol = new ConstructedSymbol(GetValue(1).String);
		}

		private void _116()
		{
			yyval.ConstructedSymbol = GetValue(1).ConstructedSymbol;
		}

		private void _117()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_END;
			yyval.ConstructedSymbol = new ConstructedSymbol(GetValue(1).String);
		}

		private void _118()
		{
			yyval.ConstructedSymbol = new ConstructedSymbol(MakeSymbolConstructor(GetValue(2).Expressions, yyloc));
		}

		private void _121()
		{
			yyval.String = "$" + GetValue(1).String;
		}

		private void _123()
		{
			yyval.String = GetValue(1).RegexMatchReference.FullName;
		}

		private void _124()
		{
			yyval.ConstructedSymbols = CollectionUtils.MakeList(GetValue(1).ConstructedSymbol);
		}

		private void _125()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_FNAME;
		}

		private void _126()
		{
			List<ConstructedSymbol> list = (yyval.ConstructedSymbols = GetValue(4).ConstructedSymbols);
			list.Add(GetValue(1).ConstructedSymbol);
		}

		private void _127()
		{
			yyval.String = Symbols.BitwiseOr;
		}

		private void _128()
		{
			yyval.String = Symbols.Xor;
		}

		private void _129()
		{
			yyval.String = Symbols.BitwiseAnd;
		}

		private void _130()
		{
			yyval.String = Symbols.Comparison;
		}

		private void _131()
		{
			yyval.String = Symbols.Equal;
		}

		private void _132()
		{
			yyval.String = Symbols.StrictEqual;
		}

		private void _133()
		{
			yyval.String = Symbols.Match;
		}

		private void _134()
		{
			yyval.String = Symbols.NotMatch;
		}

		private void _135()
		{
			yyval.String = Symbols.GreaterThan;
		}

		private void _136()
		{
			yyval.String = Symbols.GreaterEqual;
		}

		private void _137()
		{
			yyval.String = Symbols.LessThan;
		}

		private void _138()
		{
			yyval.String = Symbols.LessEqual;
		}

		private void _139()
		{
			yyval.String = Symbols.NotEqual;
		}

		private void _140()
		{
			yyval.String = Symbols.LeftShift;
		}

		private void _141()
		{
			yyval.String = Symbols.RightShift;
		}

		private void _142()
		{
			yyval.String = Symbols.Plus;
		}

		private void _143()
		{
			yyval.String = Symbols.Minus;
		}

		private void _144()
		{
			yyval.String = Symbols.Multiply;
		}

		private void _145()
		{
			yyval.String = Symbols.Multiply;
		}

		private void _146()
		{
			yyval.String = Symbols.Divide;
		}

		private void _147()
		{
			yyval.String = Symbols.Mod;
		}

		private void _148()
		{
			yyval.String = Symbols.Power;
		}

		private void _149()
		{
			yyval.String = Symbols.Bang;
		}

		private void _150()
		{
			yyval.String = Symbols.BitwiseNot;
		}

		private void _151()
		{
			yyval.String = Symbols.UnaryPlus;
		}

		private void _152()
		{
			yyval.String = Symbols.UnaryMinus;
		}

		private void _153()
		{
			yyval.String = Symbols.ArrayItemRead;
		}

		private void _154()
		{
			yyval.String = Symbols.ArrayItemWrite;
		}

		private void _155()
		{
			yyval.String = Symbols.Backtick;
		}

		private void _199()
		{
			yyval.Expression = new SimpleAssignmentExpression(GetValue(3).LeftValue, GetValue(1).Expression, null, yyloc);
		}

		private void _200()
		{
			yyval.Expression = new SimpleAssignmentExpression(GetValue(5).LeftValue, new RescueExpression(GetValue(3).Expression, GetValue(1).Expression, MergeLocations(GetLocation(2), GetLocation(1)), MergeLocations(GetLocation(3), GetLocation(1))), null, yyloc);
		}

		private void _201()
		{
			yyval.Expression = new SimpleAssignmentExpression(GetValue(5).LeftValue, new RescueExpression(GetValue(3).Expression, GetValue(1).JumpStatement, MergeLocations(GetLocation(2), GetLocation(1)), MergeLocations(GetLocation(3), GetLocation(1))), null, yyloc);
		}

		private void _202()
		{
			yyval.Expression = new SimpleAssignmentExpression(GetValue(3).LeftValue, GetValue(1).Expression, GetValue(2).String, yyloc);
		}

		private void _203()
		{
			yyval.Expression = new SimpleAssignmentExpression(MakeArrayItemAccess(GetValue(6).Expression, GetValue(4), GetLocation(5)), GetValue(1).Expression, GetValue(2).String, yyloc);
		}

		private void _204()
		{
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).Expression, yyloc);
		}

		private void _205()
		{
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).Expression, yyloc);
		}

		private void _206()
		{
			yyval.Expression = new MemberAssignmentExpression(GetValue(5).Expression, GetValue(3).String, GetValue(2).String, GetValue(1).Expression, yyloc);
		}

		private void _207()
		{
			_tokenizer.ReportError(Errors.ConstantReassigned);
			yyval.Expression = new ErrorExpression(yyloc);
		}

		private void _208()
		{
			_tokenizer.ReportError(Errors.ConstantReassigned);
			yyval.Expression = new ErrorExpression(yyloc);
		}

		private void _209()
		{
			MatchReferenceReadOnlyError(GetValue(3).RegexMatchReference);
			yyval.Expression = new ErrorExpression(yyloc);
		}

		private void _210()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Plus, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _211()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Minus, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _212()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Multiply, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _213()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Divide, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _214()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Mod, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _215()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Power, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _216()
		{
			yyval.Expression = new MethodCall(new MethodCall(Literal.Integer(GetValue(3).Integer1, GetLocation(3)), Symbols.Power, new Arguments(GetValue(1).Expression), GetLocation(2)), Symbols.UnaryMinus, Arguments.Empty, yyloc);
		}

		private void _217()
		{
			yyval.Expression = new MethodCall(new MethodCall(Literal.BigInteger(GetValue(3).BigInteger, GetLocation(3)), Symbols.Power, new Arguments(GetValue(1).Expression), GetLocation(2)), Symbols.UnaryMinus, Arguments.Empty, yyloc);
		}

		private void _218()
		{
			yyval.Expression = new MethodCall(new MethodCall(Literal.Double(GetValue(3).Double, GetLocation(3)), Symbols.Power, new Arguments(GetValue(1).Expression), GetLocation(2)), Symbols.UnaryMinus, Arguments.Empty, yyloc);
		}

		private void _219()
		{
			yyval.Expression = new MethodCall(GetValue(1).Expression, Symbols.UnaryPlus, null, yyloc);
		}

		private void _220()
		{
			yyval.Expression = new MethodCall(GetValue(1).Expression, Symbols.UnaryMinus, null, yyloc);
		}

		private void _221()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.BitwiseOr, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _222()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Xor, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _223()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.BitwiseAnd, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _224()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Comparison, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _225()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.GreaterThan, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _226()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.GreaterEqual, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _227()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.LessThan, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _228()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.LessEqual, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _229()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.Equal, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _230()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.StrictEqual, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _231()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.NotEqual, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _232()
		{
			yyval.Expression = MakeMatch(GetValue(3).Expression, GetValue(1).Expression, yyloc);
		}

		private void _233()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.NotMatch, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _234()
		{
			yyval.Expression = new NotExpression(GetValue(1).Expression, yyloc);
		}

		private void _235()
		{
			yyval.Expression = new MethodCall(GetValue(1).Expression, Symbols.BitwiseNot, Arguments.Empty, yyloc);
		}

		private void _236()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.LeftShift, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _237()
		{
			yyval.Expression = new MethodCall(GetValue(3).Expression, Symbols.RightShift, new Arguments(GetValue(1).Expression), yyloc);
		}

		private void _238()
		{
			yyval.Expression = new AndExpression(GetValue(3).Expression, GetValue(1).Expression, yyloc);
		}

		private void _239()
		{
			yyval.Expression = new OrExpression(GetValue(3).Expression, GetValue(1).Expression, yyloc);
		}

		private void _240()
		{
			yyval.Expression = new ConditionalJumpExpression(GetValue(3).Expression, GetValue(1).JumpStatement, false, null, yyloc);
		}

		private void _241()
		{
			yyval.Expression = new ConditionalJumpExpression(GetValue(3).Expression, GetValue(1).JumpStatement, true, null, yyloc);
		}

		private void _242()
		{
			yyval.Expression = new RangeExpression(GetValue(3).Expression, GetValue(1).Expression, false, yyloc);
		}

		private void _243()
		{
			yyval.Expression = new RangeExpression(GetValue(3).Expression, GetValue(1).Expression, true, yyloc);
		}

		private void _244()
		{
			yyval.Expression = new IsDefinedExpression(GetValue(1).Expression, yyloc);
		}

		private void _245()
		{
			yyval.Expression = new ConditionalExpression(ToCondition(GetValue(6).Expression), GetValue(4).Expression, GetValue(1).Expression, yyloc);
		}

		private void _246()
		{
			yyval.Expression = new ConditionalJumpExpression(ToCondition(GetValue(6).Expression), GetValue(4).JumpStatement, false, GetValue(1).Expression, yyloc);
		}

		private void _247()
		{
			yyval.Expression = new ConditionalJumpExpression(ToCondition(GetValue(6).Expression), GetValue(1).JumpStatement, true, GetValue(4).Expression, yyloc);
		}

		private void _248()
		{
			yyval.Expression = new ConditionalStatement(ToCondition(GetValue(6).Expression), false, GetValue(4).JumpStatement, GetValue(1).JumpStatement, yyloc);
		}

		private void _249()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _250()
		{
			SetArguments();
		}

		private void _251()
		{
			PopAndSetArguments(GetValue(2).ArgumentCount, null);
		}

		private void _252()
		{
			PushArgument(GetValue(4).ArgumentCount, new HashConstructor(GetValue(2).Maplets.ToArray(), GetLocation(2)));
			PopAndSetArguments(GetValue(4).ArgumentCount + 1, null);
		}

		private void _253()
		{
			SetArguments(new HashConstructor(GetValue(2).Maplets.ToArray(), GetLocation(2)), null);
		}

		private void _254()
		{
			yyval.Arguments = GetValue(2).Arguments ?? Arguments.Empty;
			yyval.Block = GetValue(2).Block;
		}

		private void _255()
		{
			SetNoArguments(null);
		}

		private void _256()
		{
			yyval = GetValue(1);
		}

		private void _257()
		{
			SetNoArguments(null);
		}

		private void _258()
		{
			yyval = GetValue(1);
		}

		private void _259()
		{
			PopAndSetArguments(GetValue(2).ArgumentCount, GetValue(1).BlockReference);
		}

		private void _260()
		{
			PushArgument(GetValue(4).ArgumentCount, new HashConstructor(GetValue(2).Maplets.ToArray(), GetLocation(2)));
			PopAndSetArguments(GetValue(4).ArgumentCount + 1, GetValue(1).BlockReference);
		}

		private void _261()
		{
			SetArguments(new HashConstructor(GetValue(2).Maplets.ToArray(), GetLocation(2)), GetValue(1).BlockReference);
		}

		private void _262()
		{
			SetArguments(GetValue(1).BlockReference);
		}

		private void _263()
		{
			SetArguments(GetValue(1).CallExpression);
		}

		private void _264()
		{
			yyval.Integer1 = _tokenizer.EnterCommandArguments();
		}

		private void _265()
		{
			_tokenizer.LeaveCommandArguments(GetValue(2).Integer1);
			yyval = GetValue(1);
		}

		private void _266()
		{
			yyval.BlockReference = new BlockReference(GetValue(1).Expression, yyloc);
		}

		private void _267()
		{
			yyval.BlockReference = GetValue(1).BlockReference;
		}

		private void _268()
		{
			yyval.BlockReference = null;
		}

		private void _269()
		{
			yyval.BlockReference = null;
		}

		private void _270()
		{
			PushArgument(0, GetValue(1).Expression);
		}

		private void _271()
		{
			yyval.ArgumentCount = GetValue(1).ArgumentCount;
		}

		private void _272()
		{
			PushArgument(0, new SplattedArgument(GetValue(1).Expression));
		}

		private void _273()
		{
			PushArgument(GetValue(3).ArgumentCount, GetValue(1).Expression);
		}

		private void _274()
		{
			PushArgument(GetValue(4).ArgumentCount, new SplattedArgument(GetValue(1).Expression));
		}

		private void _276()
		{
			yyval.Expression = MakeSymbolLiteral(GetValue(1).ConstructedSymbol, GetLocation(1));
		}

		private void _277()
		{
			yyval.Expression = new StringConstructor(GetValue(1).Expressions, StringKind.Mutable, GetLocation(1));
		}

		private void _283()
		{
			yyval.Expression = GetValue(1).RegexMatchReference;
		}

		private void _284()
		{
			yyval.Expression = new MethodCall(null, GetValue(1).String, null, GetLocation(1));
		}

		private void _285()
		{
			yyval.Expression = new ConstantVariable(GetValue(3).Expression, GetValue(1).String, yyloc);
		}

		private void _286()
		{
			yyval.Expression = new ConstantVariable(null, GetValue(1).String, yyloc);
		}

		private void _287()
		{
			yyval.Expression = new ArrayConstructor(GetValue(2).Arguments, yyloc);
		}

		private void _288()
		{
			yyval.Expression = new HashConstructor(Maplet.EmptyArray, yyloc);
		}

		private void _289()
		{
			yyval.Expression = new HashConstructor(GetValue(3).Maplets.ToArray(), yyloc);
		}

		private void _290()
		{
			yyval.Expression = new YieldCall(RequireNoBlockArg(GetValue(2)), yyloc);
		}

		private void _291()
		{
			yyval.Expression = new YieldCall(Arguments.Empty, yyloc);
		}

		private void _292()
		{
			yyval.Expression = new YieldCall(null, GetLocation(1));
		}

		private void _293()
		{
			yyval.Expression = new IsDefinedExpression(GetValue(2).Expression, yyloc);
		}

		private void _294()
		{
			yyval.Expression = new NotExpression(GetValue(2).Expression, yyloc);
		}

		private void _295()
		{
			yyval.Expression = new NotExpression(null, yyloc);
		}

		private void _296()
		{
			yyval.Expression = new MethodCall(null, GetValue(2).String, null, GetValue(1).BlockDefinition, GetLocation(2));
		}

		private void _298()
		{
			SetBlock(GetValue(2).CallExpression, GetValue(1).BlockDefinition);
			yyval.Expression = GetValue(2).CallExpression;
		}

		private void _299()
		{
			yyval.Expression = MakeIfExpression(ToCondition(GetValue(5).Expression), GetValue(3).Statements, GetValue(2).ElseIfClauses, yyloc);
		}

		private void _300()
		{
			yyval.Expression = new UnlessExpression(ToCondition(GetValue(5).Expression), GetValue(3).Statements, GetValue(2).ElseIfClause, yyloc);
		}

		private void _301()
		{
			_tokenizer.EnterLoopCondition();
		}

		private void _302()
		{
			_tokenizer.LeaveLoopCondition();
		}

		private void _303()
		{
			yyval.Expression = new WhileLoopExpression(ToCondition(GetValue(5).Expression), true, false, GetValue(2).Statements, yyloc);
		}

		private void _304()
		{
			_tokenizer.EnterLoopCondition();
		}

		private void _305()
		{
			_tokenizer.LeaveLoopCondition();
		}

		private void _306()
		{
			yyval.Expression = new WhileLoopExpression(ToCondition(GetValue(5).Expression), false, false, GetValue(2).Statements, yyloc);
		}

		private void _308()
		{
			_tokenizer.EnterLoopCondition();
		}

		private void _309()
		{
			_tokenizer.LeaveLoopCondition();
			EnterPaddingScope();
		}

		private void _310()
		{
			yyval.Expression = MakeForLoopExpression(GetValue(8).CompoundLeftValue, GetValue(5).Expression, GetValue(2).Statements, yyloc);
			LeaveScope();
		}

		private void _311()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _312()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _313()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_ENDARG;
		}

		private void _314()
		{
			_tokenizer.ReportWarning(Errors.InterpretedAsGroupedExpression);
			yyval.Expression = GetValue(3).Expression;
		}

		private void _315()
		{
			yyval.Expression = MakeBlockExpression(GetValue(2).Statements, yyloc);
		}

		private void _316()
		{
			yyval.Expression = GetValue(2).Body;
		}

		private void _317()
		{
			EnterClassDefinitionScope();
		}

		private void _318()
		{
			if (InMethod)
			{
				ErrorSink.Add(_sourceUnit, "class definition in method body", GetLocation(6), -1, Severity.Error);
			}
			yyval.Expression = new ClassDefinition(CurrentScope, GetValue(5).ConstantVariable, GetValue(4).Expression, GetValue(2).Body, yyloc);
			LeaveScope();
		}

		private void _319()
		{
			yyval.Integer1 = _inInstanceMethodDefinition;
			_inInstanceMethodDefinition = 0;
		}

		private void _320()
		{
			yyval.Integer1 = _inSingletonMethodDefinition;
			_inSingletonMethodDefinition = 0;
			EnterSingletonClassDefinitionScope();
		}

		private void _321()
		{
			_inInstanceMethodDefinition = GetValue(5).Integer1;
			_inSingletonMethodDefinition = GetValue(3).Integer1;
			yyval.Expression = new SingletonDefinition(LeaveScope(), GetValue(6).Expression, GetValue(2).Body, yyloc);
		}

		private void _322()
		{
			EnterModuleDefinitionScope();
		}

		private void _323()
		{
			if (InMethod)
			{
				ErrorSink.Add(_sourceUnit, "module definition in method body", GetLocation(5), -1, Severity.Error);
			}
			yyval.Expression = new ModuleDefinition(CurrentScope, GetValue(4).ConstantVariable, GetValue(2).Body, yyloc);
			LeaveScope();
		}

		private void _324()
		{
			_inInstanceMethodDefinition++;
			EnterMethodDefinitionScope();
		}

		private void _325()
		{
			_inInstanceMethodDefinition--;
			yyval.Expression = new MethodDefinition(CurrentScope, null, GetValue(5).String, GetValue(3).Parameters, GetValue(2).Body, yyloc);
			LeaveScope();
		}

		private void _326()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_FNAME;
		}

		private void _327()
		{
			_inSingletonMethodDefinition++;
			_tokenizer.LexicalState = LexicalState.EXPR_ENDFN;
			EnterSingletonMethodDefinitionScope();
		}

		private void _328()
		{
			_inSingletonMethodDefinition--;
			yyval.Expression = new MethodDefinition(CurrentScope, GetValue(8).Expression, GetValue(5).String, GetValue(3).Parameters, GetValue(2).Body, yyloc);
			LeaveScope();
		}

		private void _329()
		{
			yyval.Expression = GetValue(1).LambdaDefinition;
		}

		private void _330()
		{
			yyval.Body = MakeBody(GetValue(4).Statements, GetValue(3).RescueClauses, GetValue(2).ElseIfClause, GetLocation(2), GetValue(1).Statements, yyloc);
		}

		private void _331()
		{
			yyval.Expression = new CaseExpression(GetValue(5).Expression, GetValue(3).WhenClauses.ToArray(), GetValue(2).ElseIfClause, yyloc);
		}

		private void _332()
		{
			yyval.Expression = new CaseExpression(null, GetValue(3).WhenClauses.ToArray(), GetValue(2).ElseIfClause, yyloc);
		}

		private void _338()
		{
			yyval.ElseIfClauses = MakeListAddOpt(GetValue(1).ElseIfClause);
		}

		private void _339()
		{
			GetValue(1).ElseIfClauses.Add(new ElseIfClause(GetValue(4).Expression, GetValue(2).Statements, yyloc));
			yyval.ElseIfClauses = GetValue(1).ElseIfClauses;
		}

		private void _340()
		{
			yyval.ElseIfClause = null;
		}

		private void _341()
		{
			yyval.ElseIfClause = new ElseIfClause(null, GetValue(1).Statements, yyloc);
		}

		private void _342()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(new LeftValue[1] { GetValue(1).LeftValue });
		}

		private void _343()
		{
			yyval.CompoundLeftValue = GetValue(1).CompoundLeftValue;
		}

		private void _344()
		{
			yyval.LeftValues = CollectionUtils.MakeList(GetValue(1).LeftValue);
		}

		private void _345()
		{
			List<LeftValue> list = (yyval.LeftValues = GetValue(3).LeftValues);
			list.Add(GetValue(1).LeftValue);
		}

		private void _346()
		{
			yyval.LeftValue = GetValue(1).LocalVariable;
		}

		private void _347()
		{
			yyval.LeftValue = GetValue(2).CompoundLeftValue;
		}

		private void _348()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(GetValue(1).LeftValues.ToArray());
		}

		private void _349()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(4).LeftValues, GetValue(1).LocalVariable, null);
		}

		private void _350()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(3).LeftValues, Placeholder.Singleton, null);
		}

		private void _351()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(6).LeftValues, GetValue(3).LocalVariable, GetValue(1).LeftValues);
		}

		private void _352()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(GetValue(5).LeftValues, Placeholder.Singleton, GetValue(1).LeftValues);
		}

		private void _353()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(null, GetValue(3).LocalVariable, GetValue(1).LeftValues);
		}

		private void _354()
		{
			yyval.CompoundLeftValue = MakeCompoundLeftValue(null, Placeholder.Singleton, GetValue(1).LeftValues);
		}

		private void _355()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(new LeftValue[1] { GetValue(1).LocalVariable }, 0);
		}

		private void _356()
		{
			yyval.CompoundLeftValue = new CompoundLeftValue(new LeftValue[1] { Placeholder.Singleton }, 0);
		}

		private void _357()
		{
			yyval.LeftValues = CollectionUtils.MakeList(GetValue(1).LeftValue);
		}

		private void _358()
		{
			List<LeftValue> list = (yyval.LeftValues = GetValue(3).LeftValues);
			list.Add(GetValue(1).LeftValue);
		}

		private void _359()
		{
			yyval.LeftValue = GetValue(1).LocalVariable;
		}

		private void _360()
		{
			yyval.LeftValue = GetValue(2).CompoundLeftValue;
		}

		private void _361()
		{
			yyval.Parameters = new Parameters(GetValue(6).LeftValues.ToArray(), GetValue(6).LeftValues.Count, GetValue(4).SimpleAssignmentExpressions.ToArray(), GetValue(1).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _362()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(8).LeftValues, GetValue(2).LeftValues), GetValue(8).LeftValues.Count, GetValue(6).SimpleAssignmentExpressions.ToArray(), GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _363()
		{
			yyval.Parameters = new Parameters(GetValue(4).LeftValues.ToArray(), GetValue(4).LeftValues.Count, GetValue(2).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _364()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(6).LeftValues, GetValue(2).LeftValues), GetValue(6).LeftValues.Count, GetValue(4).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _365()
		{
			yyval.Parameters = new Parameters(GetValue(4).LeftValues.ToArray(), GetValue(4).LeftValues.Count, null, GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _366()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(2).LeftValues, Placeholder.Singleton), GetValue(2).LeftValues.Count, null, null, null, yyloc);
		}

		private void _367()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(6).LeftValues, GetValue(2).LeftValues), GetValue(6).LeftValues.Count, null, GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _368()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), GetValue(2).LeftValues.Count, null, null, GetValue(1).LocalVariable, yyloc);
		}

		private void _369()
		{
			yyval.Parameters = new Parameters(null, 0, GetValue(4).SimpleAssignmentExpressions.ToArray(), GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _370()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), 0, GetValue(6).SimpleAssignmentExpressions.ToArray(), GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _371()
		{
			yyval.Parameters = new Parameters(null, 0, GetValue(2).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _372()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), 0, GetValue(4).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _373()
		{
			yyval.Parameters = new Parameters(null, 0, null, GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _374()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), 0, null, GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _375()
		{
			yyval.Parameters = new Parameters(null, 0, null, null, GetValue(1).LocalVariable, yyloc);
		}

		private void _376()
		{
			yyval.Parameters = Parameters.Empty;
		}

		private void _377()
		{
			yyval.Parameters = null;
		}

		private void _378()
		{
			_tokenizer.CommandMode = true;
			yyval.Parameters = GetValue(1).Parameters;
		}

		private void _379()
		{
			yyval.Parameters = null;
		}

		private void _380()
		{
			yyval.Parameters = GetValue(3).Parameters;
		}

		private void _381()
		{
		}

		private void _385()
		{
			yyval.Integer1 = _tokenizer.EnterLambdaDefinition();
			EnterNestedScope();
		}

		private void _386()
		{
			yyval.LambdaDefinition = MakeLambdaDefinition(GetValue(2).Parameters, GetValue(1).Statements, yyloc);
			_tokenizer.LeaveLambdaDefinition(yyval.Integer1);
			LeaveScope();
		}

		private void _387()
		{
			yyval.Parameters = GetValue(3).Parameters;
		}

		private void _388()
		{
			yyval.Parameters = GetValue(1).Parameters;
		}

		private void _389()
		{
			yyval.Statements = GetValue(2).Statements;
		}

		private void _390()
		{
			yyval.Statements = GetValue(2).Statements;
		}

		private void _391()
		{
			EnterNestedScope();
		}

		private void _392()
		{
			yyval.BlockDefinition = MakeBlockDefinition(GetValue(3).Parameters, GetValue(2).Statements, yyloc);
			LeaveScope();
		}

		private void _393()
		{
			if (GetValue(2).CallExpression is YieldCall)
			{
				_tokenizer.ReportError(Errors.BlockGivenToYield);
			}
			CallExpression expression = (yyval.CallExpression = GetValue(2).CallExpression);
			SetBlock(expression, GetValue(1).BlockDefinition);
		}

		private void _394()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).CallExpression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _395()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).CallExpression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _396()
		{
			yyval.CallExpression = MakeMethodCall(null, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _397()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).Expression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _398()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).Expression, GetValue(2).String, GetValue(1), yyloc);
		}

		private void _399()
		{
			yyval.CallExpression = new MethodCall(GetValue(3).Expression, GetValue(1).String, null, GetLocation(1));
		}

		private void _400()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(3).Expression, Symbols.Call, GetValue(1), yyloc);
		}

		private void _401()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(3).Expression, Symbols.Call, GetValue(1), yyloc);
		}

		private void _402()
		{
			yyval.CallExpression = MakeMethodCall(GetValue(4).Expression, Symbols.ArrayItemRead, GetValue(2), yyloc);
		}

		private void _403()
		{
			yyval.CallExpression = MakeSuperCall(GetValue(1), GetLocation(2));
		}

		private void _404()
		{
			yyval.CallExpression = new SuperCall(null, null, GetLocation(1));
		}

		private void _405()
		{
			EnterNestedScope();
		}

		private void _406()
		{
			yyval.BlockDefinition = MakeBlockDefinition(GetValue(3).Parameters, GetValue(2).Statements, yyloc);
			LeaveScope();
		}

		private void _407()
		{
			EnterNestedScope();
		}

		private void _408()
		{
			yyval.BlockDefinition = MakeBlockDefinition(GetValue(3).Parameters, GetValue(2).Statements, yyloc);
			LeaveScope();
		}

		private void _409()
		{
			yyval.WhenClauses = CollectionUtils.MakeList(GetValue(1).WhenClause);
		}

		private void _410()
		{
			List<WhenClause> list = (yyval.WhenClauses = GetValue(2).WhenClauses);
			list.Add(GetValue(1).WhenClause);
		}

		private void _411()
		{
			yyval.WhenClause = new WhenClause(PopArguments(GetValue(3).ArgumentCount), GetValue(1).Statements, GetLocation(1));
		}

		private void _412()
		{
			yyval.RescueClauses = null;
		}

		private void _414()
		{
			yyval.RescueClauses = CollectionUtils.MakeList(GetValue(1).RescueClause);
		}

		private void _415()
		{
			List<RescueClause> list = (yyval.RescueClauses = GetValue(2).RescueClauses);
			list.Add(GetValue(1).RescueClause);
		}

		private void _416()
		{
			yyval.RescueClause = new RescueClause(Expression.EmptyArray, GetValue(3).LeftValue, GetValue(1).Statements, yyloc);
		}

		private void _417()
		{
			yyval.RescueClause = new RescueClause(PopArguments(GetValue(4).ArgumentCount), GetValue(3).LeftValue, GetValue(1).Statements, yyloc);
		}

		private void _418()
		{
			yyval.LeftValue = null;
		}

		private void _419()
		{
			yyval.LeftValue = GetValue(1).LeftValue;
		}

		private void _420()
		{
			yyval.Statements = null;
		}

		private void _421()
		{
			yyval.Statements = GetValue(1).Statements;
		}

		private void _422()
		{
			yyval.Expressions = CollectionUtils.MakeList((Expression)MakeStringLiteral(GetValue(1), GetLocation(1)));
		}

		private void _423()
		{
			yyval.Expressions = GetValue(1).Expressions;
		}

		private void _424()
		{
			List<Expression> list = (yyval.Expressions = GetValue(2).Expressions);
			list.AddRange(GetValue(1).Expressions);
		}

		private void _425()
		{
			yyval.Expressions = GetValue(2).Expressions;
		}

		private void _426()
		{
			yyval.Expression = new StringConstructor(GetValue(2).Expressions, StringKind.Command, yyloc);
		}

		private void _427()
		{
			yyval.Expression = new RegularExpression(GetValue(2).Expressions, GetValue(1).RegExOptions, yyloc);
		}

		private void _428()
		{
			yyval.Expression = new ArrayConstructor(null, yyloc);
		}

		private void _429()
		{
			GetValue(3).Expressions.Add(new StringConstructor(GetValue(2).Expressions, StringKind.Mutable, GetLocation(2)));
			yyval.Expression = new ArrayConstructor(new Arguments(GetValue(3).Expressions.ToArray()), yyloc);
		}

		private void _430()
		{
			yyval.Expressions = new List<Expression>();
		}

		private void _431()
		{
			List<Expression> list = (yyval.Expressions = GetValue(3).Expressions);
			list.Add(new StringConstructor(GetValue(2).Expressions, StringKind.Mutable, GetLocation(2)));
		}

		private void _432()
		{
			yyval.Expressions = CollectionUtils.MakeList(GetValue(1).Expression);
		}

		private void _433()
		{
			List<Expression> list = (yyval.Expressions = GetValue(2).Expressions);
			list.Add(GetValue(1).Expression);
		}

		private void _434()
		{
			yyval.Expression = new ArrayConstructor(null, yyloc);
		}

		private void _435()
		{
			GetValue(3).Expressions.Add(MakeStringLiteral(GetValue(2), GetLocation(2)));
			yyval.Expression = MakeVerbatimWords(GetValue(3).Expressions, yyloc);
		}

		private void _436()
		{
			yyval.Expressions = new List<Expression>();
		}

		private void _437()
		{
			List<Expression> list = (yyval.Expressions = GetValue(3).Expressions);
			list.Add(MakeStringLiteral(GetValue(2), GetLocation(2)));
		}

		private void _438()
		{
			yyval.Expressions = new List<Expression>();
		}

		private void _439()
		{
			List<Expression> list = (yyval.Expressions = GetValue(2).Expressions);
			list.Add(GetValue(1).Expression);
		}

		private void _440()
		{
			yyval.Expression = MakeStringLiteral(GetValue(1), yyloc);
		}

		private void _441()
		{
			yyval.Expression = GetValue(1).Expression;
		}

		private void _442()
		{
			_tokenizer.PopParenthesisedExpressionStack();
			yyval.Expression = MakeBlockExpression(GetValue(2).Statements, GetLocation(2));
		}

		private void _443()
		{
			yyval.Expression = new IronRuby.Compiler.Ast.GlobalVariable(GetValue(1).String, yyloc);
		}

		private void _444()
		{
			yyval.Expression = GetValue(1).RegexMatchReference;
		}

		private void _445()
		{
			yyval.Expression = new InstanceVariable(GetValue(1).String, yyloc);
		}

		private void _446()
		{
			yyval.Expression = new ClassVariable(GetValue(1).String, yyloc);
		}

		private void _447()
		{
			yyval.Expression = Literal.Integer(GetValue(1).Integer1, yyloc);
		}

		private void _448()
		{
			yyval.Expression = Literal.BigInteger(GetValue(1).BigInteger, yyloc);
		}

		private void _449()
		{
			yyval.Expression = Literal.Double(GetValue(1).Double, yyloc);
		}

		private void _450()
		{
			yyval.Expression = Literal.Integer(-GetValue(1).Integer1, yyloc);
		}

		private void _451()
		{
			yyval.Expression = Literal.BigInteger(-GetValue(1).BigInteger, yyloc);
		}

		private void _452()
		{
			yyval.Expression = Literal.Double(0.0 - GetValue(1).Double, yyloc);
		}

		private void _453()
		{
			yyval.VariableFactory = 0;
			yyval.String = GetValue(1).String;
		}

		private void _454()
		{
			yyval.VariableFactory = 1;
			yyval.String = GetValue(1).String;
		}

		private void _455()
		{
			yyval.VariableFactory = 2;
			yyval.String = GetValue(1).String;
		}

		private void _456()
		{
			yyval.VariableFactory = 3;
			yyval.String = GetValue(1).String;
		}

		private void _457()
		{
			yyval.VariableFactory = 4;
			yyval.String = GetValue(1).String;
		}

		private void _458()
		{
			yyval.VariableFactory = 5;
			yyval.String = null;
		}

		private void _459()
		{
			yyval.VariableFactory = 6;
			yyval.String = null;
		}

		private void _460()
		{
			yyval.VariableFactory = 7;
			yyval.String = null;
		}

		private void _461()
		{
			yyval.VariableFactory = 8;
			yyval.String = null;
		}

		private void _462()
		{
			yyval.VariableFactory = 9;
			yyval.String = null;
		}

		private void _463()
		{
			yyval.VariableFactory = 10;
			yyval.String = null;
		}

		private void _464()
		{
			yyval.VariableFactory = 11;
			yyval.String = null;
		}

		private void _465()
		{
			yyval.Expression = VariableFactory.MakeRead(GetValue(1).VariableFactory, this, GetValue(1).String, yyloc);
		}

		private void _466()
		{
			yyval.LeftValue = VariableFactory.MakeLeftValue(GetValue(1).VariableFactory, this, GetValue(1).String, yyloc);
		}

		private void _467()
		{
			yyval.RegexMatchReference = new RegexMatchReference(GetValue(1).Integer1, GetLocation(1));
		}

		private void _468()
		{
			yyval.Expression = null;
		}

		private void _469()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_BEG;
		}

		private void _470()
		{
			yyval.Expression = GetValue(2).Expression;
		}

		private void _471()
		{
			StopErrorRecovery();
			yyval.Expression = null;
		}

		private void _472()
		{
			yyval.Parameters = GetValue(2).Parameters;
			_tokenizer.LexicalState = LexicalState.EXPR_BEG;
			_tokenizer.CommandMode = true;
		}

		private void _473()
		{
			yyval.Parameters = GetValue(2).Parameters;
		}

		private void _474()
		{
			yyval.Parameters = new Parameters(GetValue(6).LeftValues.ToArray(), GetValue(6).LeftValues.Count, GetValue(4).SimpleAssignmentExpressions.ToArray(), GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _475()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(8).LeftValues, GetValue(2).LeftValues), GetValue(8).LeftValues.Count, GetValue(6).SimpleAssignmentExpressions.ToArray(), GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _476()
		{
			yyval.Parameters = new Parameters(GetValue(4).LeftValues.ToArray(), GetValue(4).LeftValues.Count, GetValue(2).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _477()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(6).LeftValues, GetValue(2).LeftValues), GetValue(6).LeftValues.Count, GetValue(4).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _478()
		{
			yyval.Parameters = new Parameters(GetValue(4).LeftValues.ToArray(), GetValue(4).LeftValues.Count, null, GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _479()
		{
			yyval.Parameters = new Parameters(MakeArray(GetValue(6).LeftValues, GetValue(2).LeftValues), GetValue(6).LeftValues.Count, null, GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _480()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), GetValue(2).LeftValues.Count, null, null, GetValue(1).LocalVariable, yyloc);
		}

		private void _481()
		{
			yyval.Parameters = new Parameters(null, 0, GetValue(4).SimpleAssignmentExpressions.ToArray(), GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _482()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), 0, GetValue(6).SimpleAssignmentExpressions.ToArray(), GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _483()
		{
			yyval.Parameters = new Parameters(null, 0, GetValue(2).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _484()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), 0, GetValue(4).SimpleAssignmentExpressions.ToArray(), null, GetValue(1).LocalVariable, yyloc);
		}

		private void _485()
		{
			yyval.Parameters = new Parameters(null, 0, null, GetValue(2).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _486()
		{
			yyval.Parameters = new Parameters(GetValue(2).LeftValues.ToArray(), 0, null, GetValue(4).LocalVariable, GetValue(1).LocalVariable, yyloc);
		}

		private void _487()
		{
			yyval.Parameters = new Parameters(null, 0, null, null, GetValue(1).LocalVariable, yyloc);
		}

		private void _488()
		{
			yyval.Parameters = Parameters.Empty;
		}

		private void _489()
		{
			_tokenizer.ReportError(Errors.FormalArgumentIsConstantVariable);
			yyval.LocalVariable = DefineParameter(GenerateErrorConstantName(), yyloc);
		}

		private void _490()
		{
			_tokenizer.ReportError(Errors.FormalArgumentIsInstanceVariable);
			yyval.LocalVariable = DefineParameter(GenerateErrorConstantName(), yyloc);
		}

		private void _491()
		{
			_tokenizer.ReportError(Errors.FormalArgumentIsGlobalVariable);
			yyval.LocalVariable = DefineParameter(GenerateErrorConstantName(), yyloc);
		}

		private void _492()
		{
			_tokenizer.ReportError(Errors.FormalArgumentIsClassVariable);
			yyval.LocalVariable = DefineParameter(GenerateErrorConstantName(), yyloc);
		}

		private void _493()
		{
			yyval.LocalVariable = DefineParameter(GetValue(1).String, yyloc);
		}

		private void _494()
		{
			yyval.SimpleAssignmentExpression = new SimpleAssignmentExpression(DefineParameter(GetValue(3).String, yyloc), GetValue(1).Expression, null, yyloc);
		}

		private void _495()
		{
			yyval.SimpleAssignmentExpression = new SimpleAssignmentExpression(DefineParameter(GetValue(3).String, yyloc), GetValue(1).Expression, null, yyloc);
		}

		private void _496()
		{
			yyval.SimpleAssignmentExpressions = CollectionUtils.MakeList(GetValue(1).SimpleAssignmentExpression);
		}

		private void _497()
		{
			List<SimpleAssignmentExpression> list = (yyval.SimpleAssignmentExpressions = GetValue(3).SimpleAssignmentExpressions);
			list.Add(GetValue(1).SimpleAssignmentExpression);
		}

		private void _498()
		{
			yyval.SimpleAssignmentExpressions = CollectionUtils.MakeList(GetValue(1).SimpleAssignmentExpression);
		}

		private void _499()
		{
			List<SimpleAssignmentExpression> list = (yyval.SimpleAssignmentExpressions = GetValue(3).SimpleAssignmentExpressions);
			list.Add(GetValue(1).SimpleAssignmentExpression);
		}

		private void _502()
		{
			yyval.LocalVariable = GetValue(1).LocalVariable;
		}

		private void _503()
		{
			yyval.LocalVariable = DefineParameter(Symbols.RestArgsLocal, GetLocation(1));
		}

		private void _506()
		{
			yyval.LocalVariable = GetValue(1).LocalVariable;
		}

		private void _507()
		{
			yyval.LocalVariable = null;
		}

		private void _508()
		{
			yyval.LocalVariable = GetValue(1).LocalVariable;
		}

		private void _510()
		{
			_tokenizer.LexicalState = LexicalState.EXPR_BEG;
		}

		private void _511()
		{
			yyval.Expression = GetValue(2).Expression;
		}

		private void _512()
		{
			yyval.Maplets = CollectionUtils.MakeList(GetValue(1).Maplet);
		}

		private void _513()
		{
			List<Maplet> list = (yyval.Maplets = GetValue(3).Maplets);
			list.Add(GetValue(1).Maplet);
		}

		private void _514()
		{
			yyval.Maplet = new Maplet(GetValue(3).Expression, GetValue(1).Expression, yyloc);
		}

		private void _515()
		{
			yyval.Maplet = new Maplet(MakeSymbolLiteral(GetValue(2).String, GetLocation(2)), GetValue(1).Expression, yyloc);
		}

		private void _528()
		{
		}

		private void _530()
		{
		}

		private void _534()
		{
		}

		private void _537()
		{
			StopErrorRecovery();
		}

		private void _540()
		{
			StopErrorRecovery();
		}

		internal static int GetRuleRhsLength(int ruleDef)
		{
			return ruleDef & 0xFFFF;
		}

		internal static int GetRuleLhsNonterminal(int ruleDef)
		{
			return ruleDef >> 16;
		}

		private void InitializeTables()
		{
			_stack = new ParserStack<State, TokenValue, SourceSpan>();
			if (_tables == null)
			{
				lock (_tablesLock)
				{
					if (_tables == null)
					{
						ParserTables tables = new ParserTables();
						InitializeGeneratedTables(tables);
						Thread.MemoryBarrier();
						_tables = tables;
					}
				}
			}
			_states = _tables.States;
			_rules = _tables.Rules;
			_errorToken = _tables.ErrorToken;
			_eofToken = _tables.EofToken;
		}

		private State[] BuildStates(short[] data)
		{
			int num = 0;
			State[] array = new State[data[num++]];
			for (int i = 0; i < array.Length; i++)
			{
				int num2 = data[num++];
				Dictionary<int, int> dictionary = null;
				Dictionary<int, int> dictionary2 = null;
				int defaultAction = 0;
				if (num2 >= 0)
				{
					int num3 = data[num++];
					if (num2 > 0)
					{
						dictionary = new Dictionary<int, int>(num2);
						for (int j = 0; j < num2; j++)
						{
							dictionary.Add(data[num++], data[num++]);
						}
					}
					else
					{
						defaultAction = data[num++];
					}
					if (num3 > 0)
					{
						dictionary2 = new Dictionary<int, int>(num3);
						for (int k = 0; k < num3; k++)
						{
							dictionary2.Add(-data[num++], data[num++]);
						}
					}
				}
				else
				{
					defaultAction = num2;
				}
				array[i] = new State(dictionary, dictionary2, defaultAction);
			}
			return array;
		}

		private bool Parse()
		{
			_nextToken = 0;
			_currentState = _states[0];
			_lastTokenSpan = GetTokenSpan();
			_stack.Push(_currentState, yyval, yyloc);
			while (true)
			{
				int value = _currentState.DefaultAction;
				if (_currentState.Actions != null)
				{
					if (_nextToken == 0)
					{
						_lastTokenSpan = GetTokenSpan();
						_nextToken = GetNextToken();
					}
					_currentState.Actions.TryGetValue(_nextToken, out value);
				}
				if (value > 0)
				{
					Shift(value);
				}
				else if (value < 0)
				{
					Reduce(-value - 1);
					if (value == -1)
					{
						return true;
					}
				}
				else if (value == 0 && !ErrorRecovery())
				{
					break;
				}
			}
			return false;
		}

		private void Shift(int stateId)
		{
			_currentState = _states[stateId];
			_stack.Push(_currentState, GetTokenValue(), GetTokenSpan());
			if (_recovering)
			{
				if (_nextToken != _errorToken)
				{
					_tokensSinceLastError++;
				}
				if (_tokensSinceLastError > 5)
				{
					_recovering = false;
				}
			}
			if (_nextToken != _eofToken)
			{
				_nextToken = 0;
			}
		}

		private void Reduce(int ruleId)
		{
			int ruleDef = _rules[ruleId];
			int ruleRhsLength = GetRuleRhsLength(ruleDef);
			switch (ruleRhsLength)
			{
			case 0:
				yyloc = MergeLocations(_lastTokenSpan, GetTokenSpan());
				break;
			case 1:
				yyloc = _stack.PeekLocation(1);
				break;
			default:
			{
				SourceSpan location = GetLocation(ruleRhsLength);
				SourceSpan location2 = GetLocation(1);
				yyloc = MergeLocations(location, location2);
				break;
			}
			}
			DoAction(ruleId);
			_stack.Pop(ruleRhsLength);
			State state = _stack.PeekState(1);
			int value;
			if (state.GotoStates.TryGetValue(GetRuleLhsNonterminal(ruleDef), out value))
			{
				state = _states[value];
			}
			_stack.Push(state, yyval, yyloc);
			_currentState = state;
		}

		private void DoDefaultAction()
		{
			yyval = _stack.PeekValue(1);
		}

		public bool ErrorRecovery()
		{
			if (!_recovering)
			{
				ReportSyntaxError(GetSyntaxErrorMessage());
			}
			if (!FindErrorRecoveryState())
			{
				return false;
			}
			ShiftErrorToken();
			bool result = DiscardInvalidTokens();
			_recovering = true;
			_tokensSinceLastError = 0;
			return result;
		}

		private string GetSyntaxErrorMessage()
		{
			StringBuilder stringBuilder = new StringBuilder();
			stringBuilder.AppendFormat("syntax error, unexpected {0}", Tokenizer.GetTokenDescription((Tokens)_nextToken));
			if (_currentState.Actions.Count < 7)
			{
				int num = 0;
				int num2 = _currentState.Actions.Keys.Count - 1;
				foreach (int key in _currentState.Actions.Keys)
				{
					if (num == 0)
					{
						stringBuilder.Append(", expecting ");
					}
					else if (num == num2)
					{
						stringBuilder.Append(", or ");
					}
					else
					{
						stringBuilder.Append(", ");
					}
					stringBuilder.Append(Tokenizer.GetTokenDescription((Tokens)key));
					num++;
				}
			}
			return stringBuilder.ToString();
		}

		public void ShiftErrorToken()
		{
			int nextToken = _nextToken;
			_nextToken = _errorToken;
			int stateId = _currentState.Actions[_nextToken];
			Shift(stateId);
			_nextToken = nextToken;
		}

		public bool FindErrorRecoveryState()
		{
			while (true)
			{
				int value;
				if (_currentState.Actions != null && _currentState.Actions.TryGetValue(_errorToken, out value) && value > 0)
				{
					return true;
				}
				_stack.Pop();
				if (_stack.IsEmpty)
				{
					break;
				}
				_currentState = _stack.PeekState(1);
			}
			return false;
		}

		public bool DiscardInvalidTokens()
		{
			int value = _currentState.DefaultAction;
			if (_currentState.Actions != null)
			{
				while (true)
				{
					if (_nextToken == 0)
					{
						_nextToken = GetNextToken();
					}
					if (_nextToken == _eofToken)
					{
						return false;
					}
					_currentState.Actions.TryGetValue(_nextToken, out value);
					if (value != 0)
					{
						break;
					}
					_nextToken = 0;
				}
				return true;
			}
			if (_recovering && _tokensSinceLastError == 0)
			{
				_nextToken = 0;
				return true;
			}
			return true;
		}

		private TokenValue GetValue(int depth)
		{
			return _stack.PeekValue(depth);
		}

		private SourceSpan GetLocation(int depth)
		{
			return _stack.PeekLocation(depth);
		}

		private void ClearInput()
		{
			_nextToken = 0;
		}

		private void StopErrorRecovery()
		{
			_recovering = false;
		}

		[Conditional("DEBUG")]
		internal void EnableLogging(IParserLogger logger)
		{
		}

		[Conditional("DEBUG")]
		internal void DisableLogging()
		{
		}

		[Conditional("DEBUG")]
		private void LogStateEntered()
		{
		}

		[Conditional("DEBUG")]
		private void LogNextToken(int tokenId)
		{
		}

		[Conditional("DEBUG")]
		private void LogBeforeReduction(int ruleId, int rhsLength)
		{
		}

		[Conditional("DEBUG")]
		private void LogBeforeShift(int stateId, int tokenId, bool isErrorShift)
		{
		}

		[Conditional("DEBUG")]
		private void LogBeforeGoto(int stateId, int ruleId)
		{
		}

		[Conditional("DEBUG")]
		public void DumpTables(TextWriter output)
		{
		}

		private SourceSpan GetTokenSpan()
		{
			return _tokenizer.TokenSpan;
		}

		private TokenValue GetTokenValue()
		{
			return _tokenizer.TokenValue;
		}

		private int GetNextToken()
		{
			Tokens nextToken = _tokenizer.GetNextToken();
			if (_tokenSink != null)
			{
				_tokenSink(nextToken, _tokenizer.TokenSpan);
			}
			return (int)nextToken;
		}

		private void ReportSyntaxError(string message)
		{
			ErrorSink.Add(_sourceUnit, message, GetTokenSpan(), -1, Severity.FatalError);
			throw new InternalSyntaxError();
		}

		internal void ReportSyntaxError(ErrorInfo error)
		{
			ErrorSink.Add(_sourceUnit, error.GetMessage(), GetTokenSpan(), error.Code, Severity.FatalError);
			throw new InternalSyntaxError();
		}

		private string GenerateErrorLocalName()
		{
			return "error#" + _generatedNameId++;
		}

		private string GenerateErrorConstantName()
		{
			return "Error#" + _generatedNameId++;
		}

		public Parser()
			: this(ErrorSink.Default)
		{
		}

		public Parser(ErrorSink errorSink)
		{
			_tokenizer = new Tokenizer(false, this)
			{
				ErrorSink = errorSink
			};
			InitializeTables();
		}

		public SourceUnitTree Parse(SourceUnit sourceUnit, RubyCompilerOptions options, ErrorSink errorSink)
		{
			ErrorCounter errorCounter = new ErrorCounter(errorSink);
			_tokenizer.ErrorSink = errorCounter;
			_tokenizer.Compatibility = options.Compatibility;
			_lexicalScopes.Clear();
			EnterScope(CreateTopScope(options.LocalNames));
			using (SourceCodeReader sourceCodeReader = sourceUnit.GetReader())
			{
				_sourceUnit = sourceUnit;
				_tokenizer.Initialize(null, sourceCodeReader, sourceUnit, options.InitialLocation);
				_tokenizer.Encoding = ((sourceCodeReader.Encoding != null) ? RubyEncoding.GetRubyEncoding(sourceCodeReader.Encoding) : RubyEncoding.UTF8);
				_tokenizer.AllowNonAsciiIdentifiers = _tokenizer.Encoding != RubyEncoding.Ascii;
				try
				{
					Parse();
					LeaveScope();
				}
				catch (InternalSyntaxError)
				{
					_ast = null;
					_lexicalScopes.Clear();
				}
				finally
				{
					ScriptCodeParseResult value;
					if (errorCounter.AnyError)
					{
						_ast = null;
						value = (_tokenizer.UnterminatedToken ? ScriptCodeParseResult.IncompleteToken : ((!_tokenizer.EndOfFileReached) ? ScriptCodeParseResult.Invalid : ScriptCodeParseResult.IncompleteStatement));
					}
					else
					{
						value = ScriptCodeParseResult.Complete;
					}
					sourceUnit.CodeProperties = value;
				}
				return _ast;
			}
		}

		private static LexicalScope CreateTopScope(List<string> localVariableNames)
		{
			LexicalScope outerScope = ((localVariableNames == null) ? null : new RuntimeLexicalScope(localVariableNames));
			return new TopStaticLexicalScope(outerScope);
		}

		private LocalVariable DefineParameter(string name, SourceSpan location)
		{
			LocalVariable value;
			if (CurrentScope.TryGetValue(name, out value))
			{
				if (name != "_")
				{
					_tokenizer.ReportError(Errors.DuplicateParameterName);
				}
				return value;
			}
			return CurrentScope.AddVariable(name, location);
		}

		private FileInitializerStatement AddInitializer(FileInitializerStatement initializer)
		{
			if (_initializers == null)
			{
				_initializers = new List<FileInitializerStatement>();
			}
			_initializers.Add(initializer);
			return initializer;
		}

		private SourceSpan MergeLocations(SourceSpan start, SourceSpan end)
		{
			return new SourceSpan(start.Start, end.End);
		}

		private LexicalScope EnterScope(LexicalScope scope)
		{
			_lexicalScopes.Push(scope);
			return scope;
		}

		private LexicalScope EnterNestedScope()
		{
			LexicalScope lexicalScope = new BlockLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterPaddingScope()
		{
			LexicalScope lexicalScope = new PaddingLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterFileInitializerScope()
		{
			LexicalScope lexicalScope = new TopStaticLexicalScope(null);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterTopStaticScope()
		{
			LexicalScope lexicalScope = new TopStaticLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterModuleDefinitionScope()
		{
			LexicalScope lexicalScope = new TopLocalDefinitionLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterClassDefinitionScope()
		{
			LexicalScope lexicalScope = new ClassLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterSingletonClassDefinitionScope()
		{
			LexicalScope lexicalScope = new TopLocalDefinitionLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterMethodDefinitionScope()
		{
			LexicalScope lexicalScope = new MethodLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope EnterSingletonMethodDefinitionScope()
		{
			LexicalScope lexicalScope = new TopLocalDefinitionLexicalScope(CurrentScope);
			_lexicalScopes.Push(lexicalScope);
			return lexicalScope;
		}

		private LexicalScope LeaveScope()
		{
			return _lexicalScopes.Pop();
		}

		public bool IsLocalVariable(string identifier)
		{
			return CurrentScope.ResolveVariable(identifier) != null;
		}

		private Expression ToCondition(Expression expression)
		{
			return expression.ToCondition(CurrentScope);
		}

		private Body MakeBody(Statements statements, List<RescueClause> rescueClauses, ElseIfClause elseIf, SourceSpan elseIfLocation, Statements ensureStatements, SourceSpan location)
		{
			if (elseIf != null && rescueClauses == null)
			{
				ErrorSink.Add(_sourceUnit, "else without rescue is useless", elseIfLocation, -1, Severity.Warning);
			}
			return new Body(statements, rescueClauses, (elseIf != null) ? elseIf.Statements : null, ensureStatements, location);
		}

		internal LeftValue CannotAssignError(string constantName, SourceSpan location)
		{
			Tokenizer.ReportError(Errors.CannotAssignTo, constantName);
			return CurrentScope.ResolveOrAddVariable(GenerateErrorLocalName(), location);
		}

		private void MatchReferenceReadOnlyError(RegexMatchReference matchRef)
		{
			Tokenizer.ReportError(Errors.MatchGroupReferenceReadOnly, matchRef.VariableName);
		}

		private AliasStatement MakeGlobalAlias(string newVar, string existingVar, SourceSpan location)
		{
			return new AliasStatement(false, new ConstructedSymbol(newVar), new ConstructedSymbol(existingVar), location);
		}

		private Expression MakeGlobalAlias(string newVar, RegexMatchReference existingVar, SourceSpan location)
		{
			if (existingVar.CanAlias)
			{
				return new AliasStatement(false, new ConstructedSymbol(newVar), new ConstructedSymbol(existingVar.VariableName), location);
			}
			_tokenizer.ReportError(Errors.CannotAliasGroupMatchVariable);
			return new ErrorExpression(location);
		}

		private AliasStatement MakeGlobalAlias(RegexMatchReference newVar, string existingVar, SourceSpan location)
		{
			return new AliasStatement(false, new ConstructedSymbol(newVar.VariableName), new ConstructedSymbol(existingVar), location);
		}

		private Expression MakeGlobalAlias(RegexMatchReference newVar, RegexMatchReference existingVar, SourceSpan location)
		{
			if (existingVar.CanAlias)
			{
				return new AliasStatement(false, new ConstructedSymbol(newVar.VariableName), new ConstructedSymbol(existingVar.VariableName), location);
			}
			_tokenizer.ReportError(Errors.CannotAliasGroupMatchVariable);
			return new ErrorExpression(location);
		}

		private List<T> MakeListAddOpt<T>(T item)
		{
			List<T> list = new List<T>();
			if (item != null)
			{
				list.Add(item);
			}
			return list;
		}

		private Expression MakeBlockExpression(Statements statements, SourceSpan location)
		{
			if (statements.Count == 0)
			{
				return BlockExpression.Empty;
			}
			if (statements.Count == 1)
			{
				return statements.First;
			}
			return new BlockExpression(statements, location);
		}

		private ForLoopExpression MakeForLoopExpression(CompoundLeftValue lvalue, Expression list, Statements body, SourceSpan location)
		{
			return new ForLoopExpression(variables: (!lvalue.HasUnsplattedValue) ? new Parameters(lvalue.LeftValues, lvalue.LeftValues.Length, null, null, null, SourceSpan.None) : new Parameters(ArrayUtils.RemoveAt(lvalue.LeftValues, lvalue.UnsplattedValueIndex), lvalue.UnsplattedValueIndex, null, lvalue.UnsplattedValue, null, SourceSpan.None), definedScope: CurrentScope, list: list, body: body, location: location);
		}

		private IfExpression MakeIfExpression(Expression condition, Statements body, List<ElseIfClause> elseIfClauses, SourceSpan location)
		{
			elseIfClauses.Reverse();
			return new IfExpression(condition, body, elseIfClauses, location);
		}

		private ArrayConstructor MakeVerbatimWords(List<Expression> words, SourceSpan location)
		{
			return new ArrayConstructor(new Arguments(words.ToArray()), location);
		}

		private Expression[] PopHashArguments(int argumentCount, SourceSpan location)
		{
			if (argumentCount % 2 != 0)
			{
				ErrorSink.Add(_sourceUnit, "odd number list for Hash", location, -1, Severity.Error);
				return PopArguments(argumentCount, Literal.Nil(SourceSpan.None));
			}
			return PopArguments(argumentCount);
		}

		private Arguments RequireNoBlockArg(TokenValue arguments)
		{
			if (arguments.Block != null)
			{
				ErrorSink.Add(_sourceUnit, "block argument should not be given", arguments.Block.Location, -1, Severity.Error);
				arguments.Block = null;
			}
			return arguments.Arguments;
		}

		private static MethodCall MakeMethodCall(Expression target, string methodName, TokenValue args, SourceSpan location)
		{
			return new MethodCall(target, methodName, args.Arguments, args.Block, location);
		}

		private static MethodCall MakeMethodCall(Expression target, string methodName, TokenValue args, Block block, SourceSpan location)
		{
			return new MethodCall(target, methodName, args.Arguments, block, location);
		}

		private static ArrayItemAccess MakeArrayItemAccess(Expression array, TokenValue args, SourceSpan location)
		{
			return new ArrayItemAccess(array, args.Arguments, args.Block, location);
		}

		private static Expression MakeMatch(Expression left, Expression right, SourceSpan location)
		{
			RegularExpression regularExpression = left as RegularExpression;
			if (regularExpression != null)
			{
				return new MatchExpression(regularExpression, right, location);
			}
			return new MethodCall(left, Symbols.Match, new Arguments(right), location);
		}

		private static SuperCall MakeSuperCall(TokenValue args, SourceSpan location)
		{
			return new SuperCall(args.Arguments, args.Block, location);
		}

		private static CompoundLeftValue MakeCompoundLeftValue(List<LeftValue> leading, LeftValue unsplat, List<LeftValue> trailing)
		{
			int num = ((leading != null) ? leading.Count : 0);
			int num2 = ((trailing != null) ? trailing.Count : 0);
			LeftValue[] array = new LeftValue[num + 1 + num2];
			if (num > 0)
			{
				leading.CopyTo(array, 0);
			}
			array[num] = unsplat;
			if (num2 > 0)
			{
				trailing.CopyTo(array, num + 1);
			}
			return new CompoundLeftValue(array, num);
		}

		private static T[] MakeArray<T>(List<T> left, List<T> right)
		{
			T[] array = new T[left.Count + right.Count];
			left.CopyTo(array, 0);
			right.CopyTo(array, left.Count);
			return array;
		}

		private static T[] MakeArray<T>(List<T> left, T right)
		{
			T[] array = new T[left.Count + 1];
			left.CopyTo(array, 0);
			array[array.Length - 1] = right;
			return array;
		}

		private void PushArgument(int argumentCount, Expression argument)
		{
			if (_argumentCount == _argumentStack.Length)
			{
				Array.Resize(ref _argumentStack, _argumentCount * 2);
			}
			_argumentStack[_argumentCount++] = argument;
			yyval.ArgumentCount = argumentCount + 1;
		}

		private Expression[] PopArguments(int count)
		{
			Expression[] array = new Expression[count];
			_argumentCount -= count;
			Array.Copy(_argumentStack, _argumentCount, array, 0, count);
			return array;
		}

		private Expression[] PopArguments(int count, Expression additionalArgument)
		{
			Expression[] array = new Expression[count + 1];
			_argumentCount -= count;
			Array.Copy(_argumentStack, _argumentCount, array, 0, count);
			array[count] = additionalArgument;
			return array;
		}

		private Expression[] PopArguments(Expression additionalArgument, int count)
		{
			Expression[] array = new Expression[count + 1];
			_argumentCount -= count;
			Array.Copy(_argumentStack, _argumentCount, array, 1, count);
			array[0] = additionalArgument;
			return array;
		}

		private void SetNoArguments(Block block)
		{
			yyval.Arguments = null;
			yyval.Block = block;
		}

		private void SetArguments()
		{
			yyval.Arguments = Arguments.Empty;
			yyval.Block = null;
		}

		private void SetArguments(Block block)
		{
			yyval.Arguments = Arguments.Empty;
			yyval.Block = block;
		}

		private void SetArguments(Expression expression)
		{
			yyval.Arguments = new Arguments(expression);
			yyval.Block = null;
		}

		private void SetArguments(Expression expression, Block block)
		{
			yyval.Arguments = new Arguments(expression);
			yyval.Block = block;
		}

		private void PopAndSetArguments(int argumentCount, Block block)
		{
			yyval.Arguments = new Arguments(PopArguments(argumentCount));
			yyval.Block = block;
		}

		private void SetArguments(Expression[] arguments, Block block)
		{
			yyval.Arguments = new Arguments(arguments);
			yyval.Block = block;
		}

		private void SetBlock(CallExpression expression, BlockDefinition block)
		{
			if (expression.Block != null)
			{
				ReportSyntaxError(Errors.BothBlockDefAndBlockRefGiven);
			}
			else
			{
				expression.Block = block;
			}
		}

		private LambdaDefinition MakeLambdaDefinition(Parameters parameters, Statements body, SourceSpan location)
		{
			return new LambdaDefinition(new BlockDefinition(CurrentScope, parameters, body, location));
		}

		private BlockDefinition MakeBlockDefinition(Parameters parameters, Statements body, SourceSpan location)
		{
			return new BlockDefinition(CurrentScope, parameters, body, location);
		}

		private static Expression MakeLoopStatement(Expression statement, Expression condition, bool isWhileLoop, SourceSpan location)
		{
			return new WhileLoopExpression(condition, isWhileLoop, statement is Body, new Statements(statement), location);
		}

		public static string GetTerminalName(int terminal)
		{
			return RubyUtils.TryMangleName(((Tokens)terminal).ToString()).ToUpperInvariant();
		}

		public static StringLiteral MakeStringLiteral(TokenValue token, SourceSpan location)
		{
			return new StringLiteral(token.StringContent, token.Encoding, location);
		}

		public SymbolLiteral MakeSymbolLiteral(string symbol, SourceSpan location)
		{
			return new SymbolLiteral(symbol, symbol.IsAscii() ? RubyEncoding.Ascii : Encoding, location);
		}

		internal Expression MakeSymbolLiteral(ConstructedSymbol symbol, SourceSpan location)
		{
			string text = symbol.Value as string;
			if (text != null)
			{
				return MakeSymbolLiteral(text, location);
			}
			return (StringConstructor)symbol.Value;
		}

		private StringConstructor MakeSymbolConstructor(List<Expression> content, SourceSpan location)
		{
			return new StringConstructor(content, StringKind.Symbol, location);
		}

		public static string CharToString(char ch)
		{
			switch (ch)
			{
			case '\a':
				return "'\\a'";
			case '\b':
				return "'\\b'";
			case '\f':
				return "'\\f'";
			case '\n':
				return "'\\n'";
			case '\r':
				return "'\\r'";
			case '\t':
				return "'\\t'";
			case '\v':
				return "'\\v'";
			case '\0':
				return "'\\0'";
			default:
				return "'" + ch + "'";
			}
		}

		public static string EscapeString(string str)
		{
			if (str != null)
			{
				return new StringBuilder(str).Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("\a", "\\a")
					.Replace("\b", "\\b")
					.Replace("\f", "\\f")
					.Replace("\n", "\\n")
					.Replace("\r", "\\r")
					.Replace("\t", "\\t")
					.Replace("\v", "\\v")
					.Replace("\0", "\\0")
					.ToString();
			}
			return string.Empty;
		}
	}
}
