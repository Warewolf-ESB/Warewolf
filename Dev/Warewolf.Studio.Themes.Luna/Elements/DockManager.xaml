<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:igDock="http://infragistics.com/DockManager"
                    xmlns:igWinThemes="http://infragistics.com/Themes"
                    xmlns:igWindows="http://infragistics.com/Windows"
                    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Luna.DockManagerGeneric.xaml" />
        <ResourceDictionary Source="../Common/Color.xaml" />
        <ResourceDictionary Source="../Common/Brushes.xaml" />
        <ResourceDictionary Source="../Common/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  ***************************************  BRUSHES  ******************  -->

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftCenterFillKey}" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightCenterFillKey}" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopCenterFillKey}" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomCenterFillKey}" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightHottrackCenterFillKey}" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopHottrackCenterFillKey}" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomHottrackCenterFillKey}" Color="{StaticResource Color_006}" />

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedPaneInnerBorderFillKey}" StartPoint="0.50,0.18" EndPoint="0.50,1.02">
        <GradientStop Offset="0" Color="{StaticResource Color_012}" />
        <GradientStop Offset="0.97" Color="{StaticResource Color_013}" />
        <GradientStop Offset="0.98" Color="{StaticResource Color_014}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackOuterBorderFillKey}" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.93" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.98" Color="{StaticResource WarewolfLightGrey}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackBottomCenterFillKey}" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.93" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.98" Color="{StaticResource WarewolfLightGrey}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTopCenterFillKey}" StartPoint="0,1" EndPoint="0,0">
        <GradientStop Offset="0" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.93" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.98" Color="{StaticResource WarewolfLightGrey}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackLeftCenterFillKey}" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.93" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.98" Color="{StaticResource WarewolfLightGrey}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackRightCenterFillKey}" StartPoint="1,0" EndPoint="0,0">
        <GradientStop Offset="0" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.93" Color="{StaticResource WarewolfLightGrey}" />
        <GradientStop Offset="0.98" Color="{StaticResource WarewolfLightGrey}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}" Color="{StaticResource Color_009}" />

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackInnerBorderFillKey}" StartPoint="1,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="{StaticResource Color_023}" />
        <GradientStop Offset="0.98" Color="{StaticResource Color_024}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}" StartPoint="1,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="{StaticResource Color_023}" />
        <GradientStop Offset="0.98" Color="{StaticResource Color_024}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionFillKey}" Color="{DynamicResource WarewolfDarkGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionFillKey}" Color="{DynamicResource WarewolfLightGrey}" />

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackCenterFillKey}" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_023}" />
        <GradientStop Offset="0.98" Color="{StaticResource Color_024}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalCenterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuSelectionCenterFillKey}" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.ToolTipCenterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.XamDockManagerBackgroundFillKey}" Color="{StaticResource WarewolfLightGrey}" />

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalCenterFillKey}" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{StaticResource Color_012}" />
        <GradientStop Offset="0.49900001287460327" Color="{StaticResource Color_036}" />
        <GradientStop Offset="0.5" Color="{StaticResource Color_037}" />
        <GradientStop Offset="1" Color="{StaticResource Color_037}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackInnerBorderFillKey}" StartPoint="0.5172413793103449,0" EndPoint="0.5172413793103449,0.9666666666666667">
        <GradientStop Offset="0" Color="{StaticResource Color_039}" />
        <GradientStop Offset="0.49880000948905945" Color="{StaticResource Color_040}" />
        <GradientStop Offset="0.5" Color="{StaticResource Color_041}" />
        <GradientStop Offset="1" Color="{StaticResource Color_042}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackCenterFillKey}" StartPoint="0.5172413793103449,0" EndPoint="0.5172413793103449,0.9666666666666667">
        <GradientStop Offset="0" Color="{StaticResource Color_043}" />
        <GradientStop Offset="0.49900001287460327" Color="{StaticResource Color_044}" />
        <GradientStop Offset="0.5" Color="{StaticResource Color_045}" />
        <GradientStop Offset="1" Color="{StaticResource Color_046}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{x:Static igDock:DockManagerBrushKeys.DockingIndicatorGlyphFillKey}" StartPoint="1,0" EndPoint="0,0">
        <GradientStop Offset="0" Color="{StaticResource Color_047}" />
        <GradientStop Offset="1" Color="{StaticResource Color_048}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorCenterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorHeaderFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackCenterFillKey}" Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.DarkBrushKey}" Color="{StaticResource WarewolfDarkGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.LightBrushKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.ThemeColorTextFillKey}" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemOuterBorderFillKey}" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHighlightFillKey}" Color="{StaticResource Color_050}" />

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackHighlightFillKey}" Color="{StaticResource Color_050}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabGroupPaneGlyphFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveOuterBorderFillKey}" Color="{StaticResource Color_016}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveInnerBorderFillKey}" Color="{StaticResource Color_050}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListGroupFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveTopCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveLeftCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveRightCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}" Color="{StaticResource Color_000}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHighlightFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHighlightBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />

    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTextFillKey}" Color="{StaticResource Color_000}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveOuterBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveBottomCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTopCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveLeftCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveRightCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackInnerBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTextFillKey}" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveOuterBorderFillKey}" Color="{StaticResource Color_016}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveOuterBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveInnerBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentNotActiveCenterFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}" Color="{StaticResource Color_022}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}"
                     Opacity="0.7"
                     Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionInnerBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionInnerBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}" Color="{StaticResource Color_016b}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}" Color="{StaticResource Color_016b}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonNotActiveHottrackOuterBorderFillKey}" Color="{StaticResource Color_016b}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}" Color="{StaticResource WarewolfDarkGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalOuterBorderFillKey}" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackOuterBorderFillKey}" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuSelectionOuterBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuSelectionInnerBorderFillKey}" Color="{StaticResource WarewolfDarkGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuSelectionHottrackTextFillKey}" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.ToolTipOuterBorderFillKey}" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}" Color="{DynamicResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneHeaderNotActiveTextFillKey}" Color="{DynamicResource Color_000}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabFlyoutSplitterLightStrokeFillKey}" Color="{StaticResource Color_032}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.UnpinnedTabFlyoutSplitterDarkStrokeFillKey}" Color="{StaticResource Color_033}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemSeparatorLightFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.MenuItemSeparatorDarkFillKey}" Color="{StaticResource Color_034}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalOuterBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupNormalInnerBorderFillKey}" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.AeroDockingIndicatorGroupHottrackOuterBorderFillKey}" Color="{StaticResource Color_038}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorOuterBorderFillKey}" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorFooterFillKey}" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackOuterBorderFillKey}" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackInnerBorderFillKey}" Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorLightTextFillKey}" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}" Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.TabbedDocumentGroupFillKey}"
                     x:Shared="false"
                     Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
    <SolidColorBrush x:Key="{x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}"
                     Opacity="0.3"
                     Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="PreviewStyleKeyBackgroundBrush"
                     Opacity="0.3"
                     Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="TileAreaSplitterThumbBorderBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="TileAreaSplitterThumbBackground" Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="PaneSplitterBackground" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="DockTypeIndicatorTransparentBrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="DockIndicatorBackgroundBrush"
                     Opacity="0.4"
                     Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="DockIndicatorBorderbrush" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="DocTypeIndicatorLIghtStrokeBrush" Color="{StaticResource WarewolfDarkGrey}" />
    <SolidColorBrush x:Key="DockTypeIndicatorStrokeBrush" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="DocTypeIndicatorLightBackgroundBrush" Color="{StaticResource WarewolfDarkGrey}" />
    <SolidColorBrush x:Key="DocTypeIndicatorBackgroundBrush" Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="PreviewIndicatorBackground" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="PreviewIndicatorBorderBrush" Color="{StaticResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="DockableTabGroupTemplateBackground" Color="{StaticResource Color_011}" />

    <!--  ToolWindow Brushes  -->
    <SolidColorBrush x:Key="ToolWindowInactiveCenterFillKey" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ToolWindowActiveCenterFillKey" Color="{StaticResource Color_011}" />
    <SolidColorBrush x:Key="ToolWindowInactiveCaptionFillKey" Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ToolWindowActiveCaptionFillKey" Color="{DynamicResource WarewolfLightGrey}" />
    <SolidColorBrush x:Key="ToolWindowBackgroundFillKey" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ToolWindowInactiveOuterBorderFillKey" Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ToolWindowActiveOuterBorderFillKey" Color="{StaticResource Color_009}" />



    <!--  ********************************* ELEMENT STYLES ****************  -->

    <!--  ========== ToolWindow ==========  -->
    <Style BasedOn="{x:Static igWinThemes:PrimitivesMetro.ToolWindow}" TargetType="{x:Type igDock:PaneToolWindow}" />

    <!--  ========== PaneNavigatorItemsPanel.ScrollDownButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollDownButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23" />
        <Setter Property="MinHeight" Value="23" />
        <!--  <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{StaticResource BrushTransparent}">
                        <Path Width="10"
                              Height="6"
                              Data="M 0,0 L 10,0 5,6 Z"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BrushHighlightedForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== PaneNavigatorItemsPanel.ScrollUpButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneNavigatorItemsPanel.ScrollUpButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="26" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{StaticResource BrushTransparent}">
                        <Path Width="10"
                              Height="6"
                              Data="M 0,6 L 5,0 10,6 Z"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BrushHighlightedForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== PaneSplitter.PreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneSplitter.PreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Rectangle Fill="{StaticResource PreviewStyleKeyBackgroundBrush}" SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== CaptionButtonStyleBase ==========  -->
    <!--  Base style for the buttons in the PaneHeaderPresenter  -->
    <Style x:Key="CaptionButtonStyleBase"
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Style.Triggers>

            <!--  HotTracked Button in an Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>

            <!--  HotTracked Button in an Non-Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>

            <!--  IsPressed Button  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>

            <!--  IsEnabled Button  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="True" />

        </Style.Triggers>
    </Style>

    <Style x:Key="paneCaptionButtonStyleBase"
           BasedOn="{StaticResource CaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="23" />

        <!--  Dev2  -->
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Opacity" Value="0.7" />
    </Style>

    <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
    <!--  ========== PaneHeaderPresenter.MaximizeButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource maximizeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <igWindows:CardPanel>
                            <Path x:Name="maximizeContent"
                                  Width="14"
                                  Height="10"
                                  Data="M4.9999552,3.8333333 L4.9999552,9 L13,9 L13,3.8333333 z M1.9999549,0.83333331 L16,0.83333331 L16,12 L1.9999549,12 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill" />
                            <Path x:Name="restoreContent"
                                  Width="20"
                                  Height="15"
                                  Data="M2.9999905,8 L2.9999905,13.189775 L11,13.189775 L11,8 z M10.936987,2.9552236 L10.936987,5.1449995 L14,5.1449995 L14,8.044776 L18.937006,8.044776 L18.937006,2.9552236 z M7.936996,0 L21.936996,0 L21.936996,10.999999 L14,10.999999 L14,16.144999 L0,16.144999 L0,5.1449995 L7.936996,5.1449995 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding (igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
                            <Setter TargetName="maximizeContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
                            <Setter Property="ToolTip" Value="{StaticResource restoreDownToolTip}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
    <!--  ========== PaneHeaderPresenter.MinimizeButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource minimizeToolTip}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <igWindows:CardPanel>
                            <Path x:Name="minimizeContent"
                                  Width="14"
                                  Height="10"
                                  Data="F1M0,7L14,7 14,10 0,10z"
                                  Fill="{TemplateBinding Foreground}" />
                            <Path x:Name="restoreContent"
                                  Width="20"
                                  Height="15"
                                  Data="M2.9999905,8 L2.9999905,13.189775 L11,13.189775 L11,8 z M10.936987,2.9552236 L10.936987,5.1449995 L14,5.1449995 L14,8.044776 L18.937006,8.044776 L18.937006,2.9552236 z M7.936996,0 L21.936996,0 L21.936996,10.999999 L14,10.999999 L14,16.144999 L0,16.144999 L0,5.1449995 L7.936996,5.1449995 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </igWindows:CardPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding (igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
                            <Setter TargetName="minimizeContent" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="restoreContent" Property="Visibility" Value="Visible" />
                            <Setter Property="ToolTip" Value="{StaticResource restoreUpToolTip}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.CloseButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path x:Name="CloseGlyph"
                              Width="12"
                              Height="12"
                              Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.PinButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource pinToolTip}" />
        <Setter Property="Padding" Value="1.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Path x:Name="PinnedGlyph"
                                  Width="10"
                                  Height="14"
                                  Data="M1.9999808,0 L7.9999809,0 L7.9999809,8.0000019 L10,8.0000019 L10,10.000002 L6.0000005,10.000002 L6.0000005,14.000002 L4.0000005,14.000002 L4.0000005,10.000002 L0,10.000002 L0,8.0000019 L1.9999808,8.0000019 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill"
                                  Visibility="Visible" />
                            <Path x:Name="UnpinnedGlyph"
                                  Width="14"
                                  Height="10"
                                  Data="M4,0 L6,0 L6,1.9999999 L14,1.9999999 L14,8 L6,8 L6,10 L4,10 L4,8 L4,6 L0,6 L0,4 L4,4 L4,1.9999999 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Opacity="1"
                                  Stretch="Fill"
                                  Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource BrushLightForeground}" />
                        </Trigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned">
                            <Setter TargetName="UnpinnedGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PinnedGlyph" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Unpinned" />
        </Style.Triggers>
    </Style>

    <!--  ========== TabGroupPane.DocumentPaneNavigatorButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource showNavigatorToolTip}" />
        <!--  Dev2  -->
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />

        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path Width="15"
                              Height="12"
                              Data="M 4,6 C4,6 12,6 12,6 12,6 12,11 12,11 12,11 4,11 4,11 4,11 4,6 4,6 zM 3,4 C3,4 3,12 3,12 3,12 13,12 13,12 13,12 13,4 13,4 13,4 3,4 3,4 zM 9,7 C9,7 9,10 9,10 9,10 11,10 11,10 11,10 11,7 11,7 11,7 9,7 9,7 zM 7,9 C7,9 7,10 7,10 7,10 8,10 8,10 8,10 8,9 8,9 8,9 7,9 7,9 zM 7,7 C7,7 7,8 7,8 7,8 8,8 8,8 8,8 8,7 8,7 8,7 7,7 7,7 zM 5,7 C5,7 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 5,7 5,7 zM 5,9 C5,9 5,10 5,10 5,10 6,10 6,10 6,10 6,9 6,9 6,9 5,9 5,9 z"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--  ========== MenuItem_IconAreaBackground ==========  -->
    <Style x:Key="MenuItem_IconAreaBackground" TargetType="{x:Type Border}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemIconGroupBorderFillKey}}" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
    </Style>

    <!--  ========== SubMenuItemTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:XamDockManager.SubMenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <!--  Dev2  -->
        <Grid MinHeight="26" Background="Transparent">
            <!--  Dev2  -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="iconColumn"
                                      Width="Auto"
                                      MinWidth="33"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border x:Name="IconAreaBackground" Style="{StaticResource MenuItem_IconAreaBackground}" />

                <!--  MenuItem Highlight  -->
                <Grid x:Name="Highlight"
                      Grid.ColumnSpan="2"
                      Margin="2"
                      Visibility="Collapsed">
                    <Border x:Name="CenterAndBorderFill"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionCenterFillKey}}"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionOuterBorderFillKey}}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True" />
                    <Rectangle x:Name="InnerBorderFill"
                               Margin="1"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionInnerBorderFillKey}}"
                               StrokeThickness="1" />
                </Grid>

                <!--  Icon  -->
                <ContentPresenter x:Name="Icon"
                                  Width="16"
                                  Height="16"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon" />

                <!--  CheckMark  -->
                <Grid x:Name="CheckMark" Visibility="Collapsed">
                    <Border x:Name="CheckMarkBox"
                            Width="18"
                            Height="18"
                            Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalCenterFillKey}}"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxNormalOuterBorderFillKey}}"
                            BorderThickness="1,1,1,1"
                            SnapsToDevicePixels="True">

                        <Path x:Name="CheckMarkGlyph"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                              Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}"
                              FlowDirection="LeftToRight"
                              SnapsToDevicePixels="True" />

                    </Border>
                </Grid>

                <!--  ContentArea  -->
                <Grid Grid.Column="1" VerticalAlignment="Center">

                    <!--  Dev2  -->
                    <ContentPresenter x:Name="Content"
                                      Margin="8,4,8,4"
                                      ContentSource="Header"
                                      TextBlock.FontFamily="{StaticResource DefaultFontFamily}"
                                      TextBlock.FontSize="{StaticResource DefaultFontSize}"
                                      TextBlock.Foreground="{StaticResource BrushForeground}" />
                    <!--  Dev2  -->

                </Grid>

            </Grid>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuSelectionHottrackTextFillKey}}" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsHighlighted" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="CheckMarkBox" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackCenterFillKey}}" />
                <Setter TargetName="CheckMarkBox" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCheckmarkBoxHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Content" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== TabGroupPane.DocumentFilesMenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentFilesMenuItemStyleKey}"
           BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTip" Value="{StaticResource positionToolTip}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                            <Grid Width="30"
                                  Height="30"
                                  VerticalAlignment="Stretch">
                                <Path x:Name="AllItemsInViewGlyph"
                                      Width="10"
                                      Height="6"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 3,8 C3,8 7.5,12.5 7.5,12.5 7.5,12.5 12,8 12,8 12,8 3,8 3,8 z"
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Fill" />
                                <Path x:Name="HasItemsOutOfViewGlyph"
                                      Width="10"
                                      Height="10"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M0,3 C0,3 9,3 9,3 9,3 4.5,7.5 4.5,7.5 4.5,7.5 0,3 0,3 z M0,0 L9,0 9,2 0,2 0,0 z"
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Fill"
                                      Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsSubmenuOpen,
                                                RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <Grid x:Name="MenuItem"
                                  Width="Auto"
                                  Height="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="27" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2"
                                           Margin="0,0,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                           Opacity="1"
                                           SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                           StrokeThickness="1" />
                                <ScrollViewer Grid.ColumnSpan="2"
                                              Margin="3"
                                              CanContentScroll="True"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                            TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </igWindows:CardPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                        <DataTrigger Binding="{Binding (igDock:DocumentTabPanel.HasItemsOutOfView), RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" Value="True">
                            <Setter TargetName="HasItemsOutOfViewGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="AllItemsInViewGlyph" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Hottracked State  -->
            <DataTrigger Binding="{Binding IsHighlighted, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>

            <!--  IsSubmenuOpen State  -->
            <DataTrigger Binding="{Binding IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  ========== TabGroupPane.DocumentCloseButtonStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}"
           BasedOn="{StaticResource paneCaptionButtonStyleBase}"
           TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="{StaticResource closeToolTip}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphFillKey}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Path x:Name="CloseGlyph"
                              Width="12"
                              Height="12"
                              Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="1"
                              Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonHottrackCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedOuterBorderFillKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneCaptionButtonPressedCenterFillKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== centerIndicator ==========  -->
    <ControlTemplate x:Key="centerIndicator" TargetType="{x:Type igDock:DockingIndicator}">
        <Grid x:Name="PART_DockCenter">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  borders  -->
            <Border x:Name="topBd"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    Margin="0,0,0,10"
                    Background="{StaticResource DockIndicatorBackgroundBrush}"
                    BorderBrush="{StaticResource DockIndicatorBorderbrush}"
                    BorderThickness="1,1,1,0" />
            <igWindows:CardPanel x:Name="PART_DockTop"
                                 Grid.Row="0"
                                 Grid.Column="2"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="topIndicatorIcon" IsEnabled="{TemplateBinding CanDockTop}">

                    <Border Width="40"
                            Height="40"
                            BorderBrush="{StaticResource DockTypeIndicatorTransparentBrush}">
                        <Border Width="32"
                                Height="32"
                                Background="{StaticResource DocTypeIndicatorLightBackgroundBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="24"
                                        Height="12"
                                        Margin="3,3,3,0"
                                        VerticalAlignment="Top"
                                        Background="{StaticResource DocTypeIndicatorBackgroundBrush}"
                                        BorderBrush="{StaticResource DockTypeIndicatorStrokeBrush}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Height="4"
                                      Margin="11.145,0,10.854,5.828"
                                      VerticalAlignment="Bottom"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{StaticResource DockTypeIndicatorStrokeBrush}"
                                      Stretch="Fill"
                                      Stroke="{StaticResource DockTypeIndicatorStrokeBrush}" />
                            </Grid>
                        </Border>
                    </Border>

                </Grid>
            </igWindows:CardPanel>

            <!--  Bottom Indicator  -->
            <Path x:Name="centerOctFill"
                  Grid.Row="1"
                  Grid.RowSpan="3"
                  Grid.Column="1"
                  Grid.ColumnSpan="3"
                  Width="60"
                  Height="60"
                  Data="M 62,10.95 C62,10.95 51.04,0 51.04,0 51.04,0 10.95,0 10.95,0 10.95,0 0,10.95 0,10.95 0,10.95 0,51.04 0,51.04 0,51.04 10.95,62 10.95,62 10.95,62 51.04,62 51.04,62 51.04,62 62,51.04 62,51.04 62,51.04 62,10.95 62,10.95 z"
                  Fill="{StaticResource DockIndicatorBackgroundBrush}"
                  Stretch="Fill" />
            <!--  diagonal corner paths  -->
            <Path x:Name="topLeft"
                  Grid.Row="1"
                  Grid.Column="1"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Data="M 11.20,1.20 C11.20,1.20 1.40,11 1.40,11 1.40,11 0,11 0,11 0,11 11.20,-0.20 11.20,-0.20 11.20,-0.20 11.20,1.20 11.20,1.20 z"
                  Fill="{StaticResource DockIndicatorBorderbrush}"
                  Stretch="Fill" />

            <!--  Center Indicator  -->
            <Path x:Name="topRight"
                  Grid.Row="1"
                  Grid.Column="3"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  Data="M 0,1.20 C0,1.20 9.79,11 9.79,11 9.79,11 11.20,11 11.20,11 11.20,11 0,-0.20 0,-0.20 0,-0.20 0,1.20 0,1.20 z"
                  Fill="{StaticResource DockIndicatorBorderbrush}"
                  Stretch="Fill" />
            <Border x:Name="leftBd"
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Margin="0,0,10,0"
                    Background="{StaticResource DockIndicatorBackgroundBrush}"
                    BorderBrush="{StaticResource DockIndicatorBorderbrush}"
                    BorderThickness="1,1,0,1" />
            <igWindows:CardPanel x:Name="PART_DockLeft"
                                 Grid.Row="2"
                                 Grid.Column="0"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="leftIndicatorIcon" IsEnabled="{TemplateBinding CanDockLeft}">
                    <Border Width="40"
                            Height="40"
                            BorderThickness="1">
                        <Border Width="32"
                                Height="32"
                                Background="{StaticResource DocTypeIndicatorLightBackgroundBrush}"
                                BorderBrush="{StaticResource DocTypeIndicatorLIghtStrokeBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="12"
                                        Height="24"
                                        Margin="3,3,0,3"
                                        HorizontalAlignment="Left"
                                        Background="{StaticResource DocTypeIndicatorBackgroundBrush}"
                                        BorderBrush="{StaticResource DockTypeIndicatorStrokeBrush}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Margin="0,13.172,3.604,12.828"
                                      HorizontalAlignment="Right"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{StaticResource DockTypeIndicatorStrokeBrush}"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Fill"
                                      Stroke="{StaticResource DockTypeIndicatorStrokeBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="270" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

            <!--  Top Indicator  -->
            <igWindows:CardPanel x:Name="center"
                                 Grid.Row="2"
                                 Grid.Column="2"
                                 Background="Transparent"
                                 IsHitTestVisible="False"
                                 Opacity="0.75">
                <Grid HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsEnabled="{TemplateBinding CanDockCenter}">
                    <Border Width="32"
                            Height="32"
                            Margin="0"
                            Background="{StaticResource DocTypeIndicatorLightBackgroundBrush}"
                            BorderBrush="{StaticResource DocTypeIndicatorLIghtStrokeBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Border Width="24"
                                    Height="24"
                                    Margin="3"
                                    Background="{StaticResource DocTypeIndicatorBackgroundBrush}"
                                    BorderBrush="{StaticResource DockTypeIndicatorStrokeBrush}"
                                    BorderThickness="1,3,1,1" />
                        </Grid>
                    </Border>
                </Grid>

            </igWindows:CardPanel>

            <!--  Right Indicator  -->
            <Border x:Name="rightBd"
                    Grid.Row="2"
                    Grid.Column="3"
                    Grid.ColumnSpan="2"
                    Margin="10,0,0,0"
                    Background="{StaticResource DockIndicatorBackgroundBrush}"
                    BorderBrush="{StaticResource DockIndicatorBorderbrush}"
                    BorderThickness="0,1,1,1" />
            <igWindows:CardPanel x:Name="PART_DockRight"
                                 Grid.Row="2"
                                 Grid.Column="4"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="rightIndicatorIcon" IsEnabled="{TemplateBinding CanDockRight}">
                    <Border Width="40"
                            Height="40"
                            BorderThickness="1">
                        <Border Width="32"
                                Height="32"
                                Background="{StaticResource DocTypeIndicatorLightBackgroundBrush}"
                                BorderBrush="{StaticResource DocTypeIndicatorLIghtStrokeBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="12"
                                        Height="24"
                                        Margin="14,3,4,3"
                                        Background="{StaticResource DocTypeIndicatorBackgroundBrush}"
                                        BorderBrush="{StaticResource DockTypeIndicatorStrokeBrush}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Margin="1.396,13.422,0,12.578"
                                      HorizontalAlignment="Left"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{StaticResource DockTypeIndicatorStrokeBrush}"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Fill"
                                      Stroke="{StaticResource DockTypeIndicatorStrokeBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="810" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

            <!--  Left Indicator  -->
            <Path x:Name="bottomLeft"
                  Grid.Row="3"
                  Grid.Column="1"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top"
                  Data="M 11.20,9.58 C11.20,9.58 1.40,-0.20 1.40,-0.20 1.40,-0.20 0,-0.20 0,-0.20 0,-0.20 11.20,11 11.20,11 11.20,11 11.20,9.58 11.20,9.58 z"
                  Fill="{StaticResource DockIndicatorBorderbrush}"
                  Stretch="Fill" />
            <Border x:Name="bottomBd"
                    Grid.Row="3"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    Margin="0,10,0,0"
                    Background="{StaticResource DockIndicatorBackgroundBrush}"
                    BorderBrush="{StaticResource DockIndicatorBorderbrush}"
                    BorderThickness="1,0,1,1" />

            <!--  fill for remaining center - between diagonal paths and remaining unfilled space left by borders  -->
            <Path x:Name="bottomRight"
                  Grid.Row="3"
                  Grid.Column="3"
                  Width="11"
                  Height="11"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Data="M 0,9.58 C0,9.58 9.79,-0.20 9.79,-0.20 9.79,-0.20 11.20,-0.20 11.20,-0.20 11.20,-0.20 0,11 0,11 0,11 0,9.58 0,9.58 z"
                  Fill="{StaticResource DockIndicatorBorderbrush}"
                  Stretch="Fill" />
            <igWindows:CardPanel x:Name="PART_DockBottom"
                                 Grid.Row="4"
                                 Grid.Column="2"
                                 Background="Transparent"
                                 Opacity="0.75">
                <Grid x:Name="bottomIndicatorIcon" IsEnabled="{TemplateBinding CanDockBottom}">
                    <Border Width="40"
                            Height="40"
                            BorderThickness="1">
                        <Border Width="32"
                                Height="32"
                                Background="{StaticResource DocTypeIndicatorLightBackgroundBrush}"
                                BorderBrush="{StaticResource DocTypeIndicatorLIghtStrokeBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Border Width="24"
                                        Margin="3,14,3,4"
                                        Background="{StaticResource DocTypeIndicatorBackgroundBrush}"
                                        BorderBrush="{StaticResource DockTypeIndicatorStrokeBrush}"
                                        BorderThickness="1,3,1,1" />
                                <Path Width="8"
                                      Height="4"
                                      Margin="10.895,4.172,11.104,0"
                                      VerticalAlignment="Top"
                                      Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                      Fill="{StaticResource DockTypeIndicatorStrokeBrush}"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Fill"
                                      Stroke="{StaticResource DockTypeIndicatorStrokeBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </igWindows:CardPanel>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HotTrackPosition" Value="Center" />
            <Trigger Property="HotTrackPosition" Value="Left" />
            <Trigger Property="HotTrackPosition" Value="Right" />
            <Trigger Property="HotTrackPosition" Value="Top" />
            <Trigger Property="HotTrackPosition" Value="Bottom" />
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ================================  -->
    <!--  DockingIndicator  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:DockingIndicator}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource DockIndicatorBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:DockingIndicator}">
                    <Grid Background="Transparent">
                        <Grid x:Name="DockingIndicator">
                            <Border x:Name="DragIndicatorIcon"
                                    Width="40"
                                    Height="40"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{StaticResource DockTypeIndicatorTransparentBrush}"
                                    BorderThickness="1">
                                <Border Width="32"
                                        Height="32"
                                        Background="{StaticResource DocTypeIndicatorLightBackgroundBrush}"
                                        BorderBrush="{StaticResource DocTypeIndicatorLIghtStrokeBrush}"
                                        BorderThickness="1">
                                    <Grid>
                                        <Border x:Name="DragIndicatorWindowIcon"
                                                Width="12"
                                                Height="24"
                                                Margin="3,3,0,3"
                                                HorizontalAlignment="Left"
                                                Background="{StaticResource DocTypeIndicatorBackgroundBrush}"
                                                BorderBrush="{StaticResource DockTypeIndicatorStrokeBrush}"
                                                BorderThickness="1,3,1,1" />
                                        <Path Width="8"
                                              Margin="0,13.172,3.604,12.828"
                                              HorizontalAlignment="Right"
                                              Data="M3.78125,0 L7.4533691,3.921875 L0.078248896,3.9061258 z"
                                              Fill="{StaticResource DockTypeIndicatorStrokeBrush}"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill"
                                              Stroke="{StaticResource DockTypeIndicatorStrokeBrush}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="270" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="Left">
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockLeft, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="Position" Value="Right">
                            <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,1,3" />
                            <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockRight, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>

                        <Trigger Property="Position" Value="Top">
                            <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="3,1,1,1" />
                            <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockTop, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>

                        <Trigger Property="Position" Value="Bottom">
                            <Setter TargetName="DragIndicatorWindowIcon" Property="BorderThickness" Value="1,1,3,1" />
                            <Setter TargetName="DragIndicatorIcon" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="DockingIndicator" Property="IsEnabled" Value="{Binding CanDockBottom, RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Trigger>

                        <!--  HotTracking  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Left" />
                                <Condition Property="HotTrackPosition" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Right" />
                                <Condition Property="HotTrackPosition" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Top" />
                                <Condition Property="HotTrackPosition" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Position" Value="Bottom" />
                                <Condition Property="HotTrackPosition" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DockingIndicator" Property="Opacity" Value="1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Position" Value="Center">
                <Setter Property="Template" Value="{StaticResource centerIndicator}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== DockableTabItemTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DockableTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <!--  Dev2  -->
        <Border x:Name="ctrlBorder"
                MinHeight="24"
                SnapsToDevicePixels="true">
            <!--  Dev2  -->
            <igWindows:CardPanel>
                <igWindows:CardPanel x:Name="Background">
                    <Grid Width="Auto"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <!--  AS 1/6/10 TFS25270 - TemplateBind the background and borderbrush instead of setting here and in triggers for base color.  -->
                        <Border x:Name="Border"
                                Margin="0,0,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="HighlightBorder"
                                Margin="0"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveInnerBorderFillKey}}"
                                BorderThickness="0"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </igWindows:CardPanel>
                <Border x:Name="Content"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Opacity="0.7"
                        Padding="{TemplateBinding Padding}">
                    <DockPanel x:Name="contentPanel">
                        <igWindows:AutoDisabledImage x:Name="image"
                                                     Margin="0,0,2,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Pane.Image,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Pane.HasImage,
                                                                          Converter={StaticResource BoolToVisConverter},
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent}}" />

                        <!--  Dev2  -->
                        <ContentPresenter x:Name="contentHeader"
                                          Margin="8,4"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{StaticResource BrushLightForeground}"
                                          igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                          igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                          igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />


                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,3,0,0" />
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveTopCenterFillKey}}"/>
                -->
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="ctrlBorder" Property="Margin" Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveLeftCenterFillKey}}"/>
                -->
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Right">
                <!--
                    AS 1/6/10 TFS25270 Moved to style trigger
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListNotActiveRightCenterFillKey}}"/>
                -->
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsSelected" Value="true">

                <!--  Dev2  -->
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{StaticResource BrushDarkForeground}" />
                <!--  Dev2  -->

                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="Content" Property="Opacity" Value="1" />
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveBottomCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveOuterBorderFillKey}}" />
            </Trigger>

            <!--  ==================== IsMouseOverTab + TabStripPlacement ====================  -->

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Content" Property="Opacity" Value="1" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Content" Property="Opacity" Value="0.3" />
            </Trigger>

            <!--  ==================== IsSelected + TabStripPlacement ====================  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <!--  AS 1/6/10 TFS25270 Removed TargetName="Border" so we use the template properties  -->
            </MultiTrigger>

            <!--  ========== If this is the First Tab in the series ==========  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <!--  ========== If this is the First Tab and Selected in the series ==========  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListActiveTextFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="igWindows:TabItemPanel.IsFirstTabInRow" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOverTab" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== UnpinnedTabItemTemplateKey ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.UnpinnedTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <!--  Dev2  -->
        <Border x:Name="Container"
                MinWidth="30"
                MinHeight="24"
                SnapsToDevicePixels="true">
            <!--  Dev2  -->
            <igWindows:CardPanel>
                <igWindows:CardPanel x:Name="Background">
                    <Grid>
                        <Border x:Name="OuterBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True" />
                    </Grid>
                </igWindows:CardPanel>
                <Border x:Name="Content"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                    <DockPanel>
                        <igWindows:AutoDisabledImage Margin="0,0,5,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Pane.Image,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Pane.HasImage,
                                                                          Converter={StaticResource BoolToVisConverter},
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <ContentPresenter x:Name="contentHeader"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ThemeColorTextFillKey}}"
                                          igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                          igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                          igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />

                    </DockPanel>
                </Border>
            </igWindows:CardPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOverTab" Value="True">
                <Setter TargetName="contentHeader" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListHottrackTextFillKey}}" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter Property="Padding" Value="10,2" />
                <Setter Property="Margin" Value="0" />
                <Setter TargetName="Container" Property="Margin" Value="3,6" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="Padding" Value="10,2" />
                <Setter Property="Margin" Value="0" />
                <Setter TargetName="Container" Property="Margin" Value="3,6" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="Padding" Value="10,2" />
                <Setter Property="Margin" Value="0" />
                <Setter TargetName="Container" Property="Margin" Value="6,3" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="Padding" Value="10,2" />
                <Setter Property="Margin" Value="0" />
                <Setter TargetName="Container" Property="Margin" Value="6,3" />
                <Setter TargetName="Content" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemTopHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemBottomHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemRightHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemLeftHottrackCenterFillKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabItemHottrackOuterBorderFillKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Bottom" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="igDock:UnpinnedTabItemPanel.IsFirstInGroup" Value="True" />
                    <Condition Property="TabStripPlacement" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" Value="0,0,0,0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== XamDockManager.ToolTipStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.ToolTipStyleKey}" TargetType="{x:Type ToolTip}">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipOuterBorderFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ToolTipCenterFillKey}}" />
        <Setter Property="Foreground" Value="{StaticResource BrushForeground}" />

        <!--  Dev2  -->
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <!--  Dev2  -->

        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Padding" Value="7,5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== PaneHeaderPresenter.PositionMenuItemStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}"
           BasedOn="{StaticResource TopLevelHeaderMenuItemStyleBase}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="ToolTip" Value="{StaticResource positionToolTip}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <!--  Dev2  -->
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Foreground" Value="{StaticResource BrushDarkForeground}" />

        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <igWindows:CardPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                SnapsToDevicePixels="True">
                            <Path Width="10"
                                  Height="6"
                                  Data="M 3,8 C3,8 7.5,12.5 7.5,12.5 7.5,12.5 12,8 12,8 12,8 3,8 3,8 z"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill" />
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               IsOpen="{Binding IsSubmenuOpen,
                                                RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <Grid x:Name="MenuItem"
                                  Width="Auto"
                                  Height="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="27" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="2"
                                           Margin="0,0,0,0"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemCenterFillKey}}"
                                           Opacity="1"
                                           SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource {x:Static igDock:DockManagerBrushKeys.MenuItemOuterBorderFillKey}}"
                                           StrokeThickness="1" />
                                <ScrollViewer Grid.ColumnSpan="2"
                                              Margin="0"
                                              CanContentScroll="True"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                            TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </igWindows:CardPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>

                <!--  Dev2  -->
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>

            <!--  HotTracked Button in an Non-Active ContentPane  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>

                <!--  Dev2  -->
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>

            <!--  IsPressed Button  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGlyphHottrackFillKey}}" />
            </MultiDataTrigger>

            <!--  IsEnabled Button  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  ================================  -->
    <!--  ContentPane  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:ContentPane}">
        <!--  Dev2 modified  -->
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />


        <!--
            AS 6/30/10 TFS14299
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        -->
        <Setter Property="TabHeader" Value="{Binding Header, Converter={StaticResource contentValidationConverter}, RelativeSource={RelativeSource Self}}" />
        <!--  AS 10/16/08 TFS6264  -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:ContentPane}">
                    <!--
                        AS 10/10/08 TFS8068
                        We need to contain an adorner layer so any adorner stays with the
                        adornered elements when the pane is moved.
                    -->
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <!--
                                AS 1/4/12 TFS85418
                                Switched from DockPanel to Grid so we can handle positionign when minimized
                            -->
                            <Grid Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="captionRow" Height="Auto" />
                                    <RowDefinition x:Name="contentRow" Height="*" />
                                </Grid.RowDefinitions>
                                <igDock:PaneHeaderPresenter Content="{TemplateBinding Header}"
                                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                            DataContext="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                            Visibility="{TemplateBinding HeaderVisibility}" />
                                <ContentPresenter x:Name="PART_Content"
                                                  Grid.Row="1"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  Visibility="{TemplateBinding ContentVisibility}" />
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <!--  AS 1/4/12 TFS85418  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                                <Condition Binding="{Binding (igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Content" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="captionRow" Property="Height" Value="*" />
                            <Setter TargetName="contentRow" Property="Height" Value="0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ================================  -->
    <!--  PaneHeaderPresenter  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:PaneHeaderPresenter}">
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis" />

        <!--  Dev2  -->
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />

        <!--  Dev2  -->
        <Setter Property="Height" Value="24" />

        <!--  Dev2  -->
        <Setter Property="Foreground" Value="{StaticResource BrushDarkForeground}" />

        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionFillKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:PaneHeaderPresenter}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <DockPanel Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Button x:Name="closeBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:ContentPaneCommands.Close}"
                                        CommandParameter="{TemplateBinding Pane}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}}"
                                        Visibility="{Binding Pane.CloseButtonVisibility,
                                                             RelativeSource={RelativeSource TemplatedParent}}" />
                                <Button x:Name="unpinBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:ContentPaneCommands.TogglePinnedState}"
                                        CommandParameter="{TemplateBinding Pane}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PinButtonStyleKey}}"
                                        Visibility="{Binding Pane.PinButtonVisibility,
                                                             RelativeSource={RelativeSource TemplatedParent}}" />
                                <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
                                <Button x:Name="maxBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:PaneToolWindow.MaximizeCommand}"
                                        CommandTarget="{Binding (igDock:PaneToolWindow.ToolWindow),
                                                                RelativeSource={RelativeSource Self}}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.MaximizeButtonStyleKey}}"
                                        Visibility="Collapsed" />
                                <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
                                <Button x:Name="minBtn"
                                        VerticalAlignment="Center"
                                        Command="{x:Static igDock:PaneToolWindow.MinimizeCommand}"
                                        CommandTarget="{Binding (igDock:PaneToolWindow.ToolWindow),
                                                                RelativeSource={RelativeSource Self}}"
                                        DockPanel.Dock="Right"
                                        Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.MinimizeButtonStyleKey}}"
                                        Visibility="Collapsed" />
                                <Menu x:Name="positionMenu"
                                      VerticalAlignment="Center"
                                      DockPanel.Dock="Right"
                                      Style="{StaticResource RootMenuStyle}"
                                      Visibility="{Binding Pane.WindowPositionMenuVisibility,
                                                           RelativeSource={RelativeSource TemplatedParent}}">
                                    <MenuItem x:Name="PART_PositionMenuItem" Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}}" />
                                </Menu>
                                <ContentPresenter Margin="0,0,8,0"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </DockPanel>
                        </Border>
                        <Border x:Name="innerBorderHighlight"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNotActiveCaptionInnerBorderFillKey}}"
                                BorderThickness="1,1,1,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Pane.IsActivePane, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionFillKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            <Setter TargetName="innerBorderHighlight" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneActiveCaptionInnerBorderFillKey}}" />
                            <!--
                                AS 4/7/08 BR31678
                                Foreground is an inherited property so we don't have to set it on the buttons themselves. Doing so
                                is actually leading to an exception in the wpf framework.
                                <Setter Property="Foreground" TargetName="closeBtn" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                                <Setter Property="Foreground" TargetName="unpinBtn" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                                <Setter Property="Foreground" TargetName="PART_PositionMenuItem" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderActiveTextFillKey}}" />
                            -->
                        </DataTrigger>

                        <!--  AS 6/24/11 FloatingWindowCaptionSource  -->
                        <DataTrigger Binding="{Binding Pane.IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                            <Setter TargetName="maxBtn" Property="Visibility" Value="{Binding (igDock:PaneToolWindow.ToolWindow).MaximizeButtonVisibility, RelativeSource={x:Static RelativeSource.Self}}" />
                            <Setter TargetName="minBtn" Property="Visibility" Value="{Binding (igDock:PaneToolWindow.ToolWindow).MinimizeButtonVisibility, RelativeSource={x:Static RelativeSource.Self}}" />
                        </DataTrigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="FloatingOnly">
                            <Setter TargetName="unpinBtn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Floating">
                            <Setter TargetName="unpinBtn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--  AS 1/4/12 TFS85418  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Pane.IsProvidingFloatingWindowCaption, RelativeSource={x:Static RelativeSource.Self}}" Value="True" />
                                <Condition Binding="{Binding (igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="closeBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="unpinBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="maxBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="minBtn" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="positionMenu" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="positionMenu" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding (igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Minimized">
                            <Setter TargetName="minBtn" Property="Command" Value="{x:Static igDock:PaneToolWindow.RestoreCommand}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (igDock:PaneToolWindow.ToolWindow).WindowState, RelativeSource={x:Static RelativeSource.Self}}" Value="Maximized">
                            <Setter TargetName="maxBtn" Property="Command" Value="{x:Static igDock:PaneToolWindow.RestoreCommand}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========== DocumentTabItemTemplateKey ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:PaneTabItem.DocumentTabItemTemplateKey}" TargetType="{x:Type igDock:PaneTabItem}">
        <!--  Dev2  -->
        <Border x:Name="Background" Height="30">
            <!--  Dev2  -->

            <Grid x:Name="TabbedDocumentTab"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">

                <!--
                    AS 3/5/09 TFS14746
                    selectedEnd was 1 pixel taller than the nonSelectedEnd so I added a negative margin to shift down and offset that pixel
                    I also adjusted the margins for the paths within since they were taller & wider than the non-selected end
                -->

                <!--  AS 1/6/10 TFS25270 - TemplateBind to the background  -->
                <Border x:Name="Border"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}" />
                <Rectangle x:Name="activebrFiller"
                           Grid.Column="1"
                           Width="1"
                           Height="1"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Fill="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveInnerBorderFillKey}}"
                           Visibility="Collapsed" />

                <Border x:Name="Content"
                        Grid.Column="1"
                        Margin="2,0"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <DockPanel x:Name="ContentDock" VerticalAlignment="Center">
                        <igWindows:AutoDisabledImage Margin="0,0,5,0"
                                                     DockPanel.Dock="Left"
                                                     Source="{Binding Pane.Image,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                     Stretch="None"
                                                     Visibility="{Binding Pane.HasImage,
                                                                          Converter={StaticResource BoolToVisConverter},
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        <Grid x:Name="gdContent"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Opacity="0.7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  Dev2  -->
                            <ContentPresenter x:Name="NormalContent"
                                              Margin="1,4"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.FontWeight="SemiBold"
                                              TextBlock.Foreground="{StaticResource BrushLightForeground}"
                                              igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                              igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                              igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />

                            <!--  Dev2  -->
                            <ContentPresenter x:Name="NormalContentBold"
                                              Margin="1,4"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header"
                                              RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextBlock.FontWeight="SemiBold"
                                              TextBlock.Foreground="{StaticResource BrushDarkForeground}"
                                              Visibility="Hidden"
                                              igWindows:ClippedTextToolTipService.AncestorTypeForToolTip="{x:Type ContentControl}"
                                              igWindows:ClippedTextToolTipService.ShowToolTipWhenClipped="True"
                                              igWindows:ClippedTextToolTipService.ToolTipStyleKey="{x:Static igDock:XamDockManager.ToolTipStyleKey}" />

                            <!--  Dev2  -->
                            <Button x:Name="closeBtn"
                                    Grid.Column="1"
                                    Margin="3,0,0,0"
                                    VerticalAlignment="Center"
                                    Command="{x:Static igDock:ContentPaneCommands.Close}"
                                    CommandTarget="{Binding Pane,
                                                            RelativeSource={RelativeSource AncestorType={x:Type igDock:PaneTabItem}}}"
                                    Foreground="{StaticResource BrushLightForeground}"
                                    Opacity="0"
                                    Style="{StaticResource {x:Static igDock:TabGroupPane.DocumentCloseButtonStyleKey}}" />
                        </Grid>
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="gdContent" Property="Opacity" Value="0.3" />
            </Trigger>

            <Trigger Property="IsMouseOverTab" Value="true">
                <Setter TargetName="gdContent" Property="Opacity" Value="1" />
                <Setter TargetName="closeBtn" Property="Button.Opacity" Value="0.7" />
                <Setter TargetName="NormalContent" Property="TextBlock.Foreground" Value="{StaticResource BrushDarkForeground}" />
                <!--
                    AS 1/6/10 TFS25270
                    The center elements bind to the background so we need to change that.
                    <Setter Property="Fill" TargetName="nonSelectedCenterSlice" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}" />
                -->
                <!--  <Setter Property="BorderBrush" TargetName="HighlightBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackOuterBorderFillKey}}"  />  -->
                <!--  <Setter Property="Background" TargetName="HighlightBorder" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackInnerBorderFillKey}}"  />  -->
                <!--
                    AS 1/6/10 TFS25270
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}"  />
                -->
                <!--  <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackCenterFillKey}}" />  -->
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter TargetName="activebrFiller" Property="Visibility" Value="Visible" />
                <Setter TargetName="gdContent" Property="Opacity" Value="1" />
                <Setter TargetName="NormalContent" Property="TextBlock.Foreground" Value="{StaticResource BrushDarkForeground}" />
                <Setter TargetName="closeBtn" Property="Button.Foreground" Value="{StaticResource BrushDarkForeground}" />
                <Setter TargetName="NormalContent" Property="Opacity" Value="0.7" />
                <!--
                    AS 1/6/10 TFS25270
                    The center elements bind to the background so we need to change that.
                    <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}}"/>
                -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentActiveCenterFillKey}}" />
                <!--
                    AS 3/5/09 TFS14746
                    Since this element only is visible when selected we don't need to change the margin
                    so I moved this up into the margin property of the element and adjusted it with the other
                    elements.
                    <Setter Property="Margin" TargetName="selectedCenterSlice" Value="0,1,0,-2" />
                -->
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOverTab" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentHottrackTextFillKey}}" />
            </MultiTrigger>

            <DataTrigger Binding="{Binding Pane.IsActiveDocument, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                <Setter TargetName="NormalContent" Property="Visibility" Value="Hidden" />
                <Setter TargetName="NormalContentBold" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <!--  ========== TAB PLACEMENT : BOTTOM ==========  -->
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ContentDock" Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  ========== TAB PLACEMENT : LEFT ==========  -->
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!--  ========== TAB PLACEMENT : RIGHT ==========  -->
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========== DocumentTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
        <DockPanel ClipToBounds="True"
                   KeyboardNavigation.TabNavigation="Local"
                   SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_HeaderArea"
                       Panel.ZIndex="1"
                       DockPanel.Dock="{TemplateBinding TabStripPlacement}">
                <DockPanel>

                    <!--  Dev2  -->
                    <Button x:Name="closeBtn"
                            VerticalAlignment="Center"
                            Command="{x:Static igDock:TabGroupPane.CloseSelectedItemCommand}"
                            DockPanel.Dock="Right"
                            Foreground="{StaticResource BrushLightForeground}"
                            Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.CloseButtonStyleKey}}" />

                    <!--  Dev2  -->
                    <Menu x:Name="filesMenu"
                          VerticalAlignment="Center"
                          DockPanel.Dock="Right"
                          Style="{StaticResource RootMenuStyle}">
                        <MenuItem x:Name="PART_FilesMenuItem"
                                  Foreground="{StaticResource BrushLightForeground}"
                                  Style="{DynamicResource {x:Static igDock:PaneHeaderPresenter.PositionMenuItemStyleKey}}" />

                    </Menu>

                    <!--  AS 9/10/09 TFS19267 - Added CommandParameter  -->
                    <Button x:Name="showNavigatorButton"
                            Command="{x:Static igDock:DockManagerCommands.ShowPaneNavigator}"
                            CommandParameter="{TemplateBinding igDock:XamDockManager.DockManager}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource {x:Static igDock:TabGroupPane.DocumentPaneNavigatorButtonStyleKey}}"
                            Visibility="Collapsed" />

                    <!--  Dev2  -->
                    <ItemsPresenter x:Name="PART_TabHeaderPanel"
                                    Margin="0"
                                    KeyboardNavigation.TabIndex="1" />

                </DockPanel>
            </DockPanel>
            <Border x:Name="ContentPanel"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    SnapsToDevicePixels="True"
                    Visibility="Visible">

                <!--  Dev2  -->
                <Border x:Name="InnerBorder"
                        BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneInnerBorderFillKey}}"
                        BorderThickness="0"
                        CornerRadius="0"
                        SnapsToDevicePixels="True">
                    <Border x:Name="ThickInnerBorder"
                            BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneCenterFillKey}}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <Border x:Name="InnerMostBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedPaneOuterBorderFillKey}}"
                                BorderThickness="0"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding SelectedContent}"
                                              ContentSource="SelectedContent"
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                </Border>
            </Border>
        </DockPanel>
        <ControlTemplate.Triggers>

            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                <!--  <Setter Property="BorderThickness" Value="1" />  -->
                <Setter Property="Padding" Value="0" />
                <Setter Property="TabStripPlacement" Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0" />
                <!--
                    AS 6/24/08 BR34248
                    <Setter Property="DockPanel.Dock" TargetName="closeBtn" Value="Top" />
                    <Setter Property="DockPanel.Dock" TargetName="filesMenu" Value="Top" />
                    <Setter Property="DockPanel.Dock" TargetName="showNavigatorButton" Value="Top" />
                -->
                <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="showNavigatorButton" Property="DockPanel.Dock" Value="Bottom" />
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0" />
                <Setter TargetName="closeBtn" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="filesMenu" Property="DockPanel.Dock" Value="Bottom" />
                <Setter TargetName="showNavigatorButton" Property="DockPanel.Dock" Value="Bottom" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
            </Trigger>

            <!--  PaneNavigatorButtonDisplayMode  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True" />
                    <Condition Binding="{Binding (igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="WhenHostedInBrowser" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="showNavigatorButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding (igDock:XamDockManager.DockManager).PaneNavigatorButtonDisplayMode, RelativeSource={x:Static RelativeSource.Self}}" Value="Always">
                <Setter TargetName="showNavigatorButton" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ================================  -->
    <!--  UnpinnedTabFlyout  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:UnpinnedTabFlyout}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.UnpinnedTabFlyoutSplitterLightStrokeFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.DarkBrushKey}}" />
        <!--
            AS 6/30/10 TFS14299
            <Setter Property="SnapsToDevicePixels" Value="True" />
        -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:UnpinnedTabFlyout}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="HighlightStroke" SnapsToDevicePixels="true" />
                            <DockPanel>
                                <igDock:UnpinnedTabFlyoutSplitter x:Name="splitter"
                                                                  MinWidth="8"
                                                                  MinHeight="8"
                                                                  Background="{StaticResource TileAreaSplitterThumbBackground}"
                                                                  BorderBrush="{StaticResource TileAreaSplitterThumbBorderBrush}"
                                                                  BorderThickness="1" />
                                <ContentPresenter x:Name="Content"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Pane}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Splitter Positions  -->
                        <!--  Splitters for Panes unpinned to LEFT & TOP are styled similarly, only different orientations  -->

                        <Trigger Property="Side" Value="Left">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Vertical" />
                            <Setter TargetName="splitter" Property="Margin" Value="0" />
                            <Setter Property="BorderThickness" Value="0,0,1,0" />
                            <Setter TargetName="HighlightStroke" Property="Width" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>

                        <!--  Pane Unpinned to Top  -->
                        <Trigger Property="Side" Value="Top">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Horizontal" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter TargetName="HighlightStroke" Property="Height" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>

                        <!--  Splitters for Panes unpinned to RIGHT & BOTTOM are styled similarly, only different orientations  -->
                        <!--  Pane Unpinned to Right  -->
                        <Trigger Property="Side" Value="Right">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Vertical" />
                            <Setter TargetName="HighlightStroke" Property="Width" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="Margin" Value="1,0,0,0" />
                            <Setter TargetName="HighlightStroke" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" />
                            <Setter TargetName="HighlightStroke" Property="HorizontalAlignment" Value="Left" />
                        </Trigger>

                        <!--  Pane Unpinned to Bottom  -->
                        <Trigger Property="Side" Value="Bottom">
                            <Setter TargetName="splitter" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="splitter" Property="Orientation" Value="Horizontal" />
                            <Setter TargetName="HighlightStroke" Property="Height" Value="1" />
                            <Setter TargetName="HighlightStroke" Property="Margin" Value="0,1,0,0" />
                            <Setter TargetName="HighlightStroke" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.LightBrushKey}}" />
                            <Setter TargetName="HighlightStroke" Property="VerticalAlignment" Value="Top" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ================================  -->
    <!--  UnpinnedTabArea  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:UnpinnedTabArea}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:UnpinnedTabArea}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <igWindows:XamPager x:Name="TabItemScrollViewer"
                                            Focusable="False"
                                            Style="{DynamicResource XamPagerStyle}">
                            <ItemsPresenter x:Name="PART_TabHeaderPanel" />
                        </igWindows:XamPager>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="PART_TabHeaderPanel" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                            <Setter TargetName="TabItemScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ================================  -->
    <!--  TabGroupPane  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:TabGroupPane}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <!--  Dev2 added  -->
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneHeaderNotActiveTextFillKey}}" />
        <Setter Property="igWindows:TabItemPanel.TabLayoutStyle" Value="SingleRowJustified" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.ContentPaneBorderFillKey}}" />


        <!--
            AS 10/15/08 TFS6433
            Instead of using the same brush used by the tab item we should have one specifically for the group's background
        -->
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedListGroupFillKey}}" />
        <!--
            AS 6/30/10 TFS14299
            <Setter Property="SnapsToDevicePixels" Value="True" />
        -->
        <Setter Property="Template" Value="{DynamicResource {x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.PaneLocation" Value="Document">
                <Setter Property="Template" Value="{DynamicResource {x:Static igDock:TabGroupPane.DocumentTabGroupTemplateKey}}" />
                <!--
                    AS 10/15/08 TFS6433
                    Instead of explicitly binding to WindowBrushKey in the DocumentTabGroupTemplateKey, we should
                    still template bind to background and set that color as the default background.
                -->
                <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.TabbedDocumentGroupFillKey}}" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <!--
                                AS 2/12/09 TFS13059
                                We need a non-null background so it will be visible to the wpf hittest logic
                            -->
                            <igDock:DocumentTabPanel Background="Transparent" TabStripPlacement="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type igDock:TabGroupPane}}}" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsTabItemAreaVisible" Value="False">
                <Setter Property="Template" Value="{StaticResource NoTabItemAreaTabGroupTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ================================  -->
    <!--  XamDockManager  -->
    <!--  ================================  -->
    <Style x:Key="XamDockManagerMetro" TargetType="{x:Type igDock:XamDockManager}">
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.XamDockManagerBackgroundFillKey}}" />

        <!--  Dev2  -->
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />

        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:XamDockManager}">
                    <AdornerDecorator>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel Margin="{TemplateBinding Padding}" LastChildFill="True">
                                <!--  Top Unpinned Tab Area  -->
                                <DockPanel Panel.ZIndex="1"
                                           DockPanel.Dock="Top"
                                           LastChildFill="True">
                                    <FrameworkElement Width="{Binding ActualWidth,
                                                                      ElementName=PART_UnpinnedTabAreaLeft}"
                                                      Height="0"
                                                      DockPanel.Dock="Left"
                                                      Visibility="Hidden" />
                                    <FrameworkElement Width="{Binding ActualWidth,
                                                                      ElementName=PART_UnpinnedTabAreaRight}"
                                                      Height="0"
                                                      DockPanel.Dock="Right"
                                                      Visibility="Hidden" />
                                    <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaTop" TabStripPlacement="Bottom" />
                                </DockPanel>

                                <!--  Bottom Unpinned Tab Area  -->
                                <DockPanel Panel.ZIndex="1"
                                           DockPanel.Dock="Bottom"
                                           LastChildFill="True">
                                    <FrameworkElement Width="{Binding ActualWidth,
                                                                      ElementName=PART_UnpinnedTabAreaLeft}"
                                                      Height="0"
                                                      DockPanel.Dock="Left"
                                                      Visibility="Hidden" />
                                    <FrameworkElement Width="{Binding ActualWidth,
                                                                      ElementName=PART_UnpinnedTabAreaRight}"
                                                      Height="0"
                                                      DockPanel.Dock="Right"
                                                      Visibility="Hidden" />
                                    <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaBottom" TabStripPlacement="Top" />
                                </DockPanel>

                                <!--  Left Unpinned Tab Area  -->
                                <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaLeft"
                                                        Panel.ZIndex="1"
                                                        DockPanel.Dock="Left"
                                                        TabStripPlacement="Right" />

                                <!--  Right Unpinned Tab Area  -->
                                <igDock:UnpinnedTabArea x:Name="PART_UnpinnedTabAreaRight"
                                                        Panel.ZIndex="1"
                                                        DockPanel.Dock="Right"
                                                        TabStripPlacement="Left" />

                                <!--  Root Panes container  -->
                                <igDock:DockManagerPanel x:Name="PART_Panel" Panel.ZIndex="0">
                                    <ContentPresenter x:Name="cp" />
                                </igDock:DockManagerPanel>
                            </DockPanel>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FlyoutAnimation" Value="Slide">
                            <Setter TargetName="PART_Panel" Property="ClipToBounds" Value="True" />
                        </Trigger>
                        <!--  AS 10/5/09 NA 2010.1 - LayoutMode  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasContent" Value="False" />
                                <Condition Property="LayoutMode" Value="FillContainer" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="cp" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  =====================================  -->
    <!--  DockedPaneSplitter  -->
    <!--  =====================================  -->
    <Style TargetType="{x:Type igDock:DockedPaneSplitter}">

        <!--  Dev2  -->
        <Setter Property="MinWidth" Value="3" />
        <Setter Property="MinHeight" Value="3" />

        <Setter Property="Background" Value="{StaticResource PaneSplitterBackground}" />
    </Style>

    <!--  =====================================  -->
    <!--  SplitPaneSplitter  -->
    <!--  =====================================  -->
    <Style TargetType="{x:Type igDock:SplitPaneSplitter}">

        <!--  Dev2  -->
        <Setter Property="MinWidth" Value="3" />
        <Setter Property="MinHeight" Value="3" />

        <Setter Property="Background" Value="{StaticResource PaneSplitterBackground}" />
    </Style>

    <!--  ================================  -->
    <!--  PaneSplitter  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:PaneSplitter}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:PaneSplitter}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">

                <!--  Dev2  -->
                <Setter Property="MinWidth" Value="3" />

                <Setter Property="Cursor" Value="{x:Static igDock:PaneSplitter.VerticalSplitterCursor}" />
            </Trigger>

            <Trigger Property="Orientation" Value="Horizontal">

                <!--  Dev2  -->
                <Setter Property="MinHeight" Value="3" />

                <!--  <Setter Property="Cursor" Value="../Cursors/horizontalSplitter.cur" />  -->
                <Setter Property="Cursor" Value="{x:Static igDock:PaneSplitter.HorizontalSplitterCursor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ========== DockableTabGroupTemplate ==========  -->
    <ControlTemplate x:Key="{x:Static igDock:TabGroupPane.DockableTabGroupTemplateKey}" TargetType="{x:Type igDock:TabGroupPane}">
        <DockPanel Background="{StaticResource DockableTabGroupTemplateBackground}"
                   ClipToBounds="True"
                   KeyboardNavigation.TabNavigation="Local"
                   SnapsToDevicePixels="True">
            <DockPanel x:Name="PART_HeaderArea"
                       Panel.ZIndex="1"
                       DockPanel.Dock="{TemplateBinding TabStripPlacement}">
                <igWindows:XamPager x:Name="PART_TabItemScrollViewer"
                                    CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                    Style="{StaticResource TabGroupXamPagerStyle}">
                    <ItemsPresenter x:Name="PART_TabHeaderPanel" KeyboardNavigation.TabIndex="1" />
                </igWindows:XamPager>
            </DockPanel>
            <Border x:Name="ContentPanel"
                    Background="{StaticResource BrushLightForeground}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2"
                    KeyboardNavigation.TabNavigation="Local"
                    SnapsToDevicePixels="true"
                    Visibility="Visible">
                <ContentPresenter x:Name="PART_SelectedContentHost"
                                  Margin="{TemplateBinding Padding}"
                                  Content="{TemplateBinding SelectedContent}"
                                  ContentSource="SelectedContent"
                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
        </DockPanel>
    </ControlTemplate>

    <Style x:Key="XamPagerButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />

        <!--  Dev2  -->
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource BrushLightForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Opacity" Value="0.7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Data="{Binding Content,
                                             RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="{TemplateBinding Foreground}"
                              Opacity="{TemplateBinding Opacity}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="XamPagerStyle" TargetType="{x:Type igWindows:XamPager}">
        <Setter Property="ScrollLeftButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="M 6,0 L 6,10 0,5 Z" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollRightButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="M 0,0 L 0,10 6,5 Z" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollUpButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="M 0,6 L 10,6 5,0 Z" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollDownButtonStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource XamPagerButtonStyle}" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Content" Value="M 0,0 L 10,0 5,6 Z" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWindows:XamPager}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="gridCol0" Width="Auto" />
                            <ColumnDefinition x:Name="gridCol1" Width="*" />
                            <ColumnDefinition x:Name="gridCol2" Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="gridRow0" Height="Auto" />
                            <RowDefinition x:Name="gridRow1" Height="*" />
                            <RowDefinition x:Name="gridRow2" Height="Auto" />
                        </Grid.RowDefinitions>
                        <igWindows:PagerContentPresenter x:Name="PART_PagerContentPresenter"
                                                         Grid.Row="0"
                                                         Grid.RowSpan="3"
                                                         Grid.Column="0"
                                                         Grid.ColumnSpan="3"
                                                         Margin="{TemplateBinding Padding}"
                                                         Panel.ZIndex="0"
                                                         CanContentScroll="{TemplateBinding CanContentScroll}"
                                                         CanHorizontallyScroll="False"
                                                         CanVerticallyScroll="False"
                                                         Content="{TemplateBinding Content}"
                                                         ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                                         ScrollOwner="{x:Null}" />
                        <RepeatButton x:Name="PART_ScrollUp"
                                      Grid.Row="0"
                                      Grid.Column="1"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineUpCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollUpButtonStyle}"
                                      Visibility="{TemplateBinding ScrollUpVisibility}" />
                        <RepeatButton x:Name="PART_ScrollLeft"
                                      Grid.Row="1"
                                      Grid.Column="0"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineLeftCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollLeftButtonStyle}"
                                      Visibility="{TemplateBinding ScrollLeftVisibility}" />
                        <RepeatButton x:Name="PART_ScrollRight"
                                      Grid.Row="1"
                                      Grid.Column="2"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineRightCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollRightButtonStyle}"
                                      Visibility="{TemplateBinding ScrollRightVisibility}" />
                        <RepeatButton x:Name="PART_ScrollDown"
                                      Grid.Row="2"
                                      Grid.Column="1"
                                      Panel.ZIndex="1"
                                      Command="ScrollBar.LineDownCommand"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{TemplateBinding ScrollDownButtonStyle}"
                                      Visibility="{TemplateBinding ScrollDownVisibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalScrollBarVisibility" Value="Visible">
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.ColumnSpan" Value="1" />
                        </Trigger>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                        <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Collapsed">
                            <Setter TargetName="gridRow0" Property="Height" Value="0" />
                            <Setter TargetName="gridRow2" Property="Height" Value="0" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                        <Trigger Property="ComputedHorizontalScrollBarVisibility" Value="Collapsed">
                            <Setter TargetName="gridCol0" Property="Width" Value="0" />
                            <Setter TargetName="gridCol2" Property="Width" Value="0" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_PagerContentPresenter" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type ScrollViewer}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
    </Style>

    <!--  ================================  -->
    <!--  PaneNavigator  -->
    <!--  ================================  -->
    <Style TargetType="{x:Type igDock:PaneNavigator}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorCenterFillKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorOuterBorderFillKey}}" />

        <!--  Dev2  -->
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />

        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="BorderThickness" Value="2,2,2,2" />
        <!--
            AS 6/30/10 TFS14299
            <Setter Property="SnapsToDevicePixels" Value="True" />
        -->
        <Setter Property="MaxHeight" Value="322" />
        <Setter Property="SelectedPane" Value="{Binding Path=(FocusManager.FocusedElement).DataContext, Mode=OneWay, RelativeSource={x:Static RelativeSource.Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igDock:PaneNavigator}">
                    <ControlTemplate.Resources>
                        <Style x:Key="itemStyle" TargetType="{x:Type ListBoxItem}">
                            <Style.Resources>
                                <!--
                                    There is a button in the listboxitem that we are using so that clicking on an item
                                    will activate that item and close the navigator as occurs in vs. This style is used
                                    for that button to provide a dummy visual appearance
                                -->
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.Resources>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorDarkTextFillKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <!--  Dev2  -->
                                        <Grid MinHeight="24" Margin="0,0,0,1">

                                            <Button Command="{x:Static igDock:ContentPaneCommands.ActivatePane}">
                                                <igWindows:CardPanel Background="Transparent">
                                                    <Border x:Name="itemHottrack"
                                                            Background="Transparent"
                                                            BorderThickness="1"
                                                            CornerRadius="0"
                                                            Cursor="Hand"
                                                            SnapsToDevicePixels="True">
                                                        <!--  AS 5/8/12 TFS110360 - Switched from Horz StackPanel to DockPanel  -->
                                                        <DockPanel x:Name="pnl"
                                                                   Margin="1"
                                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Image MaxWidth="16"
                                                                   MaxHeight="16"
                                                                   Margin="0,0,6,0"
                                                                   VerticalAlignment="Center"
                                                                   DockPanel.Dock="Left"
                                                                   Source="{Binding Path=Content.Image,
                                                                                    RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                                            <ContentPresenter x:Name="contentItems"
                                                                              Margin="0,0,6,0"
                                                                              VerticalAlignment="Center"
                                                                              Content="{Binding Path=Content.Header,
                                                                                                RelativeSource={x:Static RelativeSource.TemplatedParent},
                                                                                                Converter={StaticResource contentValidationConverter}}"
                                                                              ContentTemplate="{Binding Path=Content.HeaderTemplate,
                                                                                                        RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                              ContentTemplateSelector="{Binding Path=Content.HeaderTemplateSelector,
                                                                                                                RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                                                <ContentPresenter.Resources>
                                                                    <!--  AS 5/8/12 TFS110360  -->
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                                                    </Style>
                                                                </ContentPresenter.Resources>
                                                            </ContentPresenter>
                                                        </DockPanel>
                                                    </Border>

                                                </igWindows:CardPanel>
                                            </Button>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="itemHottrack" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackOuterBorderFillKey}}" />
                                                <Setter TargetName="itemHottrack" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackCenterFillKey}}" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter TargetName="itemHottrack" Property="BorderBrush" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackOuterBorderFillKey}}" />
                                                <Setter TargetName="itemHottrack" Property="Background" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorItemHottrackCenterFillKey}}" />
                                                <Setter TargetName="contentItems" Property="TextElement.Foreground" Value="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorLightTextFillKey}}" />
                                            </Trigger>
                                            <!--
                                                AS 4/25/08
                                                Since the selection is inconsistent (e.g. allows unselection when
                                                holding the ctrl key), we decided to tie the navigator around the
                                                keyboard focus.
                                                <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="IsSelected" Value="True" />
                                                </Trigger>
                                            -->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle Grid.RowSpan="3"
                                       Margin="-2"
                                       Stroke="{StaticResource BrushLightForeground}"
                                       StrokeThickness="1" />
                            <!--  Row 0  -->
                            <!--  Dev2  -->
                            <Border x:Name="headerBackground"
                                    MinHeight="24"
                                    Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorHeaderFillKey}}"
                                    CornerRadius="0"
                                    SnapsToDevicePixels="true">

                                <Grid x:Name="header"
                                      Margin="3,0"
                                      VerticalAlignment="Center"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal">
                                        <Image MaxWidth="16"
                                               MaxHeight="16"
                                               VerticalAlignment="Center"
                                               Source="{Binding Path=SelectedPane.Image,
                                                                RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                        <ContentControl x:Name="selectedPaneHeader"
                                                        Margin="5,1,0,0"
                                                        Content="{Binding Path=SelectedPane.Header,
                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent},
                                                                          Converter={StaticResource contentValidationConverter}}"
                                                        ContentTemplate="{Binding Path=SelectedPane.HeaderTemplate,
                                                                                  RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                        ContentTemplateSelector="{Binding Path=SelectedPane.HeaderTemplateSelector,
                                                                                          RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                        Focusable="False"
                                                        TextElement.Foreground="{DynamicResource {x:Static igDock:DockManagerBrushKeys.GrayTextBrushKey}}" />
                                    </StackPanel>
                                    <ContentControl x:Name="selectedPaneTitle"
                                                    Grid.Row="1"
                                                    Content="{Binding Path=SelectedPane.NavigatorTitle,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplate="{Binding Path=SelectedPane.NavigatorTitleTemplate,
                                                                              RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplateSelector="{Binding Path=SelectedPane.NavigatorTitleTemplateSelector,
                                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    Focusable="False" />
                                </Grid>
                            </Border>
                            <!--  Row 1  -->
                            <Border Grid.Row="1"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <Grid x:Name="gridLists"
                                      Margin="12"
                                      KeyboardNavigation.ControlTabNavigation="Cycle"
                                      KeyboardNavigation.DirectionalNavigation="Cycle"
                                      KeyboardNavigation.TabNavigation="Cycle"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!--  Dev2  -->
                                    <TextBlock x:Name="activeToolWindowsLabel"
                                               Margin="14,7,0,0"
                                               FontSize="{StaticResource DefaultFontSize}"
                                               Foreground="{StaticResource BrushHighlightedForeground}" />
                                    <!--  Text="{Binding Path=Value, Source={x:Static igDock:ResourcesDockManager.PaneNavigatorActiveToolWindowsLabel}}"  -->
                                    <TextBlock x:Name="documentsLabel"
                                               Grid.Column="1"
                                               Margin="8,7,0,0"
                                               FontSize="16"
                                               Foreground="{StaticResource BrushHighlightedForeground}" />
                                    <!--  Text="{Binding Path=Value, Source={x:Static igDock:ResourcesDockManager.PaneNavigatorActiveFilesLabel}}"  -->
                                    <ListBox x:Name="lstPanes"
                                             Grid.Row="1"
                                             Margin="14,8,0,0"
                                             ItemContainerStyle="{StaticResource itemStyle}"
                                             ItemsSource="{Binding Path=Panes,
                                                                   RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             KeyboardNavigation.DirectionalNavigation="Continue"
                                             KeyboardNavigation.TabNavigation="Continue"
                                             SelectedItem="{Binding Path=SelectedPane,
                                                                    Mode=OneWay,
                                                                    RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <igDock:PaneNavigatorItemsPanel ColumnWidth="179" MaxColumns="1" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                    <ListBox x:Name="lstDocuments"
                                             Grid.Row="1"
                                             Grid.Column="1"
                                             Margin="8,8,0,0"
                                             ItemContainerStyle="{StaticResource itemStyle}"
                                             ItemsSource="{Binding Path=Documents,
                                                                   RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                             KeyboardNavigation.DirectionalNavigation="Continue"
                                             KeyboardNavigation.TabNavigation="Continue"
                                             SelectedItem="{Binding Path=SelectedPane,
                                                                    Mode=OneWay,
                                                                    RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <igDock:PaneNavigatorItemsPanel ColumnWidth="179" MaxColumns="4" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>

                                    <!--  Preview  -->
                                    <Viewbox x:Name="viewbox"
                                             Grid.Row="1"
                                             Grid.Column="2"
                                             Width="200"
                                             MinHeight="200"
                                             Margin="10,10,15,10"
                                             HorizontalAlignment="Right"
                                             VerticalAlignment="Top"
                                             Stretch="None"
                                             StretchDirection="Both">
                                        <Rectangle Width="{Binding Path=SelectedPane.ActualWidth, RelativeSource={x:Static RelativeSource.TemplatedParent}}" Height="{Binding Path=SelectedPane.ActualHeight, RelativeSource={x:Static RelativeSource.TemplatedParent}}">
                                            <Rectangle.Fill>
                                                <VisualBrush AlignmentX="Left"
                                                             AlignmentY="Top"
                                                             AutoLayoutContent="False"
                                                             Stretch="None"
                                                             Visual="{Binding Path=SelectedPane,
                                                                              RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Viewbox>
                                </Grid>
                            </Border>

                            <!--  Row 2  -->
                            <Grid Grid.Row="2" MinHeight="27">

                                <Border x:Name="footerBackground"
                                        Background="{DynamicResource {x:Static igDock:DockManagerBrushKeys.PaneNavigatorFooterFillKey}}"
                                        BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderBrush}"
                                        SnapsToDevicePixels="true">
                                    <!--  Dev2  -->
                                    <ContentControl x:Name="selectedPaneDescription"
                                                    Margin="8,0"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding Path=SelectedPane.NavigatorDescription,
                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplate="{Binding Path=SelectedPane.NavigatorDescriptionTemplate,
                                                                              RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    ContentTemplateSelector="{Binding Path=SelectedPane.NavigatorDescriptionTemplateSelector,
                                                                                      RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    Focusable="False"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    TextBlock.FontFamily="{StaticResource DefaultFontFamily}"
                                                    TextBlock.FontSize="{StaticResource DefaultFontSize}"
                                                    TextBlock.Foreground="{StaticResource BrushForeground}" />
                                    <!--  Dev2  -->
                                </Border>
                                <Rectangle Height="1"
                                           VerticalAlignment="Top"
                                           Fill="{TemplateBinding BorderBrush}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="SelectedPaneAspectRatioIsWide" Value="False" />
                                <Condition Property="SelectedPaneIsDocument" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="viewbox" Property="Stretch" Value="Uniform" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="SelectedPaneAspectRatioIsWide" Value="True" />
                                <Condition Property="SelectedPaneIsDocument" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="viewbox" Property="Stretch" Value="Uniform" />
                            <Setter TargetName="viewbox" Property="StretchDirection" Value="DownOnly" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                            <Setter TargetName="border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="footerBackground" Property="CornerRadius" Value="0" />
                            <Setter TargetName="headerBackground" Property="CornerRadius" Value="0" />
                        </DataTrigger>

                        <!--  AS 10/5/09 NA 2010.1 - LayoutMode  -->
                        <DataTrigger Binding="{Binding Path=(igDock:XamDockManager.DockManager).HasDocumentContentHost, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="documentsLabel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="lstDocuments" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type ListBox}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ScrollViewer CanContentScroll="True" Opacity="0.8">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <!--  ========== dropPreviewTabBottom ==========  -->
    <ControlTemplate x:Key="dropPreviewTabBottom" TargetType="{x:Type Control}">
        <Grid Margin="0,0,0,3">
            <Grid.RowDefinitions>
                <!--  We want to make sure a pixel of the body remains visible  -->
                <RowDefinition Height="*" MinHeight="4" />
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <RowDefinition Height="38" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="5,5,5,0" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" MaxWidth="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="5,0,5,5" />
                <Border Grid.Column="1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,5,0,0" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  ========== dropPreviewTabTop ==========  -->
    <ControlTemplate x:Key="dropPreviewTabTop" TargetType="{x:Type Control}">
        <Grid Margin="0,3,0,0">
            <Grid.RowDefinitions>
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <RowDefinition Height="38" />
                <!--  We want to make sure a pixel of the body remains visible  -->
                <RowDefinition Height="*" MinHeight="4" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*" MaxWidth="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="5,5,5,0" />
                <Border Grid.Column="1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,0,5" />
            </Grid>
            <Border Grid.Row="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="5,0,5,5" />
        </Grid>
    </ControlTemplate>

    <!--  ========== dropPreviewTabRight ==========  -->
    <ControlTemplate x:Key="dropPreviewTabRight" TargetType="{x:Type Control}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--  We want to make sure a pixel of the body remains visible  -->
                <ColumnDefinition Width="*" MinWidth="4" />
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <ColumnDefinition Width="4*" MaxWidth="24" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="3,3,0,3" />
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MaxHeight="6" />
                    <RowDefinition Height="10*" MaxHeight="46" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,0,0" />
                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,3,3,3" />
                <Border Grid.Row="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,0,0,0" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <!--  ========== dropPreviewTabLeft ==========  -->
    <ControlTemplate x:Key="dropPreviewTabLeft" TargetType="{x:Type Control}">
        <Grid>
            <Grid.ColumnDefinitions>
                <!--  We want the majority of the space going to the tab section but it needs to be able to resize smaller  -->
                <ColumnDefinition Width="4*" MaxWidth="24" />
                <!--  We want to make sure a pixel of the body remains visible  -->
                <ColumnDefinition Width="*" MinWidth="4" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10*" MaxHeight="46" />
                    <RowDefinition Height="*" MaxHeight="6" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,3,0" />
                <Border Grid.Row="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="3,3,0,3" />
                <Border Grid.Row="2"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0,0,3,0" />
            </Grid>
            <Border Grid.Column="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0,3,3,3" />
        </Grid>
    </ControlTemplate>

    <!--  ========== XamDockManager.DropPreviewStyleKey ==========  -->
    <Style x:Key="{x:Static igDock:XamDockManager.DropPreviewStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource PreviewIndicatorBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource PreviewIndicatorBorderBrush}" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Bottom">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabBottom}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Top">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabTop}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Right">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabRight}" />
            </Trigger>
            <Trigger Property="igDock:XamDockManager.DropPreviewTabLocation" Value="Left">
                <Setter Property="Template" Value="{StaticResource dropPreviewTabLeft}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>