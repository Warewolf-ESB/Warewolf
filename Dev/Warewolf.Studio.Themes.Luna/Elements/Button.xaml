<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:luna="clr-namespace:Warewolf.Studio.Themes.Luna">

    <ResourceDictionary.MergedDictionaries>
        <luna:SharedResourceDictionary Source="../Common/Color.xaml" />
        <luna:SharedResourceDictionary Source="../Common/Brushes.xaml" />
        <luna:SharedResourceDictionary Source="../Common/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Button Brushes  -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource WarewolfButtonGrey}" />
    <SolidColorBrush x:Key="ButtonMenuBackgroundBrush" Color="{StaticResource WarewolfMenuGrey}" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource WarewolfWatermark}" />
    <SolidColorBrush x:Key="ButtonMenuBorderBrush" Color="{StaticResource WarewolfMenuGrey}" />
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource WarewolfHeaderButtonGrey}" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="ButtonPressedTransparentBrush" Color="{StaticResource WarewolfTransparent}" />
    <SolidColorBrush x:Key="ButtonForeGroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="DisabledVisualElement" Color="{StaticResource WarewolfButtonGrey}" />
    <SolidColorBrush x:Key="DisabledSideMenuVisualElement" Color="{StaticResource WarewolfMenuGrey}" />

    <Cursor x:Key="CursorGrab">../Fonts/grab.cur</Cursor>
    <Cursor x:Key="CursorGrabbing">../Fonts/Copy.cur</Cursor>
    <!--  *********************************  ButtonStyle  *********************************  -->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   Opacity="0.7"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="SplashPageButtonTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="35" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Background" Value="{StaticResource ButtonPressedTransparentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Opacity="0.4"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Background" Value="{StaticResource ButtonPressedTransparentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Opacity="0.4"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonPressedTransparentBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonOrangeTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Background" Value="{StaticResource ButtonPressedTransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource SolidWhite}"
                                   Stroke="{StaticResource SolidWhite}"
                                   Opacity="1"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonSchedulerTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonPressedTransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WareWolfBlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Opacity="0.4"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource WareWolfOrangeBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonSchedulerDeleteTransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonPressedTransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WareWolfHeaderButtonBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Stroke="{StaticResource ButtonPressedTransparentBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Opacity="0.4"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource WareWolfOrangeBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonOrangeStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonPressedBorderBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedBorderBrush}"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   Opacity="0.4"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Stroke"  Value="{StaticResource ButtonBackgroundBrush}"></Setter>
                            <Setter TargetName="Bd" Property="Fill"  Value="{StaticResource ButtonBackgroundBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="BasicButton" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="Transparent"
                                   Stroke="Transparent"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TabButton" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="Transparent"
                                   Stroke="Transparent"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="0"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd_DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                        <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                        <!--  <DiscreteObjectKeyFrame.Value>  -->
                                        <!--  <Visibility>Visible</Visibility>  -->
                                        <!--  </DiscreteObjectKeyFrame.Value>  -->
                                        <!--  </DiscreteObjectKeyFrame>  -->
                                        <!--  </ObjectAnimationUsingKeyFrames>  -->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd"
                                Background="{StaticResource ButtonBackgroundBrush}"
                                BorderBrush="{StaticResource ButtonBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="16">
                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Border>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Border x:Name="Bd_DisabledVisualElement"
                                Background="{StaticResource ButtonBackgroundBrush}"
                                BorderBrush="{StaticResource ButtonBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="16"
                                Opacity="0.4"
                                Visibility="Collapsed">
                            <Rectangle x:Name="DisabledVisualElement"
                                       Fill="{StaticResource DisabledVisualElement}"
                                       Opacity="0.4"
                                       Visibility="Collapsed" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  *********************************  Implicit Styles  *********************************  -->
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}" />
    <Style x:Key="ActivityDesignerButtonStyle"
           BasedOn="{StaticResource ButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="ExplorerTreeButtonStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="MinHeight" Value="14" />
        <Setter Property="MinWidth" Value="14" />-->
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Background" Value="{StaticResource ButtonPressedTransparentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="StrokeThickness">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedTransparentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonPressedTransparentBrush}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="0" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{StaticResource ButtonBackgroundBrush}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="0"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonBorderBrush}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SideMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="115" />
        <Setter Property="Height" Value="35" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonMenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">

                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonMenuBackgroundBrush}"
                                   Stroke="{StaticResource ButtonMenuBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonMenuBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledSideMenuVisualElement}"
                                   Opacity="0.7"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonMenuBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SideMenuImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="115" />
        <Setter Property="Height" Value="35" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonMenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">

                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonMenuBackgroundBrush}"
                                   Stroke="{StaticResource ButtonMenuBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonMenuBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledSideMenuVisualElement}"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonMenuBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <!--  <VisualState x:Name="Focused">  -->
                                <!--  <Storyboard>  -->
                                <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                <!--  <DiscreteObjectKeyFrame.Value>  -->
                                <!--  <Visibility>Visible</Visibility>  -->
                                <!--  </DiscreteObjectKeyFrame.Value>  -->
                                <!--  </DiscreteObjectKeyFrame>  -->
                                <!--  </ObjectAnimationUsingKeyFrames>  -->
                                <!--  </Storyboard>  -->
                                <!--  </VisualState>  -->
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonHoverBackgroundBrush}"
                                   Stroke="{StaticResource ButtonHoverBackgroundBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="False">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ButtonBorderBrush}"
                                   Opacity="0.4"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PopupRoundedCornerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                        <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                        <!--  <DiscreteObjectKeyFrame.Value>  -->
                                        <!--  <Visibility>Visible</Visibility>  -->
                                        <!--  </DiscreteObjectKeyFrame.Value>  -->
                                        <!--  </DiscreteObjectKeyFrame>  -->
                                        <!--  </ObjectAnimationUsingKeyFrames>  -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd"
                                Background="{StaticResource ButtonHoverBackgroundBrush}"
                                BorderBrush="{StaticResource ButtonHoverBackgroundBrush}"
                                BorderThickness="1"
                                CornerRadius="13">

                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Border>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{StaticResource ButtonBorderBrush}"
                                BorderBrush="{StaticResource ButtonBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="13"
                                Opacity="0.4"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="PopupRoundedCornerBlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <!--  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">  -->
                                        <!--  <DiscreteObjectKeyFrame KeyTime="0">  -->
                                        <!--  <DiscreteObjectKeyFrame.Value>  -->
                                        <!--  <Visibility>Visible</Visibility>  -->
                                        <!--  </DiscreteObjectKeyFrame.Value>  -->
                                        <!--  </DiscreteObjectKeyFrame>  -->
                                        <!--  </ObjectAnimationUsingKeyFrames>  -->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd"
                                Background="{StaticResource ButtonMenuBorderBrush}"
                                BorderBrush="{StaticResource ButtonMenuBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="13">

                            <ContentControl x:Name="ContentControl"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                        </Border>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{StaticResource ButtonMenuBorderBrush}"
                                BorderBrush="{StaticResource ButtonMenuBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="13"
                                Opacity="0.4"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="true">
                <Setter Property="Control.Foreground" Value="White" />
            </Trigger>
            <!--<Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundBrush}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <Style x:Key="BlueHeadingStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#00509F" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Text="{TemplateBinding Content}" Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LinkButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource BrushAccentColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Text="{TemplateBinding Content}" Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContentLinkButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentControl Content="{TemplateBinding Content}" Background="{TemplateBinding Background}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PulseStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Height="55" Width="55">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse"
                                                                               Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="50"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse"
                                                                               Storyboard.TargetProperty="(FrameworkElement.Height)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="50"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.2500000">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy"
                                                                               Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2500000" Value="22"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.7500000" Value="50"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy"
                                                                               Storyboard.TargetProperty="(FrameworkElement.Height)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2500000" Value="22"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.7500000" Value="50"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.2500000" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.7500000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy1"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy1"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy1"
                                                                               Storyboard.TargetProperty="(FrameworkElement.Width)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="22"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipse_Copy1"
                                                                               Storyboard.TargetProperty="(FrameworkElement.Height)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="22"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Ellipse x:Name="ellipse" Stroke="#FFF3700D" HorizontalAlignment="Center" Width="22" Height="22" VerticalAlignment="Center"
                                         StrokeThickness="2" Visibility="Collapsed"/>
                        <Ellipse x:Name="ellipse_Copy" Stroke="#FFF3700D" StrokeThickness="2" Height="22" HorizontalAlignment="Center"
                                         VerticalAlignment="Center" Width="22" Visibility="Collapsed"/>
                        <Ellipse x:Name="ellipse_Copy1" Stroke="#FFF3700D" StrokeThickness="2" Height="22" HorizontalAlignment="Center"
                                         VerticalAlignment="Center" Width="22" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideMenuPulseStyle" TargetType="Button">
        <Setter Property="Width" Value="115" />
        <Setter Property="Height" Value="35" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonMenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                                       Storyboard.TargetName="ellipseRec"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                                       Storyboard.TargetName="ellipseRec"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.9000000">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Border x:Name="ellipseRec" BorderThickness="2" CornerRadius="5,5,5,5" BorderBrush="#FFF3700D" Margin="-9">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Color="#FFF3700D" Opacity="2" BlurRadius="20"/>
                            </Border.Effect>
                            <Rectangle Stroke="#FFF3700D" StrokeThickness="2" Visibility="Collapsed" Margin="-3" Stretch="UniformToFill" ClipToBounds="True"></Rectangle>
                        </Border>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Opacity" Value="0.3" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource WareWolfButtonBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Path x:Name="CloseGlyph"
                              Width="12"
                              Height="12"
                              Stretch="Fill"
                              Opacity="1"
                              Data="M8.4446707,-0.6250003 L10.625006,1.5604857 L7.1956725,4.9880161 L10.625,8.4285631 L8.5070467,10.625005 L5.0209293,7.1613607 L1.5554626,10.625 L-0.62499386,8.4862156 L2.8442898,5.0018182 L-0.625,1.5548685 L1.602536,-0.62499505 L5.0254283,2.8090899 z"
                              Fill="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True" />
        </Style.Triggers>
    </Style>
    <Style x:Key="ActivityToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" IsTabStop="False"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" 
                                   Visibility="Collapsed" StrokeThickness="1" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="False">
                            <Setter TargetName="Bd" Property="Stroke" Value="{StaticResource ButtonPressedTransparentBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>