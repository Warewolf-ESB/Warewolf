<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ig="http://schemas.infragistics.com/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Common/Color.xaml" />
        <ResourceDictionary Source="../Common/Brushes.xaml" />
        <ResourceDictionary Source="../Common/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--  TextBox Brushes  -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource WarewolfBlack}" />
    <SolidColorBrush x:Key="ForegroundHoverBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource WarewolfPanelGrey}" />
    <SolidColorBrush x:Key="TextBoxHoverBackgroundBrush" Color="{StaticResource WarewolfWhite}" />
    <!--  DO NOT make TextBoxHoverBackgroundBrush transparent!  -->
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="TextBoxFocusedBrush" Color="{StaticResource WarewolfOrange}" />
    <SolidColorBrush x:Key="TextBoxReadOnlyBackgroundBrush" Color="{StaticResource WarewolfPanelGrey}" />

    <SolidColorBrush x:Key="NodeForeground" Color="{StaticResource WarewolfBlack}"/>
    <SolidColorBrush x:Key="NodeBgBrush" Color="{StaticResource WarewolfWhite}"/>
    <SolidColorBrush x:Key="NodeBgBrushOver" Color="{StaticResource WarewolfWhite}"/>
    <SolidColorBrush x:Key="NodeBgBrushSelected" Color="{StaticResource WarewolfWhite}"/>
    <SolidColorBrush x:Key="NodeBgBorderSelected" Color="{StaticResource WarewolfOrange}"/>
    <SolidColorBrush x:Key="NodeBgFocus" Color="{StaticResource WarewolfOrange}"/>
    <SolidColorBrush x:Key="NodeStroke" Color="#FF464646"/>
    <SolidColorBrush x:Key="NodeStrokeOver" Color="#FF2686AE"/>
    <SolidColorBrush x:Key="NodeStrokeSelected" Color="#FF252525"/>
    <SolidColorBrush x:Key="NodeStrokeFocused" Color="#FF3AB5E9"/>

    <Style TargetType="ig:NetworkNodeNodeControl" x:Key="SpecialNodeStyle">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="MinWidth" Value="27" />
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,0,6,0" />
        <Setter Property="BorderBrush" Value="{StaticResource NodeStroke}" />
        <Setter Property="Background" Value="{StaticResource NodeBgBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:NetworkNodeNodeControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <!--<Storyboard>
                                        <DoubleAnimation Duration="0"  Storyboard.TargetProperty="(ContentControl.Foreground)" Storyboard.TargetName="NodeContainer" >
                                        </DoubleAnimation>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledFill">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NodePresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="over" />-->
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selectedMain" />-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Unselected"></VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="1" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="overlay" />
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" />-->
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" />
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selectedMain" />-->
                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="overlay" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="overlayMain" 
                                Background="{StaticResource WareWolfHeaderButtonBrush}" 
                                Visibility="{Binding Path=IsMainNode, Converter={StaticResource BoolToVisibilityConverter}}" 
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="0" />
                        <Border x:Name="selectedMain" 
                                Opacity="0" 
                                Background="{StaticResource WareWolfHeaderButtonBrush}" 
                                Visibility="{Binding Path=IsMainNode, Converter={StaticResource BoolToVisibilityConverter}}" 
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="0" />
                        <Border x:Name="over" 
                                BorderBrush="{StaticResource WareWolfOrangeBrush}" 
                                Background="{StaticResource NodeBgBrushOver}"
                                CornerRadius="{TemplateBinding CornerRadius}" 
                                Opacity="0" 
                                BorderThickness="1"/>

                        <Border x:Name="focused" 
                                BorderBrush="{StaticResource WareWolfOrangeBrush}" 
                                Background="Transparent"
                                CornerRadius="{TemplateBinding CornerRadius}" 
                                Opacity="0" 
                                BorderThickness="1"/>

                        <Border x:Name="selected" 
                                Background="{StaticResource NodeBgBrushSelected}" 
                                Visibility="{Binding Path=IsNotMainNode, Converter={StaticResource BoolToVisibilityConverter}}" 
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Opacity="0" 
                                BorderBrush="{StaticResource WareWolfOrangeBrush}" />

                        <Border x:Name="focusedStroke" 
                                BorderBrush="{StaticResource WareWolfOrangeBrush}" 
                                CornerRadius="{TemplateBinding CornerRadius}" 
                                Opacity="0" 
                                BorderThickness="1"/>

                        <ContentControl x:Name="NodeContainer" 
                                        Margin="{TemplateBinding Padding}" 
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="NodePresenter" />
                        </ContentControl>
                        <Rectangle x:Name="DisabledFill" Fill="#4DFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource WareWolfOrangeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>