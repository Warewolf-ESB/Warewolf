<UserControl x:Class="Warewolf.Studio.Views.ExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:core="clr-namespace:Warewolf.Studio.Core;assembly=Warewolf.Studio.Core"
             xmlns:customControls="clr-namespace:Warewolf.Studio.CustomControls;assembly=Warewolf.Studio.CustomControls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ig="http://schemas.infragistics.com/xaml"
             xmlns:interfaces="clr-namespace:Dev2.Common.Interfaces;assembly=Dev2.Common.Interfaces"
             xmlns:languages="clr-namespace:Warewolf.Studio.Resources.Languages;assembly=Warewolf.Studio.Resources"
             xmlns:luna="clr-namespace:Warewolf.Studio.Themes.Luna;assembly=Warewolf.Studio.Themes.Luna"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:Warewolf.Studio.Views"
             x:Name="ExplorerViewControl"
             d:DataContext="{d:DesignInstance Type=interfaces:IExplorerViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="480"
             d:DesignWidth="640"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <luna:SharedResourceDictionary Source="/Warewolf.Studio.Themes.Luna;component/Theme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <core:ResourceTypeToIconConverter x:Key="ResourceTypeToIconConverter" />
            <views:WidthConverter x:Key="WidthConverter" />
            <core:ResourceTypeToIconVisibility x:Key="ResourceTypeToVisibilityConverter" />
            <views:NotConverter x:Key="NotConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="F" Command="{Binding Path=CreateFolderCommand}" Modifiers="Control+Shift" />
    </UserControl.InputBindings>
    <Grid >
        <Grid x:Name="Overlay" Panel.ZIndex="1000" Visibility="Collapsed">
            <Grid.Background>
                <SolidColorBrush Opacity=".5" Color="Black" />
            </Grid.Background>
        </Grid>

        <Grid x:Name="LayoutRoot" Margin="{StaticResource ElementBorder}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="422*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--  URI LOOKUP  -->
            <StackPanel HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Visibility="{Binding ShowConnectControl, Converter={StaticResource BoolToVisibilityConverter}}">
                <views:ConnectControl x:Name="ConnectControl" DataContext="{Binding ConnectControlViewModel}" />
            </StackPanel>
            <!--  SERVICE FILTER  -->
            <Grid Grid.Row="1" Margin="0,-1,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="29" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>

                <!--  Margin="{StaticResource ElementBorderRight}"  -->
                <customControls:SearchTextBox x:Name="SearchTextBox"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Margin="{StaticResource ControlBorderTopRight}"
                                              HorizontalAlignment="Stretch"
                                              ClearSearchCommand="{Binding ClearSearchTextCommand}"
                                              ClearSearchToolTip="{Binding ExplorerClearSearchTooltip}"
                                              LabelText="Filter"
                                              Style="{StaticResource SearchTextboxStyle}"
                                              Text="{Binding SearchText, Delay=450, UpdateSourceTrigger=PropertyChanged}"
                                              ToolTip="{Binding SearchToolTip}">
                    <i:Interaction.Behaviors>
                        <core:HelpSetter DataContext="{Binding}" Text="{x:Static languages:Core.ExplorerViewFilterSearchHelp}" />
                    </i:Interaction.Behaviors>
                </customControls:SearchTextBox>
                <Button Grid.Row="0"
                        Grid.Column="1"
                        x:Name="FilterRefreshButton"
                        Width="25"
                        Height="25"
                        Margin="0,3,0,-1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Command="{Binding RefreshCommand}"
                        ToolTip="{Binding Path=RefreshToolTip}"
                        Visibility="{Binding Path=IsRefreshing,
                                             Converter={StaticResource NotConverter}}">
                    <fa:FontAwesome HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Icon="Refresh"
                                    TextOptions.TextFormattingMode="Display" />
                    <i:Interaction.Behaviors>
                        <core:HelpSetter DataContext="{Binding}" Text="{x:Static languages:Core.ExplorerViewRefreshHelp}" />
                    </i:Interaction.Behaviors>
                </Button>
                <views:CircularProgressBar Grid.Row="0"
                                           Grid.Column="1"
                                           x:Name="FilterRefreshProgressBar"
                                           Width="25"
                                           Height="25"
                                           Padding="2.5"
                                           Visibility="{Binding Path=IsRefreshing,
                                                                Converter={StaticResource BoolToVisibilityConverter}}" />

            </Grid>
            <TreeView x:Name="ExplorerTree"
                      Grid.Row="2"
                      Margin="{StaticResource ElementBorderTop}"
                      ItemsSource="{Binding Environments}"
                      PreviewMouseLeftButtonDown="Tree_PreviewMouseLeftButtonDown"
                      PreviewMouseLeftButtonUp="ExplorerTree_OnPreviewMouseLeftButtonUp"
                      PreviewMouseMove="Tree_MouseMove"
                      PreviewDrop="ExplorerTree_OnPreviewDrop"
                      Drop="DropTree_Drop"
                      DragEnter="DropTree_DragEnter"
                      DragOver="ExplorerTree_OnDragOver"
                      DragLeave="ExplorerTree_OnDragLeave"
                      AllowDrop="True">
                <TreeView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource TreeViewItemStyle}" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate  DataType="{x:Type interfaces:IEnvironmentViewModel}" ItemsSource="{Binding Children}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="44" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0"
                                    Command="{Binding RefreshCommand}"
                                    Style="{StaticResource ExplorerTreeEnvironmentButtonStyle}"
                                    Visibility="{Binding ElementName=FilterRefreshButton, Path=Visibility}">
                                <Grid>
                                    <Image Width="18"
                                            Height="18"
                                            Source="{StaticResource System-Logo}"
                                            Visibility="{Binding IsServerIconVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    <Image Width="18"
                                            Height="18"
                                            Source="{StaticResource System-Logo-Mono}"
                                            Visibility="{Binding IsServerUnavailableIconVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                                </Grid>
                            </Button>

                            <views:CircularProgressBar Grid.Column="0" Visibility="{Binding IsConnecting, Converter={StaticResource BoolToVisibilityConverter}}" />

                            <views:CircularProgressBar Grid.Column="0" Visibility="{Binding ElementName=FilterRefreshProgressBar, Path=Visibility}" />
                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <CheckBox x:Name="EnvironmentNameCheckBox"
                                           ClickMode="Press"
                                           IsChecked="{Binding IsResourceChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           IsEnabled="{Binding IsResourceCheckedEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToolTip="{Binding DeployResourceCheckboxTooltip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                           ToolTipService.ShowOnDisabled="True"
                                           Style="{StaticResource DeployCheckBoxStyle}"
                                           Visibility="{Binding AllowResourceCheck, Converter={StaticResource BoolToVisibilityConverter}}" />
                                <TextBlock Margin="4,0,0,0"
                                           FontSize="12"
                                           Padding="0,4,0,4"
                                           Text="{Binding DisplayName}" />

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding Expand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </StackPanel>
                            <TextBlock Margin="4,0,0,0"
                                       Grid.Column="2"
                                       FontSize="12"
                                       Padding="0,4,0,4"
                                       Visibility="{Binding ChildrenCount, Converter={StaticResource IntToVisibilityConverter}}">
                                <Run Text=" (" />
                                <Run Text="{Binding ChildrenCount, Mode=OneWay}" />
                                <Run Text=")" />
                            </TextBlock>
                        </Grid>

                        <HierarchicalDataTemplate.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type interfaces:IExplorerItemViewModel}" ItemsSource="{Binding Children}">
                                <Grid Margin="0,1,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="22" />
                                        <ColumnDefinition Width="22" />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="ResourceImage"
                                           Width="14"
                                           Height="14"
                                           Source="{Binding ResourceType, Converter={StaticResource ResourceTypeToIconConverter}}"
                                           Visibility="{Binding ResourceType, Converter={StaticResource ResourceTypeToVisibilityConverter}}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding Path=Expand}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Image>
                                        <CheckBox x:Name="ResourceNameCheckBox"
                                                      ClickMode="Press"
                                                      IsChecked="{Binding Path=IsResourceChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      IsEnabled="{Binding Path=IsResourceCheckedEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ToolTip="{Binding Path=DeployResourceCheckboxTooltip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ToolTipService.ShowOnDisabled="True"
                                                      Style="{StaticResource DeployCheckBoxStyle}"
                                                      Visibility="{Binding Path=AllowResourceCheck, Converter={StaticResource BoolToVisibilityConverter}}" />
                                        <TextBlock x:Name="ResourceNameTextBlock"
                                                       Height="20"
                                                       MinWidth="5"
                                                       HorizontalAlignment="Stretch"
                                                       VerticalAlignment="Center"
                                                       Focusable="True"
                                                       Text="{Binding Path=ResourceName}"
                                                       TextTrimming="CharacterEllipsis"
                                                       ToolTip="{Binding Path=ResourceName}">
                                            <TextBlock.InputBindings>
                                                <MouseBinding Command="{Binding Path=OpenCommand}"
                                                                  Gesture="LeftDoubleClick"
                                                                  MouseAction="LeftDoubleClick" />
                                            </TextBlock.InputBindings>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <i:InvokeCommandAction Command="{Binding Path=Expand}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                        </TextBlock>
                                    </StackPanel>
                                    <TextBlock Grid.Column="1"
                                               Margin="4,0,0,0"
                                               FontSize="12"
                                               Padding="0,4,0,4"
                                               Visibility="{Binding ChildrenCount, Converter={StaticResource IntToVisibilityConverter}}">
                                        <Run Text="(" />
                                        <Run Text="{Binding ChildrenCount, Mode=OneWay}" />
                                        <Run Text=")" />
                                    </TextBlock>

                                    <!--  VIEW ICON  -->
                                    <Button x:Name="EditButton"
                                            Grid.Column="2"
                                            Width="22"
                                            HorizontalAlignment="Right"
                                            Command="{Binding Path=OpenCommand}"
                                            ToolTip="{Binding Path=EditToolTip}">
                                        <Button.Content>
                                            <fa:FontAwesome FontSize="12" FontWeight="Light" Icon="Eye" />
                                        </Button.Content>
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource NewExplorerTreeButtonStyle}" TargetType="Button">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=1}, Path=IsMouseOver}" Value="True"/>
                                                            <Condition Binding="{Binding CanView}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!--  PLAY ICON  -->
                                    <Button x:Name="ExecuteButton"
                                            Grid.Column="3"
                                            Width="22"
                                            HorizontalAlignment="Right"
                                            Command="{Binding Path=DebugCommand}"
                                            ToolTip="{Binding Path=EditToolTip}">
                                        <Button.Content>
                                            <fa:FontAwesome FontSize="12" FontWeight="Light" Icon="PlayCircle" />
                                        </Button.Content>
                                        <Button.Style>
                                            <Style BasedOn="{StaticResource NewExplorerTreeButtonStyle}" TargetType="Button">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=1}, Path=IsMouseOver}" Value="True"/>
                                                            <Condition Binding="{Binding CanExecute}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Foreground" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </HierarchicalDataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>
    </Grid>
</UserControl>