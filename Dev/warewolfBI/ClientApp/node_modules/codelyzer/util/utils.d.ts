import * as ts from 'typescript';
export declare const getClassName: (property: ts.PropertyDeclaration) => string;
export declare const getDecoratorArgument: (decorator: ts.Decorator) => ts.ObjectLiteralExpression;
export declare const getDecoratorPropertyInitializer: (decorator: ts.Decorator, name: string) => ts.Expression;
export declare const getDecoratorName: (decorator: ts.Decorator) => string;
export declare const getComponentDecorator: (declaration: ts.ClassDeclaration) => ts.Decorator;
export declare const getSymbolName: (expression: ts.ExpressionWithTypeArguments) => string;
export declare const maybeNodeArray: <T extends ts.Node>(nodes: ts.NodeArray<T>) => ReadonlyArray<T>;
export declare const isSameLine: (sourceFile: ts.SourceFile, pos1: number, pos2: number) => boolean;
export declare const isStringLiteralLike: (node: ts.Node) => boolean;
