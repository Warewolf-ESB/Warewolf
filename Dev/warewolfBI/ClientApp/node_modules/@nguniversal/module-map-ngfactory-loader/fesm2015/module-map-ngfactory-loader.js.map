{"version":3,"file":"module-map-ngfactory-loader.js","sources":["../../../../../../../../../../execroot/nguniversal/bazel-out/darwin-fastbuild/bin/modules/module-map-ngfactory-loader/src/module-map-ngfactory-loader.ts","../../../../../../../../../../execroot/nguniversal/bazel-out/darwin-fastbuild/bin/modules/module-map-ngfactory-loader/src/module-map-loader.module.ts","../../../../../../../../../../execroot/nguniversal/bazel-out/darwin-fastbuild/bin/modules/module-map-ngfactory-loader/module-map-ngfactory-loader_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Injectable,\n  NgModuleFactoryLoader,\n  InjectionToken,\n  NgModuleFactory,\n  Inject,\n  Type,\n  Compiler\n} from '@angular/core';\nimport {ModuleMap} from './module-map';\n\n/**\n * Token used by the ModuleMapNgFactoryLoader to load modules\n */\nexport const MODULE_MAP: InjectionToken<ModuleMap> = new InjectionToken('MODULE_MAP');\n\n/**\n * NgModuleFactoryLoader which does not lazy load\n */\n@Injectable()\nexport class ModuleMapNgFactoryLoader implements NgModuleFactoryLoader {\n  constructor(private compiler: Compiler, @Inject(MODULE_MAP) private moduleMap: ModuleMap) { }\n\n  load(loadChildrenString: string): Promise<NgModuleFactory<any>> {\n    const offlineMode = this.compiler instanceof Compiler;\n    const type = this.moduleMap[loadChildrenString];\n\n    if (!type) {\n      throw new Error(`${loadChildrenString} did not exist in the MODULE_MAP`);\n    }\n\n    return offlineMode ?\n      this.loadFactory(<NgModuleFactory<any>> type) : this.loadAndCompile(<Type<any>> type);\n  }\n\n  private loadFactory(factory: NgModuleFactory<any>): Promise<NgModuleFactory<any>> {\n    return new Promise(resolve => resolve(factory));\n  }\n\n  private loadAndCompile(type: Type<any>): Promise<NgModuleFactory<any>> {\n    return this.compiler.compileModuleAsync(type);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  NgModule,\n  NgModuleFactoryLoader,\n  ModuleWithProviders,\n  StaticProvider\n} from '@angular/core';\n\nimport { ModuleMapNgFactoryLoader, MODULE_MAP } from './module-map-ngfactory-loader';\nimport {ModuleMap} from './module-map';\n\n/**\n * Helper function for getting the providers object for the MODULE_MAP\n *\n * @param moduleMap Map to use as a value for MODULE_MAP\n */\nexport function provideModuleMap(moduleMap: ModuleMap): StaticProvider {\n  return {\n    provide: MODULE_MAP,\n    useValue: moduleMap\n  };\n}\n\n/**\n * Module for using a NgModuleFactoryLoader which does not lazy load\n */\n@NgModule({\n  providers: [\n    {\n      provide: NgModuleFactoryLoader,\n      useClass: ModuleMapNgFactoryLoader\n    }\n  ]\n})\nexport class ModuleMapLoaderModule {\n  /**\n   * Returns a ModuleMapLoaderModule along with a MODULE_MAP\n   *\n   * @param moduleMap Map to use as a value for MODULE_MAP\n   */\n  static withMap(moduleMap: ModuleMap): ModuleWithProviders {\n    return {\n      ngModule: ModuleMapLoaderModule,\n      providers: [\n        {\n          provide: MODULE_MAP,\n          useValue: moduleMap\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ModuleMap as Éµnguniversal_modules_module_map_ngfactory_loader_module_map_ngfactory_loader_a} from './src/module-map';"],"names":[],"mappings":";;;;;;AAOA;;;AAcA,AAAO,MAAM,UAAU,GAA8B,IAAI,cAAc,CAAC,YAAY,CAAC,CAAC;;;;AAMtF;;;;;IACE,YAAoB,QAAkB,EAA8B;QAAhD,aAAQ,GAAR,QAAQ,CAAU;QAA8B,cAAS,GAAT,SAAS;KAAgB;;;;;IAE7F,IAAI,CAAC,kBAA0B;QAC7B,uBAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,YAAY,QAAQ,CAAC;QACtD,uBAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QAEhD,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,GAAG,kBAAkB,kCAAkC,CAAC,CAAC;SAC1E;QAED,OAAO,WAAW;YAChB,IAAI,CAAC,WAAW,mBAAwB,IAAI,EAAC,GAAG,IAAI,CAAC,cAAc,mBAAa,IAAI,EAAC,CAAC;KACzF;;;;;IAEO,WAAW,CAAC,OAA6B;QAC/C,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;;;;;IAG1C,cAAc,CAAC,IAAe;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;;;;YArBjD,UAAU;;;;YAZT,QAAQ;4CAciC,MAAM,SAAC,UAAU;;;;;;;ACrB5D;;;;;;AAeA,0BAAiC,SAAoB;IACnD,OAAO;QACL,OAAO,EAAE,UAAU;QACnB,QAAQ,EAAE,SAAS;KACpB,CAAC;CACH;;;;AAaD;;;;;;;IAME,OAAO,OAAO,CAAC,SAAoB;QACjC,OAAO;YACL,QAAQ,EAAE,qBAAqB;YAC/B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,UAAU;oBACnB,QAAQ,EAAE,SAAS;iBACpB;aACF;SACF,CAAC;KACH;;;YAxBF,QAAQ,SAAC;gBACR,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,qBAAqB;wBAC9B,QAAQ,EAAE,wBAAwB;qBACnC;iBACF;aACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCD;;GAEG;;;;"}