{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","core","rxjs","operators","common","platformBrowser","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","position","anchor","EmptyOutletComponent","Component","template","PRIMARY_OUTLET","ParamsAsMap","params","has","name","get","v","isArray","getAll","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","validateNode","getFullPath","fullPath","Error","component","children","loadChildren","outlet","redirectTo","matcher","charAt","currentRoute","standardizeConfig","map","shallowEqual","a","k1","k2","flatten","arr","last","forEach","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","undefined","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","pathFromRoot","findNode","firstChild","siblings","findPath","filter","cc","node","_b","_c","node_1","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","relativeLinkResolution","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","location","navigations","navigationId","isNgZoneEnabled","events","Subject","errorHandler","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","urlUpdateStrategy","console","ɵConsole","ngZone","NgZone","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","parseUrl","source","setTimeout","scheduleNavigation","serializeUrl","event","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","isInAngularZone","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","setBrowserUrl","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","appliedUrlTree","evt","createRouterState","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","isCurrentPathEqualTo","replaceState","go","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","Input","String","Boolean","HostListener","Function","Directive","selector","Attribute","Renderer2","ElementRef","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","href","prepareExternalUrl","HostBinding","Number","LocationStrategy","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","ContentChildren","descendants","QueryList","exportAs","ChangeDetectorRef","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","Output","ViewContainerRef","ComponentFactoryResolver","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","RouterScroller","viewportScroller","options","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","init","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","RouterModule_1","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","createRouterScroller","ViewportScroller","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","entryComponents","scrollOffset","setOffset","platformLocationStrategy","baseHref","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_h","ɵangular_packages_router_router_c","ɵangular_packages_router_router_i","ɵangular_packages_router_router_j","ɵangular_packages_router_router_e","ɵangular_packages_router_router_d","ɵangular_packages_router_router_k","ɵangular_packages_router_router_g","ɵangular_packages_router_router_b","ɵangular_packages_router_router_f","ɵangular_packages_router_router_n","ɵangular_packages_router_router_l","ɵangular_packages_router_router_m","ɵEmptyOutletComponent","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,QAASA,QAAQ,kBAAmBA,QAAQ,mBAAoBA,QAAQ,8BACxK,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,mBAAoB,UAAW,gBAAiB,OAAQ,iBAAkB,kBAAmB,6BAA8BJ,GAC9KA,GAASD,EAAOO,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,WAAaR,EAAOO,GAAGE,KAAKT,EAAOU,KAAKV,EAAOU,KAAKC,UAAUX,EAAOO,GAAGK,OAAOZ,EAAOO,GAAGM,iBAH9I,CAIEC,KAAM,SAAWZ,EAAQO,EAAKC,EAAKC,EAAUC,EAAOC,GAAmB,aAkBrE,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAGhC,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GACzC,IAA2H3B,EAAvH4B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOzB,OAAO4B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASjB,EAAIwB,EAAWP,MAAIY,GAAKD,EAAI,EAAI5B,EAAE6B,GAAKD,EAAI,EAAI5B,EAAEyB,EAAQC,EAAKG,GAAK7B,EAAEyB,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK3B,OAAO+B,eAAeR,EAAQC,EAAKG,GAAIA,EAGhE,SAASK,EAAQC,EAAYC,GACzB,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,IAG3D,SAASE,EAAWC,EAAaC,GAC7B,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAGpH,SAASE,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAW5B,EAAI,EAChE,OAAI0B,EAAUA,EAAEtB,KAAKqB,IAEjBI,KAAM,WAEF,OADIJ,GAAKzB,GAAKyB,EAAEtB,SAAQsB,OAAI,IACnBK,MAAOL,GAAKA,EAAEzB,KAAM+B,MAAON,KAKhD,SAASO,EAAOP,EAAGxB,GACf,IAAIyB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBb,EAAYqB,EAA3BjC,EAAI0B,EAAEtB,KAAKqB,GAAOS,KACtB,IACI,WAAc,IAANjC,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE6B,QAAQE,MAAMG,EAAGC,KAAKvB,EAAEkB,OAExE,MAAOM,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQxB,IAAMA,EAAEmB,OAASL,EAAI1B,EAAU,SAAI0B,EAAEtB,KAAKJ,GAElD,QAAU,GAAIiC,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASlC,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkC,EAAKA,EAAGI,OAAON,EAAO9B,UAAUF,KACpC,OAAOkC;;;;;;;OA8BX,IAAIK,EAkBAC,EAAiC,SAAUC,GAE3C,SAASD,EAETE,EAEAC,EAEAC,EAEAC,QAC8B,IAAtBD,IAEJA,EAAoB,mBACE,IAAlBC,IAEJA,EAAgB,MAChB,IAAIC,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAG1C,OAFAiE,EAAMF,kBAAoBA,EAC1BE,EAAMD,cAAgBA,EACfC,EAIX,OAvBAvD,EAAUiD,EAAiBC,GAsB3BD,EAAgB9C,UAAUqD,SAAW,WAAc,MAAO,uBAAyBlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,MAC9GH,EAxByB,CAlBhCD,EACA,SAASA,EAETG,EAEAC,GACI9D,KAAK6D,GAAKA,EACV7D,KAAK8D,IAAMA,IA4CfK,EAA+B,SAAUP,GAEzC,SAASO,EAETN,EAEAC,EAEAM,GACI,IAAIH,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAE1C,OADAiE,EAAMG,kBAAoBA,EACnBH,EAMX,OAhBAvD,EAAUyD,EAAeP,GAazBO,EAActD,UAAUqD,SAAW,WAC/B,MAAO,qBAAuBlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,0BAA4B9D,KAAKoE,kBAAoB,MAElHD,EAjBuB,CAkBhCT,GAQEW,EAAkC,SAAUT,GAE5C,SAASS,EAETR,EAEAC,EAEAQ,GACI,IAAIL,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAE1C,OADAiE,EAAMK,OAASA,EACRL,EAIX,OAdAvD,EAAU2D,EAAkBT,GAa5BS,EAAiBxD,UAAUqD,SAAW,WAAc,MAAO,wBAA0BlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,MAChHO,EAf0B,CAgBnCX,GAQEa,EAAiC,SAAUX,GAE3C,SAASW,EAETV,EAEAC,EAEAP,GACI,IAAIU,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAE1C,OADAiE,EAAMV,MAAQA,EACPU,EAMX,OAhBAvD,EAAU6D,EAAiBX,GAa3BW,EAAgB1D,UAAUqD,SAAW,WACjC,MAAO,uBAAyBlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,aAAe9D,KAAKuD,MAAQ,KAE3FgB,EAjByB,CAkBlCb,GAQEc,EAAkC,SAAUZ,GAE5C,SAASY,EAETX,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAG1C,OAFAiE,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAMX,OAnBAvD,EAAU8D,EAAkBZ,GAgB5BY,EAAiB3D,UAAUqD,SAAW,WAClC,MAAO,wBAA0BlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,0BAA4B9D,KAAKoE,kBAAoB,aAAepE,KAAKyE,MAAQ,KAEjJD,EApB0B,CAqBnCd,GAQEgB,EAAkC,SAAUd,GAE5C,SAASc,EAETb,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAG1C,OAFAiE,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAKX,OAlBAvD,EAAUgE,EAAkBd,GAe5Bc,EAAiB7D,UAAUqD,SAAW,WAClC,MAAO,wBAA0BlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,0BAA4B9D,KAAKoE,kBAAoB,aAAepE,KAAKyE,MAAQ,KAEjJC,EAnB0B,CAoBnChB,GAQEiB,EAAgC,SAAUf,GAE1C,SAASe,EAETd,EAEAC,EAEAM,EAEAK,EAEAG,GACI,IAAIX,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAI1C,OAHAiE,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACdR,EAAMW,eAAiBA,EAChBX,EAKX,OArBAvD,EAAUiE,EAAgBf,GAkB1Be,EAAe9D,UAAUqD,SAAW,WAChC,MAAO,sBAAwBlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,0BAA4B9D,KAAKoE,kBAAoB,aAAepE,KAAKyE,MAAQ,qBAAuBzE,KAAK4E,eAAiB,KAE5LD,EAtBwB,CAuBjCjB,GAWEmB,EAA8B,SAAUjB,GAExC,SAASiB,EAEThB,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAG1C,OAFAiE,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAKX,OAlBAvD,EAAUmE,EAAcjB,GAexBiB,EAAahE,UAAUqD,SAAW,WAC9B,MAAO,oBAAsBlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,0BAA4B9D,KAAKoE,kBAAoB,aAAepE,KAAKyE,MAAQ,KAE7II,EAnBsB,CAoB/BnB,GASEoB,EAA4B,SAAUlB,GAEtC,SAASkB,EAETjB,EAEAC,EAEAM,EAEAK,GACI,IAAIR,EAAQL,EAAOrC,KAAKvB,KAAM6D,EAAIC,IAAQ9D,KAG1C,OAFAiE,EAAMG,kBAAoBA,EAC1BH,EAAMQ,MAAQA,EACPR,EAKX,OAlBAvD,EAAUoE,EAAYlB,GAetBkB,EAAWjE,UAAUqD,SAAW,WAC5B,MAAO,kBAAoBlE,KAAK6D,GAAK,WAAa7D,KAAK8D,IAAM,0BAA4B9D,KAAKoE,kBAAoB,aAAepE,KAAKyE,MAAQ,KAE3IK,EAnBoB,CAoB7BpB,GAQEqB,EAAsC,WACtC,SAASA,EAETC,GACIhF,KAAKgF,MAAQA,EAGjB,OADAD,EAAqBlE,UAAUqD,SAAW,WAAc,MAAO,8BAAgClE,KAAKgF,MAAMC,KAAO,KAC1GF,EAP8B,GAgBrCG,EAAoC,WACpC,SAASA,EAETF,GACIhF,KAAKgF,MAAQA,EAGjB,OADAE,EAAmBrE,UAAUqD,SAAW,WAAc,MAAO,4BAA8BlE,KAAKgF,MAAMC,KAAO,KACtGC,EAP4B,GAiBnCC,EAAsC,WACtC,SAASA,EAETC,GACIpF,KAAKoF,SAAWA,EAMpB,OAJAD,EAAqBtE,UAAUqD,SAAW,WAEtC,MAAO,gCADIlE,KAAKoF,SAASC,aAAerF,KAAKoF,SAASC,YAAYJ,MAAQ,IAC3B,MAE5CE,EAV8B,GAoBrCG,EAAoC,WACpC,SAASA,EAETF,GACIpF,KAAKoF,SAAWA,EAMpB,OAJAE,EAAmBzE,UAAUqD,SAAW,WAEpC,MAAO,8BADIlE,KAAKoF,SAASC,aAAerF,KAAKoF,SAASC,YAAYJ,MAAQ,IAC7B,MAE1CK,EAV4B,GAoBnCC,EAAiC,WACjC,SAASA,EAETH,GACIpF,KAAKoF,SAAWA,EAMpB,OAJAG,EAAgB1E,UAAUqD,SAAW,WAEjC,MAAO,2BADIlE,KAAKoF,SAASC,aAAerF,KAAKoF,SAASC,YAAYJ,MAAQ,IAChC,MAEvCM,EAVyB,GAoBhCC,EAA+B,WAC/B,SAASA,EAETJ,GACIpF,KAAKoF,SAAWA,EAMpB,OAJAI,EAAc3E,UAAUqD,SAAW,WAE/B,MAAO,yBADIlE,KAAKoF,SAASC,aAAerF,KAAKoF,SAASC,YAAYJ,MAAQ,IAClC,MAErCO,EAVuB,GAiB9BC,EAAwB,WACxB,SAASA,EAETC,EAEAC,EAEAC,GACI5F,KAAK0F,YAAcA,EACnB1F,KAAK2F,SAAWA,EAChB3F,KAAK4F,OAASA,EAMlB,OAJAH,EAAO5E,UAAUqD,SAAW,WAExB,MAAO,mBAAqBlE,KAAK4F,OAAS,kBADhC5F,KAAK2F,SAAW3F,KAAK2F,SAAS,GAAK,KAAO3F,KAAK2F,SAAS,GAAK,MACJ,MAEhEF,EAhBgB,GAmCvBI,EAAsC,WAMtC,OAHuBpE,GACnB9B,EAAKmG,WAAYC,SAAU,qCAH/B,SAASF,OAD4B,GAuBrCG,EAAiB,UACjBC,EAA6B,WAC7B,SAASA,EAAYC,GACjBlG,KAAKkG,OAASA,MAsBlB,OApBAD,EAAYpF,UAAUsF,IAAM,SAAUC,GAAQ,OAAOpG,KAAKkG,OAAOzF,eAAe2F,IAChFH,EAAYpF,UAAUwF,IAAM,SAAUD,GAClC,GAAIpG,KAAKmG,IAAIC,GAAO,CAChB,IAAIE,EAAItG,KAAKkG,OAAOE,GACpB,OAAO7F,MAAMgG,QAAQD,GAAKA,EAAE,GAAKA,EAErC,OAAO,MAEXL,EAAYpF,UAAU2F,OAAS,SAAUJ,GACrC,GAAIpG,KAAKmG,IAAIC,GAAO,CAChB,IAAIE,EAAItG,KAAKkG,OAAOE,GACpB,OAAO7F,MAAMgG,QAAQD,GAAKA,GAAKA,GAEnC,UAEJlG,OAAO+B,eAAe8D,EAAYpF,UAAW,QACzCwF,IAAK,WAAc,OAAOjG,OAAOqG,KAAKzG,KAAKkG,SAC3CQ,YAAY,EACZC,cAAc,IAEXV,EAxBqB,GA+BhC,SAASW,EAAkBV,GACvB,OAAO,IAAID,EAAYC,GAY3B,SAASW,EAAkBC,EAAUC,EAAc/B,GAC/C,IAAIgC,EAAQhC,EAAMC,KAAKgC,MAAM,KAC7B,GAAID,EAAM1F,OAASwF,EAASxF,OAExB,OAAO,KAEX,GAAwB,SAApB0D,EAAMkC,YACLH,EAAaI,eAAiBH,EAAM1F,OAASwF,EAASxF,QAEvD,OAAO,KAIX,IAFA,IAAI8F,KAEKC,EAAQ,EAAGA,EAAQL,EAAM1F,OAAQ+F,IAAS,CAC/C,IAAIC,EAAON,EAAMK,GACbE,EAAUT,EAASO,GAEvB,GADkBC,EAAKE,WAAW,KAE9BJ,EAAUE,EAAKG,UAAU,IAAMF,OAE9B,GAAID,IAASC,EAAQtC,KAEtB,OAAO,KAGf,OAASyC,SAAUZ,EAASa,MAAM,EAAGX,EAAM1F,QAAS8F,UAAWA;;;;;;;OAUnE,IAAIQ,EACA,SAASA,EAAmBC,EAAQxI,GAChCW,KAAK6H,OAASA,EACd7H,KAAKX,OAASA,GAItB,SAASyI,EAAeC,EAAQC,QACT,IAAfA,IAAyBA,EAAa,IAE1C,IAAK,IAAI7G,EAAI,EAAGA,EAAI4G,EAAOzG,OAAQH,IAAK,CACpC,IAAI6D,EAAQ+C,EAAO5G,GAEnB8G,EAAajD,EADEkD,EAAYF,EAAYhD,KAI/C,SAASiD,EAAajD,EAAOmD,GACzB,IAAKnD,EACD,MAAM,IAAIoD,MAAM,2CAA6CD,EAAW,mWAE5E,GAAI5H,MAAMgG,QAAQvB,GACd,MAAM,IAAIoD,MAAM,mCAAqCD,EAAW,gCAEpE,IAAKnD,EAAMqD,YAAcrD,EAAMsD,WAAatD,EAAMuD,cAC7CvD,EAAMwD,QAAUxD,EAAMwD,SAAWxC,EAClC,MAAM,IAAIoC,MAAM,mCAAqCD,EAAW,4FAEpE,GAAInD,EAAMyD,YAAczD,EAAMsD,SAC1B,MAAM,IAAIF,MAAM,mCAAqCD,EAAW,sDAEpE,GAAInD,EAAMyD,YAAczD,EAAMuD,aAC1B,MAAM,IAAIH,MAAM,mCAAqCD,EAAW,0DAEpE,GAAInD,EAAMsD,UAAYtD,EAAMuD,aACxB,MAAM,IAAIH,MAAM,mCAAqCD,EAAW,wDAEpE,GAAInD,EAAMyD,YAAczD,EAAMqD,UAC1B,MAAM,IAAID,MAAM,mCAAqCD,EAAW,uDAEpE,GAAInD,EAAMC,MAAQD,EAAM0D,QACpB,MAAM,IAAIN,MAAM,mCAAqCD,EAAW,+CAEpE,QAAyB,IAArBnD,EAAMyD,aAA0BzD,EAAMqD,YAAcrD,EAAMsD,WAAatD,EAAMuD,aAC7E,MAAM,IAAIH,MAAM,mCAAqCD,EAAW,6FAEpE,QAAmB,IAAfnD,EAAMC,WAAqC,IAAlBD,EAAM0D,QAC/B,MAAM,IAAIN,MAAM,mCAAqCD,EAAW,4DAEpE,GAA0B,iBAAfnD,EAAMC,MAA8C,MAAzBD,EAAMC,KAAK0D,OAAO,GACpD,MAAM,IAAIP,MAAM,mCAAqCD,EAAW,qCAEpE,GAAmB,KAAfnD,EAAMC,WAAoC,IAArBD,EAAMyD,iBAA6C,IAApBzD,EAAMkC,UAE1D,MAAM,IAAIkB,MAAM,4CAA8CD,EAAW,mBAAuBnD,EAAMyD,WAAa,0HAEvH,QAAwB,IAApBzD,EAAMkC,WAA4C,SAApBlC,EAAMkC,WAA4C,WAApBlC,EAAMkC,UAClE,MAAM,IAAIkB,MAAM,mCAAqCD,EAAW,sDAEhEnD,EAAMsD,UACNR,EAAe9C,EAAMsD,SAAUH,GAGvC,SAASD,EAAYF,EAAYY,GAC7B,OAAKA,EAGAZ,GAAeY,EAAa3D,KAGxB+C,IAAeY,EAAa3D,KAC1B+C,EAAa,KAEdA,GAAcY,EAAa3D,KAC1B2D,EAAa3D,KAGb+C,EAAa,IAAMY,EAAa3D,KAThC,GAHA+C,EAkBf,SAASa,EAAkB9G,GACvB,IAAIuG,EAAWvG,EAAEuG,UAAYvG,EAAEuG,SAASQ,IAAID,GACxC/G,EAAIwG,EAAWvH,KAAagB,GAAKuG,SAAUA,IAAcvH,KAAagB,GAI1E,OAHKD,EAAEuG,YAAcC,GAAYxG,EAAEyG,eAAkBzG,EAAE0G,QAAU1G,EAAE0G,SAAWxC,IAC1ElE,EAAEuG,UAAYxC,GAEX/D;;;;;;;OAmBX,SAASiH,EAAaC,EAAG7I,GACrB,IAKIyB,EALAqH,EAAK7I,OAAOqG,KAAKuC,GACjBE,EAAK9I,OAAOqG,KAAKtG,GACrB,GAAI8I,EAAG3H,QAAU4H,EAAG5H,OAChB,OAAO,EAGX,IAAK,IAAIH,EAAI,EAAGA,EAAI8H,EAAG3H,OAAQH,IAE3B,GAAI6H,EADJpH,EAAMqH,EAAG9H,MACMhB,EAAEyB,GACb,OAAO,EAGf,OAAO,EAKX,SAASuH,EAAQC,GACb,OAAO7I,MAAMM,UAAU4C,OAAOjC,SAAU4H,GAK5C,SAASC,EAAKL,GACV,OAAOA,EAAE1H,OAAS,EAAI0H,EAAEA,EAAE1H,OAAS,GAAK,KAE5C,SAASgI,EAAQR,EAAKS,GAClB,IAAK,IAAIC,KAAQV,EACTA,EAAIrI,eAAe+I,IACnBD,EAAST,EAAIU,GAAOA,GA2BhC,SAASC,EAAeC,GACpB,OAAOA,EAAYC,KAAK9J,EAAU+J,WAAY/J,EAAUgK,MAAM,SAAUC,GAAU,OAAkB,IAAXA,KAE7F,SAASC,EAAmB9G,GACxB,OAAItD,EAAKqK,cAAc/G,GACZA,EAEPtD,EAAKsK,WAAWhH,GAITrD,EAAKsK,KAAKC,QAAQC,QAAQnH,IAE9BrD,EAAKyK,GAAGpH;;;;;;;OAanB,SAASqH,EAAaC,EAAWC,EAAWC,GACxC,OAAIA,EAOR,SAASC,EAAiBH,EAAWC,GAEjC,OAAOzB,EAAawB,EAAWC,GARpBE,CAAiBH,EAAUI,YAAaH,EAAUG,cAUjE,SAASC,EAAmBL,EAAWC,GACnC,IAAKK,EAAUN,EAAUzD,SAAU0D,EAAU1D,UACzC,OAAO,EACX,GAAIyD,EAAUO,mBAAqBN,EAAUM,iBACzC,OAAO,EACX,IAAK,IAAIhJ,KAAK0I,EAAUlC,SAAU,CAC9B,IAAKiC,EAAUjC,SAASxG,GACpB,OAAO,EACX,IAAK8I,EAAmBL,EAAUjC,SAASxG,GAAI0I,EAAUlC,SAASxG,IAC9D,OAAO,EAEf,OAAO,EApBC8I,CAAmBL,EAAUQ,KAAMP,EAAUO,MAsBzD,SAASC,EAAoBT,EAAWC,GAEpC,OAAOpK,OAAOqG,KAAK+D,GAAWlJ,QAAUlB,OAAOqG,KAAK8D,GAAWjJ,QAC3DlB,OAAOqG,KAAK+D,GAAWX,MAAM,SAAUjI,GAAO,OAAO4I,EAAU5I,KAAS2I,EAAU3I,KAvB/EoJ,CAAoBT,EAAUI,YAAaH,EAAUG,cAyBhE,SAASM,EAAqBV,EAAWC,GACrC,OAEJ,SAASU,EAA2BX,EAAWC,EAAWW,GACtD,GAAIZ,EAAUzD,SAASxF,OAAS6J,EAAe7J,OAE3C,QAAKuJ,EADDO,EAAUb,EAAUzD,SAASa,MAAM,EAAGwD,EAAe7J,QACjC6J,KAEpBX,EAAUrD,cAIb,GAAIoD,EAAUzD,SAASxF,SAAW6J,EAAe7J,OAAQ,CAC1D,IAAKuJ,EAAUN,EAAUzD,SAAUqE,GAC/B,OAAO,EACX,IAAK,IAAIrJ,KAAK0I,EAAUlC,SAAU,CAC9B,IAAKiC,EAAUjC,SAASxG,GACpB,OAAO,EACX,IAAKmJ,EAAqBV,EAAUjC,SAASxG,GAAI0I,EAAUlC,SAASxG,IAChE,OAAO,EAEf,OAAO,EAGP,IAAIsJ,EAAUD,EAAexD,MAAM,EAAG4C,EAAUzD,SAASxF,QACrD0B,EAAOmI,EAAexD,MAAM4C,EAAUzD,SAASxF,QACnD,QAAKuJ,EAAUN,EAAUzD,SAAUsE,MAE9Bb,EAAUjC,SAAStC,IAEjBkF,EAA2BX,EAAUjC,SAAStC,GAAiBwE,EAAWxH,GA7B9EkI,CAA2BX,EAAWC,EAAWA,EAAU1D,UAzB9DmE,CAAqBV,EAAUQ,KAAMP,EAAUO,MAuFvD,IAAIM,EAAyB,WAEzB,SAASA,EAETN,EAEAJ,EAEAW,GACItL,KAAK+K,KAAOA,EACZ/K,KAAK2K,YAAcA,EACnB3K,KAAKsL,SAAWA,EAcpB,OAZAlL,OAAO+B,eAAekJ,EAAQxK,UAAW,iBACrCwF,IAAK,WAID,OAHKrG,KAAKuL,iBACNvL,KAAKuL,eAAiB3E,EAAkB5G,KAAK2K,cAE1C3K,KAAKuL,gBAEhB7E,YAAY,EACZC,cAAc,IAGlB0E,EAAQxK,UAAUqD,SAAW,WAAc,OAAOsH,GAAmBC,UAAUzL,OACxEqL,EAzBiB,GAoCxBK,EAAiC,WACjC,SAASA,EAET5E,EAEAwB,GACI,IAAIrE,EAAQjE,KACZA,KAAK8G,SAAWA,EAChB9G,KAAKsI,SAAWA,EAEhBtI,KAAK2L,OAAS,KACdrC,EAAQhB,EAAU,SAAUhC,EAAGsF,GAAK,OAAOtF,EAAEqF,OAAS1H,IAY1D,OATAyH,EAAgB7K,UAAUsG,YAAc,WAAc,OAAOnH,KAAK8K,iBAAmB,GACrF1K,OAAO+B,eAAeuJ,EAAgB7K,UAAW,oBAE7CwF,IAAK,WAAc,OAAOjG,OAAOqG,KAAKzG,KAAKsI,UAAUhH,QACrDoF,YAAY,EACZC,cAAc,IAGlB+E,EAAgB7K,UAAUqD,SAAW,WAAc,OAAO2H,GAAe7L,OAClE0L,EAvByB,GAmDhCI,EAA4B,WAC5B,SAASA,EAET7G,EAEA8G,GACI/L,KAAKiF,KAAOA,EACZjF,KAAK+L,WAAaA,EActB,OAZA3L,OAAO+B,eAAe2J,EAAWjL,UAAW,gBACxCwF,IAAK,WAID,OAHKrG,KAAKgM,gBACNhM,KAAKgM,cAAgBpF,EAAkB5G,KAAK+L,aAEzC/L,KAAKgM,eAEhBtF,YAAY,EACZC,cAAc,IAGlBmF,EAAWjL,UAAUqD,SAAW,WAAc,OAAO+H,GAAcjM,OAC5D8L,EArBoB,GA0B/B,SAASjB,EAAUqB,EAAIC,GACnB,OAAID,EAAG5K,SAAW6K,EAAG7K,QAEd4K,EAAGrC,MAAM,SAAUb,EAAG7H,GAAK,OAAO6H,EAAE/D,OAASkH,EAAGhL,GAAG8D,OAE9D,SAASmH,EAAqB7E,EAAS8E,GACnC,IAAIC,KAWJ,OAVAhD,EAAQ/B,EAAQe,SAAU,SAAUiE,EAAOC,GACnCA,IAAgBxG,IAChBsG,EAAMA,EAAI7I,OAAO4I,EAAGE,EAAOC,OAGnClD,EAAQ/B,EAAQe,SAAU,SAAUiE,EAAOC,GACnCA,IAAgBxG,IAChBsG,EAAMA,EAAI7I,OAAO4I,EAAGE,EAAOC,OAG5BF,EAcX,IAAIG,GACA,SAASA,OAsBTC,GAAsC,WACtC,SAASA,KAcT,OAXAA,EAAqB7L,UAAU8L,MAAQ,SAAU7I,GAC7C,IAAItD,EAAI,IAAIoM,GAAU9I,GACtB,OAAO,IAAIuH,EAAQ7K,EAAEqM,mBAAoBrM,EAAEsM,mBAAoBtM,EAAEuM,kBAGrEL,EAAqB7L,UAAU4K,UAAY,SAAUuB,GAIjD,MAHc,IAWtB,SAASC,EAAiB1F,EAASwD,GAC/B,IAAKxD,EAAQJ,cACT,OAAO0E,GAAetE,GAE1B,GAAIwD,EAAM,CACN,IAAImC,EAAU3F,EAAQe,SAAStC,GAC3BiH,EAAiB1F,EAAQe,SAAStC,IAAiB,GACnD,GACAmH,KAMJ,OALA7D,EAAQ/B,EAAQe,SAAU,SAAUhC,EAAGsF,GAC/BA,IAAM5F,GACNmH,EAAW7J,KAAKsI,EAAI,IAAMqB,EAAiB3G,GAAG,MAG/C6G,EAAW7L,OAAS,EAAI4L,EAAU,IAAMC,EAAWC,KAAK,MAAQ,IAAMF,EAG7E,IAAI5E,EAAW8D,EAAqB7E,EAAS,SAAUjB,EAAGsF,GACtD,OAAIA,IAAM5F,GACEiH,EAAiB1F,EAAQe,SAAStC,IAAiB,KAEvD4F,EAAI,IAAMqB,EAAiB3G,GAAG,MAE1C,OAAOuF,GAAetE,GAAW,KAAOe,EAAS8E,KAAK,MAAQ,IAlC1CH,CAAiBD,EAAKjC,MAAM,GA8FxD,SAASsC,EAAqBnH,GAC1B,IAAIoH,EAAYlN,OAAOqG,KAAKP,GAAQ4C,IAAI,SAAU1C,GAC9C,IAAInD,EAAQiD,EAAOE,GACnB,OAAO7F,MAAMgG,QAAQtD,GACjBA,EAAM6F,IAAI,SAAUxC,GAAK,OAAOiH,GAAenH,GAAQ,IAAMmH,GAAejH,KAAO8G,KAAK,KACxFG,GAAenH,GAAQ,IAAMmH,GAAetK,KAEpD,OAAOqK,EAAUhM,OAAS,IAAMgM,EAAUF,KAAK,KAAO,GApGtCC,CAAqBL,EAAKrC,cACE,iBAAlBqC,EAAK1B,SAAwB,IA+D3D,SAASkC,EAAkBtM,GACvB,OAAOuM,UAAUvM,GAhE4CsM,CAAkBR,EAAK1B,UAAY,KAGzFoB,EAf8B,GAiBrClB,GAAqB,IAAIkB,GAC7B,SAASb,GAAetE,GACpB,OAAOA,EAAQT,SAASgC,IAAI,SAAUtI,GAAK,OAAOyL,GAAczL,KAAO4M,KAAK,KAkChF,SAASM,GAAgBxM,GACrB,OAAOyM,mBAAmBzM,GACrB0M,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KAQ1B,SAASL,GAAerM,GACpB,OAAOwM,GAAgBxM,GAAG0M,QAAQ,QAAS,KAkB/C,SAASC,GAAiB3M,GACtB,OAAOwM,GAAgBxM,GAAG0M,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,QAAS,KAE3F,SAASE,GAAO5M,GACZ,OAAO6M,mBAAmB7M,GAI9B,SAAS8M,GAAY9M,GACjB,OAAO4M,GAAO5M,EAAE0M,QAAQ,MAAO,QAEnC,SAAS3B,GAAchH,GACnB,MAAO,GAAK4I,GAAiB5I,EAAKA,MAEtC,SAASgJ,EAAsB/H,GAC3B,OAAO9F,OAAOqG,KAAKP,GACd4C,IAAI,SAAUlH,GAAO,MAAO,IAAMiM,GAAiBjM,GAAO,IAAMiM,GAAiB3H,EAAOtE,MACxFwL,KAAK,IALgCa,CAAsBhJ,EAAK8G,YAgBzE,IAAImC,GAAa,gBACjB,SAASC,GAAcC,GACnB,IAAIC,EAAQD,EAAIC,MAAMH,IACtB,OAAOG,EAAQA,EAAM,GAAK,GAE9B,IAAIC,GAAiB,YAMjBC,GAAuB,WAMvB3B,GAA2B,WAC3B,SAASA,EAAU9I,GACf9D,KAAK8D,IAAMA,EACX9D,KAAKwO,UAAY1K,EA2JrB,OAzJA8I,EAAU/L,UAAUgM,iBAAmB,WAEnC,OADA7M,KAAKyO,gBAAgB,KACE,KAAnBzO,KAAKwO,WAAoBxO,KAAK0O,eAAe,MAAQ1O,KAAK0O,eAAe,KAClE,IAAIhD,SAGR,IAAIA,KAAoB1L,KAAK2O,kBAExC/B,EAAU/L,UAAUiM,iBAAmB,WACnC,IAAI5G,KACJ,GAAIlG,KAAKyO,gBAAgB,KACrB,GACIzO,KAAK4O,gBAAgB1I,SAChBlG,KAAKyO,gBAAgB,MAElC,OAAOvI,GAEX0G,EAAU/L,UAAUkM,cAAgB,WAChC,OAAO/M,KAAKyO,gBAAgB,KAAOV,mBAAmB/N,KAAKwO,WAAa,MAE5E5B,EAAU/L,UAAU8N,cAAgB,WAChC,GAAuB,KAAnB3O,KAAKwO,UACL,SAEJxO,KAAKyO,gBAAgB,KACrB,IAAI3H,KAIJ,IAHK9G,KAAK0O,eAAe,MACrB5H,EAASxD,KAAKtD,KAAK6O,gBAEhB7O,KAAK0O,eAAe,OAAS1O,KAAK0O,eAAe,QAAU1O,KAAK0O,eAAe,OAClF1O,KAAK8O,QAAQ,KACbhI,EAASxD,KAAKtD,KAAK6O,gBAEvB,IAAIvG,KACAtI,KAAK0O,eAAe,QACpB1O,KAAK8O,QAAQ,KACbxG,EAAWtI,KAAK+O,aAAY,IAEhC,IAAIzC,KAOJ,OANItM,KAAK0O,eAAe,OACpBpC,EAAMtM,KAAK+O,aAAY,KAEvBjI,EAASxF,OAAS,GAAKlB,OAAOqG,KAAK6B,GAAUhH,OAAS,KACtDgL,EAAItG,GAAkB,IAAI0F,EAAgB5E,EAAUwB,IAEjDgE,GAIXM,EAAU/L,UAAUgO,aAAe,WAC/B,IAAI5J,EAAOkJ,GAAcnO,KAAKwO,WAC9B,GAAa,KAATvJ,GAAejF,KAAK0O,eAAe,KACnC,MAAM,IAAItG,MAAM,mDAAqDpI,KAAKwO,UAAY,MAG1F,OADAxO,KAAK8O,QAAQ7J,GACN,IAAI6G,EAAWgC,GAAO7I,GAAOjF,KAAKgP,sBAE7CpC,EAAU/L,UAAUmO,kBAAoB,WAEpC,IADA,IAAI9I,KACGlG,KAAKyO,gBAAgB,MACxBzO,KAAKiP,WAAW/I,GAEpB,OAAOA,GAEX0G,EAAU/L,UAAUoO,WAAa,SAAU/I,GACvC,IAAItE,EAAMuM,GAAcnO,KAAKwO,WAC7B,GAAK5M,EAAL,CAGA5B,KAAK8O,QAAQlN,GACb,IAAIqB,EAAQ,GACZ,GAAIjD,KAAKyO,gBAAgB,KAAM,CAC3B,IAAIS,EAAaf,GAAcnO,KAAKwO,WAChCU,GAEAlP,KAAK8O,QADL7L,EAAQiM,GAIhBhJ,EAAO4H,GAAOlM,IAAQkM,GAAO7K,KAGjC2J,EAAU/L,UAAU+N,gBAAkB,SAAU1I,GAC5C,IAAItE,EAjGZ,SAASuN,EAAiBf,GACtB,IAAIC,EAAQD,EAAIC,MAAMC,IACtB,OAAOD,EAAQA,EAAM,GAAK,GA+FZc,CAAiBnP,KAAKwO,WAChC,GAAK5M,EAAL,CAGA5B,KAAK8O,QAAQlN,GACb,IAAIqB,EAAQ,GACZ,GAAIjD,KAAKyO,gBAAgB,KAAM,CAC3B,IAAIS,EAlGhB,SAASE,EAAwBhB,GAC7B,IAAIC,EAAQD,EAAIC,MAAME,IACtB,OAAOF,EAAQA,EAAM,GAAK,GAgGDe,CAAwBpP,KAAKwO,WAC1CU,GAEAlP,KAAK8O,QADL7L,EAAQiM,GAIhB,IAAIG,EAAarB,GAAYpM,GACzB0N,EAAatB,GAAY/K,GAC7B,GAAIiD,EAAOzF,eAAe4O,GAAa,CAEnC,IAAIE,EAAarJ,EAAOmJ,GACnB9O,MAAMgG,QAAQgJ,KAEfrJ,EAAOmJ,GADPE,GAAcA,IAGlBA,EAAWjM,KAAKgM,QAIhBpJ,EAAOmJ,GAAcC,IAI7B1C,EAAU/L,UAAUkO,YAAc,SAAUS,GACxC,IAAI1I,KAEJ,IADA9G,KAAK8O,QAAQ,MACL9O,KAAKyO,gBAAgB,MAAQzO,KAAKwO,UAAUlN,OAAS,GAAG,CAC5D,IAAI2D,EAAOkJ,GAAcnO,KAAKwO,WAC1BxL,EAAOhD,KAAKwO,UAAUvJ,EAAK3D,QAG/B,GAAa,MAAT0B,GAAyB,MAATA,GAAyB,MAATA,EAChC,MAAM,IAAIoF,MAAM,qBAAuBpI,KAAK8D,IAAM,KAEtD,IAAI2L,OAAaC,EACbzK,EAAK0K,QAAQ,MAAQ,GACrBF,EAAaxK,EAAK2K,OAAO,EAAG3K,EAAK0K,QAAQ,MACzC3P,KAAK8O,QAAQW,GACbzP,KAAK8O,QAAQ,MAERU,IACLC,EAAazJ,GAEjB,IAAIsC,EAAWtI,KAAK2O,gBACpB7H,EAAS2I,GAA+C,IAAjCrP,OAAOqG,KAAK6B,GAAUhH,OAAegH,EAAStC,GACjE,IAAI0F,KAAoBpD,GAC5BtI,KAAKyO,gBAAgB,MAEzB,OAAO3H,GAEX8F,EAAU/L,UAAU6N,eAAiB,SAAUN,GAAO,OAAOpO,KAAKwO,UAAUhH,WAAW4G,IAEvFxB,EAAU/L,UAAU4N,gBAAkB,SAAUL,GAC5C,QAAIpO,KAAK0O,eAAeN,KACpBpO,KAAKwO,UAAYxO,KAAKwO,UAAU/G,UAAU2G,EAAI9M,SACvC,IAIfsL,EAAU/L,UAAUiO,QAAU,SAAUV,GACpC,IAAKpO,KAAKyO,gBAAgBL,GACtB,MAAM,IAAIhG,MAAM,aAAgBgG,EAAM,OAGvCxB,EA9JmB,GAwK1BiD,GACA,SAASA,GAAQ9I,GACb/G,KAAK+G,aAAeA,GAAgB,MAIxC+I,GACA,SAASA,GAAiBC,GACtB/P,KAAK+P,QAAUA,GAIvB,SAASC,GAAQjJ,GACb,OAAO,IAAInH,EAAKqQ,WAAW,SAAUC,GAAO,OAAOA,EAAI3M,MAAM,IAAIsM,GAAQ9I,MAE7E,SAASoJ,GAAiBC,GACtB,OAAO,IAAIxQ,EAAKqQ,WAAW,SAAUC,GAAO,OAAOA,EAAI3M,MAAM,IAAIuM,GAAiBM,MAEtF,SAASC,GAAqB5H,GAC1B,OAAO,IAAI7I,EAAKqQ,WAAW,SAAUC,GAAO,OAAOA,EAAI3M,MAAM,IAAI6E,MAAM,gEAAkEK,EAAa,QAa1J,IAAI6H,GAAgC,WAChC,SAASA,EAAeC,EAAgBC,EAAcC,EAAeV,EAAShI,GAC1E/H,KAAKwQ,aAAeA,EACpBxQ,KAAKyQ,cAAgBA,EACrBzQ,KAAK+P,QAAUA,EACf/P,KAAK+H,OAASA,EACd/H,KAAK0Q,gBAAiB,EACtB1Q,KAAK2Q,SAAWJ,EAAelK,IAAI1G,EAAKiR,aAgQ5C,OA9PAN,EAAezP,UAAUW,MAAQ,WAC7B,IAAIyC,EAAQjE,KAGZ,OAFgBA,KAAK6Q,mBAAmB7Q,KAAK2Q,SAAU3Q,KAAK+H,OAAQ/H,KAAK+P,QAAQhF,KAAM/E,GAC7D2D,KAAK9J,EAAUiJ,IAAI,SAAUgI,GAAoB,OAAO7M,EAAM8M,cAAcD,EAAkB7M,EAAM8L,QAAQpF,YAAa1G,EAAM8L,QAAQzE,aAChJ3B,KAAK9J,EAAUmR,WAAW,SAAU5N,GACjD,GAAIA,aAAa0M,GAIb,OAFA7L,EAAMyM,gBAAiB,EAEhBzM,EAAMoK,MAAMjL,EAAE2M,SAEzB,GAAI3M,aAAayM,GACb,MAAM5L,EAAMgN,aAAa7N,GAE7B,MAAMA,MAGdkN,EAAezP,UAAUwN,MAAQ,SAAUrB,GACvC,IAAI/I,EAAQjE,KAKZ,OAJgBA,KAAK6Q,mBAAmB7Q,KAAK2Q,SAAU3Q,KAAK+H,OAAQiF,EAAKjC,KAAM/E,GACvD2D,KAAK9J,EAAUiJ,IAAI,SAAUgI,GACjD,OAAO7M,EAAM8M,cAAcD,EAAkB9D,EAAKrC,YAAaqC,EAAK1B,aAEzD3B,KAAK9J,EAAUmR,WAAW,SAAU5N,GAC/C,GAAIA,aAAayM,GACb,MAAM5L,EAAMgN,aAAa7N,GAE7B,MAAMA,MAGdkN,EAAezP,UAAUoQ,aAAe,SAAU7N,GAC9C,OAAO,IAAIgF,MAAM,0CAA4ChF,EAAE2D,aAAe,MAElFuJ,EAAezP,UAAUkQ,cAAgB,SAAUG,EAAevG,EAAaW,GAC3E,IAAI6F,EACApG,EAAOmG,EAAcpK,SAASxF,OAAS,EACvC,IAAIoK,OAAqByF,MAAYnL,GAAkBkL,EAAeC,IACtED,EACJ,OAAO,IAAI7F,EAAQN,EAAMJ,EAAaW,IAE1CgF,EAAezP,UAAUgQ,mBAAqB,SAAUF,EAAU9I,EAAQd,EAAcyB,GACpF,OAAqC,IAAjCzB,EAAaD,SAASxF,QAAgByF,EAAaI,cAC5CnH,KAAKoR,eAAeT,EAAU9I,EAAQd,GACxC4C,KAAK9J,EAAUiJ,IAAI,SAAUR,GAAY,OAAO,IAAIoD,KAAoBpD,MAE1EtI,KAAKqR,cAAcV,EAAU5J,EAAcc,EAAQd,EAAaD,SAAU0B,GAAQ,IAG7F8H,EAAezP,UAAUuQ,eAAiB,SAAUT,EAAU9I,EAAQd,GAClE,IAAI9C,EAAQjE,KACZ,OA1rBR,SAASsR,EAAWC,EAAKlF,GACrB,GAAgC,IAA5BjM,OAAOqG,KAAK8K,GAAKjQ,OACjB,OAAO1B,EAAKyK,OAEhB,IAAImH,KACAC,KACAnF,KAWJ,OAVAhD,EAAQiI,EAAK,SAAUvI,EAAG4C,GACtB,IAAI8F,EAASrF,EAAGT,EAAG5C,GAAGW,KAAK9J,EAAUiJ,IAAI,SAAU/G,GAAK,OAAOuK,EAAIV,GAAK7J,KACpE6J,IAAM5F,EACNwL,EAASlO,KAAKoO,GAGdD,EAASnO,KAAKoO,KAIf9R,EAAKyK,GAAG7I,MAAM,KAAMgQ,EAAS/N,OAAOgO,IAAW9H,KAAK9J,EAAU8R,YAAa9R,EAAUwJ,OAAQxJ,EAAUiJ,IAAI,WAAc,OAAOwD,KAyqB5HgF,CAAWvK,EAAauB,SAAU,SAAUkE,EAAaD,GAAS,OAAOtI,EAAM4M,mBAAmBF,EAAU9I,EAAQ0E,EAAOC,MAEtI8D,EAAezP,UAAUwQ,cAAgB,SAAUV,EAAU5J,EAAcc,EAAQf,EAAU0B,EAAQkI,GACjG,IAAIzM,EAAQjE,KACZ,OAAOJ,EAAKyK,GAAG7I,WAAM,EAAQgC,EAASqE,IAAS8B,KAAK9J,EAAUiJ,IAAI,SAAU/G,GAExE,OADgBkC,EAAM2N,0BAA0BjB,EAAU5J,EAAcc,EAAQ9F,EAAG+E,EAAU0B,EAAQkI,GACpF/G,KAAK9J,EAAUmR,WAAW,SAAU5N,GACjD,GAAIA,aAAayM,GAGb,OAAOjQ,EAAKyK,GAAG,MAEnB,MAAMjH,OAEVvD,EAAU8R,YAAa9R,EAAUgS,MAAM,SAAU3Q,GAAK,QAASA,IAAOrB,EAAUmR,WAAW,SAAU5N,EAAG0O,GACxG,GAAI1O,aAAaxD,EAAKmS,YAAyB,eAAX3O,EAAEgD,KAAuB,CACzD,GAAInC,EAAM+N,iBAAiBjL,EAAcD,EAAU0B,GAC/C,OAAO5I,EAAKyK,GAAG,IAAIqB,UAEvB,MAAM,IAAImE,GAAQ9I,GAEtB,MAAM3D,MAGdkN,EAAezP,UAAUmR,iBAAmB,SAAUjL,EAAcD,EAAU0B,GAC1E,OAA2B,IAApB1B,EAASxF,SAAiByF,EAAauB,SAASE,IAE3D8H,EAAezP,UAAU+Q,0BAA4B,SAAUjB,EAAU5J,EAAcc,EAAQ7C,EAAOiN,EAAOzJ,EAAQkI,GACjH,OAAIwB,GAAUlN,KAAWwD,EACdwH,GAAQjJ,QAEM2I,IAArB1K,EAAMyD,WACCzI,KAAKmS,yBAAyBxB,EAAU5J,EAAc/B,EAAOiN,GAEpEvB,GAAkB1Q,KAAK0Q,eAChB1Q,KAAKoS,uCAAuCzB,EAAU5J,EAAcc,EAAQ7C,EAAOiN,EAAOzJ,GAE9FwH,GAAQjJ,IAEnBuJ,EAAezP,UAAUuR,uCAAyC,SAAUzB,EAAU5J,EAAcc,EAAQ7C,EAAO8B,EAAU0B,GACzH,MAAmB,OAAfxD,EAAMC,KACCjF,KAAKqS,kDAAkD1B,EAAU9I,EAAQ7C,EAAOwD,GAEpFxI,KAAKsS,8CAA8C3B,EAAU5J,EAAcc,EAAQ7C,EAAO8B,EAAU0B,IAE/G8H,EAAezP,UAAUwR,kDAAoD,SAAU1B,EAAU9I,EAAQ7C,EAAOwD,GAC5G,IAAIvE,EAAQjE,KACRoQ,EAAUpQ,KAAKuS,yBAA0BvN,EAAMyD,eACnD,OAAIzD,EAAMyD,WAAWjB,WAAW,KACrB2I,GAAiBC,GAErBpQ,KAAKwS,mBAAmBxN,EAAOoL,GAASzG,KAAK9J,EAAU4S,SAAS,SAAUC,GAC7E,IAAIC,EAAQ,IAAIjH,EAAgBgH,MAChC,OAAOzO,EAAMoN,cAAcV,EAAUgC,EAAO9K,EAAQ6K,EAAalK,GAAQ,OAGjF8H,EAAezP,UAAUyR,8CAAgD,SAAU3B,EAAU5J,EAAcc,EAAQ7C,EAAO8B,EAAU0B,GAChI,IAAIvE,EAAQjE,KACRmR,EAAK9C,GAAMtH,EAAc/B,EAAO8B,GAAiC8L,EAAmBzB,EAAGyB,iBAAkBC,EAAY1B,EAAG0B,UAAWC,EAA0B3B,EAAG2B,wBACpK,IADyD3B,EAAG4B,QAExD,OAAO/C,GAAQjJ,GACnB,IAAIqJ,EAAUpQ,KAAKuS,sBAAsBK,EAAkB5N,EAAMyD,WAAYqK,GAC7E,OAAI9N,EAAMyD,WAAWjB,WAAW,KACrB2I,GAAiBC,GAErBpQ,KAAKwS,mBAAmBxN,EAAOoL,GAASzG,KAAK9J,EAAU4S,SAAS,SAAUC,GAC7E,OAAOzO,EAAMoN,cAAcV,EAAU5J,EAAcc,EAAQ6K,EAAYjP,OAAOqD,EAASa,MAAMkL,IAAarK,GAAQ,OAG1H8H,EAAezP,UAAUsR,yBAA2B,SAAUxB,EAAUqC,EAAiBhO,EAAO8B,GAC5F,IAAI7C,EAAQjE,KACZ,GAAmB,OAAfgF,EAAMC,KACN,OAAID,EAAMuD,aACCvI,KAAKwQ,aAAayC,KAAKtC,EAASuC,SAAUlO,GAC5C2E,KAAK9J,EAAUiJ,IAAI,SAAUqK,GAE9B,OADAnO,EAAMoO,cAAgBD,EACf,IAAIzH,EAAgB5E,SAG5BlH,EAAKyK,GAAG,IAAIqB,EAAgB5E,OAEvC,IAAIqK,EAAK9C,GAAM2E,EAAiBhO,EAAO8B,GAAiC8L,EAAmBzB,EAAGyB,iBAAkBC,EAAY1B,EAAG0B,UAC/H,IAD4D1B,EAAG4B,QAE3D,OAAO/C,GAAQgD,GACnB,IAAIK,EAAoBvM,EAASa,MAAMkL,GAEvC,OADmB7S,KAAKsT,eAAe3C,EAAU3L,GAC7B2E,KAAK9J,EAAU4S,SAAS,SAAUc,GAClD,IAAIC,EAAcD,EAAalU,OAC3BoU,EAAcF,EAAa1L,OAC3BsJ,EAuJhB,SAASlK,EAAMF,EAAc6L,EAAkBc,EAAgB3L,GAC3D,OAAI2L,EAAepS,OAAS,GA4DhC,SAASqS,EAA2C5M,EAAcD,EAAUe,GACxE,OAAOA,EAAO+L,KAAK,SAAU7R,GAAK,OAAO8R,GAAoB9M,EAAcD,EAAU/E,IAAMmQ,GAAUnQ,KAAOiE,IA5DxG2N,CAA2C5M,EAAc2M,EAAgB3L,IAEhEhB,aAAc+M,GADf,IAAIpI,EAAgBkH,EAqCpC,SAASmB,EAA+BlM,EAAQmM,GAC5C,IAAIC,EAAK9C,EACL7E,KACJA,EAAItG,GAAkBgO,EACtB,IACI,IAAK,IAAIE,EAAWvR,EAASkF,GAASsM,EAAaD,EAASlR,QAASmR,EAAWjR,KAAMiR,EAAaD,EAASlR,OAAQ,CAChH,IAAIjB,EAAIoS,EAAWlR,MACJ,KAAXlB,EAAEkD,MAAeiN,GAAUnQ,KAAOiE,IAClCsG,EAAI4F,GAAUnQ,IAAM,IAAI2J,WAIpC,MAAO0I,GAASH,GAAQ1Q,MAAO6Q,GAC/B,QACI,IACQD,IAAeA,EAAWjR,OAASiO,EAAK+C,EAASG,SAASlD,EAAG5P,KAAK2S,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAI1Q,OAEjC,OAAO+I,EAxD2CyH,CAA+BhM,EAAQ,IAAI2D,EAAgBgI,EAAgB3M,EAAauB,aACtFoL,mBAEtB,IAA1BA,EAAepS,QA0DvB,SAASgT,EAA2BvN,EAAcD,EAAUe,GACxD,OAAOA,EAAO+L,KAAK,SAAU7R,GAAK,OAAO8R,GAAoB9M,EAAcD,EAAU/E,KA1DjFuS,CAA2BvN,EAAc2M,EAAgB3L,IAEhDhB,aAAc+M,GADf,IAAIpI,EAAgB3E,EAAaD,SAYjD,SAASyN,EAAmCxN,EAAc2M,EAAgB7L,EAAQS,GAC9E,IAAIkM,EAAKrD,EACL7E,KACJ,IACI,IAAK,IAAImI,EAAW9R,EAASkF,GAAS6M,EAAaD,EAASzR,QAAS0R,EAAWxR,KAAMwR,EAAaD,EAASzR,OAAQ,CAChH,IAAIjB,EAAI2S,EAAWzR,MACf4Q,GAAoB9M,EAAc2M,EAAgB3R,KAAOuG,EAAS4J,GAAUnQ,MAC5EuK,EAAI4F,GAAUnQ,IAAM,IAAI2J,WAIpC,MAAOiJ,GAASH,GAAQjR,MAAOoR,GAC/B,QACI,IACQD,IAAeA,EAAWxR,OAASiO,EAAKsD,EAASJ,SAASlD,EAAG5P,KAAKkT,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAIjR,OAEjC,OAAOxC,KAAauH,EAAUgE,GA9ByBiI,CAAmCxN,EAAc2M,EAAgB3L,EAAQhB,EAAauB,YACzFoL,eAAgBA,IAE3D3M,aAAcA,EAAc2M,eAAgBA,GAlKpCzM,CAAM+L,EAAiBJ,EAAkBS,EAAmBI,GAAc1M,EAAeoK,EAAGpK,aAAc2M,EAAiBvC,EAAGuC,eACvI,OAA8B,IAA1BA,EAAepS,QAAgByF,EAAaI,cAC1BlD,EAAMmN,eAAeoC,EAAaC,EAAa1M,GAC9C4C,KAAK9J,EAAUiJ,IAAI,SAAUR,GAAY,OAAO,IAAIoD,EAAgBkH,EAAkBtK,MAElF,IAAvBmL,EAAYnS,QAA0C,IAA1BoS,EAAepS,OACpC1B,EAAKyK,GAAG,IAAIqB,EAAgBkH,OAEvB3O,EAAMoN,cAAcmC,EAAazM,EAAc0M,EAAaC,EAAgB1N,GAAgB,GAC3F2D,KAAK9J,EAAUiJ,IAAI,SAAU8L,GAC1C,OAAO,IAAIlJ,EAAgBkH,EAAiBnP,OAAOmR,EAAG9N,UAAW8N,EAAGtM,iBAIhFgI,EAAezP,UAAUyS,eAAiB,SAAU3C,EAAU3L,GAC1D,IAAIf,EAAQjE,KACZ,OAAIgF,EAAMsD,SAEC1I,EAAKyK,GAAG,IAAIzC,EAAmB5C,EAAMsD,SAAUqI,IAEtD3L,EAAMuD,kBAEsBmH,IAAxB1K,EAAMoO,cACCxT,EAAKyK,GAAGrF,EAAMoO,eA8FrC,SAASyB,EAAgBtE,EAAgBvL,GACrC,IAAI8P,EAAU9P,EAAM8P,QACpB,OAAKA,GAA8B,IAAnBA,EAAQxT,OAMjBmI,EAJG7J,EAAKsK,KAAK4K,GAASnL,KAAK9J,EAAUiJ,IAAI,SAAUiM,GACtD,IAAIC,EAAQzE,EAAelK,IAAI0O,GAC/B,OAAOhL,EAAmBiL,EAAMF,QAAUE,EAAMF,QAAQ9P,GAASgQ,EAAMhQ,QAHhEpF,EAAKyK,IAAG,GA/FJwK,CAAgBlE,EAASuC,SAAUlO,GAAO2E,KAAK9J,EAAU4S,SAAS,SAAUwC,GAC/E,OAAIA,EACOhR,EAAMuM,aAAayC,KAAKtC,EAASuC,SAAUlO,GAC7C2E,KAAK9J,EAAUiJ,IAAI,SAAUqK,GAE9B,OADAnO,EAAMoO,cAAgBD,EACfA,KA7L/B,SAAS+B,EAAalQ,GAClB,OAAO,IAAIpF,EAAKqQ,WAAW,SAAUC,GAAO,OAAOA,EAAI3M,MA9yB3D,SAAS4R,EAAyBC,GAC9B,IAAI7R,EAAQ6E,MAAM,6BAA+BgN,GAEjD,OADA7R,EAAgC,4BAAI,EAC7BA,EA2yBsD4R,CAAyB,gEAAkEnQ,EAAMC,KAAO,yBA+LlJiQ,CAAalQ,MAGrBpF,EAAKyK,GAAG,IAAIzC,KAAuB+I,KAE9CL,EAAezP,UAAU2R,mBAAqB,SAAUxN,EAAO+K,GAG3D,IAFA,IAAIzD,KACAxK,EAAIiO,EAAQhF,OACH,CAET,GADAuB,EAAMA,EAAI7I,OAAO3B,EAAEgF,UACQ,IAAvBhF,EAAEgJ,iBACF,OAAOlL,EAAKyK,GAAGiC,GAEnB,GAAIxK,EAAEgJ,iBAAmB,IAAMhJ,EAAEwG,SAAStC,GACtC,OAAOqK,GAAqBrL,EAAMyD,YAEtC3G,EAAIA,EAAEwG,SAAStC,KAGvBsK,EAAezP,UAAU0R,sBAAwB,SAAUzL,EAAU2B,EAAYrB,GAC7E,OAAOpH,KAAKqV,4BAA4B5M,EAAYzI,KAAKyQ,cAAc9D,MAAMlE,GAAa3B,EAAUM,IAExGkJ,EAAezP,UAAUwU,4BAA8B,SAAU5M,EAAYsH,EAASjJ,EAAUM,GAC5F,IAAIkO,EAAUtV,KAAKuV,mBAAmB9M,EAAYsH,EAAQhF,KAAMjE,EAAUM,GAC1E,OAAO,IAAIiE,EAAQiK,EAAStV,KAAKwV,kBAAkBzF,EAAQpF,YAAa3K,KAAK+P,QAAQpF,aAAcoF,EAAQzE,WAE/GgF,EAAezP,UAAU2U,kBAAoB,SAAUC,EAAkBC,GACrE,IAAIpJ,KAWJ,OAVAhD,EAAQmM,EAAkB,SAAUnP,EAAGsF,GAEnC,GADmC,iBAANtF,GAAkBA,EAAEkB,WAAW,KACvC,CACjB,IAAImO,EAAarP,EAAEmB,UAAU,GAC7B6E,EAAIV,GAAK8J,EAAaC,QAGtBrJ,EAAIV,GAAKtF,IAGVgG,GAEXgE,EAAezP,UAAU0U,mBAAqB,SAAU9M,EAAYkK,EAAO7L,EAAUM,GACjF,IAAInD,EAAQjE,KACR4V,EAAkB5V,KAAK6V,eAAepN,EAAYkK,EAAM7L,SAAUA,EAAUM,GAC5EkB,KAIJ,OAHAgB,EAAQqJ,EAAMrK,SAAU,SAAUiE,EAAOnG,GACrCkC,EAASlC,GAAQnC,EAAMsR,mBAAmB9M,EAAY8D,EAAOzF,EAAUM,KAEpE,IAAIsE,EAAgBkK,EAAiBtN,IAEhDgI,EAAezP,UAAUgV,eAAiB,SAAUpN,EAAYqN,EAAoBC,EAAgB3O,GAChG,IAAInD,EAAQjE,KACZ,OAAO8V,EAAmBhN,IAAI,SAAU5H,GAAK,OAAOA,EAAE+D,KAAKuC,WAAW,KAAOvD,EAAM+R,aAAavN,EAAYvH,EAAGkG,GAC3GnD,EAAMgS,aAAa/U,EAAG6U,MAE9BzF,EAAezP,UAAUmV,aAAe,SAAUvN,EAAYyN,EAAsB9O,GAChF,IAAI+O,EAAM/O,EAAU8O,EAAqBjR,KAAKwC,UAAU,IACxD,IAAK0O,EACD,MAAM,IAAI/N,MAAM,uBAAyBK,EAAa,mBAAqByN,EAAqBjR,KAAO,MAC3G,OAAOkR,GAEX7F,EAAezP,UAAUoV,aAAe,SAAUC,EAAsBH,GACpE,IAAIK,EAAKjF,EACLkF,EAAM,EACV,IACI,IAAK,IAAIC,EAAmB3T,EAASoT,GAAiBQ,EAAqBD,EAAiBtT,QAASuT,EAAmBrT,KAAMqT,EAAqBD,EAAiBtT,OAAQ,CACxK,IAAI9B,EAAIqV,EAAmBtT,MAC3B,GAAI/B,EAAE+D,OAASiR,EAAqBjR,KAEhC,OADA8Q,EAAeS,OAAOH,GACfnV,EAEXmV,KAGR,MAAOI,GAASL,GAAQ7S,MAAOkT,GAC/B,QACI,IACQF,IAAuBA,EAAmBrT,OAASiO,EAAKmF,EAAiBjC,SAASlD,EAAG5P,KAAK+U,GAElG,QAAU,GAAIF,EAAK,MAAMA,EAAI7S,OAEjC,OAAO2S,GAEJ5F,EAvQwB,GAmRnC,SAASjC,GAAMtH,EAAc/B,EAAO8B,GAChC,GAAmB,KAAf9B,EAAMC,KACN,MAAyB,SAApBD,EAAMkC,YAA0BH,EAAaI,eAAiBL,EAASxF,OAAS,IACxEyR,SAAS,EAAOH,oBAAsBC,UAAW,EAAGC,6BAExDC,SAAS,EAAMH,oBAAsBC,UAAW,EAAGC,4BAEhE,IACIxG,GADUtH,EAAM0D,SAAW7B,GACbC,EAAUC,EAAc/B,GAC1C,OAAKsH,GASDyG,SAAS,EACTH,iBAAkBtG,EAAI5E,SACtBmL,UAAWvG,EAAI5E,SAASpG,OACxBwR,wBAAyBxG,EAAIlF,YAVzB2L,SAAS,EACTH,oBACAC,UAAW,EACXC,4BAuBZ,SAASgB,GAAqB5S,GAC1B,GAA2B,IAAvBA,EAAE4J,kBAA0B5J,EAAEoH,SAAStC,GAAiB,CACxD,IAAIlE,EAAIZ,EAAEoH,SAAStC,GACnB,OAAO,IAAI0F,EAAgBxK,EAAE4F,SAASrD,OAAO3B,EAAEgF,UAAWhF,EAAEwG,UAEhE,OAAOpH,EAiDX,SAAS2S,GAAoB9M,EAAcD,EAAU/E,GACjD,SAAKgF,EAAaI,eAAiBL,EAASxF,OAAS,IAAsB,SAAhBS,EAAEmF,YAG3C,KAAXnF,EAAEkD,WAAgCyK,IAAjB3N,EAAE0G,WAE9B,SAASyJ,GAAUlN,GACf,OAAOA,EAAMwD,QAAUxC;;;;;;;OAU3B,IAAI0Q,GAAsB,WACtB,SAASA,EAAK3L,GACV/K,KAAK2W,MAAQ5L,EA0CjB,OAxCA3K,OAAO+B,eAAeuU,EAAK7V,UAAW,QAClCwF,IAAK,WAAc,OAAOrG,KAAK2W,MAAM1T,OACrCyD,YAAY,EACZC,cAAc,IAKlB+P,EAAK7V,UAAU8K,OAAS,SAAU1K,GAC9B,IAAIT,EAAIR,KAAK4W,aAAa3V,GAC1B,OAAOT,EAAEc,OAAS,EAAId,EAAEA,EAAEc,OAAS,GAAK,MAK5CoV,EAAK7V,UAAUyH,SAAW,SAAUrH,GAChC,IAAIG,EAAIyV,GAAS5V,EAAGjB,KAAK2W,OACzB,OAAOvV,EAAIA,EAAEkH,SAASQ,IAAI,SAAU7H,GAAK,OAAOA,EAAEgC,YAKtDyT,EAAK7V,UAAUiW,WAAa,SAAU7V,GAClC,IAAIG,EAAIyV,GAAS5V,EAAGjB,KAAK2W,OACzB,OAAOvV,GAAKA,EAAEkH,SAAShH,OAAS,EAAIF,EAAEkH,SAAS,GAAGrF,MAAQ,MAK9DyT,EAAK7V,UAAUkW,SAAW,SAAU9V,GAChC,IAAIT,EAAIwW,GAAS/V,EAAGjB,KAAK2W,OACzB,OAAInW,EAAEc,OAAS,KAEPd,EAAEA,EAAEc,OAAS,GAAGgH,SAASQ,IAAI,SAAUhH,GAAK,OAAOA,EAAEmB,QACpDgU,OAAO,SAAUC,GAAM,OAAOA,IAAOjW,KAKlDyV,EAAK7V,UAAU+V,aAAe,SAAU3V,GAAK,OAAO+V,GAAS/V,EAAGjB,KAAK2W,OAAO7N,IAAI,SAAU5H,GAAK,OAAOA,EAAE+B,SACjGyT,EA5Cc,GA+CzB,SAASG,GAAS5T,EAAOkU,GACrB,IAAIf,EAAKjF,EACT,GAAIlO,IAAUkU,EAAKlU,MACf,OAAOkU,EACX,IACI,IAAK,IAAIC,EAAKzU,EAASwU,EAAK7O,UAAW+O,EAAKD,EAAGpU,QAASqU,EAAGnU,KAAMmU,EAAKD,EAAGpU,OAAQ,CAC7E,IACIsU,EAAST,GAAS5T,EADVoU,EAAGpU,OAEf,GAAIqU,EACA,OAAOA,GAGnB,MAAOb,GAASL,GAAQ7S,MAAOkT,GAC/B,QACI,IACQY,IAAOA,EAAGnU,OAASiO,EAAKiG,EAAG/C,SAASlD,EAAG5P,KAAK6V,GAEpD,QAAU,GAAIhB,EAAK,MAAMA,EAAI7S,OAEjC,OAAO,KAGX,SAASyT,GAAS/T,EAAOkU,GACrB,IAAI3C,EAAKrD,EACT,GAAIlO,IAAUkU,EAAKlU,MACf,OAAQkU,GACZ,IACI,IAAK,IAAIC,EAAKzU,EAASwU,EAAK7O,UAAW+O,EAAKD,EAAGpU,QAASqU,EAAGnU,KAAMmU,EAAKD,EAAGpU,OAAQ,CAC7E,IACIiC,EAAO+R,GAAS/T,EADRoU,EAAGpU,OAEf,GAAIgC,EAAK3D,OAEL,OADA2D,EAAKsS,QAAQJ,GACNlS,GAInB,MAAO0P,GAASH,GAAQjR,MAAOoR,GAC/B,QACI,IACQ0C,IAAOA,EAAGnU,OAASiO,EAAKiG,EAAG/C,SAASlD,EAAG5P,KAAK6V,GAEpD,QAAU,GAAI5C,EAAK,MAAMA,EAAIjR,OAEjC,SAEJ,IAAIiU,GAA0B,WAC1B,SAASA,EAASvU,EAAOqF,GACrBtI,KAAKiD,MAAQA,EACbjD,KAAKsI,SAAWA,EAGpB,OADAkP,EAAS3W,UAAUqD,SAAW,WAAc,MAAO,YAAclE,KAAKiD,MAAQ,KACvEuU,EANkB,GAS7B,SAASC,GAAkBN,GACvB,IAAIrO,KAIJ,OAHIqO,GACAA,EAAK7O,SAASgB,QAAQ,SAAUiD,GAAS,OAAOzD,EAAIyD,EAAMtJ,MAAMuF,QAAU+D,IAEvEzD;;;;;;;OAsCX,IAAI4O,GAA6B,SAAU9T,GAGvC,SAAS8T,EAAY3M,EAErB3F,GACI,IAAInB,EAAQL,EAAOrC,KAAKvB,KAAM+K,IAAS/K,KAGvC,OAFAiE,EAAMmB,SAAWA,EACjBuS,GAAe1T,EAAO8G,GACf9G,EAGX,OAXAvD,EAAUgX,EAAa9T,GAUvB8T,EAAY7W,UAAUqD,SAAW,WAAc,OAAOlE,KAAKoF,SAASlB,YAC7DwT,EAZqB,CAa9BhB,IACF,SAASkB,GAAiB7H,EAAS8H,GAC/B,IAAIzS,EAUR,SAAS0S,EAAyB/H,EAAS8H,GACvC,IAIIE,EAAY,IAAIC,YADL,MACoFhS,EAAgB6R,EAAe,KAAM9H,EAAQhF,MAAO,MACvJ,OAAO,IAAIkN,GAAoB,GAAI,IAAIT,GAASO,OAhBjCD,CAAyB/H,EAAS8H,GAC7CK,EAAW,IAAItY,EAAKuY,iBAAiB,IAAIrM,EAAW,SACpDsM,EAAc,IAAIxY,EAAKuY,oBACvBE,EAAY,IAAIzY,EAAKuY,oBACrBG,EAAmB,IAAI1Y,EAAKuY,oBAC5B7M,EAAW,IAAI1L,EAAKuY,gBAAgB,IACpCJ,EAAY,IAAIQ,GAAeL,EAAUE,EAAaE,EAAkBhN,EAAU+M,EAAWrS,EAAgB6R,EAAezS,EAAS2F,MAEzI,OADAgN,EAAU3S,SAAWA,EAAS2F,KACvB,IAAI2M,GAAY,IAAIF,GAASO,MAAgB3S,GA8BxD,IAAImT,GAAgC,WAEhC,SAASA,EAETzU,EAEAoC,EAEAyE,EAEAW,EAEAkN,EAEAhQ,EAGAH,EAAWoQ,GACPzY,KAAK8D,IAAMA,EACX9D,KAAKkG,OAASA,EACdlG,KAAK2K,YAAcA,EACnB3K,KAAKsL,SAAWA,EAChBtL,KAAKwY,KAAOA,EACZxY,KAAKwI,OAASA,EACdxI,KAAKqI,UAAYA,EACjBrI,KAAK0Y,gBAAkBD,EA8D3B,OA5DArY,OAAO+B,eAAeoW,EAAe1X,UAAW,eAE5CwF,IAAK,WAAc,OAAOrG,KAAK0Y,gBAAgBrT,aAC/CqB,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,QAE5CwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAa5N,MAC5CrE,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,UAE5CwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAahN,OAAO3L,OACnD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,cAE5CwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAa7B,WAAW9W,OACvD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,YAE5CwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAarQ,SAAStI,OACrD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,gBAE5CwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAa/B,aAAa5W,OACzD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,YAC5CwF,IAAK,WAID,OAHKrG,KAAK4Y,YACN5Y,KAAK4Y,UAAY5Y,KAAKkG,OAAOyD,KAAK9J,EAAUiJ,IAAI,SAAUtI,GAAK,OAAOoG,EAAkBpG,OAErFR,KAAK4Y,WAEhBlS,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeoW,EAAe1X,UAAW,iBAC5CwF,IAAK,WAKD,OAJKrG,KAAKuL,iBACNvL,KAAKuL,eACDvL,KAAK2K,YAAYhB,KAAK9J,EAAUiJ,IAAI,SAAUtI,GAAK,OAAOoG,EAAkBpG,OAE7ER,KAAKuL,gBAEhB7E,YAAY,EACZC,cAAc,IAElB4R,EAAe1X,UAAUqD,SAAW,WAChC,OAAOlE,KAAKoF,SAAWpF,KAAKoF,SAASlB,WAAa,UAAYlE,KAAK0Y,gBAAkB,KAElFH,EAvFwB,GA8FnC,SAASM,GAA2B7T,EAAO8T,QACL,IAA9BA,IAAwCA,EAA4B,aACxE,IAAIlC,EAAe5R,EAAM4R,aACrBmC,EAAyB,EAC7B,GAAkC,WAA9BD,EAEA,IADAC,EAAyBnC,EAAatV,OAAS,EACxCyX,GAA0B,GAAG,CAChC,IAAI3N,EAAUwL,EAAamC,GACvBC,EAAWpC,EAAamC,EAAyB,GAErD,GAAI3N,EAAQ/F,aAA4C,KAA7B+F,EAAQ/F,YAAYJ,KAC3C8T,QAGC,CAAA,GAAKC,EAAS3Q,UAIf,MAHA0Q,KAOZ,OAGJ,SAASE,EAAiBrC,GACtB,OAAOA,EAAasC,OAAO,SAAU5M,EAAK6M,GAItC,OAASjT,OAHInF,KAAauL,EAAIpG,OAAQiT,EAAKjT,QAGlBsS,KAFdzX,KAAauL,EAAIkM,KAAMW,EAAKX,MAEFpO,QADvBrJ,KAAauL,EAAIlC,QAAS+O,EAAKC,kBAE5ClT,UAAYsS,QAAUpO,aATpB6O,CAAiBrC,EAAajP,MAAMoR,IA+B/C,IAAIf,GAAwC,WAExC,SAASA,EAETlU,EAEAoC,EAEAyE,EAEAW,EAEAkN,EAEAhQ,EAEAH,EAAWhD,EAAagU,EAAYC,EAAelP,GAC/CpK,KAAK8D,IAAMA,EACX9D,KAAKkG,OAASA,EACdlG,KAAK2K,YAAcA,EACnB3K,KAAKsL,SAAWA,EAChBtL,KAAKwY,KAAOA,EACZxY,KAAKwI,OAASA,EACdxI,KAAKqI,UAAYA,EACjBrI,KAAKqF,YAAcA,EACnBrF,KAAKuZ,YAAcF,EACnBrZ,KAAKwZ,eAAiBF,EACtBtZ,KAAKyZ,SAAWrP,EAyDpB,OAvDAhK,OAAO+B,eAAe6V,EAAuBnX,UAAW,QAEpDwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAa5N,MAC5CrE,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6V,EAAuBnX,UAAW,UAEpDwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAahN,OAAO3L,OACnD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6V,EAAuBnX,UAAW,cAEpDwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAa7B,WAAW9W,OACvD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6V,EAAuBnX,UAAW,YAEpDwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAarQ,SAAStI,OACrD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6V,EAAuBnX,UAAW,gBAEpDwF,IAAK,WAAc,OAAOrG,KAAK2Y,aAAa/B,aAAa5W,OACzD0G,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6V,EAAuBnX,UAAW,YACpDwF,IAAK,WAID,OAHKrG,KAAK4Y,YACN5Y,KAAK4Y,UAAYhS,EAAkB5G,KAAKkG,SAErClG,KAAK4Y,WAEhBlS,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6V,EAAuBnX,UAAW,iBACpDwF,IAAK,WAID,OAHKrG,KAAKuL,iBACNvL,KAAKuL,eAAiB3E,EAAkB5G,KAAK2K,cAE1C3K,KAAKuL,gBAEhB7E,YAAY,EACZC,cAAc,IAElBqR,EAAuBnX,UAAUqD,SAAW,WAGxC,MAAO,cAFGlE,KAAK8D,IAAIgF,IAAI,SAAUvB,GAAW,OAAOA,EAAQrD,aAAekJ,KAAK,KAElD,aADfpN,KAAKqF,YAAcrF,KAAKqF,YAAYJ,KAAO,IACJ,MAElD+S,EApFgC,GAiHvCC,GAAqC,SAAUrU,GAG/C,SAASqU,EAETnU,EAAKiH,GACD,IAAI9G,EAAQL,EAAOrC,KAAKvB,KAAM+K,IAAS/K,KAGvC,OAFAiE,EAAMH,IAAMA,EACZ6T,GAAe1T,EAAO8G,GACf9G,EAGX,OAXAvD,EAAUuX,EAAqBrU,GAU/BqU,EAAoBpX,UAAUqD,SAAW,WAAc,OAAOwV,GAAc1Z,KAAK2W,QAC1EsB,EAZ6B,CAatCvB,IACF,SAASiB,GAAelT,EAAO0S,GAC3BA,EAAKlU,MAAM0V,aAAelU,EAC1B0S,EAAK7O,SAASgB,QAAQ,SAAUxH,GAAK,OAAO6V,GAAelT,EAAO3C,KAEtE,SAAS4X,GAAcvC,GACnB,IAAIrV,EAAIqV,EAAK7O,SAAShH,OAAS,EAAI,MAAQ6V,EAAK7O,SAASQ,IAAI4Q,IAAetM,KAAK,MAAQ,MAAQ,GACjG,MAAO,GAAK+J,EAAKlU,MAAQnB,EAO7B,SAAS6X,GAAsB3U,GAC3B,GAAIA,EAAMI,SAAU,CAChB,IAAIwU,EAAkB5U,EAAMI,SACxByU,EAAe7U,EAAM0T,gBACzB1T,EAAMI,SAAWyU,EACZ9Q,EAAa6Q,EAAgBjP,YAAakP,EAAalP,cACxD3F,EAAM2F,YAAY3H,KAAK6W,EAAalP,aAEpCiP,EAAgBtO,WAAauO,EAAavO,UAC1CtG,EAAMsG,SAAStI,KAAK6W,EAAavO,UAEhCvC,EAAa6Q,EAAgB1T,OAAQ2T,EAAa3T,SACnDlB,EAAMkB,OAAOlD,KAAK6W,EAAa3T,QAzhD3C,SAAS4T,EAAmB9Q,EAAG7I,GAC3B,GAAI6I,EAAE1H,SAAWnB,EAAEmB,OACf,OAAO,EACX,IAAK,IAAIH,EAAI,EAAGA,EAAI6H,EAAE1H,SAAUH,EAC5B,IAAK4H,EAAaC,EAAE7H,GAAIhB,EAAEgB,IACtB,OAAO,EAEf,OAAO,EAohDE2Y,CAAmBF,EAAgB9V,IAAK+V,EAAa/V,MACtDkB,EAAMlB,IAAId,KAAK6W,EAAa/V,KAE3BiF,EAAa6Q,EAAgBpB,KAAMqB,EAAarB,OACjDxT,EAAMwT,KAAKxV,KAAK6W,EAAarB,WAIjCxT,EAAMI,SAAWJ,EAAM0T,gBAEvB1T,EAAMwT,KAAKxV,KAAKgC,EAAM0T,gBAAgBF,MAG9C,SAASuB,GAA0B/Q,EAAG7I,GAGlC,OAFqB4I,EAAaC,EAAE9C,OAAQ/F,EAAE+F,SAlwClD,SAAS8T,EAAc9N,EAAIC,GACvB,OAAOtB,EAAUqB,EAAIC,IAAOD,EAAGrC,MAAM,SAAUb,EAAG7H,GAAK,OAAO4H,EAAaC,EAAE+C,WAAYI,EAAGhL,GAAG4K,cAiwCtCiO,CAAchR,EAAElF,IAAK3D,EAAE2D,SACzDkF,EAAE2C,SAAYxL,EAAEwL,WAEjC3C,EAAE2C,QAAUoO,GAA0B/Q,EAAE2C,OAAQxL,EAAEwL;;;;;;;OA+F5D,SAASsO,GAAeC,GACpB,MAA0B,iBAAZA,GAAmC,MAAXA,IAAoBA,EAAQC,UAAYD,EAAQE,YAE1F,SAASpN,GAAKqN,EAAiBC,EAAiBvK,EAASpF,EAAaW,GAClE,IAAIiP,KAMJ,OALI5P,GACArB,EAAQqB,EAAa,SAAU1H,EAAOmD,GAClCmU,EAAGnU,GAAQ7F,MAAMgG,QAAQtD,GAASA,EAAM6F,IAAI,SAAUxC,GAAK,MAAO,GAAKA,IAAQ,GAAKrD,IAIjF,IAAIoI,EADX0E,EAAQhF,OAASsP,EACEC,EAI3B,SAASE,EAAepP,EAASqP,EAAYC,GACzC,IAAIpS,KASJ,OARAgB,EAAQ8B,EAAQ9C,SAAU,SAAUxG,EAAG2N,GAE/BnH,EAASmH,GADT3N,IAAM2Y,EACiBC,EAGAF,EAAe1Y,EAAG2Y,EAAYC,KAGtD,IAAIhP,EAAgBN,EAAQtE,SAAUwB,GAZ1BkS,CAAezK,EAAQhF,KAAMsP,EAAiBC,GAFzBC,EAAIjP,GAgBhD,IAAIqP,GAA4B,WAC5B,SAASA,EAAWC,EAAYC,EAAoBC,GAIhD,GAHA9a,KAAK4a,WAAaA,EAClB5a,KAAK6a,mBAAqBA,EAC1B7a,KAAK8a,SAAWA,EACZF,GAAcE,EAASxZ,OAAS,GAAK2Y,GAAea,EAAS,IAC7D,MAAM,IAAI1S,MAAM,8CAEpB,IAAI2S,EAAgBD,EAASE,KAAK,SAAUlZ,GAAK,MAAoB,iBAANA,GAAuB,MAALA,GAAaA,EAAEqY,UAChG,GAAIY,GAAiBA,IAAkB1R,EAAKyR,GACxC,MAAM,IAAI1S,MAAM,2CAMxB,OAHAuS,EAAW9Z,UAAUoa,OAAS,WAC1B,OAAOjb,KAAK4a,YAAuC,IAAzB5a,KAAK8a,SAASxZ,QAAoC,KAApBtB,KAAK8a,SAAS,IAEnEH,EAhBoB,GA4D3BO,GACA,SAASA,GAASnU,EAAcoU,EAAiB9T,GAC7CrH,KAAK+G,aAAeA,EACpB/G,KAAKmb,gBAAkBA,EACvBnb,KAAKqH,MAAQA,GA6BrB,SAAS+T,GAAQlB,GACb,MAAuB,iBAAZA,GAAmC,MAAXA,GAAmBA,EAAQC,QACnDD,EAAQC,QAAQnU,GAEpB,GAAKkU,EAUhB,SAASmB,GAAmBtU,EAAcuU,EAAYR,GAIlD,GAHK/T,IACDA,EAAe,IAAI2E,UAEc,IAAjC3E,EAAaD,SAASxF,QAAgByF,EAAaI,cACnD,OAAOoU,GAA2BxU,EAAcuU,EAAYR,GAEhE,IAAIjY,EAyCR,SAAS2Y,EAAazU,EAAcuU,EAAYR,GAI5C,IAHA,IAAIW,EAAsB,EACtBC,EAAmBJ,EACnBtL,GAAY3B,OAAO,EAAOsN,UAAW,EAAGC,aAAc,GACnDF,EAAmB3U,EAAaD,SAASxF,QAAQ,CACpD,GAAIma,GAAuBX,EAASxZ,OAChC,OAAO0O,EACX,IAAI/K,EAAO8B,EAAaD,SAAS4U,GAC7BvC,EAAOiC,GAAQN,EAASW,IACxBzY,EAAOyY,EAAsBX,EAASxZ,OAAS,EAAIwZ,EAASW,EAAsB,GAAK,KAC3F,GAAIC,EAAmB,QAAchM,IAATyJ,EACxB,MACJ,GAAIA,GAAQnW,GAAyB,iBAATA,QAAuC0M,IAAjB1M,EAAKmX,QAAuB,CAC1E,IAAK0B,GAAQ1C,EAAMnW,EAAMiC,GACrB,OAAO+K,EACXyL,GAAuB,MAEtB,CACD,IAAKI,GAAQ1C,KAAUlU,GACnB,OAAO+K,EACXyL,IAEJC,IAEJ,OAASrN,OAAO,EAAMsN,UAAWD,EAAkBE,aAAcH,GAjEzDD,CAAazU,EAAcuU,EAAYR,GAC3CgB,EAAiBhB,EAASnT,MAAM9E,EAAE+Y,cACtC,GAAI/Y,EAAEwL,OAASxL,EAAE8Y,UAAY5U,EAAaD,SAASxF,OAAQ,CACvD,IAAIya,EAAI,IAAIrQ,EAAgB3E,EAAaD,SAASa,MAAM,EAAG9E,EAAE8Y,eAG7D,OAFAI,EAAEzT,SAAStC,GACP,IAAI0F,EAAgB3E,EAAaD,SAASa,MAAM9E,EAAE8Y,WAAY5U,EAAauB,UACxEiT,GAA2BQ,EAAG,EAAGD,GAEvC,OAAIjZ,EAAEwL,OAAmC,IAA1ByN,EAAexa,OACxB,IAAIoK,EAAgB3E,EAAaD,aAEnCjE,EAAEwL,QAAUtH,EAAaI,cACvB6U,GAAsBjV,EAAcuU,EAAYR,GAElDjY,EAAEwL,MACAkN,GAA2BxU,EAAc,EAAG+U,GAG5CE,GAAsBjV,EAAcuU,EAAYR,GAG/D,SAASS,GAA2BxU,EAAcuU,EAAYR,GAC1D,GAAwB,IAApBA,EAASxZ,OACT,OAAO,IAAIoK,EAAgB3E,EAAaD,aAGxC,IAAImV,EAzCZ,SAASC,EAAWpB,GAChB,IAAI3J,EAAIiG,EACR,MAA6B,iBAAhB0D,EAAS,KACX3J,MAAYnL,GAAkB8U,EAAU3J,QACvBzB,IAAxBoL,EAAS,GAAGX,UACL/C,MAAYpR,GAAkB8U,EAAU1D,GAC5C0D,EAAS,GAAGX,QAmCC+B,CAAWpB,GACvB3N,KAWJ,OAVA7D,EAAQ2S,EAAW,SAAUnB,EAAUtS,GAClB,OAAbsS,IACA3N,EAAW3E,GAAU6S,GAAmBtU,EAAauB,SAASE,GAAS8S,EAAYR,MAG3FxR,EAAQvC,EAAauB,SAAU,SAAUiE,EAAOC,QACbkD,IAA3BuM,EAAUzP,KACVW,EAAWX,GAAeD,KAG3B,IAAIb,EAAgB3E,EAAaD,SAAUqG,GA6B1D,SAAS6O,GAAsBjV,EAAcuU,EAAYR,GAGrD,IAFA,IAAI7I,EAAQlL,EAAaD,SAASa,MAAM,EAAG2T,GACvCna,EAAI,EACDA,EAAI2Z,EAASxZ,QAAQ,CACxB,GAA2B,iBAAhBwZ,EAAS3Z,SAA2CuO,IAAxBoL,EAAS3Z,GAAGgZ,QAAuB,CACtE,IAAI7R,EAAW6T,GAAyBrB,EAAS3Z,GAAGgZ,SACpD,OAAO,IAAIzO,EAAgBuG,EAAO3J,GAGtC,GAAU,IAANnH,GAAW8Y,GAAea,EAAS,IAEnC7I,EAAM3O,KAAK,IAAIwI,EADP/E,EAAaD,SAASwU,GACFrW,KAAM6V,EAAS,KAC3C3Z,QAHJ,CAMA,IAAIgY,EAAOiC,GAAQN,EAAS3Z,IACxB6B,EAAQ7B,EAAI2Z,EAASxZ,OAAS,EAAKwZ,EAAS3Z,EAAI,GAAK,KACrDgY,GAAQnW,GAAQiX,GAAejX,IAC/BiP,EAAM3O,KAAK,IAAIwI,EAAWqN,EAAMiD,GAAUpZ,KAC1C7B,GAAK,IAGL8Q,EAAM3O,KAAK,IAAIwI,EAAWqN,OAC1BhY,MAGR,OAAO,IAAIuK,EAAgBuG,MAE/B,SAASkK,GAAyBhC,GAC9B,IAAI7R,KAMJ,OALAgB,EAAQ6Q,EAAS,SAAUW,EAAUtS,GAChB,OAAbsS,IACAxS,EAASE,GAAUwT,GAAsB,IAAItQ,SAAyB,EAAGoP,MAG1ExS,EAEX,SAAS8T,GAAUlW,GACf,IAAIoG,KAEJ,OADAhD,EAAQpD,EAAQ,SAAUI,EAAGsF,GAAK,OAAOU,EAAIV,GAAK,GAAKtF,IAChDgG,EAEX,SAASuP,GAAQ5W,EAAMiB,EAAQqB,GAC3B,OAAOtC,GAAQsC,EAAQtC,MAAQ8D,EAAa7C,EAAQqB,EAAQwE;;;;;;;OAUhE,IAAIsQ,GACA,SAASA,GAAYpX,GACjBjF,KAAKiF,KAAOA,EACZjF,KAAKgF,MAAQhF,KAAKiF,KAAKjF,KAAKiF,KAAK3D,OAAS,IAI9Cgb,GACA,SAASA,GAAcjU,EAAWrD,GAC9BhF,KAAKqI,UAAYA,EACjBrI,KAAKgF,MAAQA,GAOjBuX,GAA+B,WAC/B,SAASA,EAAcC,EAAQrD,EAAM5I,EAAgBkM,GACjDzc,KAAKwc,OAASA,EACdxc,KAAKmZ,KAAOA,EACZnZ,KAAKuQ,eAAiBA,EACtBvQ,KAAKyc,aAAeA,EACpBzc,KAAK0c,qBACL1c,KAAK2c,uBAiRT,OA/QAJ,EAAc1b,UAAU+b,WAAa,SAAUC,GAC3C,IAAIC,EAAa9c,KAAKwc,OAAO7F,MAE7B3W,KAAK+c,sBAAsBD,EADZ9c,KAAKmZ,KAAOnZ,KAAKmZ,KAAKxC,MAAQ,KACIkG,GAAiBC,EAAW7Z,SAEjFsZ,EAAc1b,UAAUmc,YAAc,WAClC,IAAI/Y,EAAQjE,KACZ,OAAKA,KAAKid,kBAAqBjd,KAAKkd,eAGfld,KAAKmd,yBACJxT,KAAK9J,EAAU4S,SAAS,SAAU2K,GAAiB,OAAOA,EAAgBnZ,EAAMoZ,uBAAyBzd,EAAKyK,IAAG,MAH5HzK,EAAKyK,IAAG,IAKvBkS,EAAc1b,UAAUyc,YAAc,SAAUxE,GAC5C,IAAI7U,EAAQjE,KACZ,OAAKA,KAAKkd,eAEHtd,EAAKsK,KAAKlK,KAAK0c,mBACjB/S,KAAK9J,EAAU0d,UAAU,SAAUC,GAAS,OAAOvZ,EAAMwZ,WAAWD,EAAMxY,MAAO8T,KAAgCjZ,EAAUqZ,OAAO,SAAUpH,EAAGnR,GAAM,OAAOmR,KAFtJlS,EAAKyK,GAAG,OAIvBkS,EAAc1b,UAAUoc,eAAiB,WAAc,OAA2C,IAApCjd,KAAK2c,oBAAoBrb,QACvFib,EAAc1b,UAAUqc,aAAe,WAAc,OAAyC,IAAlCld,KAAK0c,kBAAkBpb,QAKnFib,EAAc1b,UAAUkc,sBAAwB,SAAUW,EAAYC,EAAUC,EAAUC,GACtF,IAAI5Z,EAAQjE,KACR8d,EAAerG,GAAkBkG,GAErCD,EAAWpV,SAASgB,QAAQ,SAAUxH,GAClCmC,EAAM8Z,iBAAiBjc,EAAGgc,EAAahc,EAAEmB,MAAMuF,QAASoV,EAAUC,EAAWpa,QAAQ3B,EAAEmB,gBAChF6a,EAAahc,EAAEmB,MAAMuF,UAGhCc,EAAQwU,EAAc,SAAUxX,EAAGsF,GAC/B,OAAO3H,EAAM+Z,8BAA8B1X,EAAGsX,EAASK,WAAWrS,OAO1E2Q,EAAc1b,UAAUkd,iBAAmB,SAAUL,EAAYC,EAAUd,EAAgBgB,GACvF,IAAIrB,EAASkB,EAAWza,MACpBkW,EAAOwE,EAAWA,EAAS1a,MAAQ,KACnCib,EAAUrB,EAAiBA,EAAeoB,WAAWP,EAAWza,MAAMuF,QAAU,KAEpF,GAAI2Q,GAAQqD,EAAOnX,cAAgB8T,EAAK9T,YAAa,CACjD,IAAI8Y,EAA8Bne,KAAKme,4BAA4BhF,EAAMqD,EAAQA,EAAOnX,YAAY+Y,uBAChGD,EACAne,KAAK0c,kBAAkBpZ,KAAK,IAAI+Y,GAAYwB,KAI5CrB,EAAOhE,KAAOW,EAAKX,KACnBgE,EAAOpD,cAAgBD,EAAKC,eAI5BpZ,KAAK+c,sBAAsBW,EAAYC,EADvCnB,EAAOnU,UAC0C6V,EAAUA,EAAQ5V,SAAW,KAI7BuU,EAJmCgB,GAMpFM,GAEAne,KAAK2c,oBAAoBrZ,KAAK,IAAIgZ,GADrB4B,EAAQ1V,OACkCH,UAAW8Q,SAIlEA,GACAnZ,KAAKge,8BAA8BL,EAAUO,GAEjDle,KAAK0c,kBAAkBpZ,KAAK,IAAI+Y,GAAYwB,IAGxC7d,KAAK+c,sBAAsBW,EAAY,KADvClB,EAAOnU,UACsC6V,EAAUA,EAAQ5V,SAAW,KAI7BuU,EAJmCgB,IAQ5FtB,EAAc1b,UAAUsd,4BAA8B,SAAUhF,EAAMqD,EAAQ6B,GAC1E,OAAQA,GACJ,IAAK,SACD,OAAO,EACX,IAAK,4BACD,OAAQtE,GAA0BZ,EAAMqD,KACnCzT,EAAaoQ,EAAKxO,YAAa6R,EAAO7R,aAC/C,IAAK,eACL,QACI,OAAQoP,GAA0BZ,EAAMqD,KAGpDD,EAAc1b,UAAUmd,8BAAgC,SAAUhZ,EAAOkZ,GACrE,IAAIja,EAAQjE,KACRsI,EAAWmP,GAAkBzS,GAC7BjD,EAAIiD,EAAM/B,MACdqG,EAAQhB,EAAU,SAAU6O,EAAMmH,GAK1Bra,EAAM+Z,8BAA8B7G,EAJnCpV,EAAEsG,UAGE6V,EACqCA,EAAQ5V,SAAS2V,WAAWK,GAG5B,KANAJ,KAa9Cle,KAAK2c,oBAAoBrZ,KAAK,IAAIgZ,GAJjCva,EAAEsG,WAGE6V,GAAWA,EAAQ1V,QAAU0V,EAAQ1V,OAAO+V,YACDL,EAAQ1V,OAAOH,UAHf,KAG0BtG,KAMlFwa,EAAc1b,UAAUsc,uBAAyB,WAC7C,IAAIlZ,EAAQjE,KACZ,OAAOJ,EAAKsK,KAAKlK,KAAK2c,qBACjBhT,KAAK9J,EAAU4S,SAAS,SAAU+K,GAAS,OAAOvZ,EAAMua,iBAAiBhB,EAAMnV,UAAWmV,EAAMxY,SAAYnF,EAAUgK,MAAM,SAAUC,GAAU,OAAkB,IAAXA,MAEhKyS,EAAc1b,UAAUwc,qBAAuB,WAC3C,IAAIpZ,EAAQjE,KACZ,OAAOJ,EAAKsK,KAAKlK,KAAK0c,mBACjB/S,KAAK9J,EAAU0d,UAAU,SAAUC,GAAS,OAAO/T,EAAe7J,EAAKsK,MACxEjG,EAAMwa,yBAAyBjB,EAAMxY,MAAM2G,QAC3C1H,EAAMya,oBAAoBlB,EAAMxY,OAAQf,EAAM0a,oBAAoBnB,EAAMvY,MACxEhB,EAAM2a,eAAepB,EAAMxY,YACtBnF,EAAUgK,MAAM,SAAUC,GAAU,OAAkB,IAAXA,MAWxDyS,EAAc1b,UAAU6d,oBAAsB,SAAUtZ,GAIpD,OAHiB,OAAbA,GAAqBpF,KAAKyc,cAC1Bzc,KAAKyc,aAAa,IAAIlX,EAAgBH,IAEnCxF,EAAKyK,IAAG,IAUnBkS,EAAc1b,UAAU4d,yBAA2B,SAAUrZ,GAIzD,OAHiB,OAAbA,GAAqBpF,KAAKyc,cAC1Bzc,KAAKyc,aAAa,IAAItX,EAAqBC,IAExCxF,EAAKyK,IAAG,IAEnBkS,EAAc1b,UAAU+d,eAAiB,SAAUpC,GAC/C,IAAIvY,EAAQjE,KACR6e,EAAcrC,EAAOnX,YAAcmX,EAAOnX,YAAYwZ,YAAc,KACxE,OAAKA,GAAsC,IAAvBA,EAAYvd,OAazBmI,EAXG7J,EAAKsK,KAAK2U,GAAalV,KAAK9J,EAAUiJ,IAAI,SAAUhH,GAC1D,IAAIkT,EAAQ/Q,EAAM6a,SAAShd,EAAG0a,GAQ9B,OALiBzS,EADbiL,EAAM6J,YAC0B7J,EAAM6J,YAAYrC,EAAQvY,EAAMuY,QAGhCxH,EAAMwH,EAAQvY,EAAMuY,SAEtC7S,KAAK9J,EAAUgS,aAV1BjS,EAAKyK,IAAG,IAcvBkS,EAAc1b,UAAU8d,oBAAsB,SAAU1Z,GACpD,IAAIhB,EAAQjE,KACRwc,EAASvX,EAAKA,EAAK3D,OAAS,GAC5Byd,EAAyB9Z,EAAK0C,MAAM,EAAG1C,EAAK3D,OAAS,GACpD0d,UACAlW,IAAI,SAAUtI,GAAK,OAAOyD,EAAMgb,wBAAwBze,KACxDyW,OAAO,SAAUnF,GAAK,OAAa,OAANA,IAClC,OAAOrI,EAAe7J,EAAKsK,KAAK6U,GAAwBpV,KAAK9J,EAAUiJ,IAAI,SAAU5I,GAYjF,OAAOuJ,EAXG7J,EAAKsK,KAAKhK,EAAEgf,QAAQvV,KAAK9J,EAAUiJ,IAAI,SAAUhH,GACvD,IAAIkT,EAAQ/Q,EAAM6a,SAAShd,EAAG5B,EAAEiX,MAQhC,OALiBpN,EADbiL,EAAMmK,iBAC0BnK,EAAMmK,iBAAiB3C,EAAQvY,EAAMuY,QAGrCxH,EAAMwH,EAAQvY,EAAMuY,SAEtC7S,KAAK9J,EAAUgS,kBAK7C0K,EAAc1b,UAAUoe,wBAA0B,SAAUze,GACxD,IAAI2e,EAAmB3e,EAAE6E,YAAc7E,EAAE6E,YAAY8Z,iBAAmB,KACxE,OAAKA,GAAgD,IAA5BA,EAAiB7d,QAEjC6V,KAAM3W,EAAG0e,OAAQC,GADf,MAGf5C,EAAc1b,UAAU2d,iBAAmB,SAAUnW,EAAW8Q,GAC5D,IAAIlV,EAAQjE,KACRod,EAAgBjE,GAAQA,EAAK9T,YAAc8T,EAAK9T,YAAY+X,cAAgB,KAChF,OAAKA,GAA0C,IAAzBA,EAAc9b,OAEf1B,EAAKsK,KAAKkT,GAAezT,KAAK9J,EAAU4S,SAAS,SAAU3Q,GAC5E,IAAIkT,EAAQ/Q,EAAM6a,SAAShd,EAAGqX,GAS9B,OALQpP,EAFJiL,EAAMoI,cAEiBpI,EAAMoI,cAAc/U,EAAW8Q,EAAMlV,EAAMkV,KAAMlV,EAAMuY,QAG9CxH,EAAM3M,EAAW8Q,EAAMlV,EAAMkV,KAAMlV,EAAMuY,SAE3D7S,KAAK9J,EAAUgS,YAEflI,KAAK9J,EAAUgK,MAAM,SAAUC,GAAU,OAAkB,IAAXA,KAb3DlK,EAAKyK,IAAG,IAevBkS,EAAc1b,UAAU4c,WAAa,SAAUjB,EAAQ1D,GAEnD,OAAO9Y,KAAKof,YADE5C,EAAO/C,SACY+C,GAAQ7S,KAAK9J,EAAUiJ,IAAI,SAAUuW,GAGlE,OAFA7C,EAAOpD,cAAgBiG,EACvB7C,EAAOhE,KAAOzX,KAAayb,EAAOhE,KAAMK,GAA2B2D,EAAQ1D,GAA2B1O,SAC/F,SAGfmS,EAAc1b,UAAUue,YAAc,SAAUhV,EAASoS,GACrD,IAAIvY,EAAQjE,KACRyG,EAAOrG,OAAOqG,KAAK2D,GACvB,GAAoB,IAAhB3D,EAAKnF,OACL,OAAO1B,EAAKyK,OAEhB,GAAoB,IAAhB5D,EAAKnF,OAAc,CACnB,IAAIge,EAAQ7Y,EAAK,GACjB,OAAOzG,KAAKuf,YAAYnV,EAAQkV,GAAQ9C,GAAQ7S,KAAK9J,EAAUiJ,IAAI,SAAU7F,GACzE,IAAIkO,EACJ,OAAOA,MAAYmO,GAASrc,EAAOkO,KAG3C,IAAIqH,KAOJ,OANwB5Y,EAAKsK,KAAKzD,GAAMkD,KAAK9J,EAAU4S,SAAS,SAAU7Q,GACtE,OAAOqC,EAAMsb,YAAYnV,EAAQxI,GAAM4a,GAAQ7S,KAAK9J,EAAUiJ,IAAI,SAAU7F,GAExE,OADAuV,EAAK5W,GAAOqB,EACLA,QAGU0G,KAAK9J,EAAUwJ,OAAQxJ,EAAUiJ,IAAI,WAAc,OAAO0P,MAEvF+D,EAAc1b,UAAU0e,YAAc,SAAUxK,EAAgByH,GAC5D,IAAIgD,EAAWxf,KAAK8e,SAAS/J,EAAgByH,GAC7C,OAA0BzS,EAAnByV,EAASpV,QAA6BoV,EAASpV,QAAQoS,EAAQxc,KAAKwc,QACpDgD,EAAShD,EAAQxc,KAAKwc,UAEjDD,EAAc1b,UAAUie,SAAW,SAAUW,EAAOra,GAChD,IAAI2C,EAMZ,SAAS2X,EAAoBta,GACzB,IAAKA,EACD,OAAO,KACX,IAAK,IAAIlE,EAAIkE,EAASuG,OAAQzK,EAAGA,EAAIA,EAAEyK,OAAQ,CAC3C,IAAI3G,EAAQ9D,EAAEmE,YACd,GAAIL,GAASA,EAAMoO,cACf,OAAOpO,EAAMoO,cAErB,OAAO;;;;;;;OAdUsM,CAAoBta,GAEjC,OADe2C,EAASA,EAAO1I,OAAO6T,SAAWlT,KAAKuQ,gBACtClK,IAAIoZ,IAEjBlD,EAxRuB,GA4S9BoD,GACA,SAAS9P,OAUT+P,GAA4B,WAC5B,SAASA,EAAWC,EAAmB9X,EAAQgI,EAASjM,EAAKgV,EAA2BgH,GACpF9f,KAAK6f,kBAAoBA,EACzB7f,KAAK+H,OAASA,EACd/H,KAAK+P,QAAUA,EACf/P,KAAK8D,IAAMA,EACX9D,KAAK8Y,0BAA4BA,EACjC9Y,KAAK8f,uBAAyBA,EAgGlC,OA9FAF,EAAW/e,UAAUkf,UAAY,WAC7B,IACI,IAAIjP,EAAmBkP,GAAQhgB,KAAK+P,QAAQhF,WAAc/K,KAAK+H,OAAQ/H,KAAK8f,wBAAwB/Y,aAChGuB,EAAWtI,KAAKigB,oBAAoBjgB,KAAK+H,OAAQ+I,EAAkB9K,GACnE+E,EAAO,IAAIiN,MAA2B5X,OAAO8f,WAAY9f,OAAO8f,OAAOnf,KAAaf,KAAK+P,QAAQpF,cAAe3K,KAAK+P,QAAQzE,YAActF,EAAgBhG,KAAK6f,kBAAmB,KAAM7f,KAAK+P,QAAQhF,MAAO,MAC7MoV,EAAW,IAAI3I,GAASzM,EAAMzC,GAC9B8X,EAAa,IAAInI,GAAoBjY,KAAK8D,IAAKqc,GAEnD,OADAngB,KAAKqgB,qBAAqBD,EAAWzJ,OAC9B/W,EAAKyK,GAAG+V,GAEnB,MAAOhd,GACH,OAAO,IAAIxD,EAAKqQ,WAAW,SAAUC,GAAO,OAAOA,EAAI3M,MAAMH,OAGrEwc,EAAW/e,UAAUwf,qBAAuB,SAAUC,GAClD,IAAIrc,EAAQjE,KACRgF,EAAQsb,EAAUrd,MAClB9B,EAAI0X,GAA2B7T,EAAOhF,KAAK8Y,2BAC/C9T,EAAMkB,OAAS9F,OAAO8f,OAAO/e,EAAE+E,QAC/BlB,EAAMwT,KAAOpY,OAAO8f,OAAO/e,EAAEqX,MAC7B8H,EAAUhY,SAASgB,QAAQ,SAAUlI,GAAK,OAAO6C,EAAMoc,qBAAqBjf,MAEhFwe,EAAW/e,UAAUof,oBAAsB,SAAUlY,EAAQhB,EAAcyB,GACvE,OAAqC,IAAjCzB,EAAaD,SAASxF,QAAgByF,EAAaI,cAC5CnH,KAAKmb,gBAAgBpT,EAAQhB,GAEjC/G,KAAKugB,eAAexY,EAAQhB,EAAcA,EAAaD,SAAU0B,IAE5EoX,EAAW/e,UAAUsa,gBAAkB,SAAUpT,EAAQhB,GACrD,IAAI9C,EAAQjE,KACRsI,EAAW8D,EAAqBrF,EAAc,SAAUwF,EAAOC,GAAe,OAAOvI,EAAMgc,oBAAoBlY,EAAQwE,EAAOC,KAGlI,OAkGR,SAASgU,EAA0BC,GAC/B,IAAIC,KACJD,EAAMnX,QAAQ,SAAUlI,GACpB,IAAIuf,EAA0BD,EAAMtf,EAAE6B,MAAMuF,QAC5C,GAAImY,EAAyB,CACzB,IAAIngB,EAAImgB,EAAwB7c,IAAIgF,IAAI,SAAU5H,GAAK,OAAOA,EAAEgD,aAAekJ,KAAK,KAChFtL,EAAIV,EAAE6B,MAAMa,IAAIgF,IAAI,SAAU5H,GAAK,OAAOA,EAAEgD,aAAekJ,KAAK,KACpE,MAAM,IAAIhF,MAAM,mDAAqD5H,EAAI,UAAYsB,EAAI,MAE7F4e,EAAMtf,EAAE6B,MAAMuF,QAAUpH,EAAE6B,QA7G1Bud,CAA0BlY,GAiElC,SAASsY,EAA4BH,GACjCA,EAAMI,KAAK,SAAU7X,EAAG7I,GACpB,OAAI6I,EAAE/F,MAAMuF,SAAWxC,GACX,EACR7F,EAAE8C,MAAMuF,SAAWxC,EACZ,EACJgD,EAAE/F,MAAMuF,OAAOsY,cAAc3gB,EAAE8C,MAAMuF,UAtE5CoY,CAA4BtY,GACrBA,GAEXsX,EAAW/e,UAAU0f,eAAiB,SAAUxY,EAAQhB,EAAcD,EAAU0B,GAC5E,IAAI4N,EAAKjF,EACT,IACI,IAAK,IAAI4P,EAAWpe,EAASoF,GAASiZ,EAAaD,EAAS/d,QAASge,EAAW9d,KAAM8d,EAAaD,EAAS/d,OAAQ,CAChH,IAAIjB,EAAIif,EAAW/d,MACnB,IACI,OAAOjD,KAAKihB,2BAA2Blf,EAAGgF,EAAcD,EAAU0B,GAEtE,MAAOpF,GACH,KAAMA,aAAauc,IACf,MAAMvc,IAItB,MAAOqT,GAASL,GAAQ7S,MAAOkT,GAC/B,QACI,IACQuK,IAAeA,EAAW9d,OAASiO,EAAK4P,EAAS1M,SAASlD,EAAG5P,KAAKwf,GAE1E,QAAU,GAAI3K,EAAK,MAAMA,EAAI7S,OAEjC,GAAIvD,KAAKgS,iBAAiBjL,EAAcD,EAAU0B,GAC9C,SAEJ,MAAM,IAAImX,IAEdC,EAAW/e,UAAUmR,iBAAmB,SAAUjL,EAAcD,EAAU0B,GACtE,OAA2B,IAApB1B,EAASxF,SAAiByF,EAAauB,SAASE,IAE3DoX,EAAW/e,UAAUogB,2BAA6B,SAAUjc,EAAOkc,EAAYpa,EAAU0B,GACrF,GAAIxD,EAAMyD,WACN,MAAM,IAAIkX,GACd,IAAK3a,EAAMwD,QAAUxC,KAAoBwC,EACrC,MAAM,IAAImX,GACd,IAAIva,EACAwN,KACAS,KACJ,GAAmB,OAAfrO,EAAMC,KAAe,CACrB,IAAIiB,EAASY,EAASxF,OAAS,EAAI+H,EAAKvC,GAAUiF,cAClD3G,EAAW,IAAI4S,GAAuBlR,EAAUZ,EAAQ9F,OAAO8f,OAAOnf,KAAaf,KAAK+P,QAAQpF,cAAe3K,KAAK+P,QAAQzE,SAAU6V,GAAQnc,GAAQwD,EAAQxD,EAAMqD,UAAWrD,EAAOoc,GAAsBF,GAAaG,GAAkBH,GAAcpa,EAASxF,OAAQggB,GAAWtc,QAEpR,CACD,IAAI8E,EAqChB,SAASyX,EAAQxa,EAAc/B,EAAO8B,GAClC,GAAmB,KAAf9B,EAAMC,KAAa,CACnB,GAAwB,SAApBD,EAAMkC,YAAyBH,EAAaI,eAAiBL,EAASxF,OAAS,GAC/E,MAAM,IAAIqe,GAEd,OAAS/M,oBAAsBC,UAAW,EAAG9G,eAEjD,IACIO,GADUtH,EAAM0D,SAAW7B,GACbC,EAAUC,EAAc/B,GAC1C,IAAKsH,EACD,MAAM,IAAIqT,GACd,IAAIvY,KACJkC,EAAQgD,EAAIlF,UAAW,SAAUd,EAAGsF,GAAKxE,EAAUwE,GAAKtF,EAAErB,OAC1D,IAAI8G,EAAaO,EAAI5E,SAASpG,OAAS,EAAIP,KAAaqG,EAAWkF,EAAI5E,SAAS4E,EAAI5E,SAASpG,OAAS,GAAGyK,YACrG3E,EACJ,OAASwL,iBAAkBtG,EAAI5E,SAAUmL,UAAWvG,EAAI5E,SAASpG,OAAQyK,WAAYA,GApDhEwV,CAAQL,EAAYlc,EAAO8B,GACxC8L,EAAmB9I,EAAO8I,iBAC1BS,EAAoBvM,EAASa,MAAMmC,EAAO+I,WAC1CzN,EAAW,IAAI4S,GAAuBpF,EAAkB9I,EAAOiC,WAAY3L,OAAO8f,OAAOnf,KAAaf,KAAK+P,QAAQpF,cAAe3K,KAAK+P,QAAQzE,SAAU6V,GAAQnc,GAAQwD,EAAQxD,EAAMqD,UAAWrD,EAAOoc,GAAsBF,GAAaG,GAAkBH,GAActO,EAAiBtR,OAAQggB,GAAWtc,IAEpT,IAAIyO,EAuBZ,SAASH,EAAetO,GACpB,OAAIA,EAAMsD,SACCtD,EAAMsD,SAEbtD,EAAMuD,aACCvD,EAAMoO,cAAcvL,UA5BTyL,CAAetO,GAC7BmM,EAAK6O,GAAQkB,EAAYtO,EAAkBS,EAAmBI,EAAazT,KAAK8f,wBAAyB/Y,EAAeoK,EAAGpK,aAAc2M,EAAiBvC,EAAGuC,eACjK,GAA8B,IAA1BA,EAAepS,QAAgByF,EAAaI,cAAe,CAC3D,IAAIgG,EAAanN,KAAKmb,gBAAgB1H,EAAa1M,GACnD,OAAQ,IAAIyQ,GAASpS,EAAU+H,IAEnC,GAA2B,IAAvBsG,EAAYnS,QAA0C,IAA1BoS,EAAepS,OAC3C,OAAQ,IAAIkW,GAASpS,OAEzB,IAAIkD,EAAWtI,KAAKugB,eAAe9M,EAAa1M,EAAc2M,EAAgB1N,GAC9E,OAAQ,IAAIwR,GAASpS,EAAUkD,KAE5BsX,EAvGoB,GAwJ/B,SAASwB,GAAsBra,GAE3B,IADA,IAAI7F,EAAI6F,EACD7F,EAAEsgB,gBACLtgB,EAAIA,EAAEsgB,eAEV,OAAOtgB,EAEX,SAASmgB,GAAkBta,GAGvB,IAFA,IAAI7F,EAAI6F,EACJuF,EAAOpL,EAAEugB,mBAAqBvgB,EAAEugB,mBAAqB,EAClDvgB,EAAEsgB,gBAELlV,IADApL,EAAIA,EAAEsgB,gBACIC,mBAAqBvgB,EAAEugB,mBAAqB,EAE1D,OAAOnV,EAAM,EAEjB,SAAS0T,GAAQjZ,EAAc6L,EAAkBc,EAAgB3L,EAAQ+X,GACrE,GAAIpM,EAAepS,OAAS,GAyEhC,SAASogB,EAAyC3a,EAAc2M,EAAgB7L,GAC5E,OAAOA,EAAO+L,KAAK,SAAU7R,GAAK,OAAO4f,GAAe5a,EAAc2M,EAAgB3R,IAAM6f,GAAY7f,KAAOiE,IAzE3G0b,CAAyC3a,EAAc2M,EAAgB3L,GAAS,CAChF,IAAI8Z,EAAM,IAAInW,EAAgBkH,EA6CtC,SAASkP,EAA4B/a,EAAc6L,EAAkB/K,EAAQka,GACzE,IAAI9N,EAAK9C,EACL7E,KACJA,EAAItG,GAAkB+b,EACtBA,EAAeP,eAAiBza,EAChCgb,EAAeN,mBAAqB7O,EAAiBtR,OACrD,IACI,IAAK,IAAI4S,EAAWvR,EAASkF,GAASsM,EAAaD,EAASlR,QAASmR,EAAWjR,KAAMiR,EAAaD,EAASlR,OAAQ,CAChH,IAAIjB,EAAIoS,EAAWlR,MACnB,GAAe,KAAXlB,EAAEkD,MAAe2c,GAAY7f,KAAOiE,EAAgB,CACpD,IAAI9E,EAAI,IAAIwK,SACZxK,EAAEsgB,eAAiBza,EACnB7F,EAAEugB,mBAAqB7O,EAAiBtR,OACxCgL,EAAIsV,GAAY7f,IAAMb,IAIlC,MAAOkT,GAASH,GAAQ1Q,MAAO6Q,GAC/B,QACI,IACQD,IAAeA,EAAWjR,OAASiO,EAAK+C,EAASG,SAASlD,EAAG5P,KAAK2S,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAI1Q,OAEjC,OAAO+I,EArE6CwV,CAA4B/a,EAAc6L,EAAkB7K,EAAQ,IAAI2D,EAAgBgI,EAAgB3M,EAAauB,YAGrK,OAFAuZ,EAAIL,eAAiBza,EACrB8a,EAAIJ,mBAAqB7O,EAAiBtR,QACjCyF,aAAc8a,EAAKnO,mBAEhC,GAA8B,IAA1BA,EAAepS,QAqEvB,SAAS0gB,EAAyBjb,EAAc2M,EAAgB7L,GAC5D,OAAOA,EAAO+L,KAAK,SAAU7R,GAAK,OAAO4f,GAAe5a,EAAc2M,EAAgB3R,KArElFigB,CAAyBjb,EAAc2M,EAAgB3L,GAAS,CAChE,IAAIka,EAAM,IAAIvW,EAAgB3E,EAAaD,SAUnD,SAASob,EAAgCnb,EAAc6L,EAAkBc,EAAgB7L,EAAQS,EAAUwX,GACvG,IAAItL,EAAKrD,EACL7E,KACJ,IACI,IAAK,IAAImI,EAAW9R,EAASkF,GAAS6M,EAAaD,EAASzR,QAAS0R,EAAWxR,KAAMwR,EAAaD,EAASzR,OAAQ,CAChH,IAAIjB,EAAI2S,EAAWzR,MACnB,GAAI0e,GAAe5a,EAAc2M,EAAgB3R,KAAOuG,EAASsZ,GAAY7f,IAAK,CAC9E,IAAIb,EAAI,IAAIwK,SACZxK,EAAEsgB,eAAiBza,EAEf7F,EAAEugB,mBADyB,WAA3B3B,EACuB/Y,EAAaD,SAASxF,OAGtBsR,EAAiBtR,OAE5CgL,EAAIsV,GAAY7f,IAAMb,IAIlC,MAAOyT,GAASH,GAAQjR,MAAOoR,GAC/B,QACI,IACQD,IAAeA,EAAWxR,OAASiO,EAAKsD,EAASJ,SAASlD,EAAG5P,KAAKkT,GAE1E,QAAU,GAAID,EAAK,MAAMA,EAAIjR,OAEjC,OAAOxC,KAAauH,EAAUgE,GApC2B4V,CAAgCnb,EAAc6L,EAAkBc,EAAgB3L,EAAQhB,EAAauB,SAAUwX,IAGpK,OAFAmC,EAAIT,eAAiBza,EACrBkb,EAAIR,mBAAqB7O,EAAiBtR,QACjCyF,aAAckb,EAAKvO,eAAgBA,GAEhD,IAAIxS,EAAI,IAAIwK,EAAgB3E,EAAaD,SAAUC,EAAauB,UAGhE,OAFApH,EAAEsgB,eAAiBza,EACnB7F,EAAEugB,mBAAqB7O,EAAiBtR,QAC/ByF,aAAc7F,EAAGwS,eAAgBA,GA8D9C,SAASiO,GAAe5a,EAAc2M,EAAgB3R,GAClD,SAAKgF,EAAaI,eAAiBuM,EAAepS,OAAS,IAAsB,SAAhBS,EAAEmF,YAGjD,KAAXnF,EAAEkD,WAAgCyK,IAAjB3N,EAAE0G,WAE9B,SAASmZ,GAAY5c,GACjB,OAAOA,EAAMwD,QAAUxC,EAE3B,SAASmb,GAAQnc,GACb,OAAOA,EAAMwT,SAEjB,SAAS8I,GAAWtc,GAChB,OAAOA,EAAMoF;;;;;;;OAiBjB,IAAI+X,GACA,SAASA,OAOTC,GAA2C,WAC3C,SAASA,KAST,OAPAA,EAA0BvhB,UAAUwhB,aAAe,SAAUrd,GAAS,OAAO,GAC7Eod,EAA0BvhB,UAAUyhB,MAAQ,SAAUtd,EAAOud,KAC7DH,EAA0BvhB,UAAU2hB,aAAe,SAAUxd,GAAS,OAAO,GAC7Eod,EAA0BvhB,UAAU4hB,SAAW,SAAUzd,GAAS,OAAO,MACzEod,EAA0BvhB,UAAU6hB,iBAAmB,SAAUlG,EAAQrD,GACrE,OAAOqD,EAAOnX,cAAgB8T,EAAK9T,aAEhC+c,EAVmC,GAwB1CO,GAAS,IAAIhjB,EAAKijB,eAAe,UACjCC,GAAoC,WACpC,SAASA,EAAmBC,EAAQC,EAAUC,EAAqBC,GAC/DjjB,KAAK8iB,OAASA,EACd9iB,KAAK+iB,SAAWA,EAChB/iB,KAAKgjB,oBAAsBA,EAC3BhjB,KAAKijB,kBAAoBA,EAgC7B,OA9BAJ,EAAmBhiB,UAAUoS,KAAO,SAAUiQ,EAAgBle,GAC1D,IAAIf,EAAQjE,KAKZ,OAJIA,KAAKgjB,qBACLhjB,KAAKgjB,oBAAoBhe,GAERhF,KAAKmjB,kBAAkBne,EAAMuD,cAC5BoB,KAAK9J,EAAUiJ,IAAI,SAAU3J,GAC3C8E,EAAMgf,mBACNhf,EAAMgf,kBAAkBje,GAE5B,IAAI3F,EAASF,EAAQ2B,OAAOoiB,GAC5B,OAAO,IAAItb,EAAmBuB,EAAQ9J,EAAO6T,SAAS7M,IAAIsc,KAAS7Z,IAAID,GAAoBxJ,OAGnGwjB,EAAmBhiB,UAAUsiB,kBAAoB,SAAU5a,GACvD,IAAItE,EAAQjE,KACZ,MAA4B,iBAAjBuI,EACA3I,EAAKsK,KAAKlK,KAAK8iB,OAAO7P,KAAK1K,IAG3BwB,EAAmBxB,KAAgBoB,KAAK9J,EAAU4S,SAAS,SAAUxR,GACxE,OAAIA,aAAatB,EAAKyjB,gBACXxjB,EAAKyK,GAAGpJ,GAGRrB,EAAKsK,KAAKjG,EAAM8e,SAASM,mBAAmBpiB,QAK5D4hB,EArC4B,GAsDnCS,GACA,SAASA,OAOTC,GAA4C,WAC5C,SAASA,KAKT,OAHAA,EAA2B1iB,UAAU2iB,iBAAmB,SAAU1f,GAAO,OAAO,GAChFyf,EAA2B1iB,UAAU4iB,QAAU,SAAU3f,GAAO,OAAOA,GACvEyf,EAA2B1iB,UAAU6iB,MAAQ,SAAUC,EAAYC,GAAY,OAAOD,GAC/EJ,EANoC;;;;;;;;AAgB/C,SAASM,GAAoBtgB,GACzB,MAAMA,EAEV,SAASugB,GAAgCvgB,EAAOkN,EAAe3M,GAC3D,OAAO2M,EAAc9D,MAAM,KAK/B,SAASoX,GAAkB3e,EAAU4e,GACjC,OAAOpkB,EAAKyK,GAAG,MAanB,IAAI4Z,GAAwB,WAKxB,SAASA,EAAOpE,EAAmBpP,EAAeyT,EAAcC,EAAUjR,EAAU4P,EAAQC,EAAUhb,GAClG,IAAI9D,EAAQjE,KACZA,KAAK6f,kBAAoBA,EACzB7f,KAAKyQ,cAAgBA,EACrBzQ,KAAKkkB,aAAeA,EACpBlkB,KAAKmkB,SAAWA,EAChBnkB,KAAK+H,OAASA,EACd/H,KAAKokB,YAAc,IAAIxkB,EAAKuY,gBAAgB,MAC5CnY,KAAKqkB,aAAe,EACpBrkB,KAAKskB,iBAAkB,EACvBtkB,KAAKukB,OAAS,IAAI3kB,EAAK4kB,QAMvBxkB,KAAKykB,aAAeZ,GAMpB7jB,KAAK0kB,yBAA2BZ,GAIhC9jB,KAAK2kB,WAAY,EACjB3kB,KAAK4kB,kBAAoB,EAMzB5kB,KAAK6kB,OACDC,oBAAqBf,GACrBgB,mBAAoBhB,IAKxB/jB,KAAKglB,oBAAsB,IAAIzB,GAC/BvjB,KAAKilB,mBAAqB,IAAI7C,GAO9BpiB,KAAKklB,oBAAsB,SAS3BllB,KAAK8Y,0BAA4B,YAWjC9Y,KAAKmlB,kBAAoB,WAIzBnlB,KAAK8f,uBAAyB,SAG9B9f,KAAK2Q,SAAWuC,EAAS7M,IAAI1G,EAAKiR,aAClC5Q,KAAKolB,QAAUlS,EAAS7M,IAAI1G,EAAK0lB,UACjC,IAAIC,EAASpS,EAAS7M,IAAI1G,EAAK4lB,QAC/BvlB,KAAKskB,gBAAkBgB,aAAkB3lB,EAAK4lB,OAC9CvlB,KAAKwlB,YAAYzd,GACjB/H,KAAKylB,eAhnFb,SAASC,IACL,OAAO,IAAIra,EAAQ,IAAIK,YAA6B,MA+mF1Bga,GACtB1lB,KAAK2lB,WAAa3lB,KAAKylB,eACvBzlB,KAAKwQ,aAAe,IAAIqS,GAAmBC,EAAQC,EATjC,SAAUhhB,GAAK,OAAOkC,EAAM2hB,aAAa,IAAI7gB,EAAqBhD,KACpE,SAAUA,GAAK,OAAOkC,EAAM2hB,aAAa,IAAI1gB,EAAmBnD,MAShF/B,KAAK6lB,YAAcjO,GAAiB5X,KAAKylB,eAAgBzlB,KAAK6f,mBAC9D7f,KAAK8lB,qBAwfT,OAlfA7B,EAAOpjB,UAAUklB,uBAAyB,SAAUlG,GAChD7f,KAAK6f,kBAAoBA,EAGzB7f,KAAK6lB,YAAY9a,KAAK1C,UAAYrI,KAAK6f,mBAK3CoE,EAAOpjB,UAAUmlB,kBAAoB,WACjChmB,KAAKimB,8BACqB,IAAtBjmB,KAAKqkB,cACLrkB,KAAKkmB,cAAclmB,KAAKmkB,SAASlf,MAAK,IAASkhB,YAAY,KAMnElC,EAAOpjB,UAAUolB,4BAA8B,WAC3C,IAAIhiB,EAAQjE,KAIPA,KAAKomB,uBACNpmB,KAAKomB,qBAAuBpmB,KAAKmkB,SAASkC,UAAU,SAAUC,GAC1D,IAAIX,EAAa1hB,EAAMsiB,SAASD,EAAY,KACxCE,EAA4B,aAAnBF,EAAa,KAAmB,WAAa,aACtD7hB,EAAQ6hB,EAAO7hB,OAAS6hB,EAAO7hB,MAAM4f,cACnCA,aAAciC,EAAO7hB,MAAM4f,cAC7B,KACJoC,WAAW,WAAcxiB,EAAMyiB,mBAAmBf,EAAYa,EAAQ/hB,GAAS0hB,YAAY,KAAY,OAInH/lB,OAAO+B,eAAe8hB,EAAOpjB,UAAW,OAEpCwF,IAAK,WAAc,OAAOrG,KAAK2mB,aAAa3mB,KAAKylB,iBACjD/e,YAAY,EACZC,cAAc,IAGlBsd,EAAOpjB,UAAU+kB,aAAe,SAAUgB,GAAS5mB,KAAKukB,OAAOvhB,KAAK4jB,IAiBpE3C,EAAOpjB,UAAU2kB,YAAc,SAAUzd,GACrCD,EAAeC,GACf/H,KAAK+H,OAASA,EAAOe,IAAID,GACzB7I,KAAK2kB,WAAY,EACjB3kB,KAAK4kB,kBAAoB,GAG7BX,EAAOpjB,UAAUgmB,YAAc,WAAc7mB,KAAK8mB,WAElD7C,EAAOpjB,UAAUimB,QAAU,WACnB9mB,KAAKomB,uBACLpmB,KAAKomB,qBAAqBW,cAC1B/mB,KAAKomB,qBAAuB,OA8CpCnC,EAAOpjB,UAAUkQ,cAAgB,SAAU+J,EAAUkM,QACxB,IAArBA,IAA+BA,MACnC,IAAIC,EAAaD,EAAiBC,WAAYtc,EAAcqc,EAAiBrc,YAAaW,EAAW0b,EAAiB1b,SAAU4b,EAAsBF,EAAiBE,oBAAqBC,EAAsBH,EAAiBG,oBAAqBC,EAAmBJ,EAAiBI,iBACxRznB,EAAK0nB,aAAeH,GAAuB9B,SAAWA,QAAQkC,MAC9DlC,QAAQkC,KAAK,uEAEjB,IAAIte,EAAIie,GAAcjnB,KAAK6lB,YAAY9a,KACnCwc,EAAIH,EAAmBpnB,KAAKylB,eAAena,SAAWA,EACtDkc,EAAI,KACR,GAAIL,EACA,OAAQA,GACJ,IAAK,QACDK,EAAIzmB,KAAaf,KAAKylB,eAAe9a,YAAaA,GAClD,MACJ,IAAK,WACD6c,EAAIxnB,KAAKylB,eAAe9a,YACxB,MACJ,QACI6c,EAAI7c,GAAe,UAI3B6c,EAAIN,EAAsBlnB,KAAKylB,eAAe9a,YAAcA,GAAe,KAK/E,OAHU,OAAN6c,IACAA,EAAIxnB,KAAKynB,iBAAiBD;;;;;;;;AAnuCtC,SAASzW,EAAc/L,EAAO+K,EAAS+K,EAAUnQ,EAAaW,GAC1D,GAAwB,IAApBwP,EAASxZ,OACT,OAAO0L,GAAK+C,EAAQhF,KAAMgF,EAAQhF,KAAMgF,EAASpF,EAAaW,GAElE,IAAIoc,EAwDR,SAASC,EAAkB7M,GACvB,GAA4B,iBAAhBA,EAAS,IAAwC,IAApBA,EAASxZ,QAAgC,MAAhBwZ,EAAS,GACvE,OAAO,IAAIH,IAAW,EAAM,EAAGG,GAEnC,IAAID,EAAqB,EACrBD,GAAa,EACbtO,EAAMwO,EAAS5B,OAAO,SAAU5M,EAAKsb,EAAKC,GAC1C,GAAmB,iBAARD,GAA2B,MAAPA,EAAa,CACxC,GAAIA,EAAIzN,QAAS,CACb,IAAI2N,KAIJ,OAHAxe,EAAQse,EAAIzN,QAAS,SAAUW,EAAU1U,GACrC0hB,EAAU1hB,GAA4B,iBAAb0U,EAAwBA,EAAS7T,MAAM,KAAO6T,IAEpEtX,EAAS8I,IAAQ6N,QAAS2N,KAErC,GAAIF,EAAIxN,YACJ,OAAO5W,EAAS8I,GAAMsb,EAAIxN,cAGlC,MAAqB,iBAARwN,EACFpkB,EAAS8I,GAAMsb,IAEX,IAAXC,GACAD,EAAI3gB,MAAM,KAAKqC,QAAQ,SAAUye,EAASC,GACrB,GAAbA,GAA8B,MAAZD,IACA,GAAbC,GAA8B,KAAZD,EACvBnN,GAAa,EAEI,OAAZmN,EACLlN,IAEgB,IAAXkN,GACLzb,EAAIhJ,KAAKykB,MAGVzb,GAEJ9I,EAAS8I,GAAMsb,SAE1B,OAAO,IAAIjN,GAAWC,EAAYC,EAAoBvO,GA/F5Cqb,CAAkB7M,GAC5B,GAAI4M,EAAIzM,SACJ,OAAOjO,GAAK+C,EAAQhF,KAAM,IAAIW,SAAyBqE,EAASpF,EAAaW,GAEjF,IAAI2c,EAqGR,SAASC,EAAqBR,EAAK1a,EAAMhI,GACrC,GAAI0iB,EAAI9M,WACJ,OAAO,IAAIM,GAASlO,EAAKjC,MAAM,EAAM,GAEzC,IAAuC,IAAnC/F,EAAMI,SAASoU,eACf,OAAO,IAAI0B,GAASlW,EAAMI,SAASmU,aAAa,EAAM,GAE1D,IAAI4O,EAAWlO,GAAeyN,EAAI5M,SAAS,IAAM,EAAI,EAErD,OAEJ,SAASsN,EAAiCzV,EAAOtL,EAAOwT,GAIpD,IAHA,IAAIkB,EAAIpJ,EACJ0V,EAAKhhB,EACLihB,EAAKzN,EACFyN,EAAKD,GAAI,CAGZ,GAFAC,GAAMD,IACNtM,EAAIA,EAAEpQ,QAEF,MAAM,IAAIvD,MAAM,2BAEpBigB,EAAKtM,EAAEjV,SAASxF,OAEpB,OAAO,IAAI4Z,GAASa,GAAG,EAAOsM,EAAKC,GAd5BF,CAAiCpjB,EAAMI,SAASmU,YAD3CvU,EAAMI,SAASoU,eAAiB2O,EAC+BT,EAAI7M,oBA9GxDqN,CAAqBR,EAAK3X,EAAS/K,GACtD+B,EAAekhB,EAAiB9M,gBAChCI,GAA2B0M,EAAiBlhB,aAAckhB,EAAiB5gB,MAAOqgB,EAAI5M,UACtFO,GAAmB4M,EAAiBlhB,aAAckhB,EAAiB5gB,MAAOqgB,EAAI5M,UAClF,OAAO9N,GAAKib,EAAiBlhB,aAAcA,EAAcgJ,EAASpF,EAAaW,GAytCpEyF,CAAc/H,EAAGhJ,KAAKylB,eAAgB3K,EAAU0M,EAAGD,IA0B9DtD,EAAOpjB,UAAUqlB,cAAgB,SAAUpiB,EAAKykB,QAC7B,IAAXA,IAAqBA,GAAWC,oBAAoB,IACpD7oB,EAAK0nB,aAAernB,KAAKskB,kBAAoB3kB,EAAK4lB,OAAOkD,mBACzDzoB,KAAKolB,QAAQkC,KAAK,qFAEtB,IAAIvX,EAAUjM,aAAeuH,EAAUvH,EAAM9D,KAAKumB,SAASziB,GACvD4kB,EAAa1oB,KAAKglB,oBAAoBtB,MAAM3T,EAAS/P,KAAK2lB,YAC9D,OAAO3lB,KAAK0mB,mBAAmBgC,EAAY,aAAc,KAAMH,IA0BnEtE,EAAOpjB,UAAU8nB,SAAW,SAAU7N,EAAUyN,GAG5C,YAFe,IAAXA,IAAqBA,GAAWC,oBAAoB,IA6chE,SAASI,EAAiB9N,GACtB,IAAK,IAAI3Z,EAAI,EAAGA,EAAI2Z,EAASxZ,OAAQH,IAAK,CACtC,IAAIymB,EAAM9M,EAAS3Z,GACnB,GAAW,MAAPymB,EACA,MAAM,IAAIxf,MAAM,+BAAiCwf,EAAM,qBAAuBzmB;;;;;;;OAhdlFynB,CAAiB9N,GACV9a,KAAKkmB,cAAclmB,KAAK+Q,cAAc+J,EAAUyN,GAASA,IAGpEtE,EAAOpjB,UAAU8lB,aAAe,SAAU7iB,GAAO,OAAO9D,KAAKyQ,cAAchF,UAAU3H,IAErFmgB,EAAOpjB,UAAU0lB,SAAW,SAAUziB,GAClC,IAAIiM,EACJ,IACIA,EAAU/P,KAAKyQ,cAAc9D,MAAM7I,GAEvC,MAAOV,GACH2M,EAAU/P,KAAK0kB,yBAAyBthB,EAAGpD,KAAKyQ,cAAe3M,GAEnE,OAAOiM,GAGXkU,EAAOpjB,UAAUgoB,SAAW,SAAU/kB,EAAK2G,GACvC,GAAI3G,aAAeuH,EACf,OAAOf,EAAatK,KAAKylB,eAAgB3hB,EAAK2G,GAElD,IAAIsF,EAAU/P,KAAKumB,SAASziB,GAC5B,OAAOwG,EAAatK,KAAKylB,eAAgB1V,EAAStF,IAEtDwZ,EAAOpjB,UAAU4mB,iBAAmB,SAAUvhB,GAC1C,OAAO9F,OAAOqG,KAAKP,GAAQgT,OAAO,SAAUpP,EAAQlI,GAChD,IAAIqB,EAAQiD,EAAOtE,GAInB,OAHc,OAAVqB,QAA4ByM,IAAVzM,IAClB6G,EAAOlI,GAAOqB,GAEX6G,QAGfma,EAAOpjB,UAAUilB,mBAAqB,WAClC,IAAI7hB,EAAQjE,KACZA,KAAKokB,YACAza,KAAK9J,EAAU0d,UAAU,SAAUmK,GACpC,OAAIA,GACAzjB,EAAM6kB,2BAA2BpB,GAG1BA,EAAIqB,QAAQC,MAAM,eAGlBppB,EAAKyK,GAAG,SAGlBgc,UAAU,eAEnBpC,EAAOpjB,UAAU6lB,mBAAqB,SAAUuC,EAAQzC,EAAQ/hB,EAAO8jB,GACnE,IAAIW,EAAiBlpB,KAAKokB,YAAYnhB,MAItC,GAAIimB,GAA6B,eAAX1C,GAAqD,eAA1B0C,EAAe1C,QAC5D0C,EAAeD,OAAO/kB,aAAe+kB,EAAO/kB,WAC5C,OAAOiG,QAAQC,SAAQ,GAK3B,GAAI8e,GAA4B,cAAV1C,GAAoD,aAA1B0C,EAAe1C,QAC3D0C,EAAeD,OAAO/kB,aAAe+kB,EAAO/kB,WAC5C,OAAOiG,QAAQC,SAAQ,GAK3B,GAAI8e,GAA4B,YAAV1C,GAAkD,eAA1B0C,EAAe1C,QACzD0C,EAAeD,OAAO/kB,aAAe+kB,EAAO/kB,WAC5C,OAAOiG,QAAQC,SAAQ,GAE3B,IAAIA,EAAU,KACV+e,EAAS,KACTJ,EAAU,IAAI5e,QAAQ,SAAUmC,EAAK8c,GACrChf,EAAUkC,EACV6c,EAASC,IAETvlB,IAAO7D,KAAKqkB,aAIhB,OAHArkB,KAAKokB,YAAYphB,MAAOa,GAAIA,EAAI2iB,OAAQA,EAAQ/hB,MAAOA,EAAOwkB,OAAQA,EAAQV,OAAQA,EAAQne,QAASA,EAAS+e,OAAQA,EAAQJ,QAASA,IAGlIA,EAAQC,MAAM,SAAU5lB,GAAK,OAAO+G,QAAQgf,OAAO/lB,MAE9D6gB,EAAOpjB,UAAUioB,2BAA6B,SAAU3X,GACpD,IAAIlN,EAAQjE,KACR6D,EAAKsN,EAAGtN,GAAIolB,EAAS9X,EAAG8X,OAAQV,EAASpX,EAAGoX,OAAQne,EAAU+G,EAAG/G,QAAS+e,EAAShY,EAAGgY,OAAQ3C,EAASrV,EAAGqV,OAAQ/hB,EAAQ0M,EAAG1M,MAC7HX,EAAM9D,KAAKglB,oBAAoBvB,QAAQwF,GACvCI,GAAiBrpB,KAAK2kB,WAAa7gB,EAAII,aAAelE,KAAKylB,eAAevhB,YAC5C,WAA7BlE,KAAKklB,qBAA0CmE,IAChDrpB,KAAKglB,oBAAoBxB,iBAAiByF,IACX,UAA3BjpB,KAAKmlB,mBAAkCoD,EAAOC,oBAC9CxoB,KAAKspB,cAAcL,IAAUV,EAAOpC,WAAYtiB,GAEpD7D,KAAKukB,OACAvhB,KAAK,IAAIW,EAAgBE,EAAI7D,KAAK2mB,aAAa7iB,GAAM0iB,EAAQ/hB,IAClE0F,QAAQC,UACHmf,KAAK,SAAUzX,GAAK,OAAO7N,EAAMulB,YAAY1lB,EAAKmlB,IAAUV,EAAOC,qBAAsBD,EAAOpC,WAAYtiB,EAAI,QAChH0lB,KAAKnf,EAAS+e,IAIdE,GAAiBrpB,KAAK2lB,YAC3B3lB,KAAKglB,oBAAoBxB,iBAAiBxjB,KAAK2lB,aAC/C3lB,KAAKukB,OACAvhB,KAAK,IAAIW,EAAgBE,EAAI7D,KAAK2mB,aAAa7iB,GAAM0iB,EAAQ/hB,IAClE0F,QAAQC,UACHmf,KAAK,SAAUzX,GAAK,OAAO7N,EAAMulB,YAAY1lB,EAAKmlB,GAAQ,GAAO,EAAOplB,EAAI+T,GAAiB9T,EAAKG,EAAM4b,mBAAmBza,YAC3HmkB,KAAKnf,EAAS+e,KAGnBnpB,KAAK2lB,WAAasD,EAClB7e,EAAQ,QAGhB6Z,EAAOpjB,UAAU2oB,YAAc,SAAU1lB,EAAKmlB,EAAQT,EAAoBrC,EAAYtiB,EAAI4lB,GACtF,IAAIxlB,EAAQjE,KACZ,OAAI6D,IAAO7D,KAAKqkB,cACZrkB,KAAKukB,OACAvhB,KAAK,IAAIqB,EAAiBR,EAAI7D,KAAK2mB,aAAa7iB,GAAM,iBAAmBD,EAAK,8CAAgD7D,KAAKqkB,eACjIla,QAAQC,SAAQ,IAEpB,IAAID,QAAQ,SAAUuf,EAAgBC,GAGzC,IA4BIC,EA+CAC,GA1ECJ,EAaiB7pB,EAAKyK,IAAKyf,WAAYhmB,EAAKsB,SAAUqkB,IAn4EvE,SAASM,EAAexZ,EAAgBC,EAAcC,EAAeV,EAAShI,GAC1E,OAAO,IAAIuI,GAAeC,EAAgBC,EAAcC,EAAeV,EAAShI,GAAQvG,QAu3EpDuoB,CADH9lB,EAAM0M,SAASuC,SACmBjP,EAAMuM,aAAcvM,EAAMwM,cAAe3M,EAAKG,EAAM8D,QACvE4B,KAAK9J,EAAU4S,SAAS,SAAUqX,GAClE,OA/0BpB,SAAS/J,EAAUF,EAAmB9X,EAAQgI,EAASjM,EAAKgV,EAA2BgH,GAGnF,YAFkC,IAA9BhH,IAAwCA,EAA4B,kBACzC,IAA3BgH,IAAqCA,EAAyB,UAC3D,IAAIF,GAAWC,EAAmB9X,EAAQgI,EAASjM,EAAKgV,EAA2BgH,GACrFC,YA20BkBA,CAAU9b,EAAM4b,kBAAmB5b,EAAM8D,OAAQ+hB,EAAY7lB,EAAM0iB,aAAamD,GAAa7lB,EAAM6U,0BAA2B7U,EAAM6b,wBACtInW,KAAK9J,EAAUiJ,IAAI,SAAU1D,GAG9B,OAFAnB,EAAMsgB,OACDvhB,KAAK,IAAIwB,EAAiBX,EAAII,EAAM0iB,aAAa7iB,GAAMG,EAAM0iB,aAAamD,GAAa1kB,KACnF0kB,WAAYA,EAAY1kB,SAAUA,UAORuE,KAAK9J,EAAU4S,SAAS,SAAUjS,GAC7E,MAAiB,kBAANA,EACAZ,EAAKyK,GAAG7J,GACZyD,EAAM4gB,MACRC,oBAAoBtkB,EAAE4E,UACvBif,aAAcxgB,EACdmmB,eAAgBlmB,EAChB6hB,WAAYsD,EAAQT,mBAAoBA,EAAoBrC,WAAYA,IAEvExc,KAAK9J,EAAUiJ,IAAI,WAAc,OAAOtI,QAIEmJ,KAAK9J,EAAUiJ,IAAI,SAAUtI,GAC5E,GAAiB,kBAANA,EACP,OAAOA,EACX,IAAIspB,EAAatpB,EAAEspB,WAAY1kB,EAAW5E,EAAE4E,SAI5C,OAFAwkB,EAAgB,IAAIrN,GAAcnX,EAAUnB,EAAM4hB,YAAYzgB,SADzCnB,EAAM0M,SAASuC,SACoD,SAAU+W,GAAO,OAAOhmB,EAAM2hB,aAAaqE,MACrHrN,WAAW3Y,EAAMigB,eACtB4F,WAAYA,EAAY1kB,SAAUA,MAEKuE,KAAK9J,EAAU4S,SAAS,SAAUjS,GAClF,GAAiB,kBAANA,GAAmByD,EAAMogB,eAAiBxgB,EACjD,OAAOjE,EAAKyK,IAAG,GACnB,IAAIyf,EAAatpB,EAAEspB,WAAY1kB,EAAW5E,EAAE4E,SAE5C,OADAnB,EAAM2hB,aAAa,IAAIlhB,EAAiBb,EAAII,EAAM0iB,aAAa7iB,GAAMG,EAAM0iB,aAAamD,GAAa1kB,IAC9FwkB,EAAc5M,cAAcrT,KAAK9J,EAAUiJ,IAAI,SAAUlE,GAE5D,OADAX,EAAM2hB,aAAa,IAAIjhB,EAAed,EAAII,EAAM0iB,aAAa7iB,GAAMG,EAAM0iB,aAAamD,GAAa1kB,EAAUR,KACpGklB,WAAYA,EAAY1kB,SAAUA,EAAUR,eAAgBA,SAGnB+E,KAAK9J,EAAU4S,SAAS,SAAUjS,GACxF,MAAiB,kBAANA,GAAmByD,EAAMogB,eAAiBxgB,EAC1CjE,EAAKyK,IAAG,GACf7J,EAAEoE,gBAAkBglB,EAAc1M,gBAClCjZ,EAAM2hB,aAAa,IAAI/gB,EAAahB,EAAII,EAAM0iB,aAAa7iB,GAAMG,EAAM0iB,aAAanmB,EAAEspB,YAAatpB,EAAE4E,WAC9FwkB,EAActM,YAAYrZ,EAAM6U,2BAA2BnP,KAAK9J,EAAUiJ,IAAI,WAEjF,OADA7E,EAAM2hB,aAAa,IAAI9gB,EAAWjB,EAAII,EAAM0iB,aAAa7iB,GAAMG,EAAM0iB,aAAanmB,EAAEspB,YAAatpB,EAAE4E,WAC5F5E,MAIJZ,EAAKyK,GAAG7J,MAG4BmJ,KAAK9J,EAAU4S,SAAS,SAAUjS,GACjF,MAAiB,kBAANA,GAAmByD,EAAMogB,eAAiBxgB,EAC1CjE,EAAKyK,IAAG,GACZpG,EAAM4gB,MACRE,mBAAmBvkB,EAAE4E,UACtBif,aAAcxgB,EACdmmB,eAAgBlmB,EAChB6hB,WAAYsD,EAAQT,mBAAoBA,EAAoBrC,WAAYA,IAEvExc,KAAK9J,EAAUiJ,IAAI,WAAc,OAAOtI,QAIXmJ,KAAK9J,EAAUiJ,IAAI,SAAUtI,GAC/D,GAAiB,kBAANA,GAAmByD,EAAMogB,eAAiBxgB,EACjD,OAAO,EACX,IAAIimB,EAAatpB,EAAEspB,WAAmCllB,EAAiBpE,EAAEoE,eACzE,OAAIA,GAESklB,WAAYA,EAAYrlB,MAvjDrD,SAASylB,EAAkBjF,EAAoB9L,EAAMgR,GACjD,IAAIpf,EAGR,SAASqf,EAAWnF,EAAoB9L,EAAMgR,GAE1C,GAAIA,GAAalF,EAAmBvC,iBAAiBvJ,EAAKlW,MAAOknB,EAAUlnB,MAAMmC,UAAW,EACpFnC,EAAQknB,EAAUlnB,OAChByV,gBAAkBS,EAAKlW,MAC7B,IAAIqF,EA8BZ,SAAS+hB,EAAsBpF,EAAoB9L,EAAMgR,GACrD,OAAOhR,EAAK7Q,SAASQ,IAAI,SAAUyD,GAC/B,IAAI6J,EAAKjF,EACT,IACI,IAAK,IAAIiG,EAAKzU,EAASwnB,EAAU7hB,UAAW+O,EAAKD,EAAGpU,QAASqU,EAAGnU,KAAMmU,EAAKD,EAAGpU,OAAQ,CAClF,IAAIxC,EAAI6W,EAAGpU,MACX,GAAIgiB,EAAmBvC,iBAAiBliB,EAAEyC,MAAMmC,SAAUmH,EAAMtJ,OAC5D,OAAOmnB,EAAWnF,EAAoB1Y,EAAO/L,IAIzD,MAAOiW,GAASL,GAAQ7S,MAAOkT,GAC/B,QACI,IACQY,IAAOA,EAAGnU,OAASiO,EAAKiG,EAAG/C,SAASlD,EAAG5P,KAAK6V,GAEpD,QAAU,GAAIhB,EAAK,MAAMA,EAAI7S,OAEjC,OAAO6mB,EAAWnF,EAAoB1Y,KAhDvB8d,CAAsBpF,EAAoB9L,EAAMgR,GAC/D,OAAO,IAAI3S,GAASvU,EAAOqF,GAI3B,IAAIgiB,EAAsBrF,EAAmBxC,SAAStJ,EAAKlW,OAC3D,GAAIqnB,EAAqB,CACrB,IAAItd,EAAOsd,EAAoBtlB,MAE/B,OASZ,SAASulB,EAAoCpR,EAAMrP,GAC/C,GAAIqP,EAAKlW,MAAMoC,cAAgByE,EAAO7G,MAAMoC,YACxC,MAAM,IAAI+C,MAAM,yEAEpB,GAAI+Q,EAAK7Q,SAAShH,SAAWwI,EAAOxB,SAAShH,OACzC,MAAM,IAAI8G,MAAM,8EAEpB0B,EAAO7G,MAAMyV,gBAAkBS,EAAKlW,MACpC,IAAK,IAAI9B,EAAI,EAAGA,EAAIgY,EAAK7Q,SAAShH,SAAUH,EACxCopB,EAAoCpR,EAAK7Q,SAASnH,GAAI2I,EAAOxB,SAASnH,IAnBlEopB,CAAoCpR,EAAMnM,GACnCA,EAGP,IAAI/J,EAuChB,SAASunB,EAAqB1oB,GAC1B,OAAO,IAAIyW,GAAe,IAAI3Y,EAAKuY,gBAAgBrW,EAAEgC,KAAM,IAAIlE,EAAKuY,gBAAgBrW,EAAEoE,QAAS,IAAItG,EAAKuY,gBAAgBrW,EAAE6I,aAAc,IAAI/K,EAAKuY,gBAAgBrW,EAAEwJ,UAAW,IAAI1L,EAAKuY,gBAAgBrW,EAAE0W,MAAO1W,EAAE0G,OAAQ1G,EAAEuG,UAAWvG,GAxCnN0oB,CAAqBrR,EAAKlW,OAEtC,OADIqF,EAAW6Q,EAAK7Q,SAASQ,IAAI,SAAUhH,GAAK,OAAOsoB,EAAWnF,EAAoBnjB,KAC/E,IAAI0V,GAASvU,EAAOqF,GAtBxB8hB,CAAWnF,EAAoB9L,EAAKxC,MAAOwT,EAAYA,EAAUxT,WAAQjH,GACpF,OAAO,IAAIgI,GAAY3M,EAAMoO,GAojDD+Q,CAAkBjmB,EAAMghB,mBAFEzkB,EAAE4E,SAE0BnB,EAAM4hB,aACzBjhB,eAAgBA,IAGtDklB,WAAYA,EAAYrlB,MAAO,KAAMG,eAAgBA,MAGtEX,EAAMwmB,eAAeZ,EAAc5lB,EAAM4hB,YAAa5hB,EAAMwhB,eAAgB5hB,EAAIC,EAAKmlB,EAAQT,EAAoBrC,EAAYuD,EAAgBC,MAOrJ1F,EAAOpjB,UAAU4pB,eAAiB,SAAUhmB,EAAOimB,EAAaC,EAAW9mB,EAAIC,EAAKmlB,EAAQT,EAAoBrC,EAAYuD,EAAgBC,GACxI,IAGIiB,EAHA3mB,EAAQjE,KAIZyE,EACK6E,QAAQ,SAAU9I,GACnB,GAAiB,kBAANA,GAAoBA,EAAEoE,gBAAkBf,IAAOI,EAAMogB,cAAiB7jB,EAAEiE,MAAnF,CAIA,IAA+BA,EAAQjE,EAAEiE,MACzCR,EAAMwhB,eADWjlB,EAAEspB,WAEnB7lB,EAAM0hB,WAAa1hB,EAAM+gB,oBAAoBtB,MAAMzf,EAAMwhB,eAAgBwD,GACzEhlB,EAAM4hB,YAAcphB,EACY,aAA5BR,EAAMkhB,mBAAqCqD,GAC3CvkB,EAAMqlB,cAAcrlB,EAAM0hB,WAAYQ,EAAYtiB,GAEtD,IAAIgnB,GAAe5mB,EAAMghB,mBAAoBxgB,EAAOimB,EAAa,SAAUT,GAAO,OAAOhmB,EAAM2hB,aAAaqE,KACvGa,SAAS7mB,EAAMigB,cACpB0G,GAAyB,OAZrBA,GAAyB,IAc5BrB,KAAK,WACFqB,GACA3mB,EAAM0gB,WAAY,EAClB1gB,EAAM2gB,iBAAmB/gB,EACzBI,EAAMsgB,OACDvhB,KAAK,IAAImB,EAAcN,EAAII,EAAM0iB,aAAa7iB,GAAMG,EAAM0iB,aAAa1iB,EAAMwhB,kBAClFiE,GAAe,KAGfzlB,EAAM8mB,2BACN9mB,EAAMsgB,OACDvhB,KAAK,IAAIqB,EAAiBR,EAAII,EAAM0iB,aAAa7iB,GAAM,KAC5D4lB,GAAe,KAEpB,SAAUtmB,GACT,GAxyGZ,SAAS4nB,EAA2BznB,GAChC,OAAOA,GAASA,EAAgC,2BAuyGpCynB,CAA2B5nB,GAC3Ba,EAAM0gB,WAAY,EAClB1gB,EAAMgnB,iBAAiBP,EAAaC,EAAW1B,GAC/ChlB,EAAMsgB,OACDvhB,KAAK,IAAIqB,EAAiBR,EAAII,EAAM0iB,aAAa7iB,GAAMV,EAAEgS,UAC9DsU,GAAe,OAEd,CACDzlB,EAAMgnB,iBAAiBP,EAAaC,EAAW1B,GAC/ChlB,EAAMsgB,OACDvhB,KAAK,IAAIuB,EAAgBV,EAAII,EAAM0iB,aAAa7iB,GAAMV,IAC3D,IACIsmB,EAAezlB,EAAMwgB,aAAarhB,IAEtC,MAAO8nB,GACHvB,EAAcuB,QAK9BjH,EAAOpjB,UAAUyoB,cAAgB,SAAUxlB,EAAKqiB,EAAYtiB,GACxD,IAAIoB,EAAOjF,KAAKyQ,cAAchF,UAAU3H,GACpC9D,KAAKmkB,SAASgH,qBAAqBlmB,IAASkhB,EAC5CnmB,KAAKmkB,SAASiH,aAAanmB,EAAM,IAAMof,aAAcxgB,IAGrD7D,KAAKmkB,SAASkH,GAAGpmB,EAAM,IAAMof,aAAcxgB,KAGnDogB,EAAOpjB,UAAUoqB,iBAAmB,SAAUP,EAAaC,EAAW1B,GAClEjpB,KAAK6lB,YAAc6E,EACnB1qB,KAAKylB,eAAiBkF,EACtB3qB,KAAK2lB,WAAa3lB,KAAKglB,oBAAoBtB,MAAM1jB,KAAKylB,eAAgBwD,GACtEjpB,KAAK+qB,4BAET9G,EAAOpjB,UAAUkqB,yBAA2B,WACxC/qB,KAAKmkB,SAASiH,aAAaprB,KAAKyQ,cAAchF,UAAUzL,KAAK2lB,YAAa,IAAMtB,aAAcrkB,KAAK4kB,oBAEhGX,EAjlBgB,GAmlBvB4G,GAAgC,WAChC,SAASA,EAAe5F,EAAoBqG,EAAaC,EAAW9O,GAChEzc,KAAKilB,mBAAqBA,EAC1BjlB,KAAKsrB,YAAcA,EACnBtrB,KAAKurB,UAAYA,EACjBvrB,KAAKyc,aAAeA,EA+IxB,OA7IAoO,EAAehqB,UAAUiqB,SAAW,SAAUjO,GAC1C,IAAIC,EAAa9c,KAAKsrB,YAAY3U,MAC9B6U,EAAWxrB,KAAKurB,UAAYvrB,KAAKurB,UAAU5U,MAAQ,KACvD3W,KAAKyrB,sBAAsB3O,EAAY0O,EAAU3O,GACjDlD,GAAsB3Z,KAAKsrB,YAAYvgB,MACvC/K,KAAK0rB,oBAAoB5O,EAAY0O,EAAU3O,IAGnDgO,EAAehqB,UAAU4qB,sBAAwB,SAAU/N,EAAYC,EAAUC,GAC7E,IAAI3Z,EAAQjE,KACRsI,EAAWmP,GAAkBkG,GAEjCD,EAAWpV,SAASgB,QAAQ,SAAUqiB,GAClC,IAAIC,EAAkBD,EAAY1oB,MAAMuF,OACxCvE,EAAM4nB,iBAAiBF,EAAarjB,EAASsjB,GAAkBhO,UACxDtV,EAASsjB,KAGpBtiB,EAAQhB,EAAU,SAAUhC,EAAGgY,GAC3Bra,EAAM+Z,8BAA8B1X,EAAGsX,MAG/CiN,EAAehqB,UAAUgrB,iBAAmB,SAAUnO,EAAYC,EAAUmO,GACxE,IAAItP,EAASkB,EAAWza,MACpBkW,EAAOwE,EAAWA,EAAS1a,MAAQ,KACvC,GAAIuZ,IAAWrD,EAEX,GAAIqD,EAAOnU,UAAW,CAElB,IAAI6V,EAAU4N,EAAc7N,WAAWzB,EAAOhU,QAC1C0V,GACAle,KAAKyrB,sBAAsB/N,EAAYC,EAAUO,EAAQ5V,eAK7DtI,KAAKyrB,sBAAsB/N,EAAYC,EAAUmO,QAIjD3S,GAEAnZ,KAAKge,8BAA8BL,EAAUmO,IAIzDjB,EAAehqB,UAAUmd,8BAAgC,SAAUhZ,EAAO6X,GAClE7c,KAAKilB,mBAAmB5C,aAAard,EAAM/B,MAAMmC,UACjDpF,KAAK+rB,2BAA2B/mB,EAAO6X,GAGvC7c,KAAKgsB,yBAAyBhnB,EAAO6X,IAG7CgO,EAAehqB,UAAUkrB,2BAA6B,SAAU/mB,EAAO6X,GACnE,IAAIqB,EAAUrB,EAAeoB,WAAWjZ,EAAM/B,MAAMuF,QACpD,GAAI0V,GAAWA,EAAQ1V,OAAQ,CAC3B,IAAIyjB,EAAe/N,EAAQ1V,OAAO0jB,SAC9BtO,EAAWM,EAAQ5V,SAAS6jB,sBAChCnsB,KAAKilB,mBAAmB3C,MAAMtd,EAAM/B,MAAMmC,UAAY6mB,aAAcA,EAAcjnB,MAAOA,EAAO4Y,SAAUA,MAGlHiN,EAAehqB,UAAUmrB,yBAA2B,SAAUhnB,EAAO6X,GACjE,IAAI5Y,EAAQjE,KACRke,EAAUrB,EAAeoB,WAAWjZ,EAAM/B,MAAMuF,QACpD,GAAI0V,EAAS,CACT,IAAI5V,EAAWmP,GAAkBzS,GAC7BonB,EAAapnB,EAAM/B,MAAMoF,UAAY6V,EAAQ5V,SAAWuU,EAC5DvT,EAAQhB,EAAU,SAAUhC,EAAGsF,GAAK,OAAO3H,EAAM+Z,8BAA8B1X,EAAG8lB,KAC9ElO,EAAQ1V,SAER0V,EAAQ1V,OAAO6jB,aAEfnO,EAAQ5V,SAAS6jB,yBAI7BtB,EAAehqB,UAAU6qB,oBAAsB,SAAUhO,EAAYC,EAAUC,GAC3E,IAAI3Z,EAAQjE,KACRsI,EAAWmP,GAAkBkG,GACjCD,EAAWpV,SAASgB,QAAQ,SAAUxH,GAClCmC,EAAMwmB,eAAe3oB,EAAGwG,EAASxG,EAAEmB,MAAMuF,QAASoV,GAClD3Z,EAAMwY,aAAa,IAAIjX,EAAc1D,EAAEmB,MAAMmC,aAE7CsY,EAAWpV,SAAShH,QACpBtB,KAAKyc,aAAa,IAAInX,EAAmBoY,EAAWza,MAAMmC,YAGlEylB,EAAehqB,UAAU4pB,eAAiB,SAAU/M,EAAYC,EAAUd,GACtE,IAAIL,EAASkB,EAAWza,MACpBkW,EAAOwE,EAAWA,EAAS1a,MAAQ,KAGvC,GAFA0W,GAAsB6C,GAElBA,IAAWrD,EACX,GAAIqD,EAAOnU,UAAW,CAElB,IAAI6V,EAAUrB,EAAeyP,mBAAmB9P,EAAOhU,QACvDxI,KAAK0rB,oBAAoBhO,EAAYC,EAAUO,EAAQ5V,eAIvDtI,KAAK0rB,oBAAoBhO,EAAYC,EAAUd,QAInD,GAAIL,EAAOnU,UAGP,GADI6V,EAAUrB,EAAeyP,mBAAmB9P,EAAOhU,QACnDxI,KAAKilB,mBAAmBzC,aAAahG,EAAOpX,UAAW,CACvD,IAAImnB,EAASvsB,KAAKilB,mBAAmBxC,SAASjG,EAAOpX,UACrDpF,KAAKilB,mBAAmB3C,MAAM9F,EAAOpX,SAAU,MAC/C8Y,EAAQ5V,SAASkkB,mBAAmBD,EAAO3O,UAC3CM,EAAQuO,UAAYF,EAAON,aAC3B/N,EAAQlZ,MAAQunB,EAAOvnB,MAAM/B,MACzBib,EAAQ1V,QAGR0V,EAAQ1V,OAAOkkB,OAAOH,EAAON,aAAcM,EAAOvnB,MAAM/B,OAE5D0pB,GAAwCJ,EAAOvnB,WAE9C,CACD,IAAI+C,EAyBxB,SAAS6kB,EAAmBxnB,GACxB,IAAK,IAAIlE,EAAIkE,EAASuG,OAAQzK,EAAGA,EAAIA,EAAEyK,OAAQ,CAC3C,IAAI3G,EAAQ9D,EAAEmE,YACd,GAAIL,GAASA,EAAMoO,cACf,OAAOpO,EAAMoO,cACjB,GAAIpO,GAASA,EAAMqD,UACf,OAAO,KAEf,OAAO,KAjCsBukB,CAAmBpQ,EAAOpX,UACnCynB,EAAqB9kB,EAASA,EAAO1I,OAAOytB,yBAA2B,KAC3E5O,EAAQuO,UAAY,KACpBvO,EAAQlZ,MAAQwX,EAChB0B,EAAQsB,SAAWqN,EACf3O,EAAQ1V,QAGR0V,EAAQ1V,OAAOukB,aAAavQ,EAAQqQ,GAExC7sB,KAAK0rB,oBAAoBhO,EAAY,KAAMQ,EAAQ5V,eAKvDtI,KAAK0rB,oBAAoBhO,EAAY,KAAMb,IAIhDgO,EApJwB,GAsJnC,SAAS8B,GAAwCxV,GAC7CwC,GAAsBxC,EAAKlU,OAC3BkU,EAAK7O,SAASgB,QAAQqjB,IAqG1B,IAAIK,GAA4B,WAC5B,SAASA,EAAWttB,EAAQsF,EAAOioB,EAAUC,EAAUC,GACnDntB,KAAKN,OAASA,EACdM,KAAKgF,MAAQA,EACbhF,KAAK8a,YACW,MAAZmS,GACAC,EAASE,aAAaD,EAAGE,cAAe,WAAY,KA+F5D,OA5FAjtB,OAAO+B,eAAe6qB,EAAWnsB,UAAW,cACxCysB,IAAK,SAAUxS,GAEP9a,KAAK8a,SADO,MAAZA,EACgBva,MAAMgG,QAAQuU,GAAYA,GAAYA,OAM9DpU,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAe6qB,EAAWnsB,UAAW,uBAIxCysB,IAAK,SAAUrqB,GACPtD,EAAK0nB,aAAejC,SAAWA,QAAQkC,MACvClC,QAAQkC,KAAK,wEAEjBtnB,KAAKutB,SAAWtqB,GAEpByD,YAAY,EACZC,cAAc,IAElBqmB,EAAWnsB,UAAU2sB,QAAU,WAC3B,IAAIjF,GACAC,mBAAoBiF,GAAcztB,KAAKwoB,oBACvCrC,WAAYsH,GAAcztB,KAAKmmB,aAGnC,OADAnmB,KAAKN,OAAOwmB,cAAclmB,KAAK+P,QAASwY,IACjC,GAEXnoB,OAAO+B,eAAe6qB,EAAWnsB,UAAW,WACxCwF,IAAK,WACD,OAAOrG,KAAKN,OAAOqR,cAAc/Q,KAAK8a,UAClCmM,WAAYjnB,KAAKgF,MACjB2F,YAAa3K,KAAK2K,YAClBW,SAAUtL,KAAKsL,SACf4b,oBAAqBuG,GAAcztB,KAAKutB,UACxCpG,oBAAqBnnB,KAAKmnB,oBAC1BC,iBAAkBqG,GAAcztB,KAAKonB,qBAG7C1gB,YAAY,EACZC,cAAc,IAElBlF,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAenC,SAC3B4sB,EAAWnsB,UAAW,mBAAe,GACxCY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeorB,SAC3BX,EAAWnsB,UAAW,gBAAY,GACrCY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeorB,SAC3BX,EAAWnsB,UAAW,2BAAuB,GAChDY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,UAC3BZ,EAAWnsB,UAAW,wBAAoB,GAC7CY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,UAC3BZ,EAAWnsB,UAAW,0BAAsB,GAC/CY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,UAC3BZ,EAAWnsB,UAAW,kBAAc,GACvCY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAenC,QAC1BmC,EAAW,qBAAsBnC,UAClC4sB,EAAWnsB,UAAW,aAAc,MACvCY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,SAC1BrrB,EAAW,qBAAsBqrB,WAClCZ,EAAWnsB,UAAW,sBAAuB,MAChDY,GACI9B,EAAKkuB,aAAa,SAClBtrB,EAAW,cAAeurB,UAC1BvrB,EAAW,wBACXA,EAAW,oBAAqBqrB,UACjCZ,EAAWnsB,UAAW,UAAW,MACvBY,GACT9B,EAAKouB,WAAYC,SAAU,wBAC3B5rB,EAAQ,EAAGzC,EAAKsuB,UAAU,aAC1B1rB,EAAW,qBAAsB0hB,GAAQ1L,GAAgBoV,OAAQhuB,EAAKuuB,UAAWvuB,EAAKwuB,cACvFnB,GApGwB,GAkH3BoB,GAAoC,WACpC,SAASA,EAAmB1uB,EAAQsF,EAAOqpB,GACvC,IAAIpqB,EAAQjE,KACZA,KAAKN,OAASA,EACdM,KAAKgF,MAAQA,EACbhF,KAAKquB,iBAAmBA,EACxBruB,KAAK8a,YACL9a,KAAKsuB,aAAe5uB,EAAO6kB,OAAO8B,UAAU,SAAUnlB,GAC9CA,aAAaiD,GACbF,EAAMsqB,2BAgHlB,OA5GAnuB,OAAO+B,eAAeisB,EAAmBvtB,UAAW,cAChDysB,IAAK,SAAUxS,GAEP9a,KAAK8a,SADO,MAAZA,EACgBva,MAAMgG,QAAQuU,GAAYA,GAAYA,OAM9DpU,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAeisB,EAAmBvtB,UAAW,uBAChDysB,IAAK,SAAUrqB,GACPtD,EAAK0nB,aAAejC,SAAWA,QAAQkC,MACvClC,QAAQkC,KAAK,uEAEjBtnB,KAAKutB,SAAWtqB,GAEpByD,YAAY,EACZC,cAAc,IAElBynB,EAAmBvtB,UAAU2tB,YAAc,SAAUC,GAAWzuB,KAAKuuB,0BACrEH,EAAmBvtB,UAAUgmB,YAAc,WAAc7mB,KAAKsuB,aAAavH,eAC3EqH,EAAmBvtB,UAAU2sB,QAAU,SAAUkB,EAAQC,EAASC,EAASC,GACvE,GAAe,IAAXH,GAAgBC,GAAWC,GAAWC,EACtC,OAAO,EAEX,GAA2B,iBAAhB7uB,KAAK2B,QAAsC,SAAf3B,KAAK2B,OACxC,OAAO,EAEX,IAAI4mB,GACAC,mBAAoBiF,GAAcztB,KAAKwoB,oBACvCrC,WAAYsH,GAAcztB,KAAKmmB,aAGnC,OADAnmB,KAAKN,OAAOwmB,cAAclmB,KAAK+P,QAASwY,IACjC,GAEX6F,EAAmBvtB,UAAU0tB,uBAAyB,WAClDvuB,KAAK8uB,KAAO9uB,KAAKquB,iBAAiBU,mBAAmB/uB,KAAKN,OAAOinB,aAAa3mB,KAAK+P,WAEvF3P,OAAO+B,eAAeisB,EAAmBvtB,UAAW,WAChDwF,IAAK,WACD,OAAOrG,KAAKN,OAAOqR,cAAc/Q,KAAK8a,UAClCmM,WAAYjnB,KAAKgF,MACjB2F,YAAa3K,KAAK2K,YAClBW,SAAUtL,KAAKsL,SACf4b,oBAAqBuG,GAAcztB,KAAKutB,UACxCpG,oBAAqBnnB,KAAKmnB,oBAC1BC,iBAAkBqG,GAAcztB,KAAKonB,qBAG7C1gB,YAAY,EACZC,cAAc,IAElBlF,GACI9B,EAAKqvB,YAAY,eAAgBrvB,EAAK+tB,QACtCnrB,EAAW,cAAeorB,SAC3BS,EAAmBvtB,UAAW,cAAU,GAC3CY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAenC,SAC3BguB,EAAmBvtB,UAAW,mBAAe,GAChDY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeorB,SAC3BS,EAAmBvtB,UAAW,gBAAY,GAC7CY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeorB,SAC3BS,EAAmBvtB,UAAW,2BAAuB,GACxDY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,UAC3BQ,EAAmBvtB,UAAW,wBAAoB,GACrDY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,UAC3BQ,EAAmBvtB,UAAW,0BAAsB,GACvDY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,UAC3BQ,EAAmBvtB,UAAW,kBAAc,GAC/CY,GACI9B,EAAKqvB,cACLzsB,EAAW,cAAeorB,SAC3BS,EAAmBvtB,UAAW,YAAQ,GACzCY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAenC,QAC1BmC,EAAW,qBAAsBnC,UAClCguB,EAAmBvtB,UAAW,aAAc,MAC/CY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAeqrB,SAC1BrrB,EAAW,qBAAsBqrB,WAClCQ,EAAmBvtB,UAAW,sBAAuB,MACxDY,GACI9B,EAAKkuB,aAAa,SAAU,gBAAiB,iBAAkB,iBAAkB,oBACjFtrB,EAAW,cAAeurB,UAC1BvrB,EAAW,qBAAsB0sB,OAAQrB,QAASA,QAASA,UAC3DrrB,EAAW,oBAAqBqrB,UACjCQ,EAAmBvtB,UAAW,UAAW,MACvBY,GACjB9B,EAAKouB,WAAYC,SAAU,kBAC3BzrB,EAAW,qBAAsB0hB,GAAQ1L,GACrCzY,EAAOovB,oBACZd,GAxHgC,GA2HvC,SAASX,GAAcvsB,GACnB,MAAa,KAANA,KAAcA;;;;;;;OAmEzB,IAAIiuB,GAAkC,WAClC,SAASA,EAAiBzvB,EAAQ0vB,EAASlC,EAAUmC,GACjD,IAAIprB,EAAQjE,KACZA,KAAKN,OAASA,EACdM,KAAKovB,QAAUA,EACfpvB,KAAKktB,SAAWA,EAChBltB,KAAKqvB,IAAMA,EACXrvB,KAAKsvB,WACLtvB,KAAK6oB,UAAW,EAChB7oB,KAAKuvB,yBAA4B9kB,OAAO,GACxCzK,KAAKsuB,aAAe5uB,EAAO6kB,OAAO8B,UAAU,SAAUnlB,GAC9CA,aAAaiD,GACbF,EAAMurB,WA0ElB,OAtEAL,EAAiBtuB,UAAU4uB,mBAAqB,WAC5C,IAAIxrB,EAAQjE,KACZA,KAAK0vB,MAAMjB,QAAQpI,UAAU,SAAUvU,GAAK,OAAO7N,EAAMurB,WACzDxvB,KAAK2vB,eAAelB,QAAQpI,UAAU,SAAUvU,GAAK,OAAO7N,EAAMurB,WAClExvB,KAAKwvB,UAETpvB,OAAO+B,eAAegtB,EAAiBtuB,UAAW,oBAC9CysB,IAAK,SAAU9U,GACX,IAAI8W,EAAU/uB,MAAMgG,QAAQiS,GAAQA,EAAOA,EAAKvR,MAAM,KACtDjH,KAAKsvB,QAAUA,EAAQrY,OAAO,SAAUnV,GAAK,QAASA,KAE1D4E,YAAY,EACZC,cAAc,IAElBwoB,EAAiBtuB,UAAU2tB,YAAc,SAAUC,GAAWzuB,KAAKwvB,UACnEL,EAAiBtuB,UAAUgmB,YAAc,WAAc7mB,KAAKsuB,aAAavH,eACzEoI,EAAiBtuB,UAAU2uB,OAAS,WAChC,IAAIvrB,EAAQjE,KACPA,KAAK0vB,OAAU1vB,KAAK2vB,gBAAmB3vB,KAAKN,OAAOilB,WAExDxa,QAAQC,UAAUmf,KAAK,WACnB,IAAIqG,EAAiB3rB,EAAM2rB,iBACvB3rB,EAAM4kB,WAAa+G,IACnB3rB,EAAM4kB,SAAW+G,EACjB3rB,EAAMqrB,QAAQhmB,QAAQ,SAAUxH,GACxB8tB,EACA3rB,EAAMipB,SAAS2C,SAAS5rB,EAAMmrB,QAAQ/B,cAAevrB,GAGrDmC,EAAMipB,SAAS4C,YAAY7rB,EAAMmrB,QAAQ/B,cAAevrB,SAM5EqtB,EAAiBtuB,UAAUkvB,aAAe,SAAUrwB,GAChD,IAAIuE,EAAQjE,KACZ,OAAO,SAAUgwB,GACb,OAAOtwB,EAAOmpB,SAASmH,EAAKjgB,QAAS9L,EAAMsrB,wBAAwB9kB,SAG3E0kB,EAAiBtuB,UAAU+uB,eAAiB,WACxC,OAAO5vB,KAAK0vB,MAAM9b,KAAK5T,KAAK+vB,aAAa/vB,KAAKN,UAC1CM,KAAK2vB,eAAe/b,KAAK5T,KAAK+vB,aAAa/vB,KAAKN,UAExD+B,GACI9B,EAAKswB,gBAAgBjD,IAAckD,aAAa,IAChD3tB,EAAW,cAAe5C,EAAKwwB,YAChChB,EAAiBtuB,UAAW,aAAS,GACxCY,GACI9B,EAAKswB,gBAAgB7B,IAAsB8B,aAAa,IACxD3tB,EAAW,cAAe5C,EAAKwwB,YAChChB,EAAiBtuB,UAAW,sBAAkB,GACjDY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAenC,SAC3B+uB,EAAiBtuB,UAAW,+BAA2B,GAC1DY,GACI9B,EAAK+tB,QACLnrB,EAAW,cAAenC,QAC1BmC,EAAW,qBAAsBnC,UAClC+uB,EAAiBtuB,UAAW,mBAAoB,MAChCY,GACf9B,EAAKouB,WACDC,SAAU,qBACVoC,SAAU,qBAEd7tB,EAAW,qBAAsB0hB,GAAQtkB,EAAKwuB,WAAYxuB,EAAKuuB,UAC3DvuB,EAAK0wB,qBACVlB,GArF8B,GAqGjCmB,GACA,SAASA,KACLtwB,KAAKwI,OAAS,KACdxI,KAAKgF,MAAQ,KACbhF,KAAKwf,SAAW,KAChBxf,KAAKsI,SAAW,IAAIioB,GACpBvwB,KAAKysB,UAAY,MASrB8D,GAAwC,WACxC,SAASA,IAELvwB,KAAK4d,SAAW,IAAI4S,IAsCxB,OAnCAD,EAAuB1vB,UAAU4vB,qBAAuB,SAAUnS,EAAW9V,GACzE,IAAI0V,EAAUle,KAAKssB,mBAAmBhO,GACtCJ,EAAQ1V,OAASA,EACjBxI,KAAK4d,SAAS0P,IAAIhP,EAAWJ,IAOjCqS,EAAuB1vB,UAAU6vB,uBAAyB,SAAUpS,GAChE,IAAIJ,EAAUle,KAAKie,WAAWK,GAC1BJ,IACAA,EAAQ1V,OAAS,OAOzB+nB,EAAuB1vB,UAAUsrB,oBAAsB,WACnD,IAAIvO,EAAW5d,KAAK4d,SAEpB,OADA5d,KAAK4d,SAAW,IAAI4S,IACb5S,GAEX2S,EAAuB1vB,UAAU2rB,mBAAqB,SAAU5O,GAAY5d,KAAK4d,SAAWA,GAC5F2S,EAAuB1vB,UAAUyrB,mBAAqB,SAAUhO,GAC5D,IAAIJ,EAAUle,KAAKie,WAAWK,GAK9B,OAJKJ,IACDA,EAAU,IAAIoS,GACdtwB,KAAK4d,SAAS0P,IAAIhP,EAAWJ,IAE1BA,GAEXqS,EAAuB1vB,UAAUod,WAAa,SAAUK,GAAa,OAAOte,KAAK4d,SAASvX,IAAIiY,IAAc,MACrGiS,EAzCgC,GA0EvCI,GAA8B,WAC9B,SAASA,EAAa9T,EAAgBsH,EAAU3E,EAAUpZ,EAAMwqB,GAC5D5wB,KAAK6c,eAAiBA,EACtB7c,KAAKmkB,SAAWA,EAChBnkB,KAAKwf,SAAWA,EAChBxf,KAAK4wB,eAAiBA,EACtB5wB,KAAK+X,UAAY,KACjB/X,KAAK6wB,gBAAkB,KACvB7wB,KAAK8wB,eAAiB,IAAInxB,EAAKoxB,aAC/B/wB,KAAKgxB,iBAAmB,IAAIrxB,EAAKoxB,aACjC/wB,KAAKoG,KAAOA,GAAQJ,EACpB6W,EAAe4T,qBAAqBzwB,KAAKoG,KAAMpG,MAiHnD,OA/GA2wB,EAAa9vB,UAAUgmB,YAAc,WAAc7mB,KAAK6c,eAAe6T,uBAAuB1wB,KAAKoG,OACnGuqB,EAAa9vB,UAAUowB,SAAW,WAC9B,IAAKjxB,KAAK+X,UAAW,CAGjB,IAAImG,EAAUle,KAAK6c,eAAeoB,WAAWje,KAAKoG,MAC9C8X,GAAWA,EAAQlZ,QACfkZ,EAAQuO,UAERzsB,KAAK0sB,OAAOxO,EAAQuO,UAAWvO,EAAQlZ,OAIvChF,KAAK+sB,aAAa7O,EAAQlZ,MAAOkZ,EAAQsB,UAAY,SAKrEpf,OAAO+B,eAAewuB,EAAa9vB,UAAW,eAC1CwF,IAAK,WAAc,QAASrG,KAAK+X,WACjCrR,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAewuB,EAAa9vB,UAAW,aAC1CwF,IAAK,WACD,IAAKrG,KAAK+X,UACN,MAAM,IAAI3P,MAAM,2BACpB,OAAOpI,KAAK+X,UAAUmZ,UAE1BxqB,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAewuB,EAAa9vB,UAAW,kBAC1CwF,IAAK,WACD,IAAKrG,KAAK+X,UACN,MAAM,IAAI3P,MAAM,2BACpB,OAAOpI,KAAK6wB,iBAEhBnqB,YAAY,EACZC,cAAc,IAElBvG,OAAO+B,eAAewuB,EAAa9vB,UAAW,sBAC1CwF,IAAK,WACD,OAAIrG,KAAK6wB,gBACE7wB,KAAK6wB,gBAAgBzrB,SAASoT,SAI7C9R,YAAY,EACZC,cAAc,IAKlBgqB,EAAa9vB,UAAUqrB,OAAS,WAC5B,IAAKlsB,KAAK+X,UACN,MAAM,IAAI3P,MAAM,2BACpBpI,KAAKmkB,SAAS+H,SACd,IAAIiF,EAAMnxB,KAAK+X,UAGf,OAFA/X,KAAK+X,UAAY,KACjB/X,KAAK6wB,gBAAkB,KAChBM,GAKXR,EAAa9vB,UAAU6rB,OAAS,SAAU0E,EAAKC,GAC3CrxB,KAAK+X,UAAYqZ,EACjBpxB,KAAK6wB,gBAAkBQ,EACvBrxB,KAAKmkB,SAASmN,OAAOF,EAAIG,WAE7BZ,EAAa9vB,UAAUwrB,WAAa,WAChC,GAAIrsB,KAAK+X,UAAW,CAChB,IAAIjW,EAAI9B,KAAKqI,UACbrI,KAAK+X,UAAUyZ,UACfxxB,KAAK+X,UAAY,KACjB/X,KAAK6wB,gBAAkB,KACvB7wB,KAAKgxB,iBAAiBS,KAAK3vB,KAGnC6uB,EAAa9vB,UAAUksB,aAAe,SAAUsE,EAAgB7R,GAC5D,GAAIxf,KAAKue,YACL,MAAM,IAAInW,MAAM,+CAEpBpI,KAAK6wB,gBAAkBQ,EAIvB,IAAIlyB,GADJqgB,EAAWA,GAAYxf,KAAKwf,UACLkS,wBAHRL,EAAe3Y,gBACLrT,YAAYgD,WAGjCspB,EAAgB3xB,KAAK6c,eAAeyP,mBAAmBtsB,KAAKoG,MAAMkC,SAClE4K,EAAW,IAAI0e,GAAeP,EAAgBM,EAAe3xB,KAAKmkB,SAASjR,UAC/ElT,KAAK+X,UAAY/X,KAAKmkB,SAAS0N,gBAAgB1yB,EAASa,KAAKmkB,SAAS7iB,OAAQ4R,GAG9ElT,KAAK4wB,eAAekB,eACpB9xB,KAAK8wB,eAAeW,KAAKzxB,KAAK+X,UAAUmZ,WAE5CzvB,GACI9B,EAAKoyB,OAAO,YACZxvB,EAAW,cAAenC,SAC3BuwB,EAAa9vB,UAAW,sBAAkB,GAC7CY,GACI9B,EAAKoyB,OAAO,cACZxvB,EAAW,cAAenC,SAC3BuwB,EAAa9vB,UAAW,wBAAoB,GAChCY,GACX9B,EAAKouB,WAAYC,SAAU,gBAAiBoC,SAAU,WACtDhuB,EAAQ,EAAGzC,EAAKsuB,UAAU,SAC1B1rB,EAAW,qBAAsBguB,GAAwB5wB,EAAKqyB,iBAC1DryB,EAAKsyB,yBAA0BtE,OAAQhuB,EAAK0wB,qBACjDM,GA3H0B,GA8H7BiB,GAAgC,WAChC,SAASA,EAAe5sB,EAAO2sB,EAAehmB,GAC1C3L,KAAKgF,MAAQA,EACbhF,KAAK2xB,cAAgBA,EACrB3xB,KAAK2L,OAASA,EAWlB,OATAimB,EAAe/wB,UAAUwF,IAAM,SAAUoZ,EAAOyS,GAC5C,OAAIzS,IAAUlH,GACHvY,KAAKgF,MAEZya,IAAU8Q,GACHvwB,KAAK2xB,cAET3xB,KAAK2L,OAAOtF,IAAIoZ,EAAOyS,IAE3BN,EAfwB,GAgC/BO,GACA,SAASA,OAeTC,GAAmC,WACnC,SAASA,KAKT,OAHAA,EAAkBvxB,UAAUwxB,QAAU,SAAUrtB,EAAOqH,GACnD,OAAOA,IAAK1C,KAAK9J,EAAUmR,WAAW,WAAc,OAAOpR,EAAKyK,GAAG,UAEhE+nB,EAN2B,GAiBlCE,GAA8B,WAC9B,SAASA,KAGT,OADAA,EAAazxB,UAAUwxB,QAAU,SAAUrtB,EAAOqH,GAAM,OAAOzM,EAAKyK,GAAG,OAChEioB,EAJsB,GAkB7BC,GAAiC,WACjC,SAASA,EAAgB7yB,EAAQ8yB,EAAczP,EAAU7P,EAAUuf,GAC/DzyB,KAAKN,OAASA,EACdM,KAAKkT,SAAWA,EAChBlT,KAAKyyB,mBAAqBA,EAG1BzyB,KAAK8iB,OAAS,IAAID,GAAmB2P,EAAczP,EAFjC,SAAUhhB,GAAK,OAAOrC,EAAOkmB,aAAa,IAAI7gB,EAAqBhD,KACrE,SAAUA,GAAK,OAAOrC,EAAOkmB,aAAa,IAAI1gB,EAAmBnD,MA+DrF,OA5DAwwB,EAAgB1xB,UAAU6xB,gBAAkB,WACxC,IAAIzuB,EAAQjE,KACZA,KAAKsuB,aACDtuB,KAAKN,OAAO6kB,OACP5a,KAAK9J,EAAUoX,OAAO,SAAU7T,GAAK,OAAOA,aAAae,IAAmBtE,EAAU0d,UAAU,WAAc,OAAOtZ,EAAMouB,aAC3HhM,UAAU,eAEvBkM,EAAgB1xB,UAAUwxB,QAAU,WAChC,IAAI1hB,EAAW3Q,KAAKkT,SAAS7M,IAAI1G,EAAKiR,aACtC,OAAO5Q,KAAK2yB,cAAchiB,EAAU3Q,KAAKN,OAAOqI,SAKpDwqB,EAAgB1xB,UAAUgmB,YAAc,WAAc7mB,KAAKsuB,aAAavH,eACxEwL,EAAgB1xB,UAAU8xB,cAAgB,SAAUhiB,EAAU9I,GAC1D,IAAIuO,EAAKjF,EACL7E,KACJ,IACI,IAAK,IAAImI,EAAW9R,EAASkF,GAAS6M,EAAaD,EAASzR,QAAS0R,EAAWxR,KAAMwR,EAAaD,EAASzR,OAAQ,CAChH,IAAIgC,EAAQ0P,EAAWzR,MAEvB,GAAI+B,EAAMuD,eAAiBvD,EAAM8P,SAAW9P,EAAMoO,cAAe,CAC7D,IAAIK,EAAczO,EAAMoO,cACxB9G,EAAIhJ,KAAKtD,KAAK2yB,cAAclf,EAAYpU,OAAQoU,EAAY5L,cAGvD7C,EAAMuD,eAAiBvD,EAAM8P,QAClCxI,EAAIhJ,KAAKtD,KAAK4yB,cAAcjiB,EAAU3L,IAGjCA,EAAMsD,UACXgE,EAAIhJ,KAAKtD,KAAK2yB,cAAchiB,EAAU3L,EAAMsD,YAIxD,MAAOmO,GAASL,GAAQ7S,MAAOkT,GAC/B,QACI,IACQ/B,IAAeA,EAAWxR,OAASiO,EAAKsD,EAASJ,SAASlD,EAAG5P,KAAKkT,GAE1E,QAAU,GAAI2B,EAAK,MAAMA,EAAI7S,OAEjC,OAAO3D,EAAKsK,KAAKoC,GAAK3C,KAAK9J,EAAU+J,WAAY/J,EAAUiJ,IAAI,SAAUgJ,QAE7EygB,EAAgB1xB,UAAU+xB,cAAgB,SAAUjiB,EAAU3L,GAC1D,IAAIf,EAAQjE,KACZ,OAAOA,KAAKyyB,mBAAmBJ,QAAQrtB,EAAO,WAE1C,OADcf,EAAM6e,OAAO7P,KAAKtC,EAASuC,SAAUlO,GACpC2E,KAAK9J,EAAU4S,SAAS,SAAU1K,GAE7C,OADA/C,EAAMoO,cAAgBrL,EACf9D,EAAM0uB,cAAc5qB,EAAO1I,OAAQ0I,EAAOF,cAI3CpG,GACd9B,EAAKkzB,aACLtwB,EAAW,qBAAsB0hB,GAAQtkB,EAAKmzB,sBAAuBnzB,EAAKozB,SACtEpzB,EAAKqzB,SAAUb,MACpBI,GApE6B,GA+EhCU,GAAgC,WAChC,SAASA,EAAevzB,EACAwzB,EAAkBC,QACtB,IAAZA,IAAsBA,MAC1BnzB,KAAKN,OAASA,EACdM,KAAKkzB,iBAAmBA,EACxBlzB,KAAKmzB,QAAUA,EACfnzB,KAAKozB,OAAS,EACdpzB,KAAKqzB,WAAa,aAClBrzB,KAAKszB,WAAa,EAClBtzB,KAAKsiB,SAEL6Q,EAAQI,0BAA4BJ,EAAQI,2BAA6B,WACzEJ,EAAQK,gBAAkBL,EAAQK,iBAAmB,WA+DzD,OA7DAP,EAAepyB,UAAU4yB,KAAO,WAImB,aAA3CzzB,KAAKmzB,QAAQI,2BACbvzB,KAAKkzB,iBAAiBQ,4BAA4B,UAEtD1zB,KAAK2zB,yBAA2B3zB,KAAK4zB,qBACrC5zB,KAAK6zB,yBAA2B7zB,KAAK8zB,uBAEzCb,EAAepyB,UAAU+yB,mBAAqB,WAC1C,IAAI3vB,EAAQjE,KACZ,OAAOA,KAAKN,OAAO6kB,OAAO8B,UAAU,SAAUjjB,GACtCA,aAAaO,GAEbM,EAAMqe,MAAMre,EAAMmvB,QAAUnvB,EAAMivB,iBAAiBa,oBACnD9vB,EAAMovB,WAAajwB,EAAEW,kBACrBE,EAAMqvB,WAAalwB,EAAEY,cAAgBZ,EAAEY,cAAcqgB,aAAe,GAE/DjhB,aAAae,IAClBF,EAAMmvB,OAAShwB,EAAES,GACjBI,EAAM+vB,oBAAoB5wB,EAAGa,EAAMvE,OAAO6mB,SAASnjB,EAAEgB,mBAAmBkH,cAIpF2nB,EAAepyB,UAAUizB,oBAAsB,WAC3C,IAAI7vB,EAAQjE,KACZ,OAAOA,KAAKN,OAAO6kB,OAAO8B,UAAU,SAAUjjB,GACpCA,aAAaqC,IAGfrC,EAAEuC,SAC8C,QAA5C1B,EAAMkvB,QAAQI,0BACdtvB,EAAMivB,iBAAiBe,kBAAkB,EAAG,IAEK,YAA5ChwB,EAAMkvB,QAAQI,2BACnBtvB,EAAMivB,iBAAiBe,iBAAiB7wB,EAAEuC,UAK1CvC,EAAEwC,QAA4C,YAAlC3B,EAAMkvB,QAAQK,gBAC1BvvB,EAAMivB,iBAAiBgB,eAAe9wB,EAAEwC,QAES,aAA5C3B,EAAMkvB,QAAQI,2BACnBtvB,EAAMivB,iBAAiBe,kBAAkB,EAAG,QAK5DhB,EAAepyB,UAAUmzB,oBAAsB,SAAUtuB,EAAaE,GAClE5F,KAAKN,OAAOkmB,aAAa,IAAIngB,EAAOC,EAAiC,aAApB1F,KAAKqzB,WAA4BrzB,KAAKsiB,MAAMtiB,KAAKszB,YAAc,KAAM1tB,KAE1HqtB,EAAepyB,UAAUgmB,YAAc,WAC/B7mB,KAAK2zB,0BACL3zB,KAAK2zB,yBAAyB5M,cAE9B/mB,KAAK6zB,0BACL7zB,KAAK6zB,yBAAyB9M,eAG/BkM,EA5EwB,GA6F/BkB,IAAqBxD,GAAc3D,GAAYoB,GAAoBe,GAAkBtpB,GAQrFuuB,GAAuB,IAAIz0B,EAAKijB,eAAe,wBAI/CyR,GAAuB,IAAI10B,EAAKijB,eAAe,wBAC/C0R,IACAx0B,EAAOy0B,UACLC,QAAS/nB,GAAegoB,SAAU/nB,KAEhC8nB,QAASvQ,GACTyQ,WAAYC,GACZC,MACIj1B,EAAKk1B,eAAgBpoB,GAAe8jB,GAAwBzwB,EAAOy0B,SAAU50B,EAAKqzB,SAClFrzB,EAAKmzB,sBAAuBnzB,EAAKozB,SAAUpQ,GAAQyR,IAClD9Q,GAAqB,IAAI3jB,EAAKm1B,WAAc3S,GAAoB,IAAIxiB,EAAKm1B,YAGlFvE,IACEiE,QAASjc,GAAgBmc,WAAYK,GAAWH,MAAO3Q,MACvDuQ,QAAS70B,EAAKmzB,sBAAuB2B,SAAU90B,EAAKq1B,wBACtDzC,GACAD,GACAF,IACEoC,QAASJ,GAAsBa,UAAYC,eAAe;;;;;;;OAEhE,SAASC,KACL,OAAO,IAAIx1B,EAAKy1B,aAAa,SAAUnR,IAqD3C,IAAIoR,GAA8B,WAE9B,SAASA,EAAargB,EAAOtV,IA2D7B,IAAI41B,EAUJ,OAnEAA,EAAiBD,EAiBjBA,EAAaE,QAAU,SAAU1tB,EAAQE,GACrC,OACI4I,SAAU2kB,EACVE,WACIlB,GACAmB,GAAc5tB,IAEV2sB,QAASH,GACTK,WAAYgB,GACZd,OAAQ3Q,GAAQ,IAAItkB,EAAKm1B,SAAY,IAAIn1B,EAAKg2B,aAEhDnB,QAASJ,GAAsBa,SAAUltB,QAEvCysB,QAAS10B,EAAOovB,iBAChBwF,WAAYkB,GACZhB,MACI90B,EAAO+1B,kBAAmB,IAAIl2B,EAAKm2B,OAAOh2B,EAAOi2B,eAAgB,IAAIp2B,EAAKm1B,UAAaV,MAI3FI,QAASvB,GACTyB,WAAYsB,GACZpB,MAAO3Q,GAAQnkB,EAAOm2B,iBAAkB7B,MAGxCI,QAASrC,GACT+D,YAAanuB,GAAUA,EAAO0qB,mBAAqB1qB,EAAO0qB,mBACtDH,KAENkC,QAAS70B,EAAKy1B,aAAce,OAAO,EAAMzB,WAAYS,IACvDiB,QAOZf,EAAagB,SAAW,SAAUxuB,GAC9B,OAAS8I,SAAU2kB,EAAgBE,WAAYC,GAAc5tB,MAGlDytB,EAAiB7zB,GAC5B9B,EAAK22B,UACDC,aAAcpC,GACd/0B,QAAS+0B,GACTqC,iBAAkB3wB,KAEtBzD,EAAQ,EAAGzC,EAAKm1B,YAAa1yB,EAAQ,EAAGzC,EAAKm2B,OAAOzB,KAAwBjyB,EAAQ,EAAGzC,EAAKm1B,YAC5FvyB,EAAW,qBAAsBnC,OAAQ6jB,MAC1CoR,GAtE0B,GAyEjC,SAASW,GAAqBt2B,EAAQwzB,EAAkBnrB,GAIpD,OAHIA,EAAO0uB,cACPvD,EAAiBwD,UAAU3uB,EAAO0uB,cAE/B,IAAIxD,GAAevzB,EAAQwzB,EAAkBnrB,GAExD,SAAS6tB,GAAwBe,EAA0BC,EAAUzD,GAEjE,YADgB,IAAZA,IAAsBA,MACnBA,EAAQ0D,QAAU,IAAI/2B,EAAOg3B,qBAAqBH,EAA0BC,GAC/E,IAAI92B,EAAOi3B,qBAAqBJ,EAA0BC,GAElE,SAASlB,GAAoBh2B,GACzB,GAAIA,EACA,MAAM,IAAI0I,MAAM,wGAEpB,MAAO,UAoBX,SAASqtB,GAAc5tB,GACnB,QACM2sB,QAAS70B,EAAKq3B,6BAA8Bb,OAAO,EAAMlB,SAAUptB,IACnE2sB,QAAS7R,GAAQwT,OAAO,EAAMlB,SAAUptB,IAGlD,SAAS8sB,GAAYvD,EAAK3gB,EAAemN,EAAUuG,EAAUjR,EAAU4P,EAAQC,EAAUhb,EAAQkvB,EAAMjS,EAAqBC,QAC3G,IAATgS,IAAmBA,MACvB,IAAIv3B,EAAS,IAAIukB,GAAO,KAAMxT,EAAemN,EAAUuG,EAAUjR,EAAU4P,EAAQC,EAAU5Z,EAAQpB,IAarG,GAZIid,IACAtlB,EAAOslB,oBAAsBA,GAE7BC,IACAvlB,EAAOulB,mBAAqBA,GAE5BgS,EAAKxS,eACL/kB,EAAO+kB,aAAewS,EAAKxS,cAE3BwS,EAAKvS,2BACLhlB,EAAOglB,yBAA2BuS,EAAKvS,0BAEvCuS,EAAK/B,cAAe,CACpB,IAAIgC,EAAQn3B,EAAgBo3B,UAC5Bz3B,EAAO6kB,OAAO8B,UAAU,SAAUjjB,GAC9B8zB,EAAME,SAAS,iBAAmBh0B,EAAExC,YAAYwF,MAChD8wB,EAAMG,IAAIj0B,EAAEc,YACZgzB,EAAMG,IAAIj0B,GACV8zB,EAAMI,gBAed,OAZIL,EAAK/R,sBACLxlB,EAAOwlB,oBAAsB+R,EAAK/R,qBAElC+R,EAAKne,4BACLpZ,EAAOoZ,0BAA4Bme,EAAKne,2BAExCme,EAAK9R,oBACLzlB,EAAOylB,kBAAoB8R,EAAK9R,mBAEhC8R,EAAKnX,yBACLpgB,EAAOogB,uBAAyBmX,EAAKnX,wBAElCpgB,EAEX,SAASq1B,GAAUr1B,GACf,OAAOA,EAAOmmB,YAAY9a,KAa9B,IAAIwsB,GAAmC,WACnC,SAASA,EAAkBrkB,GACvBlT,KAAKkT,SAAWA,EAChBlT,KAAKw3B,gBAAiB,EACtBx3B,KAAKy3B,0BAA4B,IAAI73B,EAAK4kB,QAsE9C,OApEA+S,EAAkB12B,UAAU62B,eAAiB,WACzC,IAAIzzB,EAAQjE,KAEZ,OADQA,KAAKkT,SAAS7M,IAAIvG,EAAO63B,qBAAsBxtB,QAAQC,QAAQ,OAC9Dmf,KAAK,WACV,IAAInf,EAAU,KACVkC,EAAM,IAAInC,QAAQ,SAAUpI,GAAK,OAAOqI,EAAUrI,IAClDrC,EAASuE,EAAMiP,SAAS7M,IAAI4d,IAC5BgT,EAAOhzB,EAAMiP,SAAS7M,IAAI+tB,IAC9B,GAAInwB,EAAM2zB,iBAAiBX,IAAShzB,EAAM4zB,gBAAgBZ,GACtD7sB,GAAQ,QAEP,GAA+B,aAA3B6sB,EAAKjR,kBACVtmB,EAAOumB,8BACP7b,GAAQ,OAEP,CAAA,GAA+B,YAA3B6sB,EAAKjR,kBAgBV,MAAM,IAAI5d,MAAM,uCAAyC6uB,EAAKjR,kBAAoB,KAflFtmB,EAAOmlB,MAAME,mBAAqB,WAE9B,OAAK9gB,EAAMuzB,eAOA53B,EAAKyK,GAAG,OANfpG,EAAMuzB,gBAAiB,EACvBptB,GAAQ,GACDnG,EAAMwzB,4BAOrB/3B,EAAOsmB,oBAKX,OAAO1Z,KAGfirB,EAAkB12B,UAAUi3B,kBAAoB,SAAUC,GACtD,IAAId,EAAOj3B,KAAKkT,SAAS7M,IAAI+tB,IACzB4D,EAAYh4B,KAAKkT,SAAS7M,IAAIksB,IAC9B0F,EAAiBj4B,KAAKkT,SAAS7M,IAAI4sB,IACnCvzB,EAASM,KAAKkT,SAAS7M,IAAI4d,IAC3BmN,EAAMpxB,KAAKkT,SAAS7M,IAAI1G,EAAKk1B,gBAC7BkD,IAA6B3G,EAAI8G,WAAW,KAG5Cl4B,KAAK63B,gBAAgBZ,GACrBv3B,EAAOsmB,oBAEFhmB,KAAK43B,iBAAiBX,IAC3Bv3B,EAAOumB,8BAEX+R,EAAUtF,kBACVuF,EAAexE,OACf/zB,EAAOqmB,uBAAuBqL,EAAI+G,eAAe,IACjDn4B,KAAKy3B,0BAA0Bz0B,KAAK,MACpChD,KAAKy3B,0BAA0BW,aAEnCb,EAAkB12B,UAAUg3B,gBAAkB,SAAUZ,GACpD,MAAkC,mBAA3BA,EAAKjR,oBAAqE,IAA3BiR,EAAKjR,wBAC5BtW,IAA3BunB,EAAKjR,mBAEbuR,EAAkB12B,UAAU+2B,iBAAmB,SAAUX,GACrD,MAAkC,oBAA3BA,EAAKjR,oBAAsE,IAA3BiR,EAAKjR,mBAE5CvkB,GAChB9B,EAAKkzB,aACLtwB,EAAW,qBAAsB5C,EAAKqzB,YACvCuE,GAzE+B,GA4EtC,SAASc,GAAkBt2B,GACvB,OAAOA,EAAE21B,eAAeY,KAAKv2B,GAEjC,SAASw2B,GAAqBx2B,GAC1B,OAAOA,EAAE+1B,kBAAkBQ,KAAKv2B,GAOpC,IAAIy2B,GAAqB,IAAI74B,EAAKijB,eAAe,sBACjD,SAASwT,KACL,OACImB,IAEI/C,QAAS70B,EAAK84B,gBACdtC,OAAO,EACPzB,WAAY2D,GACZzD,MAAO2C,MAET/C,QAASgE,GAAoB9D,WAAY6D,GAAsB3D,MAAO2C,MACtE/C,QAAS70B,EAAK+4B,uBAAwBvC,OAAO,EAAMD,YAAasC;;;;;;;OAW1E,IAAIG,GAAU,IAAIh5B,EAAKi5B,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuC/Bx5B,EAAQy5B,kCAAoCxE,GAC5Cj1B,EAAQ05B,kCAAoCvB,GAC5Cn4B,EAAQ25B,kCAAoC/C,GAC5C52B,EAAQ45B,kCAAoCX,GAC5Cj5B,EAAQ65B,kCAAoCV,GAC5Cn5B,EAAQ85B,kCAAoCxD,GAC5Ct2B,EAAQ+5B,kCAAoCvD,GAC5Cx2B,EAAQg6B,kCAAoChD,GAC5Ch3B,EAAQi6B,kCAAoCtE,GAC5C31B,EAAQk6B,kCAAoCnE,GAC5C/1B,EAAQm6B,kCAAoC5E,GAC5Cv1B,EAAQo6B,kCAAoCvG,GAC5C7zB,EAAQq6B,kCAAoC/iB,GAC5CtX,EAAQs6B,kCAAoCliB,GAC5CpY,EAAQ4tB,WAAaA,GACrB5tB,EAAQgvB,mBAAqBA,GAC7BhvB,EAAQ+vB,iBAAmBA,GAC3B/vB,EAAQuxB,aAAeA,GACvBvxB,EAAQoG,cAAgBA,EACxBpG,EAAQmG,gBAAkBA,EAC1BnG,EAAQkG,mBAAqBA,EAC7BlG,EAAQ+F,qBAAuBA,EAC/B/F,EAAQuF,eAAiBA,EACzBvF,EAAQsF,iBAAmBA,EAC3BtF,EAAQiF,iBAAmBA,EAC3BjF,EAAQ+E,cAAgBA,EACxB/E,EAAQmF,gBAAkBA,EAC1BnF,EAAQuE,gBAAkBA,EAC1BvE,EAAQ0F,WAAaA,EACrB1F,EAAQyF,aAAeA,EACvBzF,EAAQ8F,mBAAqBA,EAC7B9F,EAAQ2F,qBAAuBA,EAC/B3F,EAAQsE,YAAcA,EACtBtE,EAAQoF,iBAAmBA,EAC3BpF,EAAQqG,OAASA,EACjBrG,EAAQ+iB,mBAAqBA,GAC7B/iB,EAAQ6kB,OAASA,GACjB7kB,EAAQujB,OAASA,GACjBvjB,EAAQg1B,qBAAuBA,GAC/Bh1B,EAAQo5B,mBAAqBA,GAC7Bp5B,EAAQi2B,aAAeA,GACvBj2B,EAAQq2B,cAAgBA,GACxBr2B,EAAQmxB,uBAAyBA,GACjCnxB,EAAQkxB,cAAgBA,GACxBlxB,EAAQkzB,aAAeA,GACvBlzB,EAAQgzB,kBAAoBA,GAC5BhzB,EAAQ+yB,mBAAqBA,GAC7B/yB,EAAQmzB,gBAAkBA,GAC1BnzB,EAAQmZ,eAAiBA,GACzBnZ,EAAQ4Y,uBAAyBA,GACjC5Y,EAAQsY,YAAcA,GACtBtY,EAAQ6Y,oBAAsBA,GAC9B7Y,EAAQ4G,eAAiBA,EACzB5G,EAAQwH,kBAAoBA,EAC5BxH,EAAQkkB,oBAAsBA,GAC9BlkB,EAAQsN,qBAAuBA,GAC/BtN,EAAQ0M,WAAaA,EACrB1M,EAAQsM,gBAAkBA,EAC1BtM,EAAQqN,cAAgBA,GACxBrN,EAAQiM,QAAUA,EAClBjM,EAAQu5B,QAAUA,GAClBv5B,EAAQu6B,sBAAwB9zB,EAChCzG,EAAQw6B,kBAAoBtF,GAC5Bl1B,EAAQy6B,SAAW1wB,EAEnB/I,OAAO+B,eAAe/C,EAAS,cAAgB6D,OAAO","sourcesContent":["/**\n * @license Angular v6.1.9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/platform-browser'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.ng.common,global.ng.platformBrowser));\n}(this, (function (exports,core,rxjs,operators,common,platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Base for events the Router goes through, as opposed to events tied to a specific\n     * Route. `RouterEvent`s will only be fired one time for any given navigation.\n     *\n     * Example:\n     *\n     * ```\n     * class MyService {\n     *   constructor(public router: Router, logger: Logger) {\n     *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n     *       logger.log(e.id, e.url);\n     *     });\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var RouterEvent = /** @class */ (function () {\n        function RouterEvent(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url) {\n            this.id = id;\n            this.url = url;\n        }\n        return RouterEvent;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation starts.\n     *\n     *\n     */\n    var NavigationStart = /** @class */ (function (_super) {\n        __extends(NavigationStart, _super);\n        function NavigationStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        navigationTrigger, \n        /** @docsNotRequired */\n        restoredState) {\n            if (navigationTrigger === void 0) { \n            /** @docsNotRequired */\n            navigationTrigger = 'imperative'; }\n            if (restoredState === void 0) { \n            /** @docsNotRequired */\n            restoredState = null; }\n            var _this = _super.call(this, id, url) || this;\n            _this.navigationTrigger = navigationTrigger;\n            _this.restoredState = restoredState;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation ends successfully.\n     *\n     *\n     */\n    var NavigationEnd = /** @class */ (function (_super) {\n        __extends(NavigationEnd, _super);\n        function NavigationEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationEnd.prototype.toString = function () {\n            return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n        };\n        return NavigationEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation is canceled.\n     *\n     *\n     */\n    var NavigationCancel = /** @class */ (function (_super) {\n        __extends(NavigationCancel, _super);\n        function NavigationCancel(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        reason) {\n            var _this = _super.call(this, id, url) || this;\n            _this.reason = reason;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n        return NavigationCancel;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when a navigation fails due to an unexpected error.\n     *\n     *\n     */\n    var NavigationError = /** @class */ (function (_super) {\n        __extends(NavigationError, _super);\n        function NavigationError(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        error) {\n            var _this = _super.call(this, id, url) || this;\n            _this.error = error;\n            return _this;\n        }\n        /** @docsNotRequired */\n        NavigationError.prototype.toString = function () {\n            return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n        };\n        return NavigationError;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered when routes are recognized.\n     *\n     *\n     */\n    var RoutesRecognized = /** @class */ (function (_super) {\n        __extends(RoutesRecognized, _super);\n        function RoutesRecognized(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        /** @docsNotRequired */\n        RoutesRecognized.prototype.toString = function () {\n            return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return RoutesRecognized;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckStart = /** @class */ (function (_super) {\n        __extends(GuardsCheckStart, _super);\n        function GuardsCheckStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        GuardsCheckStart.prototype.toString = function () {\n            return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return GuardsCheckStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Guard phase of routing.\n     *\n     * @experimental\n     */\n    var GuardsCheckEnd = /** @class */ (function (_super) {\n        __extends(GuardsCheckEnd, _super);\n        function GuardsCheckEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state, \n        /** @docsNotRequired */\n        shouldActivate) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            _this.shouldActivate = shouldActivate;\n            return _this;\n        }\n        GuardsCheckEnd.prototype.toString = function () {\n            return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n        };\n        return GuardsCheckEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the start of the Resolve phase of routing. The timing of this\n     * event may change, thus it's experimental. In the current iteration it will run\n     * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n     * behavior may change to only run when there are things to be resolved.\n     *\n     * @experimental\n     */\n    var ResolveStart = /** @class */ (function (_super) {\n        __extends(ResolveStart, _super);\n        function ResolveStart(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveStart.prototype.toString = function () {\n            return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveStart;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents the end of the Resolve phase of routing. See note on\n     * `ResolveStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ResolveEnd = /** @class */ (function (_super) {\n        __extends(ResolveEnd, _super);\n        function ResolveEnd(\n        /** @docsNotRequired */\n        id, \n        /** @docsNotRequired */\n        url, \n        /** @docsNotRequired */\n        urlAfterRedirects, \n        /** @docsNotRequired */\n        state) {\n            var _this = _super.call(this, id, url) || this;\n            _this.urlAfterRedirects = urlAfterRedirects;\n            _this.state = state;\n            return _this;\n        }\n        ResolveEnd.prototype.toString = function () {\n            return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n        };\n        return ResolveEnd;\n    }(RouterEvent));\n    /**\n     * @description\n     *\n     * Represents an event triggered before lazy loading a route config.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadStart = /** @class */ (function () {\n        function RouteConfigLoadStart(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents an event triggered when a route has been lazy loaded.\n     *\n     * @experimental\n     */\n    var RouteConfigLoadEnd = /** @class */ (function () {\n        function RouteConfigLoadEnd(\n        /** @docsNotRequired */\n        route) {\n            this.route = route;\n        }\n        RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n        return RouteConfigLoadEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationStart = /** @class */ (function () {\n        function ChildActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationStart(path: '\" + path + \"')\";\n        };\n        return ChildActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ChildActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ChildActivationEnd = /** @class */ (function () {\n        function ChildActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ChildActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ChildActivationEnd(path: '\" + path + \"')\";\n        };\n        return ChildActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationEnd` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationStart = /** @class */ (function () {\n        function ActivationStart(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationStart.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationStart(path: '\" + path + \"')\";\n        };\n        return ActivationStart;\n    }());\n    /**\n     * @description\n     *\n     * Represents the start of end of the Resolve phase of routing. See note on\n     * `ActivationStart` for use of this experimental API.\n     *\n     * @experimental\n     */\n    var ActivationEnd = /** @class */ (function () {\n        function ActivationEnd(\n        /** @docsNotRequired */\n        snapshot) {\n            this.snapshot = snapshot;\n        }\n        ActivationEnd.prototype.toString = function () {\n            var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n            return \"ActivationEnd(path: '\" + path + \"')\";\n        };\n        return ActivationEnd;\n    }());\n    /**\n     * @description\n     *\n     * Represents a scrolling event.\n     */\n    var Scroll = /** @class */ (function () {\n        function Scroll(\n        /** @docsNotRequired */\n        routerEvent, \n        /** @docsNotRequired */\n        position, \n        /** @docsNotRequired */\n        anchor) {\n            this.routerEvent = routerEvent;\n            this.position = position;\n            this.anchor = anchor;\n        }\n        Scroll.prototype.toString = function () {\n            var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n            return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n        };\n        return Scroll;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This component is used internally within the router to be a placeholder when an empty\n     * router-outlet is needed. For example, with a config such as:\n     *\n     * `{path: 'parent', outlet: 'nav', children: [...]}`\n     *\n     * In order to render, there needs to be a component on this config, which will default\n     * to this `EmptyOutletComponent`.\n     */\n    var EmptyOutletComponent = /** @class */ (function () {\n        function EmptyOutletComponent() {\n        }\n        EmptyOutletComponent = __decorate([\n            core.Component({ template: \"<router-outlet></router-outlet>\" })\n        ], EmptyOutletComponent);\n        return EmptyOutletComponent;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Name of the primary outlet.\n     *\n     *\n     */\n    var PRIMARY_OUTLET = 'primary';\n    var ParamsAsMap = /** @class */ (function () {\n        function ParamsAsMap(params) {\n            this.params = params || {};\n        }\n        ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n        ParamsAsMap.prototype.get = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v[0] : v;\n            }\n            return null;\n        };\n        ParamsAsMap.prototype.getAll = function (name) {\n            if (this.has(name)) {\n                var v = this.params[name];\n                return Array.isArray(v) ? v : [v];\n            }\n            return [];\n        };\n        Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n            get: function () { return Object.keys(this.params); },\n            enumerable: true,\n            configurable: true\n        });\n        return ParamsAsMap;\n    }());\n    /**\n     * Convert a `Params` instance to a `ParamMap`.\n     *\n     *\n     */\n    function convertToParamMap(params) {\n        return new ParamsAsMap(params);\n    }\n    var NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n    function navigationCancelingError(message) {\n        var error = Error('NavigationCancelingError: ' + message);\n        error[NAVIGATION_CANCELING_ERROR] = true;\n        return error;\n    }\n    function isNavigationCancelingError(error) {\n        return error && error[NAVIGATION_CANCELING_ERROR];\n    }\n    // Matches the route configuration (`route`) against the actual URL (`segments`).\n    function defaultUrlMatcher(segments, segmentGroup, route) {\n        var parts = route.path.split('/');\n        if (parts.length > segments.length) {\n            // The actual URL is shorter than the config, no match\n            return null;\n        }\n        if (route.pathMatch === 'full' &&\n            (segmentGroup.hasChildren() || parts.length < segments.length)) {\n            // The config is longer than the actual URL but we are looking for a full match, return null\n            return null;\n        }\n        var posParams = {};\n        // Check each config part against the actual URL\n        for (var index = 0; index < parts.length; index++) {\n            var part = parts[index];\n            var segment = segments[index];\n            var isParameter = part.startsWith(':');\n            if (isParameter) {\n                posParams[part.substring(1)] = segment;\n            }\n            else if (part !== segment.path) {\n                // The actual URL part does not match the config, no match\n                return null;\n            }\n        }\n        return { consumed: segments.slice(0, parts.length), posParams: posParams };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LoadedRouterConfig = /** @class */ (function () {\n        function LoadedRouterConfig(routes, module) {\n            this.routes = routes;\n            this.module = module;\n        }\n        return LoadedRouterConfig;\n    }());\n    function validateConfig(config, parentPath) {\n        if (parentPath === void 0) { parentPath = ''; }\n        // forEach doesn't iterate undefined values\n        for (var i = 0; i < config.length; i++) {\n            var route = config[i];\n            var fullPath = getFullPath(parentPath, route);\n            validateNode(route, fullPath);\n        }\n    }\n    function validateNode(route, fullPath) {\n        if (!route) {\n            throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n        }\n        if (Array.isArray(route)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n        }\n        if (!route.component && !route.children && !route.loadChildren &&\n            (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n        }\n        if (route.redirectTo && route.children) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n        }\n        if (route.redirectTo && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n        }\n        if (route.children && route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n        }\n        if (route.redirectTo && route.component) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n        }\n        if (route.path && route.matcher) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n        }\n        if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n        }\n        if (route.path === void 0 && route.matcher === void 0) {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n        }\n        if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n        }\n        if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n            var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n            throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n        }\n        if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n            throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n        }\n        if (route.children) {\n            validateConfig(route.children, fullPath);\n        }\n    }\n    function getFullPath(parentPath, currentRoute) {\n        if (!currentRoute) {\n            return parentPath;\n        }\n        if (!parentPath && !currentRoute.path) {\n            return '';\n        }\n        else if (parentPath && !currentRoute.path) {\n            return parentPath + \"/\";\n        }\n        else if (!parentPath && currentRoute.path) {\n            return currentRoute.path;\n        }\n        else {\n            return parentPath + \"/\" + currentRoute.path;\n        }\n    }\n    /**\n     * Makes a copy of the config and adds any default required properties.\n     */\n    function standardizeConfig(r) {\n        var children = r.children && r.children.map(standardizeConfig);\n        var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n        if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n            c.component = EmptyOutletComponent;\n        }\n        return c;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function shallowEqualArrays(a, b) {\n        if (a.length !== b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (!shallowEqual(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    function shallowEqual(a, b) {\n        var k1 = Object.keys(a);\n        var k2 = Object.keys(b);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Flattens single-level nested arrays.\n     */\n    function flatten(arr) {\n        return Array.prototype.concat.apply([], arr);\n    }\n    /**\n     * Return the last element of an array.\n     */\n    function last(a) {\n        return a.length > 0 ? a[a.length - 1] : null;\n    }\n    function forEach(map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    }\n    function waitForMap(obj, fn) {\n        if (Object.keys(obj).length === 0) {\n            return rxjs.of({});\n        }\n        var waitHead = [];\n        var waitTail = [];\n        var res = {};\n        forEach(obj, function (a, k) {\n            var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n            if (k === PRIMARY_OUTLET) {\n                waitHead.push(mapped);\n            }\n            else {\n                waitTail.push(mapped);\n            }\n        });\n        // Closure compiler has problem with using spread operator here. So just using Array.concat.\n        return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n    }\n    /**\n     * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n     * input Observables return `true`.\n     */\n    function andObservables(observables) {\n        return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n    }\n    function wrapIntoObservable(value) {\n        if (core.ɵisObservable(value)) {\n            return value;\n        }\n        if (core.ɵisPromise(value)) {\n            // Use `Promise.resolve()` to wrap promise-like instances.\n            // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n            // change detection.\n            return rxjs.from(Promise.resolve(value));\n        }\n        return rxjs.of(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyUrlTree() {\n        return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n    }\n    function containsTree(container, containee, exact) {\n        if (exact) {\n            return equalQueryParams(container.queryParams, containee.queryParams) &&\n                equalSegmentGroups(container.root, containee.root);\n        }\n        return containsQueryParams(container.queryParams, containee.queryParams) &&\n            containsSegmentGroup(container.root, containee.root);\n    }\n    function equalQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return shallowEqual(container, containee);\n    }\n    function equalSegmentGroups(container, containee) {\n        if (!equalPath(container.segments, containee.segments))\n            return false;\n        if (container.numberOfChildren !== containee.numberOfChildren)\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!equalSegmentGroups(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    function containsQueryParams(container, containee) {\n        // TODO: This does not handle array params correctly.\n        return Object.keys(containee).length <= Object.keys(container).length &&\n            Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n    }\n    function containsSegmentGroup(container, containee) {\n        return containsSegmentGroupHelper(container, containee, containee.segments);\n    }\n    function containsSegmentGroupHelper(container, containee, containeePaths) {\n        if (container.segments.length > containeePaths.length) {\n            var current = container.segments.slice(0, containeePaths.length);\n            if (!equalPath(current, containeePaths))\n                return false;\n            if (containee.hasChildren())\n                return false;\n            return true;\n        }\n        else if (container.segments.length === containeePaths.length) {\n            if (!equalPath(container.segments, containeePaths))\n                return false;\n            for (var c in containee.children) {\n                if (!container.children[c])\n                    return false;\n                if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                    return false;\n            }\n            return true;\n        }\n        else {\n            var current = containeePaths.slice(0, container.segments.length);\n            var next = containeePaths.slice(container.segments.length);\n            if (!equalPath(container.segments, current))\n                return false;\n            if (!container.children[PRIMARY_OUTLET])\n                return false;\n            return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n        }\n    }\n    /**\n     * @description\n     *\n     * Represents the parsed URL.\n     *\n     * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n     * serialized tree.\n     * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree =\n     *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n     *     const f = tree.fragment; // return 'fragment'\n     *     const q = tree.queryParams; // returns {debug: 'true'}\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n     *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n     *     g.children['support'].segments; // return 1 segment 'help'\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlTree = /** @class */ (function () {\n        /** @internal */\n        function UrlTree(\n        /** The root segment group of the URL tree */\n        root, \n        /** The query params of the URL */\n        queryParams, \n        /** The fragment of the URL */\n        fragment) {\n            this.root = root;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n        }\n        Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n        return UrlTree;\n    }());\n    /**\n     * @description\n     *\n     * Represents the parsed URL segment group.\n     *\n     * See `UrlTree` for more information.\n     *\n     *\n     */\n    var UrlSegmentGroup = /** @class */ (function () {\n        function UrlSegmentGroup(\n        /** The URL segments of this group. See `UrlSegment` for more information */\n        segments, \n        /** The list of children of this group */\n        children) {\n            var _this = this;\n            this.segments = segments;\n            this.children = children;\n            /** The parent node in the url tree */\n            this.parent = null;\n            forEach(children, function (v, k) { return v.parent = _this; });\n        }\n        /** Whether the segment has child segments */\n        UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n        Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n            /** Number of child segments */\n            get: function () { return Object.keys(this.children).length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n        return UrlSegmentGroup;\n    }());\n    /**\n     * @description\n     *\n     * Represents a single URL segment.\n     *\n     * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n     * parameters associated with the segment.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const tree: UrlTree = router.parseUrl('/team;id=33');\n     *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n     *     const s: UrlSegment[] = g.segments;\n     *     s[0].path; // returns 'team'\n     *     s[0].parameters; // returns {id: 33}\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var UrlSegment = /** @class */ (function () {\n        function UrlSegment(\n        /** The path part of a URL segment */\n        path, \n        /** The matrix parameters associated with a segment */\n        parameters) {\n            this.path = path;\n            this.parameters = parameters;\n        }\n        Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n            get: function () {\n                if (!this._parameterMap) {\n                    this._parameterMap = convertToParamMap(this.parameters);\n                }\n                return this._parameterMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @docsNotRequired */\n        UrlSegment.prototype.toString = function () { return serializePath(this); };\n        return UrlSegment;\n    }());\n    function equalSegments(as, bs) {\n        return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n    }\n    function equalPath(as, bs) {\n        if (as.length !== bs.length)\n            return false;\n        return as.every(function (a, i) { return a.path === bs[i].path; });\n    }\n    function mapChildrenIntoArray(segment, fn) {\n        var res = [];\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet === PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        forEach(segment.children, function (child, childOutlet) {\n            if (childOutlet !== PRIMARY_OUTLET) {\n                res = res.concat(fn(child, childOutlet));\n            }\n        });\n        return res;\n    }\n    /**\n     * @description\n     *\n     * Serializes and deserializes a URL string into a URL tree.\n     *\n     * The url serialization strategy is customizable. You can\n     * make all URLs case insensitive by providing a custom UrlSerializer.\n     *\n     * See `DefaultUrlSerializer` for an example of a URL serializer.\n     *\n     *\n     */\n    var UrlSerializer = /** @class */ (function () {\n        function UrlSerializer() {\n        }\n        return UrlSerializer;\n    }());\n    /**\n     * @description\n     *\n     * A default implementation of the `UrlSerializer`.\n     *\n     * Example URLs:\n     *\n     * ```\n     * /inbox/33(popup:compose)\n     * /inbox/33;open=true/messages/44\n     * ```\n     *\n     * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n     * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n     * specify route specific parameters.\n     *\n     *\n     */\n    var DefaultUrlSerializer = /** @class */ (function () {\n        function DefaultUrlSerializer() {\n        }\n        /** Parses a url into a `UrlTree` */\n        DefaultUrlSerializer.prototype.parse = function (url) {\n            var p = new UrlParser(url);\n            return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n        };\n        /** Converts a `UrlTree` into a url */\n        DefaultUrlSerializer.prototype.serialize = function (tree) {\n            var segment = \"/\" + serializeSegment(tree.root, true);\n            var query = serializeQueryParams(tree.queryParams);\n            var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n            return \"\" + segment + query + fragment;\n        };\n        return DefaultUrlSerializer;\n    }());\n    var DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n    function serializePaths(segment) {\n        return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n    }\n    function serializeSegment(segment, root) {\n        if (!segment.hasChildren()) {\n            return serializePaths(segment);\n        }\n        if (root) {\n            var primary = segment.children[PRIMARY_OUTLET] ?\n                serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n                '';\n            var children_1 = [];\n            forEach(segment.children, function (v, k) {\n                if (k !== PRIMARY_OUTLET) {\n                    children_1.push(k + \":\" + serializeSegment(v, false));\n                }\n            });\n            return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n        }\n        else {\n            var children = mapChildrenIntoArray(segment, function (v, k) {\n                if (k === PRIMARY_OUTLET) {\n                    return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n                }\n                return [k + \":\" + serializeSegment(v, false)];\n            });\n            return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n        }\n    }\n    /**\n     * Encodes a URI string with the default encoding. This function will only ever be called from\n     * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n     * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n     * have to be encoded per https://url.spec.whatwg.org.\n     */\n    function encodeUriString(s) {\n        return encodeURIComponent(s)\n            .replace(/%40/g, '@')\n            .replace(/%3A/gi, ':')\n            .replace(/%24/g, '$')\n            .replace(/%2C/gi, ',');\n    }\n    /**\n     * This function should be used to encode both keys and values in a query string key/value. In\n     * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriQuery(s) {\n        return encodeUriString(s).replace(/%3B/gi, ';');\n    }\n    /**\n     * This function should be used to encode a URL fragment. In the following URL, you need to call\n     * encodeUriFragment on \"f\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriFragment(s) {\n        return encodeURI(s);\n    }\n    /**\n     * This function should be run on any URI segment as well as the key and value in a key/value\n     * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n     * \"mk\", and \"mv\":\n     *\n     * http://www.site.org/html;mk=mv?k=v#f\n     */\n    function encodeUriSegment(s) {\n        return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n    }\n    function decode(s) {\n        return decodeURIComponent(s);\n    }\n    // Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n    // decodeURIComponent function will not decode \"+\" as a space.\n    function decodeQuery(s) {\n        return decode(s.replace(/\\+/g, '%20'));\n    }\n    function serializePath(path) {\n        return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n    }\n    function serializeMatrixParams(params) {\n        return Object.keys(params)\n            .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n            .join('');\n    }\n    function serializeQueryParams(params) {\n        var strParams = Object.keys(params).map(function (name) {\n            var value = params[name];\n            return Array.isArray(value) ?\n                value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n                encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n        });\n        return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n    }\n    var SEGMENT_RE = /^[^\\/()?;=#]+/;\n    function matchSegments(str) {\n        var match = str.match(SEGMENT_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_RE = /^[^=?&#]+/;\n    // Return the name of the query param at the start of the string or an empty string\n    function matchQueryParams(str) {\n        var match = str.match(QUERY_PARAM_RE);\n        return match ? match[0] : '';\n    }\n    var QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n    // Return the value of the query param at the start of the string or an empty string\n    function matchUrlQueryParamValue(str) {\n        var match = str.match(QUERY_PARAM_VALUE_RE);\n        return match ? match[0] : '';\n    }\n    var UrlParser = /** @class */ (function () {\n        function UrlParser(url) {\n            this.url = url;\n            this.remaining = url;\n        }\n        UrlParser.prototype.parseRootSegment = function () {\n            this.consumeOptional('/');\n            if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n                return new UrlSegmentGroup([], {});\n            }\n            // The root segment group never has segments\n            return new UrlSegmentGroup([], this.parseChildren());\n        };\n        UrlParser.prototype.parseQueryParams = function () {\n            var params = {};\n            if (this.consumeOptional('?')) {\n                do {\n                    this.parseQueryParam(params);\n                } while (this.consumeOptional('&'));\n            }\n            return params;\n        };\n        UrlParser.prototype.parseFragment = function () {\n            return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n        };\n        UrlParser.prototype.parseChildren = function () {\n            if (this.remaining === '') {\n                return {};\n            }\n            this.consumeOptional('/');\n            var segments = [];\n            if (!this.peekStartsWith('(')) {\n                segments.push(this.parseSegment());\n            }\n            while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n                this.capture('/');\n                segments.push(this.parseSegment());\n            }\n            var children = {};\n            if (this.peekStartsWith('/(')) {\n                this.capture('/');\n                children = this.parseParens(true);\n            }\n            var res = {};\n            if (this.peekStartsWith('(')) {\n                res = this.parseParens(false);\n            }\n            if (segments.length > 0 || Object.keys(children).length > 0) {\n                res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n            }\n            return res;\n        };\n        // parse a segment with its matrix parameters\n        // ie `name;k1=v1;k2`\n        UrlParser.prototype.parseSegment = function () {\n            var path = matchSegments(this.remaining);\n            if (path === '' && this.peekStartsWith(';')) {\n                throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n            }\n            this.capture(path);\n            return new UrlSegment(decode(path), this.parseMatrixParams());\n        };\n        UrlParser.prototype.parseMatrixParams = function () {\n            var params = {};\n            while (this.consumeOptional(';')) {\n                this.parseParam(params);\n            }\n            return params;\n        };\n        UrlParser.prototype.parseParam = function (params) {\n            var key = matchSegments(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchSegments(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            params[decode(key)] = decode(value);\n        };\n        // Parse a single query parameter `name[=value]`\n        UrlParser.prototype.parseQueryParam = function (params) {\n            var key = matchQueryParams(this.remaining);\n            if (!key) {\n                return;\n            }\n            this.capture(key);\n            var value = '';\n            if (this.consumeOptional('=')) {\n                var valueMatch = matchUrlQueryParamValue(this.remaining);\n                if (valueMatch) {\n                    value = valueMatch;\n                    this.capture(value);\n                }\n            }\n            var decodedKey = decodeQuery(key);\n            var decodedVal = decodeQuery(value);\n            if (params.hasOwnProperty(decodedKey)) {\n                // Append to existing values\n                var currentVal = params[decodedKey];\n                if (!Array.isArray(currentVal)) {\n                    currentVal = [currentVal];\n                    params[decodedKey] = currentVal;\n                }\n                currentVal.push(decodedVal);\n            }\n            else {\n                // Create a new value\n                params[decodedKey] = decodedVal;\n            }\n        };\n        // parse `(a/b//outlet_name:c/d)`\n        UrlParser.prototype.parseParens = function (allowPrimary) {\n            var segments = {};\n            this.capture('(');\n            while (!this.consumeOptional(')') && this.remaining.length > 0) {\n                var path = matchSegments(this.remaining);\n                var next = this.remaining[path.length];\n                // if is is not one of these characters, then the segment was unescaped\n                // or the group was not closed\n                if (next !== '/' && next !== ')' && next !== ';') {\n                    throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n                }\n                var outletName = undefined;\n                if (path.indexOf(':') > -1) {\n                    outletName = path.substr(0, path.indexOf(':'));\n                    this.capture(outletName);\n                    this.capture(':');\n                }\n                else if (allowPrimary) {\n                    outletName = PRIMARY_OUTLET;\n                }\n                var children = this.parseChildren();\n                segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                    new UrlSegmentGroup([], children);\n                this.consumeOptional('//');\n            }\n            return segments;\n        };\n        UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n        // Consumes the prefix when it is present and returns whether it has been consumed\n        UrlParser.prototype.consumeOptional = function (str) {\n            if (this.peekStartsWith(str)) {\n                this.remaining = this.remaining.substring(str.length);\n                return true;\n            }\n            return false;\n        };\n        UrlParser.prototype.capture = function (str) {\n            if (!this.consumeOptional(str)) {\n                throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n            }\n        };\n        return UrlParser;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch = /** @class */ (function () {\n        function NoMatch(segmentGroup) {\n            this.segmentGroup = segmentGroup || null;\n        }\n        return NoMatch;\n    }());\n    var AbsoluteRedirect = /** @class */ (function () {\n        function AbsoluteRedirect(urlTree) {\n            this.urlTree = urlTree;\n        }\n        return AbsoluteRedirect;\n    }());\n    function noMatch(segmentGroup) {\n        return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n    }\n    function absoluteRedirect(newTree) {\n        return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n    }\n    function namedOutletsRedirect(redirectTo) {\n        return new rxjs.Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n    }\n    function canLoadFails(route) {\n        return new rxjs.Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n    }\n    /**\n     * Returns the `UrlTree` with the redirection applied.\n     *\n     * Lazy modules are loaded along the way.\n     */\n    function applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n    }\n    var ApplyRedirects = /** @class */ (function () {\n        function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n            this.configLoader = configLoader;\n            this.urlSerializer = urlSerializer;\n            this.urlTree = urlTree;\n            this.config = config;\n            this.allowRedirects = true;\n            this.ngModule = moduleInjector.get(core.NgModuleRef);\n        }\n        ApplyRedirects.prototype.apply = function () {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n            var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n            return urlTrees$.pipe(operators.catchError(function (e) {\n                if (e instanceof AbsoluteRedirect) {\n                    // after an absolute redirect we do not apply any more redirects!\n                    _this.allowRedirects = false;\n                    // we need to run matching, so we can fetch all lazy-loaded modules\n                    return _this.match(e.urlTree);\n                }\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.match = function (tree) {\n            var _this = this;\n            var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n            var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n                return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n            }));\n            return mapped$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    throw _this.noMatchError(e);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noMatchError = function (e) {\n            return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n        };\n        ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n            var _a;\n            var root = rootCandidate.segments.length > 0 ?\n                new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n                rootCandidate;\n            return new UrlTree(root, queryParams, fragment);\n        };\n        ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.expandChildren(ngModule, routes, segmentGroup)\n                    .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n            }\n            return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n        };\n        // Recursively expand segment groups for all the child outlets\n        ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n            var _this = this;\n            return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n        };\n        ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n            var _this = this;\n            return rxjs.of.apply(void 0, __spread(routes)).pipe(operators.map(function (r) {\n                var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n                return expanded$.pipe(operators.catchError(function (e) {\n                    if (e instanceof NoMatch) {\n                        // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                        // talk to Jason\n                        return rxjs.of(null);\n                    }\n                    throw e;\n                }));\n            }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n                if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                    if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                        return rxjs.of(new UrlSegmentGroup([], {}));\n                    }\n                    throw new NoMatch(segmentGroup);\n                }\n                throw e;\n            }));\n        };\n        ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n            if (getOutlet(route) !== outlet) {\n                return noMatch(segmentGroup);\n            }\n            if (route.redirectTo === undefined) {\n                return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n            }\n            if (allowRedirects && this.allowRedirects) {\n                return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n            }\n            return noMatch(segmentGroup);\n        };\n        ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            if (route.path === '**') {\n                return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n            }\n            return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n        };\n        ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n            var _this = this;\n            var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                var group = new UrlSegmentGroup(newSegments, {});\n                return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n            var _this = this;\n            var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n            if (!matched)\n                return noMatch(segmentGroup);\n            var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n            if (route.redirectTo.startsWith('/')) {\n                return absoluteRedirect(newTree);\n            }\n            return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n                return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n            }));\n        };\n        ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n            var _this = this;\n            if (route.path === '**') {\n                if (route.loadChildren) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return new UrlSegmentGroup(segments, {});\n                    }));\n                }\n                return rxjs.of(new UrlSegmentGroup(segments, {}));\n            }\n            var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n            if (!matched)\n                return noMatch(rawSegmentGroup);\n            var rawSlicedSegments = segments.slice(lastChild);\n            var childConfig$ = this.getChildConfig(ngModule, route);\n            return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n                var childModule = routerConfig.module;\n                var childConfig = routerConfig.routes;\n                var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n                if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                    var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                    return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n                }\n                if (childConfig.length === 0 && slicedSegments.length === 0) {\n                    return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n                }\n                var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n                return expanded$.pipe(operators.map(function (cs) {\n                    return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n                }));\n            }));\n        };\n        ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n            var _this = this;\n            if (route.children) {\n                // The children belong to the same module\n                return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n            }\n            if (route.loadChildren) {\n                // lazy children belong to the loaded module\n                if (route._loadedConfig !== undefined) {\n                    return rxjs.of(route._loadedConfig);\n                }\n                return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                    if (shouldLoad) {\n                        return _this.configLoader.load(ngModule.injector, route)\n                            .pipe(operators.map(function (cfg) {\n                            route._loadedConfig = cfg;\n                            return cfg;\n                        }));\n                    }\n                    return canLoadFails(route);\n                }));\n            }\n            return rxjs.of(new LoadedRouterConfig([], ngModule));\n        };\n        ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n            var res = [];\n            var c = urlTree.root;\n            while (true) {\n                res = res.concat(c.segments);\n                if (c.numberOfChildren === 0) {\n                    return rxjs.of(res);\n                }\n                if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                    return namedOutletsRedirect(route.redirectTo);\n                }\n                c = c.children[PRIMARY_OUTLET];\n            }\n        };\n        ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n            return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n        };\n        ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n            var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n            return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n        };\n        ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n            var res = {};\n            forEach(redirectToParams, function (v, k) {\n                var copySourceValue = typeof v === 'string' && v.startsWith(':');\n                if (copySourceValue) {\n                    var sourceName = v.substring(1);\n                    res[k] = actualParams[sourceName];\n                }\n                else {\n                    res[k] = v;\n                }\n            });\n            return res;\n        };\n        ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n            var _this = this;\n            var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n            var children = {};\n            forEach(group.children, function (child, name) {\n                children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n            });\n            return new UrlSegmentGroup(updatedSegments, children);\n        };\n        ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n            var _this = this;\n            return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments); });\n        };\n        ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n            var pos = posParams[redirectToUrlSegment.path.substring(1)];\n            if (!pos)\n                throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n            return pos;\n        };\n        ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n            var e_1, _a;\n            var idx = 0;\n            try {\n                for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                    var s = actualSegments_1_1.value;\n                    if (s.path === redirectToUrlSegment.path) {\n                        actualSegments.splice(idx);\n                        return s;\n                    }\n                    idx++;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return redirectToUrlSegment;\n        };\n        return ApplyRedirects;\n    }());\n    function runCanLoadGuard(moduleInjector, route) {\n        var canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n            var guard = moduleInjector.get(injectionToken);\n            return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n        }));\n        return andObservables(obs);\n    }\n    function match(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n                return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n            }\n            return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res) {\n            return {\n                matched: false,\n                consumedSegments: [],\n                lastChild: 0,\n                positionalParamSegments: {},\n            };\n        }\n        return {\n            matched: true,\n            consumedSegments: res.consumed,\n            lastChild: res.consumed.length,\n            positionalParamSegments: res.posParams,\n        };\n    }\n    function split(segmentGroup, consumedSegments, slicedSegments, config) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n            var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n            return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n        }\n        return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n    }\n    function mergeTrivialChildren(s) {\n        if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n            var c = s.children[PRIMARY_OUTLET];\n            return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n        }\n        return s;\n    }\n    function addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptySegments(routes, primarySegmentGroup) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegmentGroup;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                    res[getOutlet(r)] = new UrlSegmentGroup([], {});\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathRedirects(segmentGroup, segments, routes) {\n        return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n    }\n    function isEmptyPathRedirect(segmentGroup, segments, r) {\n        if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo !== undefined;\n    }\n    function getOutlet(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Tree = /** @class */ (function () {\n        function Tree(root) {\n            this._root = root;\n        }\n        Object.defineProperty(Tree.prototype, \"root\", {\n            get: function () { return this._root.value; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @internal\n         */\n        Tree.prototype.parent = function (t) {\n            var p = this.pathFromRoot(t);\n            return p.length > 1 ? p[p.length - 2] : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.children = function (t) {\n            var n = findNode(t, this._root);\n            return n ? n.children.map(function (t) { return t.value; }) : [];\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.firstChild = function (t) {\n            var n = findNode(t, this._root);\n            return n && n.children.length > 0 ? n.children[0].value : null;\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.siblings = function (t) {\n            var p = findPath(t, this._root);\n            if (p.length < 2)\n                return [];\n            var c = p[p.length - 2].children.map(function (c) { return c.value; });\n            return c.filter(function (cc) { return cc !== t; });\n        };\n        /**\n         * @internal\n         */\n        Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n        return Tree;\n    }());\n    // DFS for the node matching the value\n    function findNode(value, node) {\n        var e_1, _a;\n        if (value === node.value)\n            return node;\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var node_1 = findNode(value, child);\n                if (node_1)\n                    return node_1;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return null;\n    }\n    // Return the path to the node with the given value using DFS\n    function findPath(value, node) {\n        var e_2, _a;\n        if (value === node.value)\n            return [node];\n        try {\n            for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var path = findPath(value, child);\n                if (path.length) {\n                    path.unshift(node);\n                    return path;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return [];\n    }\n    var TreeNode = /** @class */ (function () {\n        function TreeNode(value, children) {\n            this.value = value;\n            this.children = children;\n        }\n        TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n        return TreeNode;\n    }());\n    // Return the list of T indexed by outlet name\n    function nodeChildrenAsMap(node) {\n        var map = {};\n        if (node) {\n            node.children.forEach(function (child) { return map[child.value.outlet] = child; });\n        }\n        return map;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents the state of the router.\n     *\n     * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n     * segments, the extracted parameters, and the resolved data.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const root: ActivatedRoute = state.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     * See `ActivatedRoute` for more information.\n     *\n     *\n     */\n    var RouterState = /** @class */ (function (_super) {\n        __extends(RouterState, _super);\n        /** @internal */\n        function RouterState(root, \n        /** The current snapshot of the router state */\n        snapshot) {\n            var _this = _super.call(this, root) || this;\n            _this.snapshot = snapshot;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n        return RouterState;\n    }(Tree));\n    function createEmptyState(urlTree, rootComponent) {\n        var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n        var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n        var emptyParams = new rxjs.BehaviorSubject({});\n        var emptyData = new rxjs.BehaviorSubject({});\n        var emptyQueryParams = new rxjs.BehaviorSubject({});\n        var fragment = new rxjs.BehaviorSubject('');\n        var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n        activated.snapshot = snapshot.root;\n        return new RouterState(new TreeNode(activated, []), snapshot);\n    }\n    function createEmptyStateSnapshot(urlTree, rootComponent) {\n        var emptyParams = {};\n        var emptyData = {};\n        var emptyQueryParams = {};\n        var fragment = '';\n        var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n        return new RouterStateSnapshot('', new TreeNode(activated, []));\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n     *\n     * ```\n     * @Component({...})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: Observable<string> = route.params.map(p => p.id);\n     *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n     *     // route.data includes both `data` and `resolve`\n     *     const user = route.data.map(d => d.user);\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRoute = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRoute(\n        /** An observable of the URL segments matched by this route */\n        url, \n        /** An observable of the matrix parameters scoped to this route */\n        params, \n        /** An observable of the query parameters shared by all the routes */\n        queryParams, \n        /** An observable of the URL fragment shared by all the routes */\n        fragment, \n        /** An observable of the static and resolved data of this route. */\n        data, \n        /** The outlet name of the route. It's a constant */\n        outlet, \n        /** The component of the route. It's a constant */\n        // TODO(vsavkin): remove |string\n        component, futureSnapshot) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this._futureSnapshot = futureSnapshot;\n        }\n        Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n            /** The configuration used to match this route */\n            get: function () { return this._futureSnapshot.routeConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap =\n                        this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRoute.prototype.toString = function () {\n            return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n        };\n        return ActivatedRoute;\n    }());\n    /**\n     * Returns the inherited params, data, and resolve for a given route.\n     * By default, this only inherits values up to the nearest path-less or component-less route.\n     * @internal\n     */\n    function inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        var pathFromRoot = route.pathFromRoot;\n        var inheritingStartingFrom = 0;\n        if (paramsInheritanceStrategy !== 'always') {\n            inheritingStartingFrom = pathFromRoot.length - 1;\n            while (inheritingStartingFrom >= 1) {\n                var current = pathFromRoot[inheritingStartingFrom];\n                var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n                // current route is an empty path => inherits its parent's params and data\n                if (current.routeConfig && current.routeConfig.path === '') {\n                    inheritingStartingFrom--;\n                    // parent is componentless => current route should inherit its params and data\n                }\n                else if (!parent_1.component) {\n                    inheritingStartingFrom--;\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n    }\n    /** @internal */\n    function flattenInherited(pathFromRoot) {\n        return pathFromRoot.reduce(function (res, curr) {\n            var params = __assign({}, res.params, curr.params);\n            var data = __assign({}, res.data, curr.data);\n            var resolve = __assign({}, res.resolve, curr._resolvedData);\n            return { params: params, data: data, resolve: resolve };\n        }, { params: {}, data: {}, resolve: {} });\n    }\n    /**\n     * @description\n     *\n     * Contains the information about a route associated with a component loaded in an\n     * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n     * traverse the router state tree.\n     *\n     * ```\n     * @Component({templateUrl:'./my-component.html'})\n     * class MyComponent {\n     *   constructor(route: ActivatedRoute) {\n     *     const id: string = route.snapshot.params.id;\n     *     const url: string = route.snapshot.url.join('');\n     *     const user = route.snapshot.data.user;\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var ActivatedRouteSnapshot = /** @class */ (function () {\n        /** @internal */\n        function ActivatedRouteSnapshot(\n        /** The URL segments matched by this route */\n        url, \n        /** The matrix parameters scoped to this route */\n        params, \n        /** The query parameters shared by all the routes */\n        queryParams, \n        /** The URL fragment shared by all the routes */\n        fragment, \n        /** The static and resolved data of this route */\n        data, \n        /** The outlet name of the route */\n        outlet, \n        /** The component of the route */\n        component, routeConfig, urlSegment, lastPathIndex, resolve) {\n            this.url = url;\n            this.params = params;\n            this.queryParams = queryParams;\n            this.fragment = fragment;\n            this.data = data;\n            this.outlet = outlet;\n            this.component = component;\n            this.routeConfig = routeConfig;\n            this._urlSegment = urlSegment;\n            this._lastPathIndex = lastPathIndex;\n            this._resolve = resolve;\n        }\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n            /** The root of the router state */\n            get: function () { return this._routerState.root; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n            /** The parent of this route in the router state tree */\n            get: function () { return this._routerState.parent(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n            /** The first child of this route in the router state tree */\n            get: function () { return this._routerState.firstChild(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n            /** The children of this route in the router state tree */\n            get: function () { return this._routerState.children(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n            /** The path from the root of the router state tree to this route */\n            get: function () { return this._routerState.pathFromRoot(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n            get: function () {\n                if (!this._paramMap) {\n                    this._paramMap = convertToParamMap(this.params);\n                }\n                return this._paramMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n            get: function () {\n                if (!this._queryParamMap) {\n                    this._queryParamMap = convertToParamMap(this.queryParams);\n                }\n                return this._queryParamMap;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ActivatedRouteSnapshot.prototype.toString = function () {\n            var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n            var matched = this.routeConfig ? this.routeConfig.path : '';\n            return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n        };\n        return ActivatedRouteSnapshot;\n    }());\n    /**\n     * @description\n     *\n     * Represents the state of the router at a moment in time.\n     *\n     * This is a tree of activated route snapshots. Every node in this tree knows about\n     * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @Component({templateUrl:'template.html'})\n     * class MyComponent {\n     *   constructor(router: Router) {\n     *     const state: RouterState = router.routerState;\n     *     const snapshot: RouterStateSnapshot = state.snapshot;\n     *     const root: ActivatedRouteSnapshot = snapshot.root;\n     *     const child = root.firstChild;\n     *     const id: Observable<string> = child.params.map(p => p.id);\n     *     //...\n     *   }\n     * }\n     * ```\n     *\n     *\n     */\n    var RouterStateSnapshot = /** @class */ (function (_super) {\n        __extends(RouterStateSnapshot, _super);\n        /** @internal */\n        function RouterStateSnapshot(\n        /** The url from which this snapshot was created */\n        url, root) {\n            var _this = _super.call(this, root) || this;\n            _this.url = url;\n            setRouterState(_this, root);\n            return _this;\n        }\n        RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n        return RouterStateSnapshot;\n    }(Tree));\n    function setRouterState(state, node) {\n        node.value._routerState = state;\n        node.children.forEach(function (c) { return setRouterState(state, c); });\n    }\n    function serializeNode(node) {\n        var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n        return \"\" + node.value + c;\n    }\n    /**\n     * The expectation is that the activate route is created with the right set of parameters.\n     * So we push new values into the observables only when they are not the initial values.\n     * And we detect that by checking if the snapshot field is set.\n     */\n    function advanceActivatedRoute(route) {\n        if (route.snapshot) {\n            var currentSnapshot = route.snapshot;\n            var nextSnapshot = route._futureSnapshot;\n            route.snapshot = nextSnapshot;\n            if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n                route.queryParams.next(nextSnapshot.queryParams);\n            }\n            if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n                route.fragment.next(nextSnapshot.fragment);\n            }\n            if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n                route.params.next(nextSnapshot.params);\n            }\n            if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n                route.url.next(nextSnapshot.url);\n            }\n            if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n                route.data.next(nextSnapshot.data);\n            }\n        }\n        else {\n            route.snapshot = route._futureSnapshot;\n            // this is for resolved data\n            route.data.next(route._futureSnapshot.data);\n        }\n    }\n    function equalParamsAndUrlSegments(a, b) {\n        var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n        var parentsMismatch = !a.parent !== !b.parent;\n        return equalUrlParams && !parentsMismatch &&\n            (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createRouterState(routeReuseStrategy, curr, prevState) {\n        var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n        return new RouterState(root, curr);\n    }\n    function createNode(routeReuseStrategy, curr, prevState) {\n        // reuse an activated route that is currently displayed on the screen\n        if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n            var value = prevState.value;\n            value._futureSnapshot = curr.value;\n            var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n            return new TreeNode(value, children);\n            // retrieve an activated route that is used to be displayed, but is not currently displayed\n        }\n        else {\n            var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n            if (detachedRouteHandle) {\n                var tree = detachedRouteHandle.route;\n                setFutureSnapshotsOfActivatedRoutes(curr, tree);\n                return tree;\n            }\n            else {\n                var value = createActivatedRoute(curr.value);\n                var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n                return new TreeNode(value, children);\n            }\n        }\n    }\n    function setFutureSnapshotsOfActivatedRoutes(curr, result) {\n        if (curr.value.routeConfig !== result.value.routeConfig) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n        }\n        if (curr.children.length !== result.children.length) {\n            throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n        }\n        result.value._futureSnapshot = curr.value;\n        for (var i = 0; i < curr.children.length; ++i) {\n            setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n        }\n    }\n    function createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n        return curr.children.map(function (child) {\n            var e_1, _a;\n            try {\n                for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var p = _c.value;\n                    if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                        return createNode(routeReuseStrategy, child, p);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return createNode(routeReuseStrategy, child);\n        });\n    }\n    function createActivatedRoute(c) {\n        return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createUrlTree(route, urlTree, commands, queryParams, fragment) {\n        if (commands.length === 0) {\n            return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n        }\n        var nav = computeNavigation(commands);\n        if (nav.toRoot()) {\n            return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n        }\n        var startingPosition = findStartingPosition(nav, urlTree, route);\n        var segmentGroup = startingPosition.processChildren ?\n            updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n            updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n        return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n    }\n    function isMatrixParams(command) {\n        return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n    }\n    function tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n        var qp = {};\n        if (queryParams) {\n            forEach(queryParams, function (value, name) {\n                qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n            });\n        }\n        if (urlTree.root === oldSegmentGroup) {\n            return new UrlTree(newSegmentGroup, qp, fragment);\n        }\n        return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n    }\n    function replaceSegment(current, oldSegment, newSegment) {\n        var children = {};\n        forEach(current.children, function (c, outletName) {\n            if (c === oldSegment) {\n                children[outletName] = newSegment;\n            }\n            else {\n                children[outletName] = replaceSegment(c, oldSegment, newSegment);\n            }\n        });\n        return new UrlSegmentGroup(current.segments, children);\n    }\n    var Navigation = /** @class */ (function () {\n        function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n            this.isAbsolute = isAbsolute;\n            this.numberOfDoubleDots = numberOfDoubleDots;\n            this.commands = commands;\n            if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n                throw new Error('Root segment cannot have matrix parameters');\n            }\n            var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n            if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n                throw new Error('{outlets:{}} has to be the last command');\n            }\n        }\n        Navigation.prototype.toRoot = function () {\n            return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n        };\n        return Navigation;\n    }());\n    /** Transforms commands to a normalized `Navigation` */\n    function computeNavigation(commands) {\n        if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n            return new Navigation(true, 0, commands);\n        }\n        var numberOfDoubleDots = 0;\n        var isAbsolute = false;\n        var res = commands.reduce(function (res, cmd, cmdIdx) {\n            if (typeof cmd === 'object' && cmd != null) {\n                if (cmd.outlets) {\n                    var outlets_1 = {};\n                    forEach(cmd.outlets, function (commands, name) {\n                        outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                    });\n                    return __spread(res, [{ outlets: outlets_1 }]);\n                }\n                if (cmd.segmentPath) {\n                    return __spread(res, [cmd.segmentPath]);\n                }\n            }\n            if (!(typeof cmd === 'string')) {\n                return __spread(res, [cmd]);\n            }\n            if (cmdIdx === 0) {\n                cmd.split('/').forEach(function (urlPart, partIndex) {\n                    if (partIndex == 0 && urlPart === '.') ;\n                    else if (partIndex == 0 && urlPart === '') { //  '/a'\n                        isAbsolute = true;\n                    }\n                    else if (urlPart === '..') { //  '../a'\n                        numberOfDoubleDots++;\n                    }\n                    else if (urlPart != '') {\n                        res.push(urlPart);\n                    }\n                });\n                return res;\n            }\n            return __spread(res, [cmd]);\n        }, []);\n        return new Navigation(isAbsolute, numberOfDoubleDots, res);\n    }\n    var Position = /** @class */ (function () {\n        function Position(segmentGroup, processChildren, index) {\n            this.segmentGroup = segmentGroup;\n            this.processChildren = processChildren;\n            this.index = index;\n        }\n        return Position;\n    }());\n    function findStartingPosition(nav, tree, route) {\n        if (nav.isAbsolute) {\n            return new Position(tree.root, true, 0);\n        }\n        if (route.snapshot._lastPathIndex === -1) {\n            return new Position(route.snapshot._urlSegment, true, 0);\n        }\n        var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n        var index = route.snapshot._lastPathIndex + modifier;\n        return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n    }\n    function createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n        var g = group;\n        var ci = index;\n        var dd = numberOfDoubleDots;\n        while (dd > ci) {\n            dd -= ci;\n            g = g.parent;\n            if (!g) {\n                throw new Error('Invalid number of \\'../\\'');\n            }\n            ci = g.segments.length;\n        }\n        return new Position(g, false, ci - dd);\n    }\n    function getPath(command) {\n        if (typeof command === 'object' && command != null && command.outlets) {\n            return command.outlets[PRIMARY_OUTLET];\n        }\n        return \"\" + command;\n    }\n    function getOutlets(commands) {\n        var _a, _b;\n        if (!(typeof commands[0] === 'object'))\n            return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n        if (commands[0].outlets === undefined)\n            return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n        return commands[0].outlets;\n    }\n    function updateSegmentGroup(segmentGroup, startIndex, commands) {\n        if (!segmentGroup) {\n            segmentGroup = new UrlSegmentGroup([], {});\n        }\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n        }\n        var m = prefixedWith(segmentGroup, startIndex, commands);\n        var slicedCommands = commands.slice(m.commandIndex);\n        if (m.match && m.pathIndex < segmentGroup.segments.length) {\n            var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n            g.children[PRIMARY_OUTLET] =\n                new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n            return updateSegmentGroupChildren(g, 0, slicedCommands);\n        }\n        else if (m.match && slicedCommands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else if (m.match && !segmentGroup.hasChildren()) {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n        else if (m.match) {\n            return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n        }\n        else {\n            return createNewSegmentGroup(segmentGroup, startIndex, commands);\n        }\n    }\n    function updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n        if (commands.length === 0) {\n            return new UrlSegmentGroup(segmentGroup.segments, {});\n        }\n        else {\n            var outlets_2 = getOutlets(commands);\n            var children_1 = {};\n            forEach(outlets_2, function (commands, outlet) {\n                if (commands !== null) {\n                    children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n                }\n            });\n            forEach(segmentGroup.children, function (child, childOutlet) {\n                if (outlets_2[childOutlet] === undefined) {\n                    children_1[childOutlet] = child;\n                }\n            });\n            return new UrlSegmentGroup(segmentGroup.segments, children_1);\n        }\n    }\n    function prefixedWith(segmentGroup, startIndex, commands) {\n        var currentCommandIndex = 0;\n        var currentPathIndex = startIndex;\n        var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n        while (currentPathIndex < segmentGroup.segments.length) {\n            if (currentCommandIndex >= commands.length)\n                return noMatch;\n            var path = segmentGroup.segments[currentPathIndex];\n            var curr = getPath(commands[currentCommandIndex]);\n            var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n            if (currentPathIndex > 0 && curr === undefined)\n                break;\n            if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n                if (!compare(curr, next, path))\n                    return noMatch;\n                currentCommandIndex += 2;\n            }\n            else {\n                if (!compare(curr, {}, path))\n                    return noMatch;\n                currentCommandIndex++;\n            }\n            currentPathIndex++;\n        }\n        return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n    }\n    function createNewSegmentGroup(segmentGroup, startIndex, commands) {\n        var paths = segmentGroup.segments.slice(0, startIndex);\n        var i = 0;\n        while (i < commands.length) {\n            if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n                var children = createNewSegmentChildren(commands[i].outlets);\n                return new UrlSegmentGroup(paths, children);\n            }\n            // if we start with an object literal, we need to reuse the path part from the segment\n            if (i === 0 && isMatrixParams(commands[0])) {\n                var p = segmentGroup.segments[startIndex];\n                paths.push(new UrlSegment(p.path, commands[0]));\n                i++;\n                continue;\n            }\n            var curr = getPath(commands[i]);\n            var next = (i < commands.length - 1) ? commands[i + 1] : null;\n            if (curr && next && isMatrixParams(next)) {\n                paths.push(new UrlSegment(curr, stringify(next)));\n                i += 2;\n            }\n            else {\n                paths.push(new UrlSegment(curr, {}));\n                i++;\n            }\n        }\n        return new UrlSegmentGroup(paths, {});\n    }\n    function createNewSegmentChildren(outlets) {\n        var children = {};\n        forEach(outlets, function (commands, outlet) {\n            if (commands !== null) {\n                children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n            }\n        });\n        return children;\n    }\n    function stringify(params) {\n        var res = {};\n        forEach(params, function (v, k) { return res[k] = \"\" + v; });\n        return res;\n    }\n    function compare(path, params, segment) {\n        return path == segment.path && shallowEqual(params, segment.parameters);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CanActivate = /** @class */ (function () {\n        function CanActivate(path) {\n            this.path = path;\n            this.route = this.path[this.path.length - 1];\n        }\n        return CanActivate;\n    }());\n    var CanDeactivate = /** @class */ (function () {\n        function CanDeactivate(component, route) {\n            this.component = component;\n            this.route = route;\n        }\n        return CanDeactivate;\n    }());\n    /**\n     * This class bundles the actions involved in preactivation of a route.\n     */\n    var PreActivation = /** @class */ (function () {\n        function PreActivation(future, curr, moduleInjector, forwardEvent) {\n            this.future = future;\n            this.curr = curr;\n            this.moduleInjector = moduleInjector;\n            this.forwardEvent = forwardEvent;\n            this.canActivateChecks = [];\n            this.canDeactivateChecks = [];\n        }\n        PreActivation.prototype.initialize = function (parentContexts) {\n            var futureRoot = this.future._root;\n            var currRoot = this.curr ? this.curr._root : null;\n            this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n        };\n        PreActivation.prototype.checkGuards = function () {\n            var _this = this;\n            if (!this.isDeactivating() && !this.isActivating()) {\n                return rxjs.of(true);\n            }\n            var canDeactivate$ = this.runCanDeactivateChecks();\n            return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n        };\n        PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n            var _this = this;\n            if (!this.isActivating())\n                return rxjs.of(null);\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n        };\n        PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n        PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupChildRouteGuards = function (futureNode, currNode, contexts, futurePath) {\n            var _this = this;\n            var prevChildren = nodeChildrenAsMap(currNode);\n            // Process the children of the future route\n            futureNode.children.forEach(function (c) {\n                _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n                delete prevChildren[c.value.outlet];\n            });\n            // Process any children left from the current route (not active for the future route)\n            forEach(prevChildren, function (v, k) {\n                return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n            });\n        };\n        /**\n         * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n         * proper state to run `checkGuards()` method.\n         */\n        PreActivation.prototype.setupRouteGuards = function (futureNode, currNode, parentContexts, futurePath) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n            // reusing the node\n            if (curr && future.routeConfig === curr.routeConfig) {\n                var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n                if (shouldRunGuardsAndResolvers) {\n                    this.canActivateChecks.push(new CanActivate(futurePath));\n                }\n                else {\n                    // we need to set the data\n                    future.data = curr.data;\n                    future._resolvedData = curr._resolvedData;\n                }\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n                }\n                if (shouldRunGuardsAndResolvers) {\n                    var outlet = context.outlet;\n                    this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n                }\n            }\n            else {\n                if (curr) {\n                    this.deactivateRouteAndItsChildren(currNode, context);\n                }\n                this.canActivateChecks.push(new CanActivate(futurePath));\n                // If we have a component, we need to go through an outlet.\n                if (future.component) {\n                    this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                }\n                else {\n                    this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n                }\n            }\n        };\n        PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n            switch (mode) {\n                case 'always':\n                    return true;\n                case 'paramsOrQueryParamsChange':\n                    return !equalParamsAndUrlSegments(curr, future) ||\n                        !shallowEqual(curr.queryParams, future.queryParams);\n                case 'paramsChange':\n                default:\n                    return !equalParamsAndUrlSegments(curr, future);\n            }\n        };\n        PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n            var _this = this;\n            var children = nodeChildrenAsMap(route);\n            var r = route.value;\n            forEach(children, function (node, childName) {\n                if (!r.component) {\n                    _this.deactivateRouteAndItsChildren(node, context);\n                }\n                else if (context) {\n                    _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n                }\n                else {\n                    _this.deactivateRouteAndItsChildren(node, null);\n                }\n            });\n            if (!r.component) {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n            else if (context && context.outlet && context.outlet.isActivated) {\n                this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n            }\n            else {\n                this.canDeactivateChecks.push(new CanDeactivate(null, r));\n            }\n        };\n        PreActivation.prototype.runCanDeactivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canDeactivateChecks)\n                .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runCanActivateChecks = function () {\n            var _this = this;\n            return rxjs.from(this.canActivateChecks)\n                .pipe(operators.concatMap(function (check) { return andObservables(rxjs.from([\n                _this.fireChildActivationStart(check.route.parent),\n                _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                _this.runCanActivate(check.route)\n            ])); }), operators.every(function (result) { return result === true; }));\n            // this.fireChildActivationStart(check.path),\n        };\n        /**\n         * This should fire off `ActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        /**\n         * This should fire off `ChildActivationStart` events for each route being activated at this\n         * level.\n         * In other words, if you're activating `a` and `b` below, `path` will contain the\n         * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n         * return\n         * `true` so checks continue to run.\n         */\n        PreActivation.prototype.fireChildActivationStart = function (snapshot) {\n            if (snapshot !== null && this.forwardEvent) {\n                this.forwardEvent(new ChildActivationStart(snapshot));\n            }\n            return rxjs.of(true);\n        };\n        PreActivation.prototype.runCanActivate = function (future) {\n            var _this = this;\n            var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n            if (!canActivate || canActivate.length === 0)\n                return rxjs.of(true);\n            var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, future);\n                var observable;\n                if (guard.canActivate) {\n                    observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        };\n        PreActivation.prototype.runCanActivateChild = function (path) {\n            var _this = this;\n            var future = path[path.length - 1];\n            var canActivateChildGuards = path.slice(0, path.length - 1)\n                .reverse()\n                .map(function (p) { return _this.extractCanActivateChild(p); })\n                .filter(function (_) { return _ !== null; });\n            return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n                var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                    var guard = _this.getToken(c, d.node);\n                    var observable;\n                    if (guard.canActivateChild) {\n                        observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                    }\n                    else {\n                        observable = wrapIntoObservable(guard(future, _this.future));\n                    }\n                    return observable.pipe(operators.first());\n                }));\n                return andObservables(obs);\n            })));\n        };\n        PreActivation.prototype.extractCanActivateChild = function (p) {\n            var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n            if (!canActivateChild || canActivateChild.length === 0)\n                return null;\n            return { node: p, guards: canActivateChild };\n        };\n        PreActivation.prototype.runCanDeactivate = function (component, curr) {\n            var _this = this;\n            var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n            if (!canDeactivate || canDeactivate.length === 0)\n                return rxjs.of(true);\n            var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n                var guard = _this.getToken(c, curr);\n                var observable;\n                if (guard.canDeactivate) {\n                    observable =\n                        wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n        };\n        PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n            var resolve = future._resolve;\n            return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n                future._resolvedData = resolvedData;\n                future.data = __assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n                return null;\n            }));\n        };\n        PreActivation.prototype.resolveNode = function (resolve, future) {\n            var _this = this;\n            var keys = Object.keys(resolve);\n            if (keys.length === 0) {\n                return rxjs.of({});\n            }\n            if (keys.length === 1) {\n                var key_1 = keys[0];\n                return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                    var _a;\n                    return _a = {}, _a[key_1] = value, _a;\n                }));\n            }\n            var data = {};\n            var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n                return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                    data[key] = value;\n                    return value;\n                }));\n            }));\n            return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n        };\n        PreActivation.prototype.getResolver = function (injectionToken, future) {\n            var resolver = this.getToken(injectionToken, future);\n            return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                wrapIntoObservable(resolver(future, this.future));\n        };\n        PreActivation.prototype.getToken = function (token, snapshot) {\n            var config = closestLoadedConfig(snapshot);\n            var injector = config ? config.module.injector : this.moduleInjector;\n            return injector.get(token);\n        };\n        return PreActivation;\n    }());\n    function closestLoadedConfig(snapshot) {\n        if (!snapshot)\n            return null;\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NoMatch$1 = /** @class */ (function () {\n        function NoMatch() {\n        }\n        return NoMatch;\n    }());\n    function recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n        if (relativeLinkResolution === void 0) { relativeLinkResolution = 'legacy'; }\n        return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n            .recognize();\n    }\n    var Recognizer = /** @class */ (function () {\n        function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n            this.rootComponentType = rootComponentType;\n            this.config = config;\n            this.urlTree = urlTree;\n            this.url = url;\n            this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n            this.relativeLinkResolution = relativeLinkResolution;\n        }\n        Recognizer.prototype.recognize = function () {\n            try {\n                var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n                var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n                var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n                var rootNode = new TreeNode(root, children);\n                var routeState = new RouterStateSnapshot(this.url, rootNode);\n                this.inheritParamsAndData(routeState._root);\n                return rxjs.of(routeState);\n            }\n            catch (e) {\n                return new rxjs.Observable(function (obs) { return obs.error(e); });\n            }\n        };\n        Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n            var _this = this;\n            var route = routeNode.value;\n            var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n            route.params = Object.freeze(i.params);\n            route.data = Object.freeze(i.data);\n            routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n        };\n        Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n            if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n                return this.processChildren(config, segmentGroup);\n            }\n            return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n        };\n        Recognizer.prototype.processChildren = function (config, segmentGroup) {\n            var _this = this;\n            var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n            checkOutletNameUniqueness(children);\n            sortActivatedRouteSnapshots(children);\n            return children;\n        };\n        Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n            var e_1, _a;\n            try {\n                for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                    var r = config_1_1.value;\n                    try {\n                        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                    }\n                    catch (e) {\n                        if (!(e instanceof NoMatch$1))\n                            throw e;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                return [];\n            }\n            throw new NoMatch$1();\n        };\n        Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n            return segments.length === 0 && !segmentGroup.children[outlet];\n        };\n        Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n            if (route.redirectTo)\n                throw new NoMatch$1();\n            if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n                throw new NoMatch$1();\n            var snapshot;\n            var consumedSegments = [];\n            var rawSlicedSegments = [];\n            if (route.path === '**') {\n                var params = segments.length > 0 ? last(segments).parameters : {};\n                snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n            }\n            else {\n                var result = match$1(rawSegment, route, segments);\n                consumedSegments = result.consumedSegments;\n                rawSlicedSegments = segments.slice(result.lastChild);\n                snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n            }\n            var childConfig = getChildConfig(route);\n            var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var children_1 = this.processChildren(childConfig, segmentGroup);\n                return [new TreeNode(snapshot, children_1)];\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return [new TreeNode(snapshot, [])];\n            }\n            var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n            return [new TreeNode(snapshot, children)];\n        };\n        return Recognizer;\n    }());\n    function sortActivatedRouteSnapshots(nodes) {\n        nodes.sort(function (a, b) {\n            if (a.value.outlet === PRIMARY_OUTLET)\n                return -1;\n            if (b.value.outlet === PRIMARY_OUTLET)\n                return 1;\n            return a.value.outlet.localeCompare(b.value.outlet);\n        });\n    }\n    function getChildConfig(route) {\n        if (route.children) {\n            return route.children;\n        }\n        if (route.loadChildren) {\n            return route._loadedConfig.routes;\n        }\n        return [];\n    }\n    function match$1(segmentGroup, route, segments) {\n        if (route.path === '') {\n            if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n                throw new NoMatch$1();\n            }\n            return { consumedSegments: [], lastChild: 0, parameters: {} };\n        }\n        var matcher = route.matcher || defaultUrlMatcher;\n        var res = matcher(segments, segmentGroup, route);\n        if (!res)\n            throw new NoMatch$1();\n        var posParams = {};\n        forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n        var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n            posParams;\n        return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n    }\n    function checkOutletNameUniqueness(nodes) {\n        var names = {};\n        nodes.forEach(function (n) {\n            var routeWithSameOutletName = names[n.value.outlet];\n            if (routeWithSameOutletName) {\n                var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n                var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n                throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n            }\n            names[n.value.outlet] = n.value;\n        });\n    }\n    function getSourceSegmentGroup(segmentGroup) {\n        var s = segmentGroup;\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n        }\n        return s;\n    }\n    function getPathIndexShift(segmentGroup) {\n        var s = segmentGroup;\n        var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        while (s._sourceSegment) {\n            s = s._sourceSegment;\n            res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n        }\n        return res - 1;\n    }\n    function split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n        if (slicedSegments.length > 0 &&\n            containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n            var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n            s_1._sourceSegment = segmentGroup;\n            s_1._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_1, slicedSegments: [] };\n        }\n        if (slicedSegments.length === 0 &&\n            containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n            var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n            s_2._sourceSegment = segmentGroup;\n            s_2._segmentIndexShift = consumedSegments.length;\n            return { segmentGroup: s_2, slicedSegments: slicedSegments };\n        }\n        var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: slicedSegments };\n    }\n    function addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var r = routes_1_1.value;\n                if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    if (relativeLinkResolution === 'legacy') {\n                        s._segmentIndexShift = segmentGroup.segments.length;\n                    }\n                    else {\n                        s._segmentIndexShift = consumedSegments.length;\n                    }\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return __assign({}, children, res);\n    }\n    function createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n        var e_3, _a;\n        var res = {};\n        res[PRIMARY_OUTLET] = primarySegment;\n        primarySegment._sourceSegment = segmentGroup;\n        primarySegment._segmentIndexShift = consumedSegments.length;\n        try {\n            for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n                var r = routes_2_1.value;\n                if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                    var s = new UrlSegmentGroup([], {});\n                    s._sourceSegment = segmentGroup;\n                    s._segmentIndexShift = consumedSegments.length;\n                    res[getOutlet$1(r)] = s;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    }\n    function containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n    }\n    function containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n        return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n    }\n    function emptyPathMatch(segmentGroup, slicedSegments, r) {\n        if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n            return false;\n        }\n        return r.path === '' && r.redirectTo === undefined;\n    }\n    function getOutlet$1(route) {\n        return route.outlet || PRIMARY_OUTLET;\n    }\n    function getData(route) {\n        return route.data || {};\n    }\n    function getResolve(route) {\n        return route.resolve || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to customize when activated routes get reused.\n     *\n     * @experimental\n     */\n    var RouteReuseStrategy = /** @class */ (function () {\n        function RouteReuseStrategy() {\n        }\n        return RouteReuseStrategy;\n    }());\n    /**\n     * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n     */\n    var DefaultRouteReuseStrategy = /** @class */ (function () {\n        function DefaultRouteReuseStrategy() {\n        }\n        DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n        DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n        DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n        DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n            return future.routeConfig === curr.routeConfig;\n        };\n        return DefaultRouteReuseStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @docsNotRequired\n     * @experimental\n     */\n    var ROUTES = new core.InjectionToken('ROUTES');\n    var RouterConfigLoader = /** @class */ (function () {\n        function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n            this.loader = loader;\n            this.compiler = compiler;\n            this.onLoadStartListener = onLoadStartListener;\n            this.onLoadEndListener = onLoadEndListener;\n        }\n        RouterConfigLoader.prototype.load = function (parentInjector, route) {\n            var _this = this;\n            if (this.onLoadStartListener) {\n                this.onLoadStartListener(route);\n            }\n            var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n            return moduleFactory$.pipe(operators.map(function (factory) {\n                if (_this.onLoadEndListener) {\n                    _this.onLoadEndListener(route);\n                }\n                var module = factory.create(parentInjector);\n                return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n            }));\n        };\n        RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n            var _this = this;\n            if (typeof loadChildren === 'string') {\n                return rxjs.from(this.loader.load(loadChildren));\n            }\n            else {\n                return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                    if (t instanceof core.NgModuleFactory) {\n                        return rxjs.of(t);\n                    }\n                    else {\n                        return rxjs.from(_this.compiler.compileModuleAsync(t));\n                    }\n                }));\n            }\n        };\n        return RouterConfigLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Provides a way to migrate AngularJS applications to Angular.\n     *\n     * @experimental\n     */\n    var UrlHandlingStrategy = /** @class */ (function () {\n        function UrlHandlingStrategy() {\n        }\n        return UrlHandlingStrategy;\n    }());\n    /**\n     * @experimental\n     */\n    var DefaultUrlHandlingStrategy = /** @class */ (function () {\n        function DefaultUrlHandlingStrategy() {\n        }\n        DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n        DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n        DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n        return DefaultUrlHandlingStrategy;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function defaultErrorHandler(error) {\n        throw error;\n    }\n    function defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n        return urlSerializer.parse('/');\n    }\n    /**\n     * @internal\n     */\n    function defaultRouterHook(snapshot, runExtras) {\n        return rxjs.of(null);\n    }\n    /**\n     * @description\n     *\n     * Provides the navigation and url manipulation capabilities.\n     *\n     * See `Routes` for more details and examples.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var Router = /** @class */ (function () {\n        /**\n         * Creates the router service.\n         */\n        // TODO: vsavkin make internal after the final is out.\n        function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n            var _this = this;\n            this.rootComponentType = rootComponentType;\n            this.urlSerializer = urlSerializer;\n            this.rootContexts = rootContexts;\n            this.location = location;\n            this.config = config;\n            this.navigations = new rxjs.BehaviorSubject(null);\n            this.navigationId = 0;\n            this.isNgZoneEnabled = false;\n            this.events = new rxjs.Subject();\n            /**\n             * Error handler that is invoked when a navigation errors.\n             *\n             * See `ErrorHandler` for more information.\n             */\n            this.errorHandler = defaultErrorHandler;\n            /**\n             * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n             * error due to containing an invalid character. The most common case would be a `%` sign\n             * that's not encoded and is not part of a percent encoded sequence.\n             */\n            this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n            /**\n             * Indicates if at least one navigation happened.\n             */\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n            /**\n             * Used by RouterModule. This allows us to\n             * pause the navigation either before preactivation or after it.\n             * @internal\n             */\n            this.hooks = {\n                beforePreactivation: defaultRouterHook,\n                afterPreactivation: defaultRouterHook\n            };\n            /**\n             * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n             */\n            this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n            this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n            /**\n             * Define what the router should do if it receives a navigation request to the current URL.\n             * By default, the router will ignore this navigation. However, this prevents features such\n             * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n             * current URL. Default is 'ignore'.\n             */\n            this.onSameUrlNavigation = 'ignore';\n            /**\n             * Defines how the router merges params, data and resolved data from parent to child\n             * routes. Available options are:\n             *\n             * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n             *   routes.\n             * - `'always'`, enables unconditional inheritance of parent params.\n             */\n            this.paramsInheritanceStrategy = 'emptyOnly';\n            /**\n             * Defines when the router updates the browser URL. The default behavior is to update after\n             * successful navigation. However, some applications may prefer a mode where the URL gets\n             * updated at the beginning of navigation. The most common use case would be updating the\n             * URL early so if navigation fails, you can show an error message with the URL that failed.\n             * Available options are:\n             *\n             * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n             * - `'eager'`, updates browser URL at the beginning of navigation.\n             */\n            this.urlUpdateStrategy = 'deferred';\n            /**\n             * See {@link RouterModule} for more information.\n             */\n            this.relativeLinkResolution = 'legacy';\n            var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.ngModule = injector.get(core.NgModuleRef);\n            this.console = injector.get(core.ɵConsole);\n            var ngZone = injector.get(core.NgZone);\n            this.isNgZoneEnabled = ngZone instanceof core.NgZone;\n            this.resetConfig(config);\n            this.currentUrlTree = createEmptyUrlTree();\n            this.rawUrlTree = this.currentUrlTree;\n            this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n            this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n            this.processNavigations();\n        }\n        /**\n         * @internal\n         * TODO: this should be removed once the constructor of the router made internal\n         */\n        Router.prototype.resetRootComponentType = function (rootComponentType) {\n            this.rootComponentType = rootComponentType;\n            // TODO: vsavkin router 4.0 should make the root component set to null\n            // this will simplify the lifecycle of the router.\n            this.routerState.root.component = this.rootComponentType;\n        };\n        /**\n         * Sets up the location change listener and performs the initial navigation.\n         */\n        Router.prototype.initialNavigation = function () {\n            this.setUpLocationChangeListener();\n            if (this.navigationId === 0) {\n                this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n            }\n        };\n        /**\n         * Sets up the location change listener.\n         */\n        Router.prototype.setUpLocationChangeListener = function () {\n            var _this = this;\n            // Don't need to use Zone.wrap any more, because zone.js\n            // already patch onPopState, so location change callback will\n            // run into ngZone\n            if (!this.locationSubscription) {\n                this.locationSubscription = this.location.subscribe(function (change) {\n                    var rawUrlTree = _this.parseUrl(change['url']);\n                    var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                    var state = change.state && change.state.navigationId ?\n                        { navigationId: change.state.navigationId } :\n                        null;\n                    setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n                });\n            }\n        };\n        Object.defineProperty(Router.prototype, \"url\", {\n            /** The current url */\n            get: function () { return this.serializeUrl(this.currentUrlTree); },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        Router.prototype.triggerEvent = function (event) { this.events.next(event); };\n        /**\n         * Resets the configuration used for navigation and generating links.\n         *\n         * @usageNotes\n         *\n         * ### Example\n         *\n         * ```\n         * router.resetConfig([\n         *  { path: 'team/:id', component: TeamCmp, children: [\n         *    { path: 'simple', component: SimpleCmp },\n         *    { path: 'user/:name', component: UserCmp }\n         *  ]}\n         * ]);\n         * ```\n         */\n        Router.prototype.resetConfig = function (config) {\n            validateConfig(config);\n            this.config = config.map(standardizeConfig);\n            this.navigated = false;\n            this.lastSuccessfulId = -1;\n        };\n        /** @docsNotRequired */\n        Router.prototype.ngOnDestroy = function () { this.dispose(); };\n        /** Disposes of the router */\n        Router.prototype.dispose = function () {\n            if (this.locationSubscription) {\n                this.locationSubscription.unsubscribe();\n                this.locationSubscription = null;\n            }\n        };\n        /**\n         * Applies an array of commands to the current url tree and creates a new url tree.\n         *\n         * When given an activate route, applies the given commands starting from the route.\n         * When not given a route, applies the given command starting from the root.\n         *\n         * @usageNotes\n         *\n         * ### Example\n         *\n         * ```\n         * // create /team/33/user/11\n         * router.createUrlTree(['/team', 33, 'user', 11]);\n         *\n         * // create /team/33;expand=true/user/11\n         * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n         *\n         * // you can collapse static segments like this (this works only with the first passed-in value):\n         * router.createUrlTree(['/team/33/user', userId]);\n         *\n         * // If the first segment can contain slashes, and you do not want the router to split it, you\n         * // can do the following:\n         *\n         * router.createUrlTree([{segmentPath: '/one/two'}]);\n         *\n         * // create /team/33/(user/11//right:chat)\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n         *\n         * // remove the right secondary node\n         * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n         *\n         * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n         *\n         * // navigate to /team/33/user/11/details\n         * router.createUrlTree(['details'], {relativeTo: route});\n         *\n         * // navigate to /team/33/user/22\n         * router.createUrlTree(['../22'], {relativeTo: route});\n         *\n         * // navigate to /team/44/user/22\n         * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n         * ```\n         */\n        Router.prototype.createUrlTree = function (commands, navigationExtras) {\n            if (navigationExtras === void 0) { navigationExtras = {}; }\n            var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n            if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            var a = relativeTo || this.routerState.root;\n            var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n            var q = null;\n            if (queryParamsHandling) {\n                switch (queryParamsHandling) {\n                    case 'merge':\n                        q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                        break;\n                    case 'preserve':\n                        q = this.currentUrlTree.queryParams;\n                        break;\n                    default:\n                        q = queryParams || null;\n                }\n            }\n            else {\n                q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n            }\n            if (q !== null) {\n                q = this.removeEmptyProps(q);\n            }\n            return createUrlTree(a, this.currentUrlTree, commands, q, f);\n        };\n        /**\n         * Navigate based on the provided url. This navigation is always absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * @usageNotes\n         *\n         * ### Example\n         *\n         * ```\n         * router.navigateByUrl(\"/team/33/user/11\");\n         *\n         * // Navigate without updating the URL\n         * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n         * ```\n         *\n         * Since `navigateByUrl()` takes an absolute URL as the first parameter,\n         * it will not apply any delta to the current URL and ignores any properties\n         * in the second parameter (the `NavigationExtras`) that would change the\n         * provided URL.\n         */\n        Router.prototype.navigateByUrl = function (url, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            if (core.isDevMode() && this.isNgZoneEnabled && !core.NgZone.isInAngularZone()) {\n                this.console.warn(\"Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?\");\n            }\n            var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n            var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n            return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n        };\n        /**\n         * Navigate based on the provided array of commands and a starting point.\n         * If no starting route is provided, the navigation is absolute.\n         *\n         * Returns a promise that:\n         * - resolves to 'true' when navigation succeeds,\n         * - resolves to 'false' when navigation fails,\n         * - is rejected when an error happens.\n         *\n         * @usageNotes\n         *\n         * ### Example\n         *\n         * ```\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n         *\n         * // Navigate without updating the URL\n         * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n         * ```\n         *\n         * The first parameter of `navigate()` is a delta to be applied to the current URL\n         * or the one provided in the `relativeTo` property of the second parameter (the\n         * `NavigationExtras`).\n         */\n        Router.prototype.navigate = function (commands, extras) {\n            if (extras === void 0) { extras = { skipLocationChange: false }; }\n            validateCommands(commands);\n            return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n        };\n        /** Serializes a `UrlTree` into a string */\n        Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n        /** Parses a string into a `UrlTree` */\n        Router.prototype.parseUrl = function (url) {\n            var urlTree;\n            try {\n                urlTree = this.urlSerializer.parse(url);\n            }\n            catch (e) {\n                urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n            }\n            return urlTree;\n        };\n        /** Returns whether the url is activated */\n        Router.prototype.isActive = function (url, exact) {\n            if (url instanceof UrlTree) {\n                return containsTree(this.currentUrlTree, url, exact);\n            }\n            var urlTree = this.parseUrl(url);\n            return containsTree(this.currentUrlTree, urlTree, exact);\n        };\n        Router.prototype.removeEmptyProps = function (params) {\n            return Object.keys(params).reduce(function (result, key) {\n                var value = params[key];\n                if (value !== null && value !== undefined) {\n                    result[key] = value;\n                }\n                return result;\n            }, {});\n        };\n        Router.prototype.processNavigations = function () {\n            var _this = this;\n            this.navigations\n                .pipe(operators.concatMap(function (nav) {\n                if (nav) {\n                    _this.executeScheduledNavigation(nav);\n                    // a failed navigation should not stop the router from processing\n                    // further navigations => the catch\n                    return nav.promise.catch(function () { });\n                }\n                else {\n                    return rxjs.of(null);\n                }\n            }))\n                .subscribe(function () { });\n        };\n        Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n            var lastNavigation = this.navigations.value;\n            // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n            // and that navigation results in 'replaceState' that leads to the same URL,\n            // we should skip those.\n            if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a popstate was emitted first.\n            if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            // Because of a bug in IE and Edge, the location class fires two events (popstate and\n            // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n            // flicker. Handles the case when a hashchange was emitted first.\n            if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n                lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n                return Promise.resolve(true); // return value is not used\n            }\n            var resolve = null;\n            var reject = null;\n            var promise = new Promise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var id = ++this.navigationId;\n            this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n            // Make sure that the error is propagated even though `processNavigations` catch\n            // handler does not rethrow\n            return promise.catch(function (e) { return Promise.reject(e); });\n        };\n        Router.prototype.executeScheduledNavigation = function (_a) {\n            var _this = this;\n            var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n            var url = this.urlHandlingStrategy.extract(rawUrl);\n            var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n            if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n                if (this.urlUpdateStrategy === 'eager' && !extras.skipLocationChange) {\n                    this.setBrowserUrl(rawUrl, !!extras.replaceUrl, id);\n                }\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null); })\n                    .then(resolve, reject);\n                // we cannot process the current URL, but we could process the previous one =>\n                // we need to do some cleanup\n            }\n            else if (urlTransition && this.rawUrlTree &&\n                this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n                this.events\n                    .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n                Promise.resolve()\n                    .then(function (_) { return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot); })\n                    .then(resolve, reject);\n            }\n            else {\n                this.rawUrlTree = rawUrl;\n                resolve(null);\n            }\n        };\n        Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n            var _this = this;\n            if (id !== this.navigationId) {\n                this.events\n                    .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n                return Promise.resolve(false);\n            }\n            return new Promise(function (resolvePromise, rejectPromise) {\n                // create an observable of the url and route state snapshot\n                // this operation do not result in any side effects\n                var urlAndSnapshot$;\n                if (!precreatedState) {\n                    var moduleInjector = _this.ngModule.injector;\n                    var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                    urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                        return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy, _this.relativeLinkResolution)\n                            .pipe(operators.map(function (snapshot) {\n                            _this.events\n                                .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                            return { appliedUrl: appliedUrl, snapshot: snapshot };\n                        }));\n                    }));\n                }\n                else {\n                    urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n                }\n                var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean')\n                        return rxjs.of(p);\n                    return _this.hooks\n                        .beforePreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // run preactivation: guards and data resolvers\n                var preActivation;\n                var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean')\n                        return p;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    var moduleInjector = _this.ngModule.injector;\n                    preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                    preActivation.initialize(_this.rootContexts);\n                    return { appliedUrl: appliedUrl, snapshot: snapshot };\n                }));\n                var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                    _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                    return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                        _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                    }));\n                }));\n                var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    if (p.shouldActivate && preActivation.isActivating()) {\n                        _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                            _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                            return p;\n                        }));\n                    }\n                    else {\n                        return rxjs.of(p);\n                    }\n                }));\n                var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return rxjs.of(false);\n                    return _this.hooks\n                        .afterPreactivation(p.snapshot, {\n                        navigationId: id,\n                        appliedUrlTree: url,\n                        rawUrlTree: rawUrl, skipLocationChange: skipLocationChange, replaceUrl: replaceUrl,\n                    })\n                        .pipe(operators.map(function () { return p; }));\n                }));\n                // create router state\n                // this operation has side effects => route state is being affected\n                var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                    if (typeof p === 'boolean' || _this.navigationId !== id)\n                        return false;\n                    var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                    if (shouldActivate) {\n                        var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                        return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                    }\n                    else {\n                        return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                    }\n                }));\n                _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n            });\n        };\n        /**\n         * Performs the logic of activating routes. This is a synchronous process by default. While this\n         * is a private method, it could be overridden to make activation asynchronous.\n         */\n        Router.prototype.activateRoutes = function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n            var _this = this;\n            // applied the new router state\n            // this operation has side effects\n            var navigationIsSuccessful;\n            state\n                .forEach(function (p) {\n                if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                var appliedUrl = p.appliedUrl, state = p.state;\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                _this.routerState = state;\n                if (_this.urlUpdateStrategy === 'deferred' && !skipLocationChange) {\n                    _this.setBrowserUrl(_this.rawUrlTree, replaceUrl, id);\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    _this.lastSuccessfulId = id;\n                    _this.events\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    _this.events\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        };\n        Router.prototype.setBrowserUrl = function (url, replaceUrl, id) {\n            var path = this.urlSerializer.serialize(url);\n            if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                this.location.replaceState(path, '', { navigationId: id });\n            }\n            else {\n                this.location.go(path, '', { navigationId: id });\n            }\n        };\n        Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n            this.routerState = storedState;\n            this.currentUrlTree = storedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            this.resetUrlToCurrentUrlTree();\n        };\n        Router.prototype.resetUrlToCurrentUrlTree = function () {\n            this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n        };\n        return Router;\n    }());\n    var ActivateRoutes = /** @class */ (function () {\n        function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n            this.routeReuseStrategy = routeReuseStrategy;\n            this.futureState = futureState;\n            this.currState = currState;\n            this.forwardEvent = forwardEvent;\n        }\n        ActivateRoutes.prototype.activate = function (parentContexts) {\n            var futureRoot = this.futureState._root;\n            var currRoot = this.currState ? this.currState._root : null;\n            this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n            advanceActivatedRoute(this.futureState.root);\n            this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n        };\n        // De-activate the child route that are not re-used for the future state\n        ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            // Recurse on the routes active in the future state to de-activate deeper children\n            futureNode.children.forEach(function (futureChild) {\n                var childOutletName = futureChild.value.outlet;\n                _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n                delete children[childOutletName];\n            });\n            // De-activate the routes that will not be re-used\n            forEach(children, function (v, childName) {\n                _this.deactivateRouteAndItsChildren(v, contexts);\n            });\n        };\n        ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            if (future === curr) {\n                // Reusing the node, check to see if the children need to be de-activated\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContext.getContext(future.outlet);\n                    if (context) {\n                        this.deactivateChildRoutes(futureNode, currNode, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.deactivateChildRoutes(futureNode, currNode, parentContext);\n                }\n            }\n            else {\n                if (curr) {\n                    // Deactivate the current route which will not be re-used\n                    this.deactivateRouteAndItsChildren(currNode, parentContext);\n                }\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n            if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n                this.detachAndStoreRouteSubtree(route, parentContexts);\n            }\n            else {\n                this.deactivateRouteAndOutlet(route, parentContexts);\n            }\n        };\n        ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context && context.outlet) {\n                var componentRef = context.outlet.detach();\n                var contexts = context.children.onOutletDeactivated();\n                this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n            }\n        };\n        ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n            var _this = this;\n            var context = parentContexts.getContext(route.value.outlet);\n            if (context) {\n                var children = nodeChildrenAsMap(route);\n                var contexts_1 = route.value.component ? context.children : parentContexts;\n                forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n                if (context.outlet) {\n                    // Destroy the component\n                    context.outlet.deactivate();\n                    // Destroy the contexts for all the outlets that were in the component\n                    context.children.onOutletDeactivated();\n                }\n            }\n        };\n        ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n            var _this = this;\n            var children = nodeChildrenAsMap(currNode);\n            futureNode.children.forEach(function (c) {\n                _this.activateRoutes(c, children[c.value.outlet], contexts);\n                _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n            });\n            if (futureNode.children.length) {\n                this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n            }\n        };\n        ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n            var future = futureNode.value;\n            var curr = currNode ? currNode.value : null;\n            advanceActivatedRoute(future);\n            // reusing the node\n            if (future === curr) {\n                if (future.component) {\n                    // If we have a normal route, we need to go through an outlet.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    this.activateChildRoutes(futureNode, currNode, context.children);\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, currNode, parentContexts);\n                }\n            }\n            else {\n                if (future.component) {\n                    // if we have a normal route, we need to place the component into the outlet and recurse.\n                    var context = parentContexts.getOrCreateContext(future.outlet);\n                    if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                        var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                        this.routeReuseStrategy.store(future.snapshot, null);\n                        context.children.onOutletReAttached(stored.contexts);\n                        context.attachRef = stored.componentRef;\n                        context.route = stored.route.value;\n                        if (context.outlet) {\n                            // Attach right away when the outlet has already been instantiated\n                            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                            context.outlet.attach(stored.componentRef, stored.route.value);\n                        }\n                        advanceActivatedRouteNodeAndItsChildren(stored.route);\n                    }\n                    else {\n                        var config = parentLoadedConfig(future.snapshot);\n                        var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                        context.attachRef = null;\n                        context.route = future;\n                        context.resolver = cmpFactoryResolver;\n                        if (context.outlet) {\n                            // Activate the outlet when it has already been instantiated\n                            // Otherwise it will get activated from its `ngOnInit` when instantiated\n                            context.outlet.activateWith(future, cmpFactoryResolver);\n                        }\n                        this.activateChildRoutes(futureNode, null, context.children);\n                    }\n                }\n                else {\n                    // if we have a componentless route, we recurse but keep the same outlet map.\n                    this.activateChildRoutes(futureNode, null, parentContexts);\n                }\n            }\n        };\n        return ActivateRoutes;\n    }());\n    function advanceActivatedRouteNodeAndItsChildren(node) {\n        advanceActivatedRoute(node.value);\n        node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n    }\n    function parentLoadedConfig(snapshot) {\n        for (var s = snapshot.parent; s; s = s.parent) {\n            var route = s.routeConfig;\n            if (route && route._loadedConfig)\n                return route._loadedConfig;\n            if (route && route.component)\n                return null;\n        }\n        return null;\n    }\n    function validateCommands(commands) {\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            if (cmd == null) {\n                throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * Consider the following route configuration:\n     * `[{ path: 'user/:name', component: UserCmp }]`.\n     * When linking to this `user/:name` route, you use the `RouterLink` directive.\n     *\n     * If the link is static, you can use the directive as follows:\n     * `<a routerLink=\"/user/bob\">link to user component</a>`\n     *\n     * If you use dynamic values to generate the link, you can pass an array of path\n     * segments, followed by the params for each segment.\n     *\n     * For instance `['/team', teamId, 'user', userName, {details: true}]`\n     * means that we want to generate a link to `/team/11/user/bob;details=true`.\n     *\n     * Multiple static segments can be merged into one\n     * (e.g., `['/team/11/user', userName, {details: true}]`).\n     *\n     * The first segment name can be prepended with `/`, `./`, or `../`:\n     * * If the first segment begins with `/`, the router will look up the route from the root of the\n     *   app.\n     * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n     *   instead look in the children of the current activated route.\n     * * And if the first segment begins with `../`, the router will go up one level.\n     *\n     * You can set query params and fragment as follows:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n     *   link to user component\n     * </a>\n     * ```\n     * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n     *\n     * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n     * directive to preserve the current query params and fragment:\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * You can tell the directive to how to handle queryParams, available options are:\n     *  - `'merge'`: merge the queryParams into the current queryParams\n     *  - `'preserve'`: preserve the current queryParams\n     *  - default/`''`: use the queryParams only\n     *\n     * Same options for {@link NavigationExtras#queryParamsHandling\n     * NavigationExtras#queryParamsHandling}.\n     *\n     * ```\n     * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n     *   link to user component\n     * </a>\n     * ```\n     *\n     * The router link directive always treats the provided input as a delta to the current url.\n     *\n     * For instance, if the current url is `/user/(box//aux:team)`.\n     *\n     * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n     * `/user/(jim//aux:team)`.\n     *\n     * See {@link Router#createUrlTree createUrlTree} for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLink = /** @class */ (function () {\n        function RouterLink(router, route, tabIndex, renderer, el) {\n            this.router = router;\n            this.route = route;\n            this.commands = [];\n            if (tabIndex == null) {\n                renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n            }\n        }\n        Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n            /**\n             * @deprecated 4.0.0 use `queryParamsHandling` instead.\n             */\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLink.prototype.onClick = function () {\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return true;\n        };\n        Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object)\n        ], RouterLink.prototype, \"queryParams\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLink.prototype, \"fragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLink.prototype, \"queryParamsHandling\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLink.prototype, \"preserveFragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLink.prototype, \"skipLocationChange\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLink.prototype, \"replaceUrl\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object),\n            __metadata(\"design:paramtypes\", [Object])\n        ], RouterLink.prototype, \"routerLink\", null);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean),\n            __metadata(\"design:paramtypes\", [Boolean])\n        ], RouterLink.prototype, \"preserveQueryParams\", null);\n        __decorate([\n            core.HostListener('click'),\n            __metadata(\"design:type\", Function),\n            __metadata(\"design:paramtypes\", []),\n            __metadata(\"design:returntype\", Boolean)\n        ], RouterLink.prototype, \"onClick\", null);\n        RouterLink = __decorate([\n            core.Directive({ selector: ':not(a)[routerLink]' }),\n            __param(2, core.Attribute('tabindex')),\n            __metadata(\"design:paramtypes\", [Router, ActivatedRoute, String, core.Renderer2, core.ElementRef])\n        ], RouterLink);\n        return RouterLink;\n    }());\n    /**\n     * @description\n     *\n     * Lets you link to specific routes in your app.\n     *\n     * See `RouterLink` for more information.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkWithHref = /** @class */ (function () {\n        function RouterLinkWithHref(router, route, locationStrategy) {\n            var _this = this;\n            this.router = router;\n            this.route = route;\n            this.locationStrategy = locationStrategy;\n            this.commands = [];\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.updateTargetUrlAndHref();\n                }\n            });\n        }\n        Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n            set: function (commands) {\n                if (commands != null) {\n                    this.commands = Array.isArray(commands) ? commands : [commands];\n                }\n                else {\n                    this.commands = [];\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n            set: function (value) {\n                if (core.isDevMode() && console && console.warn) {\n                    console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n                }\n                this.preserve = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n        RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n            if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n                return true;\n            }\n            if (typeof this.target === 'string' && this.target != '_self') {\n                return true;\n            }\n            var extras = {\n                skipLocationChange: attrBoolValue(this.skipLocationChange),\n                replaceUrl: attrBoolValue(this.replaceUrl),\n            };\n            this.router.navigateByUrl(this.urlTree, extras);\n            return false;\n        };\n        RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n            this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n        };\n        Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n            get: function () {\n                return this.router.createUrlTree(this.commands, {\n                    relativeTo: this.route,\n                    queryParams: this.queryParams,\n                    fragment: this.fragment,\n                    preserveQueryParams: attrBoolValue(this.preserve),\n                    queryParamsHandling: this.queryParamsHandling,\n                    preserveFragment: attrBoolValue(this.preserveFragment),\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        __decorate([\n            core.HostBinding('attr.target'), core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"target\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object)\n        ], RouterLinkWithHref.prototype, \"queryParams\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"fragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"queryParamsHandling\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLinkWithHref.prototype, \"preserveFragment\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLinkWithHref.prototype, \"skipLocationChange\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean)\n        ], RouterLinkWithHref.prototype, \"replaceUrl\", void 0);\n        __decorate([\n            core.HostBinding(),\n            __metadata(\"design:type\", String)\n        ], RouterLinkWithHref.prototype, \"href\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object),\n            __metadata(\"design:paramtypes\", [Object])\n        ], RouterLinkWithHref.prototype, \"routerLink\", null);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Boolean),\n            __metadata(\"design:paramtypes\", [Boolean])\n        ], RouterLinkWithHref.prototype, \"preserveQueryParams\", null);\n        __decorate([\n            core.HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']),\n            __metadata(\"design:type\", Function),\n            __metadata(\"design:paramtypes\", [Number, Boolean, Boolean, Boolean]),\n            __metadata(\"design:returntype\", Boolean)\n        ], RouterLinkWithHref.prototype, \"onClick\", null);\n        RouterLinkWithHref = __decorate([\n            core.Directive({ selector: 'a[routerLink]' }),\n            __metadata(\"design:paramtypes\", [Router, ActivatedRoute,\n                common.LocationStrategy])\n        ], RouterLinkWithHref);\n        return RouterLinkWithHref;\n    }());\n    function attrBoolValue(s) {\n        return s === '' || !!s;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * @description\n     *\n     * Lets you add a CSS class to an element when the link's route becomes active.\n     *\n     * This directive lets you add a CSS class to an element when the link's route\n     * becomes active.\n     *\n     * Consider the following example:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n     * ```\n     *\n     * When the url is either '/user' or '/user/bob', the active-link class will\n     * be added to the `a` tag. If the url changes, the class will be removed.\n     *\n     * You can set more than one class, as follows:\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n     * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n     * ```\n     *\n     * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n     * only when the url matches the link exactly.\n     *\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n     * true}\">Bob</a>\n     * ```\n     *\n     * You can assign the RouterLinkActive instance to a template variable and directly check\n     * the `isActive` status.\n     * ```\n     * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n     *   Bob {{ rla.isActive ? '(already open)' : ''}}\n     * </a>\n     * ```\n     *\n     * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n     *\n     * ```\n     * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n     *   <a routerLink=\"/user/jim\">Jim</a>\n     *   <a routerLink=\"/user/bob\">Bob</a>\n     * </div>\n     * ```\n     *\n     * This will set the active-link class on the div tag if the url is either '/user/jim' or\n     * '/user/bob'.\n     *\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterLinkActive = /** @class */ (function () {\n        function RouterLinkActive(router, element, renderer, cdr) {\n            var _this = this;\n            this.router = router;\n            this.element = element;\n            this.renderer = renderer;\n            this.cdr = cdr;\n            this.classes = [];\n            this.isActive = false;\n            this.routerLinkActiveOptions = { exact: false };\n            this.subscription = router.events.subscribe(function (s) {\n                if (s instanceof NavigationEnd) {\n                    _this.update();\n                }\n            });\n        }\n        RouterLinkActive.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this.links.changes.subscribe(function (_) { return _this.update(); });\n            this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n            this.update();\n        };\n        Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n            set: function (data) {\n                var classes = Array.isArray(data) ? data : data.split(' ');\n                this.classes = classes.filter(function (c) { return !!c; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n        RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterLinkActive.prototype.update = function () {\n            var _this = this;\n            if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n                return;\n            Promise.resolve().then(function () {\n                var hasActiveLinks = _this.hasActiveLinks();\n                if (_this.isActive !== hasActiveLinks) {\n                    _this.isActive = hasActiveLinks;\n                    _this.classes.forEach(function (c) {\n                        if (hasActiveLinks) {\n                            _this.renderer.addClass(_this.element.nativeElement, c);\n                        }\n                        else {\n                            _this.renderer.removeClass(_this.element.nativeElement, c);\n                        }\n                    });\n                }\n            });\n        };\n        RouterLinkActive.prototype.isLinkActive = function (router) {\n            var _this = this;\n            return function (link) {\n                return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n            };\n        };\n        RouterLinkActive.prototype.hasActiveLinks = function () {\n            return this.links.some(this.isLinkActive(this.router)) ||\n                this.linksWithHrefs.some(this.isLinkActive(this.router));\n        };\n        __decorate([\n            core.ContentChildren(RouterLink, { descendants: true }),\n            __metadata(\"design:type\", core.QueryList)\n        ], RouterLinkActive.prototype, \"links\", void 0);\n        __decorate([\n            core.ContentChildren(RouterLinkWithHref, { descendants: true }),\n            __metadata(\"design:type\", core.QueryList)\n        ], RouterLinkActive.prototype, \"linksWithHrefs\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object)\n        ], RouterLinkActive.prototype, \"routerLinkActiveOptions\", void 0);\n        __decorate([\n            core.Input(),\n            __metadata(\"design:type\", Object),\n            __metadata(\"design:paramtypes\", [Object])\n        ], RouterLinkActive.prototype, \"routerLinkActive\", null);\n        RouterLinkActive = __decorate([\n            core.Directive({\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            }),\n            __metadata(\"design:paramtypes\", [Router, core.ElementRef, core.Renderer2,\n                core.ChangeDetectorRef])\n        ], RouterLinkActive);\n        return RouterLinkActive;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store contextual information about a `RouterOutlet`\n     *\n     *\n     */\n    var OutletContext = /** @class */ (function () {\n        function OutletContext() {\n            this.outlet = null;\n            this.route = null;\n            this.resolver = null;\n            this.children = new ChildrenOutletContexts();\n            this.attachRef = null;\n        }\n        return OutletContext;\n    }());\n    /**\n     * Store contextual information about the children (= nested) `RouterOutlet`\n     *\n     *\n     */\n    var ChildrenOutletContexts = /** @class */ (function () {\n        function ChildrenOutletContexts() {\n            // contexts for child outlets, by name.\n            this.contexts = new Map();\n        }\n        /** Called when a `RouterOutlet` directive is instantiated */\n        ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n            var context = this.getOrCreateContext(childName);\n            context.outlet = outlet;\n            this.contexts.set(childName, context);\n        };\n        /**\n         * Called when a `RouterOutlet` directive is destroyed.\n         * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n         * re-created later.\n         */\n        ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n            var context = this.getContext(childName);\n            if (context) {\n                context.outlet = null;\n            }\n        };\n        /**\n         * Called when the corresponding route is deactivated during navigation.\n         * Because the component get destroyed, all children outlet are destroyed.\n         */\n        ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n            var contexts = this.contexts;\n            this.contexts = new Map();\n            return contexts;\n        };\n        ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n        ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n            var context = this.getContext(childName);\n            if (!context) {\n                context = new OutletContext();\n                this.contexts.set(childName, context);\n            }\n            return context;\n        };\n        ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n        return ChildrenOutletContexts;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Acts as a placeholder that Angular dynamically fills based on the current router state.\n     *\n     * ```\n     * <router-outlet></router-outlet>\n     * <router-outlet name='left'></router-outlet>\n     * <router-outlet name='right'></router-outlet>\n     * ```\n     *\n     * A router outlet will emit an activate event any time a new component is being instantiated,\n     * and a deactivate event when it is being destroyed.\n     *\n     * ```\n     * <router-outlet\n     *   (activate)='onActivate($event)'\n     *   (deactivate)='onDeactivate($event)'></router-outlet>\n     * ```\n     * @ngModule RouterModule\n     *\n     *\n     */\n    var RouterOutlet = /** @class */ (function () {\n        function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n            this.parentContexts = parentContexts;\n            this.location = location;\n            this.resolver = resolver;\n            this.changeDetector = changeDetector;\n            this.activated = null;\n            this._activatedRoute = null;\n            this.activateEvents = new core.EventEmitter();\n            this.deactivateEvents = new core.EventEmitter();\n            this.name = name || PRIMARY_OUTLET;\n            parentContexts.onChildOutletCreated(this.name, this);\n        }\n        RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n        RouterOutlet.prototype.ngOnInit = function () {\n            if (!this.activated) {\n                // If the outlet was not instantiated at the time the route got activated we need to populate\n                // the outlet when it is initialized (ie inside a NgIf)\n                var context = this.parentContexts.getContext(this.name);\n                if (context && context.route) {\n                    if (context.attachRef) {\n                        // `attachRef` is populated when there is an existing component to mount\n                        this.attach(context.attachRef, context.route);\n                    }\n                    else {\n                        // otherwise the component defined in the configuration is created\n                        this.activateWith(context.route, context.resolver || null);\n                    }\n                }\n            }\n        };\n        Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n            get: function () { return !!this.activated; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"component\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this.activated.instance;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n            get: function () {\n                if (!this.activated)\n                    throw new Error('Outlet is not activated');\n                return this._activatedRoute;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n            get: function () {\n                if (this._activatedRoute) {\n                    return this._activatedRoute.snapshot.data;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Called when the `RouteReuseStrategy` instructs to detach the subtree\n         */\n        RouterOutlet.prototype.detach = function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            this.location.detach();\n            var cmp = this.activated;\n            this.activated = null;\n            this._activatedRoute = null;\n            return cmp;\n        };\n        /**\n         * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n         */\n        RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n            this.activated = ref;\n            this._activatedRoute = activatedRoute;\n            this.location.insert(ref.hostView);\n        };\n        RouterOutlet.prototype.deactivate = function () {\n            if (this.activated) {\n                var c = this.component;\n                this.activated.destroy();\n                this.activated = null;\n                this._activatedRoute = null;\n                this.deactivateEvents.emit(c);\n            }\n        };\n        RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n            if (this.isActivated) {\n                throw new Error('Cannot activate an already activated outlet');\n            }\n            this._activatedRoute = activatedRoute;\n            var snapshot = activatedRoute._futureSnapshot;\n            var component = snapshot.routeConfig.component;\n            resolver = resolver || this.resolver;\n            var factory = resolver.resolveComponentFactory(component);\n            var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n            var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n            this.activated = this.location.createComponent(factory, this.location.length, injector);\n            // Calling `markForCheck` to make sure we will run the change detection when the\n            // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n            this.changeDetector.markForCheck();\n            this.activateEvents.emit(this.activated.instance);\n        };\n        __decorate([\n            core.Output('activate'),\n            __metadata(\"design:type\", Object)\n        ], RouterOutlet.prototype, \"activateEvents\", void 0);\n        __decorate([\n            core.Output('deactivate'),\n            __metadata(\"design:type\", Object)\n        ], RouterOutlet.prototype, \"deactivateEvents\", void 0);\n        RouterOutlet = __decorate([\n            core.Directive({ selector: 'router-outlet', exportAs: 'outlet' }),\n            __param(3, core.Attribute('name')),\n            __metadata(\"design:paramtypes\", [ChildrenOutletContexts, core.ViewContainerRef,\n                core.ComponentFactoryResolver, String, core.ChangeDetectorRef])\n        ], RouterOutlet);\n        return RouterOutlet;\n    }());\n    var OutletInjector = /** @class */ (function () {\n        function OutletInjector(route, childContexts, parent) {\n            this.route = route;\n            this.childContexts = childContexts;\n            this.parent = parent;\n        }\n        OutletInjector.prototype.get = function (token, notFoundValue) {\n            if (token === ActivatedRoute) {\n                return this.route;\n            }\n            if (token === ChildrenOutletContexts) {\n                return this.childContexts;\n            }\n            return this.parent.get(token, notFoundValue);\n        };\n        return OutletInjector;\n    }());\n\n    /**\n    *@license\n    *Copyright Google Inc. All Rights Reserved.\n    *\n    *Use of this source code is governed by an MIT-style license that can be\n    *found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * @description\n     *\n     * Provides a preloading strategy.\n     *\n     * @experimental\n     */\n    var PreloadingStrategy = /** @class */ (function () {\n        function PreloadingStrategy() {\n        }\n        return PreloadingStrategy;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that preloads all modules as quickly as possible.\n     *\n     * ```\n     * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n     * ```\n     *\n     * @experimental\n     */\n    var PreloadAllModules = /** @class */ (function () {\n        function PreloadAllModules() {\n        }\n        PreloadAllModules.prototype.preload = function (route, fn) {\n            return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n        };\n        return PreloadAllModules;\n    }());\n    /**\n     * @description\n     *\n     * Provides a preloading strategy that does not preload any modules.\n     *\n     * This strategy is enabled by default.\n     *\n     * @experimental\n     */\n    var NoPreloading = /** @class */ (function () {\n        function NoPreloading() {\n        }\n        NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n        return NoPreloading;\n    }());\n    /**\n     * The preloader optimistically loads all router configurations to\n     * make navigations into lazily-loaded sections of the application faster.\n     *\n     * The preloader runs in the background. When the router bootstraps, the preloader\n     * starts listening to all navigation events. After every such event, the preloader\n     * will check if any configurations can be loaded lazily.\n     *\n     * If a route is protected by `canLoad` guards, the preloaded will not load it.\n     *\n     *\n     */\n    var RouterPreloader = /** @class */ (function () {\n        function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n            this.router = router;\n            this.injector = injector;\n            this.preloadingStrategy = preloadingStrategy;\n            var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n            var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n            this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n        }\n        RouterPreloader.prototype.setUpPreloading = function () {\n            var _this = this;\n            this.subscription =\n                this.router.events\n                    .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                    .subscribe(function () { });\n        };\n        RouterPreloader.prototype.preload = function () {\n            var ngModule = this.injector.get(core.NgModuleRef);\n            return this.processRoutes(ngModule, this.router.config);\n        };\n        // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n        // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n        // should be refactored.\n        RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n        RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n            var e_1, _a;\n            var res = [];\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    // we already have the config loaded, just recurse\n                    if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                        var childConfig = route._loadedConfig;\n                        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                        // no config loaded, fetch the config\n                    }\n                    else if (route.loadChildren && !route.canLoad) {\n                        res.push(this.preloadConfig(ngModule, route));\n                        // recurse into children\n                    }\n                    else if (route.children) {\n                        res.push(this.processRoutes(ngModule, route.children));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        };\n        RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n            var _this = this;\n            return this.preloadingStrategy.preload(route, function () {\n                var loaded$ = _this.loader.load(ngModule.injector, route);\n                return loaded$.pipe(operators.mergeMap(function (config) {\n                    route._loadedConfig = config;\n                    return _this.processRoutes(config.module, config.routes);\n                }));\n            });\n        };\n        RouterPreloader = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [Router, core.NgModuleFactoryLoader, core.Compiler,\n                core.Injector, PreloadingStrategy])\n        ], RouterPreloader);\n        return RouterPreloader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RouterScroller = /** @class */ (function () {\n        function RouterScroller(router, \n        /** @docsNotRequired */ viewportScroller, options) {\n            if (options === void 0) { options = {}; }\n            this.router = router;\n            this.viewportScroller = viewportScroller;\n            this.options = options;\n            this.lastId = 0;\n            this.lastSource = 'imperative';\n            this.restoredId = 0;\n            this.store = {};\n            // Default both options to 'disabled'\n            options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n            options.anchorScrolling = options.anchorScrolling || 'disabled';\n        }\n        RouterScroller.prototype.init = function () {\n            // we want to disable the automatic scrolling because having two places\n            // responsible for scrolling results race conditions, especially given\n            // that browser don't implement this behavior consistently\n            if (this.options.scrollPositionRestoration !== 'disabled') {\n                this.viewportScroller.setHistoryScrollRestoration('manual');\n            }\n            this.routerEventsSubscription = this.createScrollEvents();\n            this.scrollEventsSubscription = this.consumeScrollEvents();\n        };\n        RouterScroller.prototype.createScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (e instanceof NavigationStart) {\n                    // store the scroll position of the current stable navigations.\n                    _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                    _this.lastSource = e.navigationTrigger;\n                    _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n                }\n                else if (e instanceof NavigationEnd) {\n                    _this.lastId = e.id;\n                    _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n                }\n            });\n        };\n        RouterScroller.prototype.consumeScrollEvents = function () {\n            var _this = this;\n            return this.router.events.subscribe(function (e) {\n                if (!(e instanceof Scroll))\n                    return;\n                // a popstate event. The pop state event will always ignore anchor scrolling.\n                if (e.position) {\n                    if (_this.options.scrollPositionRestoration === 'top') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                    else if (_this.options.scrollPositionRestoration === 'enabled') {\n                        _this.viewportScroller.scrollToPosition(e.position);\n                    }\n                    // imperative navigation \"forward\"\n                }\n                else {\n                    if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                        _this.viewportScroller.scrollToAnchor(e.anchor);\n                    }\n                    else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                        _this.viewportScroller.scrollToPosition([0, 0]);\n                    }\n                }\n            });\n        };\n        RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n            this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n        };\n        RouterScroller.prototype.ngOnDestroy = function () {\n            if (this.routerEventsSubscription) {\n                this.routerEventsSubscription.unsubscribe();\n            }\n            if (this.scrollEventsSubscription) {\n                this.scrollEventsSubscription.unsubscribe();\n            }\n        };\n        return RouterScroller;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Contains a list of directives\n     *\n     *\n     */\n    var ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n    /**\n     * @description\n     *\n     * Is used in DI to configure the router.\n     *\n     *\n     */\n    var ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n    /**\n     * @docsNotRequired\n     */\n    var ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\n    var ROUTER_PROVIDERS = [\n        common.Location,\n        { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n        {\n            provide: Router,\n            useFactory: setupRouter,\n            deps: [\n                core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n                core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n            ]\n        },\n        ChildrenOutletContexts,\n        { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n        { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n        RouterPreloader,\n        NoPreloading,\n        PreloadAllModules,\n        { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n    ];\n    function routerNgProbeToken() {\n        return new core.NgProbeToken('Router', Router);\n    }\n    /**\n     * @usageNotes\n     *\n     * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n     * Since the router deals with a global shared resource--location, we cannot have\n     * more than one router service active.\n     *\n     * That is why there are two ways to create the module: `RouterModule.forRoot` and\n     * `RouterModule.forChild`.\n     *\n     * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n     *   service itself.\n     * * `forChild` creates a module that contains all the directives and the given routes, but does not\n     *   include the router service.\n     *\n     * When registered at the root, the module should be used as follows\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * For submodules and lazy loaded submodules the module should be used as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @description\n     *\n     * Adds router directives and providers.\n     *\n     * Managing state transitions is one of the hardest parts of building applications. This is\n     * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n     * In addition, we often want to split applications into multiple bundles and load them on demand.\n     * Doing this transparently is not trivial.\n     *\n     * The Angular router solves these problems. Using the router, you can declaratively specify\n     * application states, manage state transitions while taking care of the URL, and load bundles on\n     * demand.\n     *\n     * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n     * overview of how the router should be used.\n     *\n     *\n     */\n    var RouterModule = /** @class */ (function () {\n        // Note: We are injecting the Router so it gets created eagerly...\n        function RouterModule(guard, router) {\n        }\n        RouterModule_1 = RouterModule;\n        /**\n         * Creates a module with all the router providers and directives. It also optionally sets up an\n         * application listener to perform an initial navigation.\n         *\n         * Options (see `ExtraOptions`):\n         * * `enableTracing` makes the router log all its internal events to the console.\n         * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n         * API.\n         * * `initialNavigation` disables the initial navigation.\n         * * `errorHandler` provides a custom error handler.\n         * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n         * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n         * `ExtraOptions` for more details.\n         * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n         * from parent to child routes.\n         */\n        RouterModule.forRoot = function (routes, config) {\n            return {\n                ngModule: RouterModule_1,\n                providers: [\n                    ROUTER_PROVIDERS,\n                    provideRoutes(routes),\n                    {\n                        provide: ROUTER_FORROOT_GUARD,\n                        useFactory: provideForRootGuard,\n                        deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                    },\n                    { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                    {\n                        provide: common.LocationStrategy,\n                        useFactory: provideLocationStrategy,\n                        deps: [\n                            common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                        ]\n                    },\n                    {\n                        provide: RouterScroller,\n                        useFactory: createRouterScroller,\n                        deps: [Router, common.ViewportScroller, ROUTER_CONFIGURATION]\n                    },\n                    {\n                        provide: PreloadingStrategy,\n                        useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                            NoPreloading\n                    },\n                    { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                    provideRouterInitializer(),\n                ],\n            };\n        };\n        /**\n         * Creates a module with all the router directives and a provider registering routes.\n         */\n        RouterModule.forChild = function (routes) {\n            return { ngModule: RouterModule_1, providers: [provideRoutes(routes)] };\n        };\n        var RouterModule_1;\n        RouterModule = RouterModule_1 = __decorate([\n            core.NgModule({\n                declarations: ROUTER_DIRECTIVES,\n                exports: ROUTER_DIRECTIVES,\n                entryComponents: [EmptyOutletComponent]\n            }),\n            __param(0, core.Optional()), __param(0, core.Inject(ROUTER_FORROOT_GUARD)), __param(1, core.Optional()),\n            __metadata(\"design:paramtypes\", [Object, Router])\n        ], RouterModule);\n        return RouterModule;\n    }());\n    function createRouterScroller(router, viewportScroller, config) {\n        if (config.scrollOffset) {\n            viewportScroller.setOffset(config.scrollOffset);\n        }\n        return new RouterScroller(router, viewportScroller, config);\n    }\n    function provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n        if (options === void 0) { options = {}; }\n        return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n            new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n    }\n    function provideForRootGuard(router) {\n        if (router) {\n            throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n        }\n        return 'guarded';\n    }\n    /**\n     * @description\n     *\n     * Registers routes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)],\n     *   providers: [provideRoutes(EXTRA_ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     *\n     */\n    function provideRoutes(routes) {\n        return [\n            { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n            { provide: ROUTES, multi: true, useValue: routes },\n        ];\n    }\n    function setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n        if (opts === void 0) { opts = {}; }\n        var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n        if (urlHandlingStrategy) {\n            router.urlHandlingStrategy = urlHandlingStrategy;\n        }\n        if (routeReuseStrategy) {\n            router.routeReuseStrategy = routeReuseStrategy;\n        }\n        if (opts.errorHandler) {\n            router.errorHandler = opts.errorHandler;\n        }\n        if (opts.malformedUriErrorHandler) {\n            router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n        }\n        if (opts.enableTracing) {\n            var dom_1 = platformBrowser.ɵgetDOM();\n            router.events.subscribe(function (e) {\n                dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n                dom_1.log(e.toString());\n                dom_1.log(e);\n                dom_1.logGroupEnd();\n            });\n        }\n        if (opts.onSameUrlNavigation) {\n            router.onSameUrlNavigation = opts.onSameUrlNavigation;\n        }\n        if (opts.paramsInheritanceStrategy) {\n            router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n        }\n        if (opts.urlUpdateStrategy) {\n            router.urlUpdateStrategy = opts.urlUpdateStrategy;\n        }\n        if (opts.relativeLinkResolution) {\n            router.relativeLinkResolution = opts.relativeLinkResolution;\n        }\n        return router;\n    }\n    function rootRoute(router) {\n        return router.routerState.root;\n    }\n    /**\n     * To initialize the router properly we need to do in two steps:\n     *\n     * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n     * a resolver or a guards executes asynchronously. Second, we need to actually run\n     * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n     * hook provided by the router to do that.\n     *\n     * The router navigation starts, reaches the point when preactivation is done, and then\n     * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n     */\n    var RouterInitializer = /** @class */ (function () {\n        function RouterInitializer(injector) {\n            this.injector = injector;\n            this.initNavigation = false;\n            this.resultOfPreactivationDone = new rxjs.Subject();\n        }\n        RouterInitializer.prototype.appInitializer = function () {\n            var _this = this;\n            var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n            return p.then(function () {\n                var resolve = null;\n                var res = new Promise(function (r) { return resolve = r; });\n                var router = _this.injector.get(Router);\n                var opts = _this.injector.get(ROUTER_CONFIGURATION);\n                if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'disabled') {\n                    router.setUpLocationChangeListener();\n                    resolve(true);\n                }\n                else if (opts.initialNavigation === 'enabled') {\n                    router.hooks.afterPreactivation = function () {\n                        // only the initial navigation should be delayed\n                        if (!_this.initNavigation) {\n                            _this.initNavigation = true;\n                            resolve(true);\n                            return _this.resultOfPreactivationDone;\n                            // subsequent navigations should not be delayed\n                        }\n                        else {\n                            return rxjs.of(null);\n                        }\n                    };\n                    router.initialNavigation();\n                }\n                else {\n                    throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n                }\n                return res;\n            });\n        };\n        RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n            var opts = this.injector.get(ROUTER_CONFIGURATION);\n            var preloader = this.injector.get(RouterPreloader);\n            var routerScroller = this.injector.get(RouterScroller);\n            var router = this.injector.get(Router);\n            var ref = this.injector.get(core.ApplicationRef);\n            if (bootstrappedComponentRef !== ref.components[0]) {\n                return;\n            }\n            if (this.isLegacyEnabled(opts)) {\n                router.initialNavigation();\n            }\n            else if (this.isLegacyDisabled(opts)) {\n                router.setUpLocationChangeListener();\n            }\n            preloader.setUpPreloading();\n            routerScroller.init();\n            router.resetRootComponentType(ref.componentTypes[0]);\n            this.resultOfPreactivationDone.next(null);\n            this.resultOfPreactivationDone.complete();\n        };\n        RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n            return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n                opts.initialNavigation === undefined;\n        };\n        RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n            return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n        };\n        RouterInitializer = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [core.Injector])\n        ], RouterInitializer);\n        return RouterInitializer;\n    }());\n    function getAppInitializer(r) {\n        return r.appInitializer.bind(r);\n    }\n    function getBootstrapListener(r) {\n        return r.bootstrapListener.bind(r);\n    }\n    /**\n     * A token for the router initializer that will be called after the app is bootstrapped.\n     *\n     * @experimental\n     */\n    var ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\n    function provideRouterInitializer() {\n        return [\n            RouterInitializer,\n            {\n                provide: core.APP_INITIALIZER,\n                multi: true,\n                useFactory: getAppInitializer,\n                deps: [RouterInitializer]\n            },\n            { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n            { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n        ];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION = new core.Version('6.1.9');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\n    exports.ɵangular_packages_router_router_h = RouterInitializer;\n    exports.ɵangular_packages_router_router_c = createRouterScroller;\n    exports.ɵangular_packages_router_router_i = getAppInitializer;\n    exports.ɵangular_packages_router_router_j = getBootstrapListener;\n    exports.ɵangular_packages_router_router_e = provideForRootGuard;\n    exports.ɵangular_packages_router_router_d = provideLocationStrategy;\n    exports.ɵangular_packages_router_router_k = provideRouterInitializer;\n    exports.ɵangular_packages_router_router_g = rootRoute;\n    exports.ɵangular_packages_router_router_b = routerNgProbeToken;\n    exports.ɵangular_packages_router_router_f = setupRouter;\n    exports.ɵangular_packages_router_router_n = RouterScroller;\n    exports.ɵangular_packages_router_router_l = Tree;\n    exports.ɵangular_packages_router_router_m = TreeNode;\n    exports.RouterLink = RouterLink;\n    exports.RouterLinkWithHref = RouterLinkWithHref;\n    exports.RouterLinkActive = RouterLinkActive;\n    exports.RouterOutlet = RouterOutlet;\n    exports.ActivationEnd = ActivationEnd;\n    exports.ActivationStart = ActivationStart;\n    exports.ChildActivationEnd = ChildActivationEnd;\n    exports.ChildActivationStart = ChildActivationStart;\n    exports.GuardsCheckEnd = GuardsCheckEnd;\n    exports.GuardsCheckStart = GuardsCheckStart;\n    exports.NavigationCancel = NavigationCancel;\n    exports.NavigationEnd = NavigationEnd;\n    exports.NavigationError = NavigationError;\n    exports.NavigationStart = NavigationStart;\n    exports.ResolveEnd = ResolveEnd;\n    exports.ResolveStart = ResolveStart;\n    exports.RouteConfigLoadEnd = RouteConfigLoadEnd;\n    exports.RouteConfigLoadStart = RouteConfigLoadStart;\n    exports.RouterEvent = RouterEvent;\n    exports.RoutesRecognized = RoutesRecognized;\n    exports.Scroll = Scroll;\n    exports.RouteReuseStrategy = RouteReuseStrategy;\n    exports.Router = Router;\n    exports.ROUTES = ROUTES;\n    exports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\n    exports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\n    exports.RouterModule = RouterModule;\n    exports.provideRoutes = provideRoutes;\n    exports.ChildrenOutletContexts = ChildrenOutletContexts;\n    exports.OutletContext = OutletContext;\n    exports.NoPreloading = NoPreloading;\n    exports.PreloadAllModules = PreloadAllModules;\n    exports.PreloadingStrategy = PreloadingStrategy;\n    exports.RouterPreloader = RouterPreloader;\n    exports.ActivatedRoute = ActivatedRoute;\n    exports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\n    exports.RouterState = RouterState;\n    exports.RouterStateSnapshot = RouterStateSnapshot;\n    exports.PRIMARY_OUTLET = PRIMARY_OUTLET;\n    exports.convertToParamMap = convertToParamMap;\n    exports.UrlHandlingStrategy = UrlHandlingStrategy;\n    exports.DefaultUrlSerializer = DefaultUrlSerializer;\n    exports.UrlSegment = UrlSegment;\n    exports.UrlSegmentGroup = UrlSegmentGroup;\n    exports.UrlSerializer = UrlSerializer;\n    exports.UrlTree = UrlTree;\n    exports.VERSION = VERSION;\n    exports.ɵEmptyOutletComponent = EmptyOutletComponent;\n    exports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\n    exports.ɵflatten = flatten;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}