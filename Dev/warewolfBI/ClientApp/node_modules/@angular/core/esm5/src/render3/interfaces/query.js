/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var QueryReadType = /** @class */ (function () {
    function QueryReadType() {
    }
    return QueryReadType;
}());
export { QueryReadType };
// Note: This hack is necessary so we don't erroneously get a circular dependency
// failure based on types.
export var unusedValueExportToPlacateAjd = 1;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9yZW5kZXIzL2ludGVyZmFjZXMvcXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBbUVIO0lBQUE7SUFBcUUsQ0FBQztJQUFELG9CQUFDO0FBQUQsQ0FBQyxBQUF0RSxJQUFzRTs7QUFFdEUsaUZBQWlGO0FBQ2pGLDBCQUEwQjtBQUMxQixNQUFNLENBQUMsSUFBTSw2QkFBNkIsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7UXVlcnlMaXN0fSBmcm9tICcuLi8uLi9saW5rZXInO1xuaW1wb3J0IHtUeXBlfSBmcm9tICcuLi8uLi90eXBlJztcbmltcG9ydCB7TE5vZGV9IGZyb20gJy4vbm9kZSc7XG5cbi8qKiBVc2VkIGZvciB0cmFja2luZyBxdWVyaWVzIChlLmcuIFZpZXdDaGlsZCwgQ29udGVudENoaWxkKS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTFF1ZXJpZXMge1xuICAvKipcbiAgICogQXNrIHF1ZXJpZXMgdG8gcHJlcGFyZSBjb3B5IG9mIGl0c2VsZi4gVGhpcyBhc3N1cmVzIHRoYXQgdHJhY2tpbmcgbmV3IHF1ZXJpZXMgb24gY2hpbGQgbm9kZXNcbiAgICogZG9lc24ndCBtdXRhdGUgbGlzdCBvZiBxdWVyaWVzIHRyYWNrZWQgb24gYSBwYXJlbnQgbm9kZS4gV2Ugd2lsbCBjbG9uZSBMUXVlcmllcyBiZWZvcmVcbiAgICogY29uc3RydWN0aW5nIGNvbnRlbnQgcXVlcmllcy5cbiAgICovXG4gIGNsb25lKCk6IExRdWVyaWVzfG51bGw7XG5cbiAgLyoqXG4gICAqIFVzZWQgdG8gYXNrIHF1ZXJpZXMgaWYgdGhvc2Ugc2hvdWxkIGJlIGNsb25lZCB0byB0aGUgY2hpbGQgZWxlbWVudC5cbiAgICpcbiAgICogRm9yIGV4YW1wbGUgaW4gdGhlIGNhc2Ugb2YgZGVlcCBxdWVyaWVzIHRoZSBgY2hpbGQoKWAgcmV0dXJuc1xuICAgKiBxdWVyaWVzIGZvciB0aGUgY2hpbGQgbm9kZS4gSW4gY2FzZSBvZiBzaGFsbG93IHF1ZXJpZXMgaXQgcmV0dXJuc1xuICAgKiBgbnVsbGAuXG4gICAqL1xuICBjaGlsZCgpOiBMUXVlcmllc3xudWxsO1xuXG4gIC8qKlxuICAgKiBOb3RpZnkgYExRdWVyaWVzYCB0aGF0IGEgbmV3IGBMTm9kZWAgaGFzIGJlZW4gY3JlYXRlZCBhbmQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gcXVlcnkgcmVzdWx0c1xuICAgKiBpZiBtYXRjaGluZyBxdWVyeSBwcmVkaWNhdGUuXG4gICAqL1xuICBhZGROb2RlKG5vZGU6IExOb2RlKTogdm9pZDtcblxuICAvKipcbiAgICogTm90aWZ5IGBMUXVlcmllc2AgdGhhdCBhIG5ldyBMQ29udGFpbmVyIHdhcyBhZGRlZCB0byBpdnkgZGF0YSBzdHJ1Y3R1cmVzLiBBcyBhIHJlc3VsdCB3ZSBuZWVkXG4gICAqIHRvIHByZXBhcmUgcm9vbSBmb3Igdmlld3MgdGhhdCBtaWdodCBiZSBpbnNlcnRlZCBpbnRvIHRoaXMgY29udGFpbmVyLlxuICAgKi9cbiAgY29udGFpbmVyKCk6IExRdWVyaWVzfG51bGw7XG5cbiAgLyoqXG4gICAqIE5vdGlmeSBgTFF1ZXJpZXNgIHRoYXQgYSBuZXcgYExWaWV3YCBoYXMgYmVlbiBjcmVhdGVkLiBBcyBhIHJlc3VsdCB3ZSBuZWVkIHRvIHByZXBhcmUgcm9vbVxuICAgKiBhbmQgY29sbGVjdCBub2RlcyB0aGF0IG1hdGNoIHF1ZXJ5IHByZWRpY2F0ZS5cbiAgICovXG4gIGNyZWF0ZVZpZXcoKTogTFF1ZXJpZXN8bnVsbDtcblxuICAvKipcbiAgICogTm90aWZ5IGBMUXVlcmllc2AgdGhhdCBhIG5ldyBgTFZpZXdgIGhhcyBiZWVuIGFkZGVkIHRvIGBMQ29udGFpbmVyYC4gQXMgYSByZXN1bHQgYWxsXG4gICAqIHRoZSBtYXRjaGluZyBub2RlcyBmcm9tIHRoaXMgdmlldyBzaG91bGQgYmUgYWRkZWQgdG8gY29udGFpbmVyJ3MgcXVlcmllcy5cbiAgICovXG4gIGluc2VydFZpZXcobmV3Vmlld0luZGV4OiBudW1iZXIpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBOb3RpZnkgYExRdWVyaWVzYCB0aGF0IGFuIGBMVmlld2AgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIGBMQ29udGFpbmVyYC4gQXMgYSByZXN1bHQgYWxsXG4gICAqIHRoZSBtYXRjaGluZyBub2RlcyBmcm9tIHRoaXMgdmlldyBzaG91bGQgYmUgcmVtb3ZlZCBmcm9tIGNvbnRhaW5lcidzIHF1ZXJpZXMuXG4gICAqL1xuICByZW1vdmVWaWV3KCk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEFkZCBhZGRpdGlvbmFsIGBRdWVyeUxpc3RgIHRvIHRyYWNrLlxuICAgKlxuICAgKiBAcGFyYW0gcXVlcnlMaXN0IGBRdWVyeUxpc3RgIHRvIHVwZGF0ZSB3aXRoIGNoYW5nZXMuXG4gICAqIEBwYXJhbSBwcmVkaWNhdGUgRWl0aGVyIGBUeXBlYCBvciBzZWxlY3RvciBhcnJheSBvZiBba2V5LCB2YWx1ZV0gcHJlZGljYXRlcy5cbiAgICogQHBhcmFtIGRlc2NlbmQgSWYgdHJ1ZSB0aGUgcXVlcnkgd2lsbCByZWN1cnNpdmVseSBhcHBseSB0byB0aGUgY2hpbGRyZW4uXG4gICAqIEBwYXJhbSByZWFkIEluZGljYXRlcyB3aGljaCB0b2tlbiBzaG91bGQgYmUgcmVhZCBmcm9tIERJIGZvciB0aGlzIHF1ZXJ5LlxuICAgKi9cbiAgdHJhY2s8VD4oXG4gICAgICBxdWVyeUxpc3Q6IFF1ZXJ5TGlzdDxUPiwgcHJlZGljYXRlOiBUeXBlPGFueT58c3RyaW5nW10sIGRlc2NlbmQ/OiBib29sZWFuLFxuICAgICAgcmVhZD86IFF1ZXJ5UmVhZFR5cGU8VD58VHlwZTxUPik6IHZvaWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBRdWVyeVJlYWRUeXBlPFQ+IHsgcHJpdmF0ZSBkZWZlYXRTdHJ1Y3R1cmFsVHlwaW5nOiBhbnk7IH1cblxuLy8gTm90ZTogVGhpcyBoYWNrIGlzIG5lY2Vzc2FyeSBzbyB3ZSBkb24ndCBlcnJvbmVvdXNseSBnZXQgYSBjaXJjdWxhciBkZXBlbmRlbmN5XG4vLyBmYWlsdXJlIGJhc2VkIG9uIHR5cGVzLlxuZXhwb3J0IGNvbnN0IHVudXNlZFZhbHVlRXhwb3J0VG9QbGFjYXRlQWpkID0gMTtcbiJdfQ==