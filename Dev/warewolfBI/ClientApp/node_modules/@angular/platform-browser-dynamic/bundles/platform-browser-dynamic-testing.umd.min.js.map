{"version":3,"sources":["packages/platform-browser-dynamic/platform-browser-dynamic-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","platformBrowserDynamic","testing","core","platformBrowser","compiler","this","testing$1","testing$2","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DOMTestComponentRenderer","_super","_doc","_this","call","__extends","__","constructor","prototype","create","insertRootElement","rootElId","rootEl","ɵgetDOM","firstChild","content","createTemplate","oldRoots","querySelectorAll","remove","appendChild","body","Injectable","__param","paramIndex","decorator","Inject","DOCUMENT","__metadata","metadataKey","metadataValue","metadata","TestComponentRenderer","_nextReferenceId","MetadataOverrider","_references","Map","overrideMetadata","metadataClass","oldMetadata","override","props","_valueProps","obj","keys","forEach","prop","startsWith","push","proto","getPrototypeOf","protoProp","set","add","Error","ɵstringify","setMetadata","removeMetadata","references","removeObjects","Set","_loop_1","removeValue","value","_propHashKey","_loop_2","propValue","filter","has","undefined","addMetadata","addValue","concat","propName","JSON","stringify","_serializeReference","ref","id","get","COMPILER_PROVIDERS","provide","MockPipeResolver","deps","CompileReflector","PipeResolver","useExisting","MockDirectiveResolver","DirectiveResolver","MockNgModuleResolver","NgModuleResolver","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","compiler$$1","createCompiler","TestingCompilerImpl","injector","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","enumerable","configurable","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","component","checkOverrideAllowed","type","hasAotSummary","overrideModule","ngModule","resolve","setNgModule","NgModule","clearCacheFor","overrideDirective","directive","setDirective","Directive","overrideComponent","Component","overridePipe","pipe","setPipe","Pipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","ERROR_COMPONENT_TYPE","getModuleId","platformCoreDynamicTesting","createPlatformFactory","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","ɵTestingCompilerFactory","useClass","Injector","CompilerFactory","platformBrowserDynamicTesting","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserDynamicTestingModule","BrowserTestingModule","ɵangular_packages_platform_browser_dynamic_testing_testing_a","ɵangular_packages_platform_browser_dynamic_testing_testing_b","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/core/testing'), require('@angular/platform-browser'), require('@angular/compiler'), require('@angular/compiler/testing'), require('@angular/platform-browser-dynamic'), require('@angular/platform-browser/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/platform-browser-dynamic/testing', ['exports', '@angular/core', '@angular/core/testing', '@angular/platform-browser', '@angular/compiler', '@angular/compiler/testing', '@angular/platform-browser-dynamic', '@angular/platform-browser/testing'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}, global.ng.platformBrowserDynamic.testing = {}),global.ng.core,global.ng.core.testing,global.ng.platformBrowser,global.ng.compiler,global.ng.compiler.testing,global.ng.platformBrowserDynamic,global.ng.platformBrowser.testing));\n}(this, (function (exports,core,testing,platformBrowser,compiler,testing$1,platformBrowserDynamic,testing$2) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DOM based implementation of the TestComponentRenderer.\n     */\n    var DOMTestComponentRenderer = /** @class */ (function (_super) {\n        __extends(DOMTestComponentRenderer, _super);\n        function DOMTestComponentRenderer(_doc /** TODO #9100 */) {\n            var _this = _super.call(this) || this;\n            _this._doc = _doc;\n            return _this;\n        }\n        DOMTestComponentRenderer.prototype.insertRootElement = function (rootElId) {\n            var rootEl = platformBrowser.ɵgetDOM().firstChild(platformBrowser.ɵgetDOM().content(platformBrowser.ɵgetDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\")));\n            // TODO(juliemr): can/should this be optional?\n            var oldRoots = platformBrowser.ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n            for (var i = 0; i < oldRoots.length; i++) {\n                platformBrowser.ɵgetDOM().remove(oldRoots[i]);\n            }\n            platformBrowser.ɵgetDOM().appendChild(this._doc.body, rootEl);\n        };\n        DOMTestComponentRenderer = __decorate([\n            core.Injectable(),\n            __param(0, core.Inject(platformBrowser.DOCUMENT)),\n            __metadata(\"design:paramtypes\", [Object])\n        ], DOMTestComponentRenderer);\n        return DOMTestComponentRenderer;\n    }(testing.TestComponentRenderer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _nextReferenceId = 0;\n    var MetadataOverrider = /** @class */ (function () {\n        function MetadataOverrider() {\n            this._references = new Map();\n        }\n        /**\n         * Creates a new instance for the given metadata class\n         * based on an old instance and overrides.\n         */\n        MetadataOverrider.prototype.overrideMetadata = function (metadataClass, oldMetadata, override) {\n            var props = {};\n            if (oldMetadata) {\n                _valueProps(oldMetadata).forEach(function (prop) { return props[prop] = oldMetadata[prop]; });\n            }\n            if (override.set) {\n                if (override.remove || override.add) {\n                    throw new Error(\"Cannot set and add/remove \" + core.ɵstringify(metadataClass) + \" at the same time!\");\n                }\n                setMetadata(props, override.set);\n            }\n            if (override.remove) {\n                removeMetadata(props, override.remove, this._references);\n            }\n            if (override.add) {\n                addMetadata(props, override.add);\n            }\n            return new metadataClass(props);\n        };\n        return MetadataOverrider;\n    }());\n    function removeMetadata(metadata, remove, references) {\n        var removeObjects = new Set();\n        var _loop_1 = function (prop) {\n            var removeValue = remove[prop];\n            if (removeValue instanceof Array) {\n                removeValue.forEach(function (value) { removeObjects.add(_propHashKey(prop, value, references)); });\n            }\n            else {\n                removeObjects.add(_propHashKey(prop, removeValue, references));\n            }\n        };\n        for (var prop in remove) {\n            _loop_1(prop);\n        }\n        var _loop_2 = function (prop) {\n            var propValue = metadata[prop];\n            if (propValue instanceof Array) {\n                metadata[prop] = propValue.filter(function (value) { return !removeObjects.has(_propHashKey(prop, value, references)); });\n            }\n            else {\n                if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                    metadata[prop] = undefined;\n                }\n            }\n        };\n        for (var prop in metadata) {\n            _loop_2(prop);\n        }\n    }\n    function addMetadata(metadata, add) {\n        for (var prop in add) {\n            var addValue = add[prop];\n            var propValue = metadata[prop];\n            if (propValue != null && propValue instanceof Array) {\n                metadata[prop] = propValue.concat(addValue);\n            }\n            else {\n                metadata[prop] = addValue;\n            }\n        }\n    }\n    function setMetadata(metadata, set) {\n        for (var prop in set) {\n            metadata[prop] = set[prop];\n        }\n    }\n    function _propHashKey(propName, propValue, references) {\n        var replacer = function (key, value) {\n            if (typeof value === 'function') {\n                value = _serializeReference(value, references);\n            }\n            return value;\n        };\n        return propName + \":\" + JSON.stringify(propValue, replacer);\n    }\n    function _serializeReference(ref, references) {\n        var id = references.get(ref);\n        if (!id) {\n            id = \"\" + core.ɵstringify(ref) + _nextReferenceId++;\n            references.set(ref, id);\n        }\n        return id;\n    }\n    function _valueProps(obj) {\n        var props = [];\n        // regular public props\n        Object.keys(obj).forEach(function (prop) {\n            if (!prop.startsWith('_')) {\n                props.push(prop);\n            }\n        });\n        // getters\n        var proto = obj;\n        while (proto = Object.getPrototypeOf(proto)) {\n            Object.keys(proto).forEach(function (protoProp) {\n                var desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n                if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                    props.push(protoProp);\n                }\n            });\n        }\n        return props;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPILER_PROVIDERS = [\n        { provide: testing$1.MockPipeResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.PipeResolver, useExisting: testing$1.MockPipeResolver },\n        { provide: testing$1.MockDirectiveResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.DirectiveResolver, useExisting: testing$1.MockDirectiveResolver },\n        { provide: testing$1.MockNgModuleResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.NgModuleResolver, useExisting: testing$1.MockNgModuleResolver },\n    ];\n    var TestingCompilerFactoryImpl = /** @class */ (function () {\n        function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n            this._injector = _injector;\n            this._compilerFactory = _compilerFactory;\n        }\n        TestingCompilerFactoryImpl.prototype.createTestingCompiler = function (options) {\n            var compiler$$1 = this._compilerFactory.createCompiler(options);\n            return new TestingCompilerImpl(compiler$$1, compiler$$1.injector.get(testing$1.MockDirectiveResolver), compiler$$1.injector.get(testing$1.MockPipeResolver), compiler$$1.injector.get(testing$1.MockNgModuleResolver));\n        };\n        return TestingCompilerFactoryImpl;\n    }());\n    var TestingCompilerImpl = /** @class */ (function () {\n        function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n            this._compiler = _compiler;\n            this._directiveResolver = _directiveResolver;\n            this._pipeResolver = _pipeResolver;\n            this._moduleResolver = _moduleResolver;\n            this._overrider = new MetadataOverrider();\n        }\n        Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n            get: function () { return this._compiler.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        TestingCompilerImpl.prototype.compileModuleSync = function (moduleType) {\n            return this._compiler.compileModuleSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n            return this._compiler.compileModuleAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.getComponentFactory = function (component) {\n            return this._compiler.getComponentFactory(component);\n        };\n        TestingCompilerImpl.prototype.checkOverrideAllowed = function (type) {\n            if (this._compiler.hasAotSummary(type)) {\n                throw new Error(core.ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n            }\n        };\n        TestingCompilerImpl.prototype.overrideModule = function (ngModule, override) {\n            this.checkOverrideAllowed(ngModule);\n            var oldMetadata = this._moduleResolver.resolve(ngModule, false);\n            this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(core.NgModule, oldMetadata, override));\n            this.clearCacheFor(ngModule);\n        };\n        TestingCompilerImpl.prototype.overrideDirective = function (directive, override) {\n            this.checkOverrideAllowed(directive);\n            var oldMetadata = this._directiveResolver.resolve(directive, false);\n            this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(core.Directive, oldMetadata, override));\n            this.clearCacheFor(directive);\n        };\n        TestingCompilerImpl.prototype.overrideComponent = function (component, override) {\n            this.checkOverrideAllowed(component);\n            var oldMetadata = this._directiveResolver.resolve(component, false);\n            this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(core.Component, oldMetadata, override));\n            this.clearCacheFor(component);\n        };\n        TestingCompilerImpl.prototype.overridePipe = function (pipe, override) {\n            this.checkOverrideAllowed(pipe);\n            var oldMetadata = this._pipeResolver.resolve(pipe, false);\n            this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(core.Pipe, oldMetadata, override));\n            this.clearCacheFor(pipe);\n        };\n        TestingCompilerImpl.prototype.loadAotSummaries = function (summaries) { this._compiler.loadAotSummaries(summaries); };\n        TestingCompilerImpl.prototype.clearCache = function () { this._compiler.clearCache(); };\n        TestingCompilerImpl.prototype.clearCacheFor = function (type) { this._compiler.clearCacheFor(type); };\n        TestingCompilerImpl.prototype.getComponentFromError = function (error) { return error[compiler.ERROR_COMPONENT_TYPE] || null; };\n        TestingCompilerImpl.prototype.getModuleId = function (moduleType) {\n            return this._moduleResolver.resolve(moduleType, true).id;\n        };\n        return TestingCompilerImpl;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Platform for dynamic tests\n     *\n     * @experimental\n     */\n    var platformCoreDynamicTesting = core.createPlatformFactory(platformBrowserDynamic.ɵplatformCoreDynamic, 'coreDynamicTesting', [\n        { provide: core.COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n            provide: testing.ɵTestingCompilerFactory,\n            useClass: TestingCompilerFactoryImpl,\n            deps: [core.Injector, core.CompilerFactory]\n        }\n    ]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var platformBrowserDynamicTesting = core.createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n    /**\n     * NgModule for testing.\n     *\n     *\n     */\n    var BrowserDynamicTestingModule = /** @class */ (function () {\n        function BrowserDynamicTestingModule() {\n        }\n        BrowserDynamicTestingModule = __decorate([\n            core.NgModule({\n                exports: [testing$2.BrowserTestingModule],\n                providers: [\n                    { provide: testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                ]\n            })\n        ], BrowserDynamicTestingModule);\n        return BrowserDynamicTestingModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_platform_browser_dynamic_testing_testing_a = COMPILER_PROVIDERS;\n    exports.ɵangular_packages_platform_browser_dynamic_testing_testing_b = TestingCompilerFactoryImpl;\n    exports.platformBrowserDynamicTesting = platformBrowserDynamicTesting;\n    exports.BrowserDynamicTestingModule = BrowserDynamicTestingModule;\n    exports.ɵDOMTestComponentRenderer = DOMTestComponentRenderer;\n    exports.ɵplatformCoreDynamicTesting = platformCoreDynamicTesting;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=platform-browser-dynamic-testing.umd.js.map\n"]}