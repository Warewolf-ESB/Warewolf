{"version":3,"file":"core.js","sources":["../../../src/lib/core/basis-validator/basis-validator.ts","../../../src/lib/core/style-utils/style-utils.ts","../../../src/lib/utils/auto-prefixer.ts","../../../src/lib/core/observable-media/observable-media-provider.ts","../../../src/lib/core/media-monitor/media-monitor-provider.ts","../../../src/lib/core/media-monitor/media-monitor.ts","../../../src/lib/core/match-media/server-match-media.ts","../../../src/lib/core/match-media/mock/mock-match-media.ts","../../../src/lib/core/base/base-legacy.ts","../../../src/lib/core/base/base-adapter.ts","../../../src/lib/core/base/base.ts","../../../src/lib/core/responsive-activation/responsive-activation.ts","../../../src/lib/utils/layout-validator.ts","../../../src/lib/core/tokens/server-token.ts","../../../src/lib/core/stylesheet-map/stylesheet-map-provider.ts","../../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../../src/lib/core/module.ts","../../../src/lib/core/observable-media/observable-media.ts","../../../src/lib/core/add-alias.ts","../../../src/lib/core/match-media/match-media.ts","../../../src/lib/core/media-change.ts","../../../src/lib/core/breakpoints/break-point-registry.ts","../../../src/lib/core/breakpoints/break-points-token.ts","../../../src/lib/core/tokens/library-config.ts","../../../src/lib/core/breakpoints/breakpoint-tools.ts","../../../src/lib/utils/object-extend.ts","../../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../../src/lib/core/breakpoints/data/break-points.ts","../../../src/lib/core/tokens/breakpoint-token.ts","../../../src/lib/core/browser-provider.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style[styleName] : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n *  @deprecated\n *  @deletion-target v6.0.0-beta.16\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList>;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/**\n * @deprecated\n * @deletion-target v6.0.0-beta.17\n * Abstract base class for the Layout API styling directives.\n */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseDirective abstract class so it can be used via composition.\n * @see BaseDirective\n */\nexport class BaseDirectiveAdapter extends BaseDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n  protected constructor(protected _mediaMonitor: MediaMonitor,\n                        protected _elementRef: ElementRef,\n                        protected _styler: StyleUtils) {\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Access the current value (if any) of the @Input property */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /** Quick accessor to raw attribute value on the target DOM element */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /** Applies styles given via string pair or object map to the directive's element */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(keyOptions, this._mediaMonitor,\n        (change) => onMediaQueryChange(change));\n    }\n    return this._mqActivation;\n  }\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /** Fast validator for presence of attribute on the host element */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** MediaQuery Activation Tracker */\n  protected _mqActivation: ResponsiveActivation;\n\n  /** Dictionary of input keys with associated values */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {StylesheetMap} from './stylesheet-map';\n\n/**\n * Ensure a single global service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet: StylesheetMap) {\n  return parentSheet || new StylesheetMap();\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const STYLESHEET_MAP_PROVIDER = {\n  provide: StylesheetMap,\n  deps: [\n    [new Optional(), new SkipSelf(), StylesheetMap],\n  ],\n  useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {ObservableMediaProvider} from './observable-media/observable-media';\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [ObservableMediaProvider, BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, PartialObserver, Subscribable, Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n  abstract subscribe(observer?: PartialObserver<MediaChange>): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(observerOrNext?: PartialObserver<MediaChange> | ((value: MediaChange) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    if (observerOrNext) {\n      if (typeof observerOrNext === 'object') {\n        return this.observable$.subscribe(observerOrNext.next, observerOrNext.error,\n          observerOrNext.complete);\n      }\n    }\n\n    return this.observable$.subscribe(observerOrNext, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private readonly observable$: Observable<MediaChange>;\n}\n\nexport const ObservableMediaProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  useClass: MediaService\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map(v => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1919px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n"],"names":[],"mappings":"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"}