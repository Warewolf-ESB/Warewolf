{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/version.ts","../../src/lib/module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('6.0.0-beta.18');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints?: BreakPoint|BreakPoint[]): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: Array.isArray(breakpoints) ?\n        configOptions.serverLoaded ?\n          [\n            {provide: LAYOUT_CONFIG, useValue: configOptions},\n            {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n            {provide: SERVER_TOKEN, useValue: true},\n          ] : [\n            {provide: LAYOUT_CONFIG, useValue: configOptions},\n            {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          ]\n        :\n        configOptions.serverLoaded ?\n          [\n            {provide: LAYOUT_CONFIG, useValue: configOptions},\n            {provide: SERVER_TOKEN, useValue: true},\n          ] :\n          [\n            {provide: LAYOUT_CONFIG, useValue: configOptions},\n          ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n"],"names":["VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","Array","isArray","serverLoaded","provide","LAYOUT_CONFIG","useValue","BREAKPOINT","multi","SERVER_TOKEN","type","NgModule","args","imports","FlexModule","ExtendedModule","GridModule","exports","Boolean","decorators","Optional","Inject","Object","PLATFORM_ID"],"mappings":";;;;;;;ssBAWA,IAAaA,GAAU,GAAIC,GAAAA,QAAQ,kCCyDjC,QAAFC,GAAgDC,EACbC,GAC3BC,EAAAA,iBAAiBD,KAAgBD,GACnCG,QAAQC,KAAK,4EAvEnB,MA0CSL,GAATM,WAAE,SAAkBC,EACAC,GAChB,OACEC,SAAUT,EACVU,UAAWC,MAAMC,QAAQJ,GACvBD,EAAcM,eAETC,QAASC,EAAAA,cAAeC,SAAUT,IAClCO,QAASG,EAAAA,WAAYD,SAAUR,EAAaU,OAAO,IACnDJ,QAASK,EAAAA,aAAcH,UAAU,MAEjCF,QAASC,EAAAA,cAAeC,SAAUT,IAClCO,QAASG,EAAAA,WAAYD,SAAUR,EAAaU,OAAO,IAGxDX,EAAcM,eAETC,QAASC,EAAAA,cAAeC,SAAUT,IAClCO,QAASK,EAAAA,aAAcH,UAAU,MAGjCF,QAASC,EAAAA,cAAeC,SAAUT,qBA/B/Ca,KAACC,EAAAA,SAADC,OACEC,SAAUC,EAAAA,WAAYC,EAAAA,eAAgBC,EAAAA,YACtCC,SAAUH,EAAAA,WAAYC,EAAAA,eAAgBC,EAAAA,oDAkCxCN,KAAAQ,QAAAC,aAAAT,KAAeU,EAAAA,WAAfV,KAA2BW,EAAAA,OAA3BT,MAAkCH,EAAAA,kBAClCC,KAA+CY,OAA/CH,aAAAT,KAAeW,EAAAA,OAAfT,MAAsBW,EAAAA,kBArEtBjC"}