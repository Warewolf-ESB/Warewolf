{"version":3,"file":"ng-bootstrap.umd.js.map","sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts",null,"ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  A flag determining whether the panel is disabled or not.\n   *  When disabled, the panel cannot be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel. The id should be unique.\n   *  If not provided, it will be auto-generated.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  /**\n   * A flag telling if the panel is currently open\n   */\n  isOpen = false;\n\n  /**\n   *  The title for the panel.\n   */\n  @Input() title: string;\n\n  /**\n   *  Accordion's types of panels to be applied per panel basis.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\"\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before toggling an accordion panel\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * Id of the accordion panel that is toggled\n   */\n  panelId: string;\n\n  /**\n   * Whether the panel will be opened (true) or closed (false)\n   */\n  nextState: boolean;\n\n  /**\n   * Function that will prevent panel toggling if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button type=\"button\" class=\"btn btn-link\"\n              (click)=\"toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"!panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel identifiers that should be opened\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  Whether the other panels should be closed when a panel is opened\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * Whether the closed panels should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   *  Accordion's types of panels to be applied globally.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\n   */\n  @Input() type: string;\n\n  /**\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded or not.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels if [closeOthers]=\"false\". For the [closeOthers]=\"true\" case will have no effect if there is an\n   * open panel, otherwise the first panel will be expanded.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all open panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent} from './accordion';\n\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alerts can be used to provide feedback messages.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n    `,\n  styles: [`:host{display:block}`]\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an Ã) will be displayed.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\", \"danger\",\n   * \"primary\", \"secondary\", \"light\", \"dark\".\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * A flag indicating if a given checkbox button is disabled.\n   */\n  @Input() disabled = false;\n\n  /**\n   * Value to be propagated as model when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * Value to be propagated as model when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n  }\n}\n","import {Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'group'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n   * enclosed inputs. If not specified, a name is generated automatically.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The name of the input. All inputs of a group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * You can specify model value of a given radio by binding to the value property.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * A flag indicating if a given radio button is disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {Subject, timer} from 'rxjs';\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * Represents an individual slide to be used within a carousel.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pauseOnHover && pause()',\n    '(mouseleave)': 'pauseOnHover && cycle()',\n    '(keydown.arrowLeft)': 'keyboard && prev()',\n    '(keydown.arrowRight)': 'keyboard && next()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  private _start$ = new Subject<void>();\n  private _stop$ = new Subject<void>();\n\n  /**\n   * The active slide id.\n   */\n  @Input() activeId: string;\n\n\n  /**\n   * Amount of time in milliseconds before next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * Whether can wrap from the last to the first slide.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * A flag for allowing navigation via keyboard\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * A flag to enable slide cycling pause/resume on mouseover.\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * A flag to show / hide navigation arrows.\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * A flag to show / hide navigation indicators.\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * A carousel slide event fired when the slide transition is completed.\n   * See NgbSlideEvent for payload details\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        this._start$\n            .pipe(\n                map(() => this.interval), filter(interval => interval > 0 && this.slides.length > 0),\n                switchMap(interval => timer(interval).pipe(takeUntil(this._stop$))))\n            .subscribe(() => this._ngZone.run(() => {\n              this.next();\n              this._cd.detectChanges();\n            }));\n\n        this._start$.next();\n      });\n    }\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._stop$.next(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._start$.next();\n    }\n  }\n\n  /**\n   * Navigate to a slide with the specified identifier.\n   */\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  /**\n   * Stops the carousel from cycling through items.\n   */\n  pause() { this._stop$.next(); }\n\n  /**\n   * Restarts cycling through the carousel slides from left to right.\n   */\n  cycle() { this._start$.next(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      this._start$.next();\n      this.activeId = selectedSlide.id;\n    }\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * The payload of the slide event fired when the slide transition is completed\n */\nexport interface NgbSlideEvent {\n  /**\n   * Previous slide id\n   */\n  prev: string;\n\n  /**\n   * New slide ids\n   */\n  current: string;\n\n  /**\n   * Slide event direction\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Enum to define the carousel slide event direction\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * A flag indicating collapsed (true) or open (false) state.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * Simple class used for a date representation that datepicker also uses internally\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,\n   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if current date is equal to another date\n   */\n  equals(other: NgbDate): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if current date is before another date\n   */\n  before(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if current date is after another date\n   */\n  after(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nfunction fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * Calendar used by the datepicker.\n * Default implementation uses Gregorian calendar.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns weekday number for a given day.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns week number for a given week.\n   */\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid for a current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number, disabled,\n        focused: false,\n        selected: false\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the 'aria-label' attribute for a specific date\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by date picker\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered\n   * in date picker year select box\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set dayTemplateData(dayTemplateData: NgbDayTemplateData) {\n    if (this._state.dayTemplateData !== dayTemplateData) {\n      this._nextState({dayTemplateData});\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {toString} from '../util/util';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.PageUp:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n          break;\n        case Key.PageDown:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n          break;\n        case Key.End:\n          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n          break;\n        case Key.Home:\n          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n          break;\n        case Key.ArrowLeft:\n          this._service.focusMove('d', -1);\n          break;\n        case Key.ArrowUp:\n          this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n          break;\n        case Key.ArrowRight:\n          this._service.focusMove('d', 1);\n          break;\n        case Key.ArrowDown:\n          this._service.focusMove('d', this._calendar.getDaysPerWeek());\n          break;\n        case Key.Enter:\n        case Key.Space:\n          this._service.focusSelect();\n          break;\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts user-model date into an NgbDateStruct for internal use in the library\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts internal date value NgbDateStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  ElementRef,\n  NgZone\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate} from './datepicker-tools';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n\n/**\n * A lightweight and highly configurable datepicker directive\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}.ngb-dp-month{pointer-events:none}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}ngb-datepicker-month-view{pointer-events:auto}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}/deep/ .ngb-dp-month+.ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week{padding-left:1rem}/deep/ .ngb-dp-month+.ngb-dp-month>.ngb-dp-month-name{padding-left:1rem}/deep/ .ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}/deep/ .ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}/deep/ .ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week:last-child{padding-bottom:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}`],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  private _controlValue: NgbDate;\n  private _subscription: Subscription;\n  private _selectSubscription: Subscription;\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Callback to pass any arbitrary data to the custom day template context\n   * 'Current' contains the month that will be displayed in the view\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Reference for the custom template for the footer\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years after current month\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years before current month\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   */\n  @Output() select = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date); });\n\n    this._subscription = _service.model$.subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month}\n        });\n      }\n      _cd.markForCheck();\n    });\n  }\n\n  /**\n   * Manually focus the focusable day in the datepicker\n   */\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    this._service.open(NgbDate.from(date ? {...date, day: 1} : null));\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this._selectSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  styles: [`:host{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}`],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline:auto 1px}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}`],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\n   * partial. They must return null if the value can't be parsed.\n   * @param value the value to parse\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given date to a string. Implementations should return an empty string if the given date is null,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   * @param date the date to format as a string\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      ClientRect {\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const placementPrimary = placement.split('-')[0] || 'top';\n    const placementSecondary = placement.split('-')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      'height': targetElBCR.height || targetElement.offsetHeight,\n      'width': targetElBCR.width || targetElement.offsetWidth,\n      'top': 0,\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\n      'left': 0,\n      'right': targetElBCR.width || targetElement.offsetWidth\n    };\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n            hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\n        break;\n      case 'left':\n        targetElPosition.left =\n            hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  // get the available placements of the target element in the viewport depending on the host element\n  getAvailablePlacements(hostElement: HTMLElement, targetElement: HTMLElement): string[] {\n    let availablePlacements: Array<string> = [];\n    let hostElemClientRect = hostElement.getBoundingClientRect();\n    let targetElemClientRect = targetElement.getBoundingClientRect();\n    let html = document.documentElement;\n    let windowHeight = window.innerHeight || html.clientHeight;\n    let windowWidth = window.innerWidth || html.clientWidth;\n    let hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n    let hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n\n    // left: check if target width can be placed between host left and viewport start and also height of target is\n    // inside viewport\n    if (targetElemClientRect.width < hostElemClientRect.left) {\n      // check for left only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'left');\n      }\n      // check for left-top and left-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n    }\n\n    // top: target height is less than host top\n    if (targetElemClientRect.height < hostElemClientRect.top) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'top');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n    }\n\n    // right: check if target width can be placed between host right and viewport end and also height of target is\n    // inside viewport\n    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n      // check for right only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'right');\n      }\n      // check for right-top and right-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n    }\n\n    // bottom: check if there is enough space between host bottom and viewport end for target height\n    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n    }\n\n    return availablePlacements;\n  }\n\n  /**\n   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n   * primaryplacement: left|right\n   * availablePlacementArr: array in which available placements to be set\n   */\n  private setSecondaryPlacementForLeftRight(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n    }\n    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n    }\n  }\n\n  /**\n   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n   * primaryplacement: top|bottom\n   * availablePlacementArr: array in which available placements to be set\n   */\n  private setSecondaryPlacementForTopBottom(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n    }\n    if (targetElemClientRect.width <= hostElemClientRect.right) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n    }\n  }\n}\n\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean): Placement {\n  let placementVals: Array<Placement> = Array.isArray(placement) ? placement : [placement as Placement];\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n     'left-bottom', 'right-top', 'right-bottom',\n    ].forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n  let topVal = 0, leftVal = 0;\n  let appliedPlacement: Placement;\n  // get available placements\n  let availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n  // iterate over all the passed placements\n  for (let { item, index } of toItemIndexes(placementVals)) {\n    // check if passed placement is present in the available placement or otherwise apply the last placement in the\n    // passed placement list\n    if ((availablePlacements.find(val => val === item) != null) || (placementVals.length === index + 1)) {\n      appliedPlacement = <Placement>item;\n      const pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n      topVal = pos.top;\n      leftVal = pos.left;\n      break;\n    }\n  }\n  targetElement.style.top = `${topVal}px`;\n  targetElement.style.left = `${leftVal}px`;\n  return appliedPlacement;\n}\n\n// function to get index and item of an array\nfunction toItemIndexes<T>(a: T[]) {\n  return a.map((item, index) => ({item, index}));\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>;\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from '../util/key';\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: NodeListOf<HTMLElement> = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(takeUntil(stopFocusTrap$), filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if (focusedElement === first && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  fromEvent(element, 'click')\n      .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n      .subscribe(lastFocusedElement => lastFocusedElement.focus());\n};\n","import {\n  Directive,\n  Input,\n  ComponentRef,\n  ElementRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentFactoryResolver,\n  NgZone,\n  TemplateRef,\n  forwardRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Inject\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\n\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerService} from './datepicker-service';\n\nimport {Subject, fromEvent, race, NEVER} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _closed$ = new Subject();\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to\n   * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on\n   * date selection only. For the 'outside' the popup will close only on the outside click.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Callback to pass any arbitrary data to the custom day template context\n   * 'Current' contains the month that will be displayed in the view\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Reference for the custom template for the footer inside datepicker\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Placement of a datepicker popup accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any) {\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker with the selected date indicated by the ngModel value.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$);\n\n      this._cRef.instance.focus();\n\n      // closing on ESC and outside clicks\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this._closed$), filter(e => e.which === Key.Escape));\n\n          let outsideClicks$;\n          if (this.autoClose === true || this.autoClose === 'outside') {\n            // we don't know how the popup was opened, so if it was opened with a click,\n            // we have to skip the first one to avoid closing it immediately\n            let isOpening = true;\n            requestAnimationFrame(() => isOpening = false);\n\n            outsideClicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                                 .pipe(\n                                     takeUntil(this._closed$),\n                                     filter(event => !isOpening && this._shouldCloseOnOutsideClick(event)));\n          } else {\n            outsideClicks$ = NEVER;\n          }\n\n          race<Event>([escapes$, outsideClicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this._closed$.next();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup (opens when closed and closes when opened).\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.setStyle(nativeElement, 'padding', '0');\n    this._renderer.addClass(nativeElement, 'show');\n  }\n\n  private _shouldCloseOnOutsideClick(event: MouseEvent) {\n    return ![this._elRef.nativeElement, this._cRef.location.nativeElement].some(el => el.contains(event.target));\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}:host.outside{opacity:.5}`],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host>select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}`],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '×', '×', '×', '×', '×', '×', '×', '×', '×'];\n  const hArray10_19 =\n      ['×', '××â¬', '××â¬', '××â¬', '××â¬', '××', '××â¬', '××â¬', '××â¬', '××â¬'];\n  const hArray20_90 = ['', '', '×', '×', '×', '× ', '×¡', '×¢', '×¤', '×¦'];\n  const hArray100_900 = ['', '×§', '×¨', '×©', '×ª', '×ª×§', '×ª×¨', '×ª×©', '×ª×ª', '×ª×ª×§'];\n  const hArray1000_9000 = ['', '×', '×', '××', '××', '×', '××', '××', '×××', '×××'];\n  const geresh = '×³', gershaim = '×´';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['××³', '××³', '××³', '××³', '××³', '×©×³', '××³'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  forwardRef,\n  Inject,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ContentChild,\n  NgZone,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race, Subject, Subscription} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\nimport {Key} from '../util/key';\n\n/**\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\n      private _renderer: Renderer2) {}\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n\n  position(triggerEl, placement) {\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n  }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    this.placement = _placement;\n    /**\n     * apply the new placement\n     * in case of top use up-arrow or down-arrow otherwise\n     */\n    if (_placement.search('^top') !== -1) {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    }\n  }\n}\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n\n  toggleOpen() { this.dropdown.toggle(); }\n}\n\n/**\n * Transforms a node into a dropdown.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\n   * When it is false dropdowns are never automatically closed.\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n  @Output() openChange = new EventEmitter();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone) {\n    this.placement = config.placement;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    if (this._menu) {\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\n    }\n\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open or not.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._positionMenu();\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    if (this.autoClose) {\n      this._ngZone.runOutsideAngular(() => {\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                             .pipe(takeUntil(this._closed$), filter(event => event.which === Key.Escape));\n\n        const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                            .pipe(takeUntil(this._closed$), filter(event => this._shouldCloseFromClick(event)));\n\n        race<Event>([escapes$, clicks$]).pipe(takeUntil(this._closed$)).subscribe(() => this._ngZone.run(() => {\n          this.close();\n          this._changeDetector.markForCheck();\n        }));\n      });\n    }\n  }\n\n  /**\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._closed$.next();\n      this.openChange.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2 && !this._isEventFromToggle(event)) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\n\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._menu.position(this._anchor.anchorEl, this.placement);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\n\nexport {NgbDropdown, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Sets the aria attribute aria-labelledby to a modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Function called when a modal will be dismissed.\n   * If this function returns false, the promise is resolved with false or the promise is rejected, the modal is not\n   * dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * To center the modal vertically (false by default).\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * An element to which to attach newly opened modal windows.\n   */\n  container?: string;\n\n  /**\n   * Injector to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * Custom class to append to the modal window\n   */\n  windowClass?: string;\n\n  /**\n   * Custom class to append to the modal backdrop\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n* Configuration object token for the NgbModal service.\n* You can provide this configuration, typically in your root module in order to provide default option values for every\n* modal.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements NgbModalOptions {\n  backdrop: boolean | 'static' = true;\n  keyboard = true;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Detects if a scrollbar is present and if yes, already compensates for its\n   * removal by adding an equivalent padding on the right of the body.\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(width: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPadding = body.style.paddingRight;\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${paddingAmount + width}px`;\n    return () => body.style['padding-right'] = userSetPadding;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    return rect.left + rect.right < window.innerWidth;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport class NgbActiveModal {\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to a newly opened modal.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of component used as modal's content.\n   * Undefined when a TemplateRef is used as modal's content.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>) {}\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      const autoFocusable = this._elRef.nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus.focus();\n    this._elWithFocus = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n  TemplateRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n  private _activeWindowCmptHasChanged = new Subject();\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      activeModal: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and using supplied options. Content can be provided\n   * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n   * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismiss all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   * \n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  /**\n   * Whether to disable buttons from user input\n   */\n  @Input() disabled: boolean;\n\n  /**\n   *  Whether to show the \"First\" and \"Last\" page links\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   *  Whether to show the \"Next\" and \"Previous\" page links\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   *  Whether to rotate pages when maxSize > number of pages.\n   *  Current page will be in the middle\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  Number of items in collection.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  Maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  Current page. Page numbers start with 1\n   */\n  @Input() page = 1;\n\n  /**\n   *  Number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed.\n   *  Event's payload equals to the newly selected page.\n   *  Will fire only if collection size is set and all values are valid.\n   *  Page numbers start with 1\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * Pagination display size: small or large\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbPagination} from './pagination';\n\nexport {NgbPagination} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\n@NgModule({declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]})\nexport class NgbPaginationModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\n}\n","export class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave']\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst noopFn = () => {};\n\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styles: [`:host.bs-popover-bottom .arrow,:host.bs-popover-top .arrow{left:50%;margin-left:-5px}:host.bs-popover-bottom-left .arrow,:host.bs-popover-top-left .arrow{left:2em}:host.bs-popover-bottom-right .arrow,:host.bs-popover-top-right .arrow{left:auto;right:2em}:host.bs-popover-left .arrow,:host.bs-popover-right .arrow{top:50%;margin-top:-5px}:host.bs-popover-left-top .arrow,:host.bs-popover-right-top .arrow{top:.7em}:host.bs-popover-left-bottom .arrow,:host.bs-popover-right-bottom .arrow{top:auto;bottom:.7em}`]\n})\nexport class NgbPopoverWindow {\n  @Input() placement: Placement = 'top';\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n  }\n\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n   * Content to be displayed as popover. If title and content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover. If title and content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given popover is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n  /**\n   * An optional class applied to ngb-popover-window\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   * The context is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position popover along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the popover first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromPopover(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromPopover(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromPopover(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * Maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n   * supporting CSS3 animations, and if striped is true.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * A flag indicating if a progress bar should be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * A flag indicating if the current percentage value should be shown.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n   */\n  @Input() type: string;\n\n  /**\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n   */\n  @Input() value = 0;\n\n  /**\n   * Height of the progress bar. Accepts any valid CSS height values, ex. '2rem'\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n\n  /**\n   * Index of the star.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n  @Input() max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n  @Input() rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n  @Input() title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * Id of the currently active tab\n   */\n  activeId: string;\n\n  /**\n   * Id of the newly selected tab\n   */\n  nextId: string;\n\n  /**\n   * Function that will prevent tab switch if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Whether the closed tabs should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n   * 'justified'\n   * The default value is 'start'.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the nav (horizontal or vertical).\n   * The default value is 'horizontal'.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of Bootstrap defined types ('tabs' or 'pills').\n   * Since 3.0.0 can also be an arbitrary string (for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated pane.\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\n * NgbTimeStruct model.\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts internal time value NgbTimeStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Component, forwardRef, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A lightweight & configurable timepicker directive.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  styles: [`:host{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}.chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:'';display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}input{text-align:center}`],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * Whether to display the spinners above and below the inputs.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * Whether to display seconds input.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * Number of hours to increase or decrease when using a button.\n   */\n  @Input() hourStep: number;\n\n  /**\n   * Number of minutes to increase or decrease when using a button.\n   */\n  @Input() minuteStep: number;\n\n  /**\n   * Number of seconds to increase or decrease when using a button.\n   */\n  @Input() secondStep: number;\n\n  /**\n   * To make timepicker readonly\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * To set the size of the inputs and button\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>) {\n    this.meridian = config.meridian;\n    this.spinners = config.spinners;\n    this.seconds = config.seconds;\n    this.hourStep = config.hourStep;\n    this.minuteStep = config.minuteStep;\n    this.secondStep = config.secondStep;\n    this.disabled = config.disabled;\n    this.readonlyInputs = config.readonlyInputs;\n    this.size = config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'hover';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement + (tooltipClass ? \" \" + tooltipClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styles: [`:host.bs-tooltip-bottom .arrow,:host.bs-tooltip-top .arrow{left:calc(50% - .4rem)}:host.bs-tooltip-bottom-left .arrow,:host.bs-tooltip-top-left .arrow{left:1em}:host.bs-tooltip-bottom-right .arrow,:host.bs-tooltip-top-right .arrow{left:auto;right:.8rem}:host.bs-tooltip-left .arrow,:host.bs-tooltip-right .arrow{top:calc(50% - .4rem)}:host.bs-tooltip-left-top .arrow,:host.bs-tooltip-right-top .arrow{top:.4rem}:host.bs-tooltip-left-bottom .arrow,:host.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}`]\n})\nexport class NgbTooltipWindow {\n  @Input() placement: Placement = 'top';\n  @Input() id: string;\n  @Input() tooltipClass: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n  }\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the tooltip should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n    * Placement of a tooltip accepts:\n    *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n    *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n    * and array of above values.\n    */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given tooltip is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n  /**\n   * An optional class applied to ngb-tooltip-window\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   * The context is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position tooltip along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the tooltip first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromTooltip(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromTooltip(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromTooltip(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  /**\n   * No need in forRoot anymore with tree-shakeable services\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that can be used inside a custom result template in order to highlight the term inside the text of the\n * result\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styles: [`.ngb-highlight{font-weight:700}`]\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class of the span elements wrapping the term inside the result\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The result text to display. If the term is found inside this text, it's highlighted\n   */\n  @Input() result: string;\n\n  /**\n   * The searched term\n   */\n  @Input() term: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * Context for the typeahead result template in case you want to override the default one\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result data model\n   */\n  result: any;\n\n  /**\n   * Search term from the input used to get current result\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, BehaviorSubject, Subscription, fromEvent} from 'rxjs';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {Key} from '../util/key';\nimport {Live} from '../util/accessibility/live';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'onDocumentClick($event)',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * Value for the configurable autocomplete attribute.\n   * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem\n   * to be always correctly taken into account.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /** Placement of a typeahead accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n  */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  onDocumentClick(event) {\n    if (event.target !== this._elementRef.nativeElement) {\n      this.dismissPopup();\n    }\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._inputValueBackup);\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this._resubscribeTypeahead.next(null);\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbCheckBox, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbPeriod,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarHebrew,\n  NgbCalendarPersian,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerConfig,\n  NgbDateStruct,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModule}; }\n}\n"],"names":["Injectable","Directive","TemplateRef","Input","ContentChildren","EventEmitter","Component","Output","NgModule","CommonModule","ChangeDetectionStrategy","Renderer2","ElementRef","NG_VALUE_ACCESSOR","forwardRef","nextId","Subject","isPlatformBrowser","map","filter","switchMap","timer","takeUntil","Inject","PLATFORM_ID","NgZone","ChangeDetectorRef","tslib_1.__extends","LOCALE_ID","getLocaleDayNames","FormStyle","TranslationWidth","getLocaleMonthNames","formatDate","take","tslib_1.__values","fromEvent","withLatestFrom","NGB_DATEPICKER_VALUE_ACCESSOR","NG_VALIDATORS","NEVER","race","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","mod","GREGORIAN_EPOCH","isGregorianLeapYear","toGregorian","fromGregorian","FormsModule","ContentChild","Injector","ApplicationRef","RendererFactory2","InjectionToken","BehaviorSubject","tap"],"mappings":"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AE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;QAE9E,cAAc,EAAE,cAAc,EAAE,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"}
