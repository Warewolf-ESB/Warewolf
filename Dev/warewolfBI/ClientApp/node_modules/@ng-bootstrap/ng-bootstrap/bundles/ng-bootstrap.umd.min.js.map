{"version":3,"sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","null","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","Injectable","args","providedIn","nextId","NgbPanelTitle","templateRef","this","Directive","selector","TemplateRef","NgbPanelContent","NgbPanel","prototype","ngAfterContentChecked","titleTpl","titleTpls","first","contentTpl","contentTpls","Input","ContentChildren","descendants","NgbAccordion","config","EventEmitter","type","closeOtherPanels","closeOthers","isExpanded","panelId","activeIds","indexOf","expand","_changeOpenState","_findPanelById","expandAll","_this","length","panels","forEach","panel","collapse","collapseAll","toggle","isOpen","split","disabled","id","_closeOthers","_updateActiveIds","nextState","defaultPrevented_1","panelChange","emit","preventDefault","find","p","filter","map","Component","exportAs","host","class","role","[attr.aria-multiselectable]","template","NgbAccordionConfig","Output","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","forRoot","ngModule","NgModule","declarations","exports","imports","CommonModule","NgbAlert","_renderer","_element","dismissible","closeHandler","close","ngOnChanges","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","ngOnInit","changeDetection","ChangeDetectionStrategy","OnPush","[class.alert-dismissible]","styles","NgbAlertConfig","Renderer2","ElementRef","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_","Object","defineProperty","isFocused","focused","onTouched","onInputChange","$event","modelToPropagate","target","checked","valueChecked","valueUnChecked","onChange","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","autocomplete","[checked]","[disabled]","(change)","(focus)","(blur)","providers","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","Set","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","_radios","add","_updateRadiosDisabled","unregister","delete","_value","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","name","ngOnDestroy","[name]","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbSlide","tplRef","NgbCarousel","_platformId","_ngZone","_cd","Subject","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","ngAfterContentInit","isPlatformBrowser","runOutsideAngular","_start$","pipe","slides","switchMap","timer","takeUntil","_stop$","subscribe","run","next","detectChanges","activeSlide","_getSlideById","activeId","isFirstChange","select","slideId","_cycleToSelected","_getSlideEventDirection","prev","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","pause","cycle","slideIdx","direction","selectedSlide","slide","current","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","_getSlideIdxById","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","NgbCarouselConfig","Inject","PLATFORM_ID","NgZone","ChangeDetectorRef","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","[class.collapse]","[class.show]","NgbCollapseModule","NgbCollapse","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","error","NgbDate","year","month","day","from","date","equals","other","before","after","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","useFactory","tslib_1.__extends","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","setMonth","round","getToday","isValid","NgbCalendar","isChangedDate","dateComparator","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","buildMonth","dayTemplateData","outsideDays","lastDate","weeks","weekdays","getFirstViewDate","daysPerWeek","firstMonthDate","dayOfWeek","weekObject","days","collapsed","newDate","nextDate","ariaLabel","getDayAriaLabel","contextUserData","dayObject","context","assign","$implicit","data","currentMonth","selected","tabindex","hidden","shift","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getDayNumerals","getWeekNumerals","weekNumber","getYearNumerals","deps","LOCALE_ID","_locale","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","formatDate","NgbDatepickerService","_calendar","_i18n","focusVisible","navigation","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","_model$","model","_select$","_state","_nextState","toValidDate","focus","focusDate","focusMove","focusSelect","emitEvent","open","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","startDate","checkMinBeforeMax","Error","forceRebuild","yearChanged","monthChanged","generateSelectBoxYears","start","end","generateSelectBoxMonths","prevMonthDisabled","prevDate","nextMonthDisabled","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","_minDate","_maxDate","_firstViewDate","_lastViewDate","processKey","event","Key","which","shiftKey","stopPropagation","PREV","NEXT","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","fromModel","toModel","NgbDateAdapter","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_elementRef","_ngbDateAdapter","input","_selectSubscription","select$","_subscription","oldDate","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","navigate","markForCheck","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","__assign","t","s","arguments","apply","unsubscribe","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","showFocus","NgbDatepickerConfig","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","parse","dateParts","trim","format","NgbDateParserFormatter","positionService","Positioning","getAllStyles","element","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","document","documentElement","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","hostElPosition","targetElStyles","targetElBCR","placementPrimary","placementSecondary","targetElPosition","parseFloat","marginBottom","marginRight","getAvailablePlacements","availablePlacements","hostElemClientRect","targetElemClientRect","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","hostElemClientRectHorCenter","hostElemClientRectVerCenter","setSecondaryPlacementForLeftRight","setSecondaryPlacementForTopBottom","primaryPlacement","availablePlacementArr","placementVals","isArray","hasAuto","val","obj","search","appliedPlacement","topVal","leftVal","item","pos","_a","__values","tslib_1.__values","toItemIndexes","a","_b","_c","style","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","ngbFocusTrap","stopFocusTrap$","lastFocusedElement$","fromEvent","withLatestFrom","tabEvent","focusedElement","last","arr","lastFocusedElement","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_zoneSubscription","_cRef","location","container","instance","_onChange","_onTouched","registerOnValidatorChange","_validatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","cf","resolveComponentFactory","createComponent","_applyPopupStyling","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","appendChild","_closed$","autoClose","outsideClicks$","escapes$","isOpening_1","requestAnimationFrame","_shouldCloseOnOutsideClick","NEVER","race","remove","hostView","onBlur","datepickerInstance","optionName","setStyle","some","el","contains","dateSelect","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","changeMonth","changeYear","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isGregorianLeapYear","gDate","mod","GREGORIAN_EPOCH","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hYear","hMonth","ceil","getIslamicYearStart","hDay","getIslamicMonthStart","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","isIslamicLeapYear","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","MONTH_LENGTH","NgbCalendarIslamicUmalqura","daysDiff","getDaysDiff","date1","date2","diff","abs","j","numOfDays","dayDiff","y","jalaliDate","julianToGregorian","jalaliToJulian","jYear","jMonth","jDay","jalCal","gregorianToJulian","gy","march","div","setHours","gdate","julianToJalali","julianDayNumber","jalaliDay","jalaliMonth","numberOfDays","jalaliYear","gregorianDay","leap","setJalaliMonth","mod$1","trunc","jump","breaks","breaksLength","leapJ","jp","jm","gm","gd","NgbCalendarPersian","setJalaliYear","yearValue","setJalaliDay","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","isGregorianLeapYear$1","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","daysInMonth","getDayNumberInHebrewYear","numberOfDay","toGregorian$1","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","mem","result","step","unshift","NgbCalendarHebrew","setHebrewMonth","setHebrewDay","fromGregorian$1","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","UTC","setUTCFullYear","NgbDatepickerModule","FormsModule","NgbDropdownMenu","dropdown","isEventFrom","triggerEl","applyPlacement","_placement","parentNode","[class.dropdown-menu]","[attr.x-placement]","NgbDropdown","NgbDropdownAnchor","anchorEl","aria-haspopup","[attr.aria-expanded]","NgbDropdownToggle","elementRef","toggleOpen","(click)","_changeDetector","_positionMenu","_menu","_open","_setCloseHandlers","openChange","clicks$","_shouldCloseFromClick","button","_isEventFromToggle","_isEventFromMenu","_anchor","NgbDropdownConfig","ContentChild","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","content","_windowRef","_contentRef","_getContentRef","createEmbeddedView","rootNodes","createText","noop","ScrollBar","compensate","_isPresent","_adjustBody","_getWidth","body","userSetPadding","paddingRight","paddingAmount","rect","measurer","createElement","className","removeChild","NgbModalBackdrop","[class]","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","destroy","backdropNativeEl","BACKDROP_CLICK","ESC","NgbModalWindow","backdropClick","backdrop","ModalDismissReasons","escKey","defaultPrevented","_elWithFocus","activeElement","ngAfterViewInit","autoFocusable","firstFocusable","elWithFocus","(keyup.esc)","[attr.aria-labelledby]","NgbModalStack","_applicationRef","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_windowCmpts","activeWindowCmpt","moduleCFR","contentInjector","containerEl","renderer","createRenderer","revertPaddingForScrollBar","removeBodyClass","_modalRefs","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","dismissAll","hasOpenModals","attachView","windowInstance","_windowAttributes","backdropInstance","_backdropAttributes","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","parent","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","NgbModalConfig","NgbModalModule","NgbPagination","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","size","hasPrevious","page","hasNext","pageCount","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","pages","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","pageChange","newPage","NgbPaginationConfig","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","noopFn","listenToTriggers","triggers","openFn","closeFn","toggleFn","parsedTriggers","parseTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","listeners","listen","unsubscribeFn","NgbPopoverWindow","isTitleTemplate","title","[id]","NgbPopover","componentFactoryResolver","viewContainerRef","disablePopover","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","_ngbPopoverWindowId","setAttribute","justOpened","shown","removeAttribute","_unregisterListenersFn","bind","_isEventFromPopover","popup","NgbPopoverConfig","NgbPopoverModule","NgbProgressbar","animated","striped","showValue","getValue","getPercentValue","NgbProgressbarConfig","NgbProgressbarModule","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","readonly","ariaValueText","nextRate","enter","handleBlur","handleClick","update","resettable","rate","handleKeyDown","contexts","v","k","fill","reset","leave","internalChange","newRate","rateChange","_getFillValue","Number","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","(keydown)","NgbRatingConfig","NgbRatingModule","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","justify","orientation","justifyClass","tabId","selectedTab","_getTabById","tabChange","activeTab","tabs","tabsWithId","tab","NgbTabsetConfig","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatHour","formatMinSec","touched","NgbTimepickerConfig","NgbTimepickerModule","NgbTooltipWindow","NgbTooltip","disableTooltip","tooltipClass","_ngbTooltip","_ngbTooltipWindowId","_isEventFromTooltip","NgbTooltipConfig","NgbTooltipModule","NgbHighlight","resultStr","resultLC","toLowerCase","termLC","term","currentIdx","parts","RegExp","regExpEscape","text","replace","part","originalPart","substr","NgbTypeaheadWindow","hasActive","activeIdx","results","getActive","markActive","_activeChanged","focusFirst","resetActive","selectEvent","activeChangeEvent","ARIA_LIVE_DELAY","InjectionToken","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","classList","Live","_delay","parentElement","say","message","delay","textContent","setText","setTimeout","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","editable","showHint","_valueChanges","_resubscribeTypeahead","BehaviorSubject","isPopupOpen","processedResults$","tap","_inputValueBackup","ngbTypeahead","userInput$","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","onDocumentClick","dismissPopup","_showHint","_selectResult","_openPopup","popupId","_selectResultClosePopup","activeDescendant","selectItem","userInputLowerCase","formattedVal","inputFormatter","resultFormatter","formatter","resultTemplate","count","[class.open]","(document:click)","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadConfig","NgbTypeaheadModule","NGB_MODULES","NgbModule"],"mappings":"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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  A flag determining whether the panel is disabled or not.\n   *  When disabled, the panel cannot be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel. The id should be unique.\n   *  If not provided, it will be auto-generated.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  /**\n   * A flag telling if the panel is currently open\n   */\n  isOpen = false;\n\n  /**\n   *  The title for the panel.\n   */\n  @Input() title: string;\n\n  /**\n   *  Accordion's types of panels to be applied per panel basis.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\"\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before toggling an accordion panel\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * Id of the accordion panel that is toggled\n   */\n  panelId: string;\n\n  /**\n   * Whether the panel will be opened (true) or closed (false)\n   */\n  nextState: boolean;\n\n  /**\n   * Function that will prevent panel toggling if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button type=\"button\" class=\"btn btn-link\"\n              (click)=\"toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"!panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel identifiers that should be opened\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  Whether the other panels should be closed when a panel is opened\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * Whether the closed panels should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   *  Accordion's types of panels to be applied globally.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\n   */\n  @Input() type: string;\n\n  /**\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded or not.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels if [closeOthers]=\"false\". For the [closeOthers]=\"true\" case will have no effect if there is an\n   * open panel, otherwise the first panel will be expanded.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all open panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent} from './accordion';\n\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alerts can be used to provide feedback messages.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n    `,\n  styles: [`:host{display:block}`]\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an Ã) will be displayed.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\", \"danger\",\n   * \"primary\", \"secondary\", \"light\", \"dark\".\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * A flag indicating if a given checkbox button is disabled.\n   */\n  @Input() disabled = false;\n\n  /**\n   * Value to be propagated as model when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * Value to be propagated as model when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n  }\n}\n","import {Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'group'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n   * enclosed inputs. If not specified, a name is generated automatically.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The name of the input. All inputs of a group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * You can specify model value of a given radio by binding to the value property.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * A flag indicating if a given radio button is disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {Subject, timer} from 'rxjs';\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * Represents an individual slide to be used within a carousel.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pauseOnHover && pause()',\n    '(mouseleave)': 'pauseOnHover && cycle()',\n    '(keydown.arrowLeft)': 'keyboard && prev()',\n    '(keydown.arrowRight)': 'keyboard && next()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  private _start$ = new Subject<void>();\n  private _stop$ = new Subject<void>();\n\n  /**\n   * The active slide id.\n   */\n  @Input() activeId: string;\n\n\n  /**\n   * Amount of time in milliseconds before next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * Whether can wrap from the last to the first slide.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * A flag for allowing navigation via keyboard\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * A flag to enable slide cycling pause/resume on mouseover.\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * A flag to show / hide navigation arrows.\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * A flag to show / hide navigation indicators.\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * A carousel slide event fired when the slide transition is completed.\n   * See NgbSlideEvent for payload details\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        this._start$\n            .pipe(\n                map(() => this.interval), filter(interval => interval > 0 && this.slides.length > 0),\n                switchMap(interval => timer(interval).pipe(takeUntil(this._stop$))))\n            .subscribe(() => this._ngZone.run(() => {\n              this.next();\n              this._cd.detectChanges();\n            }));\n\n        this._start$.next();\n      });\n    }\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._stop$.next(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._start$.next();\n    }\n  }\n\n  /**\n   * Navigate to a slide with the specified identifier.\n   */\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  /**\n   * Stops the carousel from cycling through items.\n   */\n  pause() { this._stop$.next(); }\n\n  /**\n   * Restarts cycling through the carousel slides from left to right.\n   */\n  cycle() { this._start$.next(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      this._start$.next();\n      this.activeId = selectedSlide.id;\n    }\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * The payload of the slide event fired when the slide transition is completed\n */\nexport interface NgbSlideEvent {\n  /**\n   * Previous slide id\n   */\n  prev: string;\n\n  /**\n   * New slide ids\n   */\n  current: string;\n\n  /**\n   * Slide event direction\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Enum to define the carousel slide event direction\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * A flag indicating collapsed (true) or open (false) state.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * Simple class used for a date representation that datepicker also uses internally\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,\n   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if current date is equal to another date\n   */\n  equals(other: NgbDate): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if current date is before another date\n   */\n  before(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if current date is after another date\n   */\n  after(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nfunction fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * Calendar used by the datepicker.\n * Default implementation uses Gregorian calendar.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns weekday number for a given day.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns week number for a given week.\n   */\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid for a current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number, disabled,\n        focused: false,\n        selected: false\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the 'aria-label' attribute for a specific date\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by date picker\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered\n   * in date picker year select box\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set dayTemplateData(dayTemplateData: NgbDayTemplateData) {\n    if (this._state.dayTemplateData !== dayTemplateData) {\n      this._nextState({dayTemplateData});\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {toString} from '../util/util';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.PageUp:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n          break;\n        case Key.PageDown:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n          break;\n        case Key.End:\n          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n          break;\n        case Key.Home:\n          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n          break;\n        case Key.ArrowLeft:\n          this._service.focusMove('d', -1);\n          break;\n        case Key.ArrowUp:\n          this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n          break;\n        case Key.ArrowRight:\n          this._service.focusMove('d', 1);\n          break;\n        case Key.ArrowDown:\n          this._service.focusMove('d', this._calendar.getDaysPerWeek());\n          break;\n        case Key.Enter:\n        case Key.Space:\n          this._service.focusSelect();\n          break;\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts user-model date into an NgbDateStruct for internal use in the library\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts internal date value NgbDateStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  ElementRef,\n  NgZone\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate} from './datepicker-tools';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n\n/**\n * A lightweight and highly configurable datepicker directive\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}.ngb-dp-month{pointer-events:none}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}ngb-datepicker-month-view{pointer-events:auto}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}/deep/ .ngb-dp-month+.ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week{padding-left:1rem}/deep/ .ngb-dp-month+.ngb-dp-month>.ngb-dp-month-name{padding-left:1rem}/deep/ .ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}/deep/ .ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}/deep/ .ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week:last-child{padding-bottom:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}`],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  private _controlValue: NgbDate;\n  private _subscription: Subscription;\n  private _selectSubscription: Subscription;\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Callback to pass any arbitrary data to the custom day template context\n   * 'Current' contains the month that will be displayed in the view\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Reference for the custom template for the footer\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years after current month\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years before current month\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   */\n  @Output() select = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date); });\n\n    this._subscription = _service.model$.subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month}\n        });\n      }\n      _cd.markForCheck();\n    });\n  }\n\n  /**\n   * Manually focus the focusable day in the datepicker\n   */\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    this._service.open(NgbDate.from(date ? {...date, day: 1} : null));\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this._selectSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  styles: [`:host{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}`],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline:auto 1px}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}`],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\n   * partial. They must return null if the value can't be parsed.\n   * @param value the value to parse\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given date to a string. Implementations should return an empty string if the given date is null,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   * @param date the date to format as a string\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      ClientRect {\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const placementPrimary = placement.split('-')[0] || 'top';\n    const placementSecondary = placement.split('-')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      'height': targetElBCR.height || targetElement.offsetHeight,\n      'width': targetElBCR.width || targetElement.offsetWidth,\n      'top': 0,\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\n      'left': 0,\n      'right': targetElBCR.width || targetElement.offsetWidth\n    };\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n            hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\n        break;\n      case 'left':\n        targetElPosition.left =\n            hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  // get the available placements of the target element in the viewport depending on the host element\n  getAvailablePlacements(hostElement: HTMLElement, targetElement: HTMLElement): string[] {\n    let availablePlacements: Array<string> = [];\n    let hostElemClientRect = hostElement.getBoundingClientRect();\n    let targetElemClientRect = targetElement.getBoundingClientRect();\n    let html = document.documentElement;\n    let windowHeight = window.innerHeight || html.clientHeight;\n    let windowWidth = window.innerWidth || html.clientWidth;\n    let hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n    let hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n\n    // left: check if target width can be placed between host left and viewport start and also height of target is\n    // inside viewport\n    if (targetElemClientRect.width < hostElemClientRect.left) {\n      // check for left only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'left');\n      }\n      // check for left-top and left-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n    }\n\n    // top: target height is less than host top\n    if (targetElemClientRect.height < hostElemClientRect.top) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'top');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n    }\n\n    // right: check if target width can be placed between host right and viewport end and also height of target is\n    // inside viewport\n    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n      // check for right only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'right');\n      }\n      // check for right-top and right-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n    }\n\n    // bottom: check if there is enough space between host bottom and viewport end for target height\n    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n    }\n\n    return availablePlacements;\n  }\n\n  /**\n   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n   * primaryplacement: left|right\n   * availablePlacementArr: array in which available placements to be set\n   */\n  private setSecondaryPlacementForLeftRight(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n    }\n    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n    }\n  }\n\n  /**\n   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n   * primaryplacement: top|bottom\n   * availablePlacementArr: array in which available placements to be set\n   */\n  private setSecondaryPlacementForTopBottom(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n    }\n    if (targetElemClientRect.width <= hostElemClientRect.right) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n    }\n  }\n}\n\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean): Placement {\n  let placementVals: Array<Placement> = Array.isArray(placement) ? placement : [placement as Placement];\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n     'left-bottom', 'right-top', 'right-bottom',\n    ].forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n  let topVal = 0, leftVal = 0;\n  let appliedPlacement: Placement;\n  // get available placements\n  let availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n  // iterate over all the passed placements\n  for (let { item, index } of toItemIndexes(placementVals)) {\n    // check if passed placement is present in the available placement or otherwise apply the last placement in the\n    // passed placement list\n    if ((availablePlacements.find(val => val === item) != null) || (placementVals.length === index + 1)) {\n      appliedPlacement = <Placement>item;\n      const pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n      topVal = pos.top;\n      leftVal = pos.left;\n      break;\n    }\n  }\n  targetElement.style.top = `${topVal}px`;\n  targetElement.style.left = `${leftVal}px`;\n  return appliedPlacement;\n}\n\n// function to get index and item of an array\nfunction toItemIndexes<T>(a: T[]) {\n  return a.map((item, index) => ({item, index}));\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>;\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from '../util/key';\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: NodeListOf<HTMLElement> = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(takeUntil(stopFocusTrap$), filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if (focusedElement === first && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  fromEvent(element, 'click')\n      .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n      .subscribe(lastFocusedElement => lastFocusedElement.focus());\n};\n","import {\n  Directive,\n  Input,\n  ComponentRef,\n  ElementRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentFactoryResolver,\n  NgZone,\n  TemplateRef,\n  forwardRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Inject\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\n\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerService} from './datepicker-service';\n\nimport {Subject, fromEvent, race, NEVER} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _closed$ = new Subject();\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to\n   * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on\n   * date selection only. For the 'outside' the popup will close only on the outside click.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Callback to pass any arbitrary data to the custom day template context\n   * 'Current' contains the month that will be displayed in the view\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Reference for the custom template for the footer inside datepicker\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Placement of a datepicker popup accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any) {\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker with the selected date indicated by the ngModel value.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$);\n\n      this._cRef.instance.focus();\n\n      // closing on ESC and outside clicks\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this._closed$), filter(e => e.which === Key.Escape));\n\n          let outsideClicks$;\n          if (this.autoClose === true || this.autoClose === 'outside') {\n            // we don't know how the popup was opened, so if it was opened with a click,\n            // we have to skip the first one to avoid closing it immediately\n            let isOpening = true;\n            requestAnimationFrame(() => isOpening = false);\n\n            outsideClicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                                 .pipe(\n                                     takeUntil(this._closed$),\n                                     filter(event => !isOpening && this._shouldCloseOnOutsideClick(event)));\n          } else {\n            outsideClicks$ = NEVER;\n          }\n\n          race<Event>([escapes$, outsideClicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this._closed$.next();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup (opens when closed and closes when opened).\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.setStyle(nativeElement, 'padding', '0');\n    this._renderer.addClass(nativeElement, 'show');\n  }\n\n  private _shouldCloseOnOutsideClick(event: MouseEvent) {\n    return ![this._elRef.nativeElement, this._cRef.location.nativeElement].some(el => el.contains(event.target));\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}:host.outside{opacity:.5}`],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host>select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}`],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '×', '×', '×', '×', '×', '×', '×', '×', '×'];\n  const hArray10_19 =\n      ['×', '××â¬', '××â¬', '××â¬', '××â¬', '××', '××â¬', '××â¬', '××â¬', '××â¬'];\n  const hArray20_90 = ['', '', '×', '×', '×', '× ', '×¡', '×¢', '×¤', '×¦'];\n  const hArray100_900 = ['', '×§', '×¨', '×©', '×ª', '×ª×§', '×ª×¨', '×ª×©', '×ª×ª', '×ª×ª×§'];\n  const hArray1000_9000 = ['', '×', '×', '××', '××', '×', '××', '××', '×××', '×××'];\n  const geresh = '×³', gershaim = '×´';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['××³', '××³', '××³', '××³', '××³', '×©×³', '××³'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  forwardRef,\n  Inject,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ContentChild,\n  NgZone,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race, Subject, Subscription} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\nimport {Key} from '../util/key';\n\n/**\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\n      private _renderer: Renderer2) {}\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n\n  position(triggerEl, placement) {\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n  }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    this.placement = _placement;\n    /**\n     * apply the new placement\n     * in case of top use up-arrow or down-arrow otherwise\n     */\n    if (_placement.search('^top') !== -1) {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    }\n  }\n}\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n\n  toggleOpen() { this.dropdown.toggle(); }\n}\n\n/**\n * Transforms a node into a dropdown.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\n   * When it is false dropdowns are never automatically closed.\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n  @Output() openChange = new EventEmitter();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone) {\n    this.placement = config.placement;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    if (this._menu) {\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\n    }\n\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open or not.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._positionMenu();\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    if (this.autoClose) {\n      this._ngZone.runOutsideAngular(() => {\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                             .pipe(takeUntil(this._closed$), filter(event => event.which === Key.Escape));\n\n        const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                            .pipe(takeUntil(this._closed$), filter(event => this._shouldCloseFromClick(event)));\n\n        race<Event>([escapes$, clicks$]).pipe(takeUntil(this._closed$)).subscribe(() => this._ngZone.run(() => {\n          this.close();\n          this._changeDetector.markForCheck();\n        }));\n      });\n    }\n  }\n\n  /**\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._closed$.next();\n      this.openChange.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2 && !this._isEventFromToggle(event)) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\n\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._menu.position(this._anchor.anchorEl, this.placement);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\n\nexport {NgbDropdown, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Sets the aria attribute aria-labelledby to a modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Function called when a modal will be dismissed.\n   * If this function returns false, the promise is resolved with false or the promise is rejected, the modal is not\n   * dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * To center the modal vertically (false by default).\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * An element to which to attach newly opened modal windows.\n   */\n  container?: string;\n\n  /**\n   * Injector to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * Custom class to append to the modal window\n   */\n  windowClass?: string;\n\n  /**\n   * Custom class to append to the modal backdrop\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n* Configuration object token for the NgbModal service.\n* You can provide this configuration, typically in your root module in order to provide default option values for every\n* modal.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements NgbModalOptions {\n  backdrop: boolean | 'static' = true;\n  keyboard = true;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Detects if a scrollbar is present and if yes, already compensates for its\n   * removal by adding an equivalent padding on the right of the body.\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(width: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPadding = body.style.paddingRight;\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${paddingAmount + width}px`;\n    return () => body.style['padding-right'] = userSetPadding;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    return rect.left + rect.right < window.innerWidth;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport class NgbActiveModal {\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to a newly opened modal.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of component used as modal's content.\n   * Undefined when a TemplateRef is used as modal's content.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>) {}\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      const autoFocusable = this._elRef.nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus.focus();\n    this._elWithFocus = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n  TemplateRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n  private _activeWindowCmptHasChanged = new Subject();\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      activeModal: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and using supplied options. Content can be provided\n   * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n   * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismiss all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   * \n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  /**\n   * Whether to disable buttons from user input\n   */\n  @Input() disabled: boolean;\n\n  /**\n   *  Whether to show the \"First\" and \"Last\" page links\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   *  Whether to show the \"Next\" and \"Previous\" page links\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   *  Whether to rotate pages when maxSize > number of pages.\n   *  Current page will be in the middle\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  Number of items in collection.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  Maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  Current page. Page numbers start with 1\n   */\n  @Input() page = 1;\n\n  /**\n   *  Number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed.\n   *  Event's payload equals to the newly selected page.\n   *  Will fire only if collection size is set and all values are valid.\n   *  Page numbers start with 1\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * Pagination display size: small or large\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbPagination} from './pagination';\n\nexport {NgbPagination} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\n@NgModule({declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]})\nexport class NgbPaginationModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\n}\n","export class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave']\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst noopFn = () => {};\n\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styles: [`:host.bs-popover-bottom .arrow,:host.bs-popover-top .arrow{left:50%;margin-left:-5px}:host.bs-popover-bottom-left .arrow,:host.bs-popover-top-left .arrow{left:2em}:host.bs-popover-bottom-right .arrow,:host.bs-popover-top-right .arrow{left:auto;right:2em}:host.bs-popover-left .arrow,:host.bs-popover-right .arrow{top:50%;margin-top:-5px}:host.bs-popover-left-top .arrow,:host.bs-popover-right-top .arrow{top:.7em}:host.bs-popover-left-bottom .arrow,:host.bs-popover-right-bottom .arrow{top:auto;bottom:.7em}`]\n})\nexport class NgbPopoverWindow {\n  @Input() placement: Placement = 'top';\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n  }\n\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n   * Content to be displayed as popover. If title and content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover. If title and content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given popover is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n  /**\n   * An optional class applied to ngb-popover-window\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   * The context is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position popover along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the popover first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromPopover(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromPopover(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromPopover(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * Maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n   * supporting CSS3 animations, and if striped is true.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * A flag indicating if a progress bar should be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * A flag indicating if the current percentage value should be shown.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n   */\n  @Input() type: string;\n\n  /**\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n   */\n  @Input() value = 0;\n\n  /**\n   * Height of the progress bar. Accepts any valid CSS height values, ex. '2rem'\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n\n  /**\n   * Index of the star.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n  @Input() max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n  @Input() rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n  @Input() title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * Id of the currently active tab\n   */\n  activeId: string;\n\n  /**\n   * Id of the newly selected tab\n   */\n  nextId: string;\n\n  /**\n   * Function that will prevent tab switch if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Whether the closed tabs should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n   * 'justified'\n   * The default value is 'start'.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the nav (horizontal or vertical).\n   * The default value is 'horizontal'.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of Bootstrap defined types ('tabs' or 'pills').\n   * Since 3.0.0 can also be an arbitrary string (for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated pane.\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\n * NgbTimeStruct model.\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts internal time value NgbTimeStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Component, forwardRef, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A lightweight & configurable timepicker directive.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  styles: [`:host{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}.chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:'';display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}input{text-align:center}`],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * Whether to display the spinners above and below the inputs.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * Whether to display seconds input.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * Number of hours to increase or decrease when using a button.\n   */\n  @Input() hourStep: number;\n\n  /**\n   * Number of minutes to increase or decrease when using a button.\n   */\n  @Input() minuteStep: number;\n\n  /**\n   * Number of seconds to increase or decrease when using a button.\n   */\n  @Input() secondStep: number;\n\n  /**\n   * To make timepicker readonly\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * To set the size of the inputs and button\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>) {\n    this.meridian = config.meridian;\n    this.spinners = config.spinners;\n    this.seconds = config.seconds;\n    this.hourStep = config.hourStep;\n    this.minuteStep = config.minuteStep;\n    this.secondStep = config.secondStep;\n    this.disabled = config.disabled;\n    this.readonlyInputs = config.readonlyInputs;\n    this.size = config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'hover';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement + (tooltipClass ? \" \" + tooltipClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styles: [`:host.bs-tooltip-bottom .arrow,:host.bs-tooltip-top .arrow{left:calc(50% - .4rem)}:host.bs-tooltip-bottom-left .arrow,:host.bs-tooltip-top-left .arrow{left:1em}:host.bs-tooltip-bottom-right .arrow,:host.bs-tooltip-top-right .arrow{left:auto;right:.8rem}:host.bs-tooltip-left .arrow,:host.bs-tooltip-right .arrow{top:calc(50% - .4rem)}:host.bs-tooltip-left-top .arrow,:host.bs-tooltip-right-top .arrow{top:.4rem}:host.bs-tooltip-left-bottom .arrow,:host.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}`]\n})\nexport class NgbTooltipWindow {\n  @Input() placement: Placement = 'top';\n  @Input() id: string;\n  @Input() tooltipClass: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n  }\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the tooltip should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n    * Placement of a tooltip accepts:\n    *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n    *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n    * and array of above values.\n    */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given tooltip is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n  /**\n   * An optional class applied to ngb-tooltip-window\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   * The context is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position tooltip along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the tooltip first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromTooltip(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromTooltip(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromTooltip(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  /**\n   * No need in forRoot anymore with tree-shakeable services\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that can be used inside a custom result template in order to highlight the term inside the text of the\n * result\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styles: [`.ngb-highlight{font-weight:700}`]\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class of the span elements wrapping the term inside the result\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The result text to display. If the term is found inside this text, it's highlighted\n   */\n  @Input() result: string;\n\n  /**\n   * The searched term\n   */\n  @Input() term: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * Context for the typeahead result template in case you want to override the default one\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result data model\n   */\n  result: any;\n\n  /**\n   * Search term from the input used to get current result\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, BehaviorSubject, Subscription, fromEvent} from 'rxjs';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {Key} from '../util/key';\nimport {Live} from '../util/accessibility/live';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'onDocumentClick($event)',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * Value for the configurable autocomplete attribute.\n   * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem\n   * to be always correctly taken into account.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /** Placement of a typeahead accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n  */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  onDocumentClick(event) {\n    if (event.target !== this._elementRef.nativeElement) {\n      this.dismissPopup();\n    }\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._inputValueBackup);\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this._resubscribeTypeahead.next(null);\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbCheckBox, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbPeriod,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarHebrew,\n  NgbCalendarPersian,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerConfig,\n  NgbDateStruct,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModule}; }\n}\n"]}