{"version":3,"file":"ng-bootstrap.js.map","sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  A flag determining whether the panel is disabled or not.\n   *  When disabled, the panel cannot be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel. The id should be unique.\n   *  If not provided, it will be auto-generated.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  /**\n   * A flag telling if the panel is currently open\n   */\n  isOpen = false;\n\n  /**\n   *  The title for the panel.\n   */\n  @Input() title: string;\n\n  /**\n   *  Accordion's types of panels to be applied per panel basis.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\"\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before toggling an accordion panel\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * Id of the accordion panel that is toggled\n   */\n  panelId: string;\n\n  /**\n   * Whether the panel will be opened (true) or closed (false)\n   */\n  nextState: boolean;\n\n  /**\n   * Function that will prevent panel toggling if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button type=\"button\" class=\"btn btn-link\"\n              (click)=\"toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"!panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel identifiers that should be opened\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  Whether the other panels should be closed when a panel is opened\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * Whether the closed panels should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   *  Accordion's types of panels to be applied globally.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\n   */\n  @Input() type: string;\n\n  /**\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded or not.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id. Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels if [closeOthers]=\"false\". For the [closeOthers]=\"true\" case will have no effect if there is an\n   * open panel, otherwise the first panel will be expanded.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with a given id. Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all open panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Programmatically toggle a panel with a given id. Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent} from './accordion';\n\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alerts can be used to provide feedback messages.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <ng-content></ng-content>\n    `,\n  styles: [`:host{display:block}`]\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an Ã) will be displayed.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\", \"danger\",\n   * \"primary\", \"secondary\", \"light\", \"dark\".\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * A flag indicating if a given checkbox button is disabled.\n   */\n  @Input() disabled = false;\n\n  /**\n   * Value to be propagated as model when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * Value to be propagated as model when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n  }\n}\n","import {Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'group'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n   * enclosed inputs. If not specified, a name is generated automatically.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The name of the input. All inputs of a group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * You can specify model value of a given radio by binding to the value property.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * A flag indicating if a given radio button is disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {Subject, timer} from 'rxjs';\nimport {filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * Represents an individual slide to be used within a carousel.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'pauseOnHover && pause()',\n    '(mouseleave)': 'pauseOnHover && cycle()',\n    '(keydown.arrowLeft)': 'keyboard && prev()',\n    '(keydown.arrowRight)': 'keyboard && next()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnChanges, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  private _start$ = new Subject<void>();\n  private _stop$ = new Subject<void>();\n\n  /**\n   * The active slide id.\n   */\n  @Input() activeId: string;\n\n\n  /**\n   * Amount of time in milliseconds before next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * Whether can wrap from the last to the first slide.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * A flag for allowing navigation via keyboard\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * A flag to enable slide cycling pause/resume on mouseover.\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * A flag to show / hide navigation arrows.\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * A flag to show / hide navigation indicators.\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * A carousel slide event fired when the slide transition is completed.\n   * See NgbSlideEvent for payload details\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        this._start$\n            .pipe(\n                map(() => this.interval), filter(interval => interval > 0 && this.slides.length > 0),\n                switchMap(interval => timer(interval).pipe(takeUntil(this._stop$))))\n            .subscribe(() => this._ngZone.run(() => {\n              this.next();\n              this._cd.detectChanges();\n            }));\n\n        this._start$.next();\n      });\n    }\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._stop$.next(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._start$.next();\n    }\n  }\n\n  /**\n   * Navigate to a slide with the specified identifier.\n   */\n  select(slideId: string) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  /**\n   * Navigate to the next slide.\n   */\n  next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  /**\n   * Stops the carousel from cycling through items.\n   */\n  pause() { this._stop$.next(); }\n\n  /**\n   * Restarts cycling through the carousel slides from left to right.\n   */\n  cycle() { this._start$.next(); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      this._start$.next();\n      this.activeId = selectedSlide.id;\n    }\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * The payload of the slide event fired when the slide transition is completed\n */\nexport interface NgbSlideEvent {\n  /**\n   * Previous slide id\n   */\n  prev: string;\n\n  /**\n   * New slide ids\n   */\n  current: string;\n\n  /**\n   * Slide event direction\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Enum to define the carousel slide event direction\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * A flag indicating collapsed (true) or open (false) state.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule}; }\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * Simple class used for a date representation that datepicker also uses internally\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * Static method. Creates a new date object from the NgbDateStruct, ex. NgbDate.from({year: 2000,\n   * month: 5, day: 1}). If the 'date' is already of NgbDate, the method will return the same object\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if current date is equal to another date\n   */\n  equals(other: NgbDate): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if current date is before another date\n   */\n  before(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if current date is after another date\n   */\n  after(other: NgbDate): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nfunction fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * Calendar used by the datepicker.\n * Default implementation uses Gregorian calendar.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns weekday number for a given day.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   * Period can be 'y', 'm' or 'd' and defaults to day.\n   * Number defaults to 1.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns week number for a given week.\n   */\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid for a current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number, disabled,\n        focused: false,\n        selected: false\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the 'aria-label' attribute for a specific date\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by date picker\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered\n   * in date picker year select box\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set dayTemplateData(dayTemplateData: NgbDayTemplateData) {\n    if (this._state.dayTemplateData !== dayTemplateData) {\n      this._nextState({dayTemplateData});\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDate) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDate) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {toString} from '../util/util';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.PageUp:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n          break;\n        case Key.PageDown:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n          break;\n        case Key.End:\n          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n          break;\n        case Key.Home:\n          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n          break;\n        case Key.ArrowLeft:\n          this._service.focusMove('d', -1);\n          break;\n        case Key.ArrowUp:\n          this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n          break;\n        case Key.ArrowRight:\n          this._service.focusMove('d', 1);\n          break;\n        case Key.ArrowDown:\n          this._service.focusMove('d', this._calendar.getDaysPerWeek());\n          break;\n        case Key.Enter:\n        case Key.Space:\n          this._service.focusSelect();\n          break;\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts user-model date into an NgbDateStruct for internal use in the library\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts internal date value NgbDateStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  ElementRef,\n  NgZone\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate} from './datepicker-tools';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n\n/**\n * A lightweight and highly configurable datepicker directive\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}.ngb-dp-month{pointer-events:none}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}ngb-datepicker-month-view{pointer-events:auto}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}/deep/ .ngb-dp-month+.ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week{padding-left:1rem}/deep/ .ngb-dp-month+.ngb-dp-month>.ngb-dp-month-name{padding-left:1rem}/deep/ .ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}/deep/ .ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}/deep/ .ngb-dp-month>ngb-datepicker-month-view>.ngb-dp-week:last-child{padding-bottom:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}`],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  private _controlValue: NgbDate;\n  private _subscription: Subscription;\n  private _selectSubscription: Subscription;\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Callback to pass any arbitrary data to the custom day template context\n   * 'Current' contains the month that will be displayed in the view\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Reference for the custom template for the footer\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years after current month\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years before current month\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   */\n  @Output() select = new EventEmitter<NgbDate>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date); });\n\n    this._subscription = _service.model$.subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month}\n        });\n      }\n      _cd.markForCheck();\n    });\n  }\n\n  /**\n   * Manually focus the focusable day in the datepicker\n   */\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    this._service.open(NgbDate.from(date ? {...date, day: 1} : null));\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this._selectSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  styles: [`:host{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}`],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline:auto 1px}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}`],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\n   * partial. They must return null if the value can't be parsed.\n   * @param value the value to parse\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given date to a string. Implementations should return an empty string if the given date is null,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   * @param date the date to format as a string\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      ClientRect {\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const placementPrimary = placement.split('-')[0] || 'top';\n    const placementSecondary = placement.split('-')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      'height': targetElBCR.height || targetElement.offsetHeight,\n      'width': targetElBCR.width || targetElement.offsetWidth,\n      'top': 0,\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\n      'left': 0,\n      'right': targetElBCR.width || targetElement.offsetWidth\n    };\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n            hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\n        break;\n      case 'left':\n        targetElPosition.left =\n            hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  // get the available placements of the target element in the viewport depending on the host element\n  getAvailablePlacements(hostElement: HTMLElement, targetElement: HTMLElement): string[] {\n    let availablePlacements: Array<string> = [];\n    let hostElemClientRect = hostElement.getBoundingClientRect();\n    let targetElemClientRect = targetElement.getBoundingClientRect();\n    let html = document.documentElement;\n    let windowHeight = window.innerHeight || html.clientHeight;\n    let windowWidth = window.innerWidth || html.clientWidth;\n    let hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n    let hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n\n    // left: check if target width can be placed between host left and viewport start and also height of target is\n    // inside viewport\n    if (targetElemClientRect.width < hostElemClientRect.left) {\n      // check for left only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'left');\n      }\n      // check for left-top and left-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n    }\n\n    // top: target height is less than host top\n    if (targetElemClientRect.height < hostElemClientRect.top) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'top');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n    }\n\n    // right: check if target width can be placed between host right and viewport end and also height of target is\n    // inside viewport\n    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n      // check for right only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'right');\n      }\n      // check for right-top and right-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n    }\n\n    // bottom: check if there is enough space between host bottom and viewport end for target height\n    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n    }\n\n    return availablePlacements;\n  }\n\n  /**\n   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n   * primaryplacement: left|right\n   * availablePlacementArr: array in which available placements to be set\n   */\n  private setSecondaryPlacementForLeftRight(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n    }\n    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n    }\n  }\n\n  /**\n   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n   * primaryplacement: top|bottom\n   * availablePlacementArr: array in which available placements to be set\n   */\n  private setSecondaryPlacementForTopBottom(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n    }\n    if (targetElemClientRect.width <= hostElemClientRect.right) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n    }\n  }\n}\n\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean): Placement {\n  let placementVals: Array<Placement> = Array.isArray(placement) ? placement : [placement as Placement];\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n     'left-bottom', 'right-top', 'right-bottom',\n    ].forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n  let topVal = 0, leftVal = 0;\n  let appliedPlacement: Placement;\n  // get available placements\n  let availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n  // iterate over all the passed placements\n  for (let { item, index } of toItemIndexes(placementVals)) {\n    // check if passed placement is present in the available placement or otherwise apply the last placement in the\n    // passed placement list\n    if ((availablePlacements.find(val => val === item) != null) || (placementVals.length === index + 1)) {\n      appliedPlacement = <Placement>item;\n      const pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n      topVal = pos.top;\n      leftVal = pos.left;\n      break;\n    }\n  }\n  targetElement.style.top = `${topVal}px`;\n  targetElement.style.left = `${leftVal}px`;\n  return appliedPlacement;\n}\n\n// function to get index and item of an array\nfunction toItemIndexes<T>(a: T[]) {\n  return a.map((item, index) => ({item, index}));\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>;\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from '../util/key';\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: NodeListOf<HTMLElement> = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(takeUntil(stopFocusTrap$), filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if (focusedElement === first && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  fromEvent(element, 'click')\n      .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n      .subscribe(lastFocusedElement => lastFocusedElement.focus());\n};\n","import {\n  Directive,\n  Input,\n  ComponentRef,\n  ElementRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentFactoryResolver,\n  NgZone,\n  TemplateRef,\n  forwardRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Inject\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\n\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerService} from './datepicker-service';\n\nimport {Subject, fromEvent, race, NEVER} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _closed$ = new Subject();\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to\n   * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on\n   * date selection only. For the 'outside' the popup will close only on the outside click.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Callback to pass any arbitrary data to the custom day template context\n   * 'Current' contains the month that will be displayed in the view\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Reference for the custom template for the footer inside datepicker\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Placement of a datepicker popup accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDate.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _dateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any) {\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker with the selected date indicated by the ngModel value.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$);\n\n      this._cRef.instance.focus();\n\n      // closing on ESC and outside clicks\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this._closed$), filter(e => e.which === Key.Escape));\n\n          let outsideClicks$;\n          if (this.autoClose === true || this.autoClose === 'outside') {\n            // we don't know how the popup was opened, so if it was opened with a click,\n            // we have to skip the first one to avoid closing it immediately\n            let isOpening = true;\n            requestAnimationFrame(() => isOpening = false);\n\n            outsideClicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                                 .pipe(\n                                     takeUntil(this._closed$),\n                                     filter(event => !isOpening && this._shouldCloseOnOutsideClick(event)));\n          } else {\n            outsideClicks$ = NEVER;\n          }\n\n          race<Event>([escapes$, outsideClicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this._closed$.next();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup (opens when closed and closes when opened).\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.setStyle(nativeElement, 'padding', '0');\n    this._renderer.addClass(nativeElement, 'show');\n  }\n\n  private _shouldCloseOnOutsideClick(event: MouseEvent) {\n    return ![this._elRef.nativeElement, this._cRef.location.nativeElement].some(el => el.contains(event.target));\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}:host.outside{opacity:.5}`],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`:host>select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}`],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '×', '×', '×', '×', '×', '×', '×', '×', '×'];\n  const hArray10_19 =\n      ['×', '××â¬', '××â¬', '××â¬', '××â¬', '××', '××â¬', '××â¬', '××â¬', '××â¬'];\n  const hArray20_90 = ['', '', '×', '×', '×', '× ', '×¡', '×¢', '×¤', '×¦'];\n  const hArray100_900 = ['', '×§', '×¨', '×©', '×ª', '×ª×§', '×ª×¨', '×ª×©', '×ª×ª', '×ª×ª×§'];\n  const hArray1000_9000 = ['', '×', '×', '××', '××', '×', '××', '××', '×××', '×××'];\n  const geresh = '×³', gershaim = '×´';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['××³', '××³', '××³', '××³', '××³', '×©×³', '××³'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDatepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  forwardRef,\n  Inject,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ContentChild,\n  NgZone,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race, Subject, Subscription} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\nimport {Key} from '../util/key';\n\n/**\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\n      private _renderer: Renderer2) {}\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n\n  position(triggerEl, placement) {\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n  }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    this.placement = _placement;\n    /**\n     * apply the new placement\n     * in case of top use up-arrow or down-arrow otherwise\n     */\n    if (_placement.search('^top') !== -1) {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    }\n  }\n}\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n\n  toggleOpen() { this.dropdown.toggle(); }\n}\n\n/**\n * Transforms a node into a dropdown.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements OnInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\n   * When it is false dropdowns are never automatically closed.\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n  @Output() openChange = new EventEmitter();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone) {\n    this.placement = config.placement;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    if (this._menu) {\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\n    }\n\n    if (this._open) {\n      this._setCloseHandlers();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open or not.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._positionMenu();\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    if (this.autoClose) {\n      this._ngZone.runOutsideAngular(() => {\n        const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                             .pipe(takeUntil(this._closed$), filter(event => event.which === Key.Escape));\n\n        const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                            .pipe(takeUntil(this._closed$), filter(event => this._shouldCloseFromClick(event)));\n\n        race<Event>([escapes$, clicks$]).pipe(takeUntil(this._closed$)).subscribe(() => this._ngZone.run(() => {\n          this.close();\n          this._changeDetector.markForCheck();\n        }));\n      });\n    }\n  }\n\n  /**\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._closed$.next();\n      this.openChange.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2 && !this._isEventFromToggle(event)) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\n\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._menu.position(this._anchor.anchorEl, this.placement);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\n\nexport {NgbDropdown, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule}; }\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Sets the aria attribute aria-labelledby to a modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Function called when a modal will be dismissed.\n   * If this function returns false, the promise is resolved with false or the promise is rejected, the modal is not\n   * dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * To center the modal vertically (false by default).\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * An element to which to attach newly opened modal windows.\n   */\n  container?: string;\n\n  /**\n   * Injector to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * Custom class to append to the modal window\n   */\n  windowClass?: string;\n\n  /**\n   * Custom class to append to the modal backdrop\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n* Configuration object token for the NgbModal service.\n* You can provide this configuration, typically in your root module in order to provide default option values for every\n* modal.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements NgbModalOptions {\n  backdrop: boolean | 'static' = true;\n  keyboard = true;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * Detects if a scrollbar is present and if yes, already compensates for its\n   * removal by adding an equivalent padding on the right of the body.\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(width: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPadding = body.style.paddingRight;\n    const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${paddingAmount + width}px`;\n    return () => body.style['padding-right'] = userSetPadding;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    return rect.left + rect.right < window.innerWidth;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport class NgbActiveModal {\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to a newly opened modal.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of component used as modal's content.\n   * Undefined when a TemplateRef is used as modal's content.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>) {}\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      const autoFocusable = this._elRef.nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus.focus();\n    this._elWithFocus = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n  TemplateRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n  private _activeWindowCmptHasChanged = new Subject();\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      activeModal: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and using supplied options. Content can be provided\n   * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n   * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismiss all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   * \n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  /**\n   * Whether to disable buttons from user input\n   */\n  @Input() disabled: boolean;\n\n  /**\n   *  Whether to show the \"First\" and \"Last\" page links\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   *  Whether to show the \"Next\" and \"Previous\" page links\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   *  Whether to rotate pages when maxSize > number of pages.\n   *  Current page will be in the middle\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  Number of items in collection.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  Maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  Current page. Page numbers start with 1\n   */\n  @Input() page = 1;\n\n  /**\n   *  Number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed.\n   *  Event's payload equals to the newly selected page.\n   *  Will fire only if collection size is set and all values are valid.\n   *  Page numbers start with 1\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * Pagination display size: small or large\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbPagination} from './pagination';\n\nexport {NgbPagination} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\n@NgModule({declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]})\nexport class NgbPaginationModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule}; }\n}\n","export class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave']\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst noopFn = () => {};\n\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styles: [`:host.bs-popover-bottom .arrow,:host.bs-popover-top .arrow{left:50%;margin-left:-5px}:host.bs-popover-bottom-left .arrow,:host.bs-popover-top-left .arrow{left:2em}:host.bs-popover-bottom-right .arrow,:host.bs-popover-top-right .arrow{left:auto;right:2em}:host.bs-popover-left .arrow,:host.bs-popover-right .arrow{top:50%;margin-top:-5px}:host.bs-popover-left-top .arrow,:host.bs-popover-right-top .arrow{top:.7em}:host.bs-popover-left-bottom .arrow,:host.bs-popover-right-bottom .arrow{top:auto;bottom:.7em}`]\n})\nexport class NgbPopoverWindow {\n  @Input() placement: Placement = 'top';\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n  }\n\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n   * Content to be displayed as popover. If title and content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover. If title and content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given popover is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n  /**\n   * An optional class applied to ngb-popover-window\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   * The context is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position popover along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the popover first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromPopover(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromPopover(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromPopover(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * Maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n   * supporting CSS3 animations, and if striped is true.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * A flag indicating if a progress bar should be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * A flag indicating if the current percentage value should be shown.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n   */\n  @Input() type: string;\n\n  /**\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n   */\n  @Input() value = 0;\n\n  /**\n   * Height of the progress bar. Accepts any valid CSS height values, ex. '2rem'\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n\n  /**\n   * Index of the star.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n  @Input() max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n  @Input() rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n  @Input() title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * Id of the currently active tab\n   */\n  activeId: string;\n\n  /**\n   * Id of the newly selected tab\n   */\n  nextId: string;\n\n  /**\n   * Function that will prevent tab switch if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Whether the closed tabs should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n   * 'justified'\n   * The default value is 'start'.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the nav (horizontal or vertical).\n   * The default value is 'horizontal'.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of Bootstrap defined types ('tabs' or 'pills').\n   * Since 3.0.0 can also be an arbitrary string (for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated pane.\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\n * NgbTimeStruct model.\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts internal time value NgbTimeStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Component, forwardRef, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A lightweight & configurable timepicker directive.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  styles: [`:host{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}.chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:'';display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}input{text-align:center}`],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * Whether to display the spinners above and below the inputs.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * Whether to display seconds input.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * Number of hours to increase or decrease when using a button.\n   */\n  @Input() hourStep: number;\n\n  /**\n   * Number of minutes to increase or decrease when using a button.\n   */\n  @Input() minuteStep: number;\n\n  /**\n   * Number of seconds to increase or decrease when using a button.\n   */\n  @Input() secondStep: number;\n\n  /**\n   * To make timepicker readonly\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * To set the size of the inputs and button\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>) {\n    this.meridian = config.meridian;\n    this.spinners = config.spinners;\n    this.seconds = config.seconds;\n    this.hourStep = config.hourStep;\n    this.minuteStep = config.minuteStep;\n    this.secondStep = config.secondStep;\n    this.disabled = config.disabled;\n    this.readonlyInputs = config.readonlyInputs;\n    this.size = config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTimepickerModule}; }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'top';\n  triggers = 'hover';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {fromEvent, race} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {Key} from '../util/key';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement + (tooltipClass ? \" \" + tooltipClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styles: [`:host.bs-tooltip-bottom .arrow,:host.bs-tooltip-top .arrow{left:calc(50% - .4rem)}:host.bs-tooltip-bottom-left .arrow,:host.bs-tooltip-top-left .arrow{left:1em}:host.bs-tooltip-bottom-right .arrow,:host.bs-tooltip-top-right .arrow{left:auto;right:.8rem}:host.bs-tooltip-left .arrow,:host.bs-tooltip-right .arrow{top:calc(50% - .4rem)}:host.bs-tooltip-left-top .arrow,:host.bs-tooltip-right-top .arrow{top:.4rem}:host.bs-tooltip-left-bottom .arrow,:host.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}`]\n})\nexport class NgbTooltipWindow {\n  @Input() placement: Placement = 'top';\n  @Input() id: string;\n  @Input() tooltipClass: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n  }\n  /**\n   * Tells whether the event has been triggered from this component's subtree or not.\n   *\n   * @param event the event to check\n   *\n   * @return whether the event has been triggered from this component's subtree or not.\n   */\n  isEventFrom(event: Event): boolean { return this._element.nativeElement.contains(event.target as HTMLElement); }\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Indicates whether the tooltip should be closed on Escape key and inside/outside clicks.\n   *\n   * - true (default): closes on both outside and inside clicks as well as Escape presses\n   * - false: disables the autoClose feature (NB: triggers still apply)\n   * - 'inside': closes on inside clicks as well as Escape presses\n   * - 'outside': closes on outside clicks (sometimes also achievable through triggers)\n   * as well as Escape presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n  /**\n    * Placement of a tooltip accepts:\n    *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n    *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n    * and array of above values.\n    */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given tooltip is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n  /**\n   * An optional class applied to ngb-tooltip-window\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   * The context is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position tooltip along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      if (this.autoClose) {\n        this._ngZone.runOutsideAngular(() => {\n          // prevents automatic closing right after an opening by putting a guard for the time of one event handling\n          // pass\n          // use case: click event would reach an element opening the tooltip first, then reach the autoClose handler\n          // which would close it\n          let justOpened = true;\n          requestAnimationFrame(() => justOpened = false);\n\n          const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n                               .pipe(takeUntil(this.hidden), filter(event => event.which === Key.Escape));\n\n          const clicks$ = fromEvent<MouseEvent>(this._document, 'click')\n                              .pipe(\n                                  takeUntil(this.hidden), filter(() => !justOpened),\n                                  filter(event => this._shouldCloseFromClick(event)));\n\n          race<Event>([escapes$, clicks$]).subscribe(() => this._ngZone.run(() => this.close()));\n        });\n      }\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _shouldCloseFromClick(event: MouseEvent) {\n    if (event.button !== 2) {\n      if (this.autoClose === true) {\n        return true;\n      } else if (this.autoClose === 'inside' && this._isEventFromTooltip(event)) {\n        return true;\n      } else if (this.autoClose === 'outside' && !this._isEventFromTooltip(event)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _isEventFromTooltip(event: MouseEvent) {\n    const popup = this._windowRef.instance;\n    return popup ? popup.isEventFrom(event) : false;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  /**\n   * No need in forRoot anymore with tree-shakeable services\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that can be used inside a custom result template in order to highlight the term inside the text of the\n * result\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styles: [`.ngb-highlight{font-weight:700}`]\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class of the span elements wrapping the term inside the result\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The result text to display. If the term is found inside this text, it's highlighted\n   */\n  @Input() result: string;\n\n  /**\n   * The searched term\n   */\n  @Input() term: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * Context for the typeahead result template in case you want to override the default one\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result data model\n   */\n  result: any;\n\n  /**\n   * Search term from the input used to get current result\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, BehaviorSubject, Subscription, fromEvent} from 'rxjs';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {Key} from '../util/key';\nimport {Live} from '../util/accessibility/live';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'onDocumentClick($event)',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * Value for the configurable autocomplete attribute.\n   * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem\n   * to be always correctly taken into account.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /** Placement of a typeahead accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n  */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  onDocumentClick(event) {\n    if (event.target !== this._elementRef.nativeElement) {\n      this.dismissPopup();\n    }\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._inputValueBackup);\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this._resubscribeTypeahead.next(null);\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTypeaheadModule}; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbCheckBox, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbPeriod,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarHebrew,\n  NgbCalendarPersian,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerConfig,\n  NgbDateStruct,\n  NgbDate,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker\n} from './datepicker/datepicker.module';\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  /**\n   * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n   * Will be removed in 4.0.0.\n   *\n   * @deprecated 3.0.0\n   */\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModule}; }\n}\n"],"names":["nextId","NGB_DATEPICKER_VALUE_ACCESSOR","mod","GREGORIAN_EPOCH","isGregorianLeapYear","toGregorian","fromGregorian"],"mappings":"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AAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAE9E,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE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"}
