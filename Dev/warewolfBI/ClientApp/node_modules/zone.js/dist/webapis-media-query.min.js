!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t():"function"==typeof define&&define.amd?define(t):t()}(this,function(){"use strict";Zone.__load_patch("mediaQuery",function(e,t,n){function r(e){n.patchMethod(e,"addListener",function(e){return function(r,i){var a=i.length>0?i[0]:null;if("function"==typeof a){var o=t.current.wrap(a,"MediaQuery");return a[n.symbol("mediaQueryCallback")]=o,e.call(r,o)}return e.apply(r,i)}})}function i(e){n.patchMethod(e,"removeListener",function(e){return function(t,r){var i=r.length>0?r[0]:null;if("function"==typeof i){var a=i[n.symbol("mediaQueryCallback")];return a?e.call(t,a):e.apply(t,r)}return e.apply(t,r)}})}if(e.MediaQueryList){var a=e.MediaQueryList.prototype;r(a),i(a)}else e.matchMedia&&n.patchMethod(e,"matchMedia",function(e){return function(t,n){var a=e.apply(t,n);if(a){var o=Object.getPrototypeOf(a);o&&o.addListener?(r(o),i(o),r(a),i(a)):a.addListener&&(r(a),i(a))}return a}})})});