(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :
	(factory((global['angular-css-flex-layout'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BaseFxDirective = /** @class */ (function () {
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function BaseFxDirective(elRef, renderer) {
        this.elRef = elRef;
        this.renderer = renderer;
        this.prevValueCache = {};
    }
    /**
     * @param {?} className
     * @return {?}
     */
    BaseFxDirective.prototype.removeClass = function (className) {
        this.renderer.removeClass(this.elRef.nativeElement, this.normalize(className));
    };
    /**
     * @param {?} attr
     * @param {?=} value
     * @return {?}
     */
    BaseFxDirective.prototype.setClass = function (attr, value) {
        if (value === void 0) { value = ''; }
        var /** @type {?} */ className = this.normalize(value ? attr + "-" + value : attr);
        if (value) {
            if (this.prevValueCache[attr]) {
                this.renderer.removeClass(this.elRef.nativeElement, this.prevValueCache[attr]);
            }
            this.prevValueCache[attr] = className;
        }
        this.renderer.addClass(this.elRef.nativeElement, className);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    BaseFxDirective.prototype.normalize = function (value) {
        if (!value) {
            return value;
        }
        return value.replace(/([A-Z]|\s+|\.)/g, function (match) {
            return '-' + match.trim().toLowerCase();
        });
    };
    return BaseFxDirective;
}());
var LayoutDirective = /** @class */ (function (_super) {
    __extends(LayoutDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function LayoutDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(LayoutDirective.prototype, "layout", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layout', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutXs', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutSm', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutMd', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutLg', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutXl', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutGtXs', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutGtSm', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutGtMd', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutGtLg', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutLtSm', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutLtMd', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutLtLg', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutDirective.prototype, "layoutLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutLtXl', val || 'row'); },
        enumerable: true,
        configurable: true
    });
    
    return LayoutDirective;
}(BaseFxDirective));
LayoutDirective.decorators = [
    { type: core.Directive, args: [{ selector: "\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n" },] },
];
/**
 * @nocollapse
 */
LayoutDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
LayoutDirective.propDecorators = {
    'layout': [{ type: core.Input, args: ['fxLayout',] },],
    'layoutXs': [{ type: core.Input, args: ['fxLayout.xs',] },],
    'layoutSm': [{ type: core.Input, args: ['fxLayout.sm',] },],
    'layoutMd': [{ type: core.Input, args: ['fxLayout.md',] },],
    'layoutLg': [{ type: core.Input, args: ['fxLayout.lg',] },],
    'layoutXl': [{ type: core.Input, args: ['fxLayout.xl',] },],
    'layoutGtXs': [{ type: core.Input, args: ['fxLayout.gt-xs',] },],
    'layoutGtSm': [{ type: core.Input, args: ['fxLayout.gt-sm',] },],
    'layoutGtMd': [{ type: core.Input, args: ['fxLayout.gt-md',] },],
    'layoutGtLg': [{ type: core.Input, args: ['fxLayout.gt-lg',] },],
    'layoutLtSm': [{ type: core.Input, args: ['fxLayout.lt-sm',] },],
    'layoutLtMd': [{ type: core.Input, args: ['fxLayout.lt-md',] },],
    'layoutLtLg': [{ type: core.Input, args: ['fxLayout.lt-lg',] },],
    'layoutLtXl': [{ type: core.Input, args: ['fxLayout.lt-xl',] },],
};
var LayoutAlignDirective = /** @class */ (function (_super) {
    __extends(LayoutAlignDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function LayoutAlignDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(LayoutAlignDirective.prototype, "align", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlign', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutAlignDirective.prototype, "alignXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutAlignDirective.prototype, "alignSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignXl', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignGtXs', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignGtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignGtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignGtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignLtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignLtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignLtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(LayoutAlignDirective.prototype, "alignLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('layoutAlignLtXl', val); },
        enumerable: true,
        configurable: true
    });
    
    return LayoutAlignDirective;
}(BaseFxDirective));
LayoutAlignDirective.decorators = [
    { type: core.Directive, args: [{ selector: "\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n" },] },
];
/**
 * @nocollapse
 */
LayoutAlignDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
LayoutAlignDirective.propDecorators = {
    'align': [{ type: core.Input, args: ['fxLayoutAlign',] },],
    'alignXs': [{ type: core.Input, args: ['fxLayoutAlign.xs',] },],
    'alignSm': [{ type: core.Input, args: ['fxLayoutAlign.sm',] },],
    'alignMd': [{ type: core.Input, args: ['fxLayoutAlign.md',] },],
    'alignLg': [{ type: core.Input, args: ['fxLayoutAlign.lg',] },],
    'alignXl': [{ type: core.Input, args: ['fxLayoutAlign.xl',] },],
    'alignGtXs': [{ type: core.Input, args: ['fxLayoutAlign.gt-xs',] },],
    'alignGtSm': [{ type: core.Input, args: ['fxLayoutAlign.gt-sm',] },],
    'alignGtMd': [{ type: core.Input, args: ['fxLayoutAlign.gt-md',] },],
    'alignGtLg': [{ type: core.Input, args: ['fxLayoutAlign.gt-lg',] },],
    'alignLtSm': [{ type: core.Input, args: ['fxLayoutAlign.lt-sm',] },],
    'alignLtMd': [{ type: core.Input, args: ['fxLayoutAlign.lt-md',] },],
    'alignLtLg': [{ type: core.Input, args: ['fxLayoutAlign.lt-lg',] },],
    'alignLtXl': [{ type: core.Input, args: ['fxLayoutAlign.lt-xl',] },],
};
var LayoutWrapDirective = /** @class */ (function (_super) {
    __extends(LayoutWrapDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function LayoutWrapDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(LayoutWrapDirective.prototype, "wrap", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) {
            this.removeClass('layoutNowrap');
            this.removeClass('layoutWrap');
            if (!val || val === 'wrap') {
                this.setClass('layoutWrap');
            }
            else if (val === 'nowrap') {
                this.setClass('layoutNowrap');
            }
        },
        enumerable: true,
        configurable: true
    });
    return LayoutWrapDirective;
}(BaseFxDirective));
LayoutWrapDirective.decorators = [
    { type: core.Directive, args: [{
                selector: "\n  [fxLayoutWrap], [fxLayoutWrap.xs], [fxLayoutWrap.sm], [fxLayoutWrap.lg], [fxLayoutWrap.xl],\n  [fxLayoutWrap.gt-xs], [fxLayoutWrap.gt-sm], [fxLayoutWrap.gt-md], [fxLayoutWrap.gt-lg],\n  [fxLayoutWrap.lt-xs], [fxLayoutWrap.lt-sm], [fxLayoutWrap.lt-md], [fxLayoutWrap.lt-lg]\n"
            },] },
];
/**
 * @nocollapse
 */
LayoutWrapDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
LayoutWrapDirective.propDecorators = {
    'wrap': [{ type: core.Input, args: ['fxLayoutWrap',] },],
};
var FlexDirective = /** @class */ (function (_super) {
    __extends(FlexDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function FlexDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(FlexDirective.prototype, "flex", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flex', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexXs', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexXl', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexGtXs', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexGtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexGtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexGtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexLtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexLtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexLtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexDirective.prototype, "flexLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexLtXl', val); },
        enumerable: true,
        configurable: true
    });
    
    return FlexDirective;
}(BaseFxDirective));
FlexDirective.decorators = [
    { type: core.Directive, args: [{ selector: "\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n"
            },] },
];
/**
 * @nocollapse
 */
FlexDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
FlexDirective.propDecorators = {
    'flex': [{ type: core.Input, args: ['fxFlex',] },],
    'flexXs': [{ type: core.Input, args: ['fxFlex.xs',] },],
    'flexSm': [{ type: core.Input, args: ['fxFlex.sm',] },],
    'flexMd': [{ type: core.Input, args: ['fxFlex.md',] },],
    'flexLg': [{ type: core.Input, args: ['fxFlex.lg',] },],
    'flexXl': [{ type: core.Input, args: ['fxFlex.xl',] },],
    'flexGtXs': [{ type: core.Input, args: ['fxFlex.gt-xs',] },],
    'flexGtSm': [{ type: core.Input, args: ['fxFlex.gt-sm',] },],
    'flexGtMd': [{ type: core.Input, args: ['fxFlex.gt-md',] },],
    'flexGtLg': [{ type: core.Input, args: ['fxFlex.gt-lg',] },],
    'flexLtSm': [{ type: core.Input, args: ['fxFlex.lt-sm',] },],
    'flexLtMd': [{ type: core.Input, args: ['fxFlex.lt-md',] },],
    'flexLtLg': [{ type: core.Input, args: ['fxFlex.lt-lg',] },],
    'flexLtXl': [{ type: core.Input, args: ['fxFlex.lt-xl',] },],
};
var FlexOrderDirective = /** @class */ (function (_super) {
    __extends(FlexOrderDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function FlexOrderDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(FlexOrderDirective.prototype, "order", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrder', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOrderDirective.prototype, "orderXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOrderDirective.prototype, "orderSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderXl', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderGtXs', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderGtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderGtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderGtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderLtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderLtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderLtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOrderDirective.prototype, "orderLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOrderLtXl', val); },
        enumerable: true,
        configurable: true
    });
    
    return FlexOrderDirective;
}(BaseFxDirective));
FlexOrderDirective.decorators = [
    { type: core.Directive, args: [{ selector: "\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n" },] },
];
/**
 * @nocollapse
 */
FlexOrderDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
FlexOrderDirective.propDecorators = {
    'order': [{ type: core.Input, args: ['fxFlexOrder',] },],
    'orderXs': [{ type: core.Input, args: ['fxFlexOrder.xs',] },],
    'orderSm': [{ type: core.Input, args: ['fxFlexOrder.sm',] },],
    'orderMd': [{ type: core.Input, args: ['fxFlexOrder.md',] },],
    'orderLg': [{ type: core.Input, args: ['fxFlexOrder.lg',] },],
    'orderXl': [{ type: core.Input, args: ['fxFlexOrder.xl',] },],
    'orderGtXs': [{ type: core.Input, args: ['fxFlexOrder.gt-xs',] },],
    'orderGtSm': [{ type: core.Input, args: ['fxFlexOrder.gt-sm',] },],
    'orderGtMd': [{ type: core.Input, args: ['fxFlexOrder.gt-md',] },],
    'orderGtLg': [{ type: core.Input, args: ['fxFlexOrder.gt-lg',] },],
    'orderLtSm': [{ type: core.Input, args: ['fxFlexOrder.lt-sm',] },],
    'orderLtMd': [{ type: core.Input, args: ['fxFlexOrder.lt-md',] },],
    'orderLtLg': [{ type: core.Input, args: ['fxFlexOrder.lt-lg',] },],
    'orderLtXl': [{ type: core.Input, args: ['fxFlexOrder.lt-xl',] },],
};
var FlexOffsetDirective = /** @class */ (function (_super) {
    __extends(FlexOffsetDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function FlexOffsetDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(FlexOffsetDirective.prototype, "offset", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffset', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetXs', val); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetXl', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetLtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetLtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetLtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetLtXl', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetGtXs', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetGtSm', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetGtMd', val); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(FlexOffsetDirective.prototype, "offsetGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('flexOffsetGtLg', val); },
        enumerable: true,
        configurable: true
    });
    
    return FlexOffsetDirective;
}(BaseFxDirective));
FlexOffsetDirective.decorators = [
    { type: core.Directive, args: [{ selector: "\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n" },] },
];
/**
 * @nocollapse
 */
FlexOffsetDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
FlexOffsetDirective.propDecorators = {
    'offset': [{ type: core.Input, args: ['fxFlexOffset',] },],
    'offsetXs': [{ type: core.Input, args: ['fxFlexOffset.xs',] },],
    'offsetSm': [{ type: core.Input, args: ['fxFlexOffset.sm',] },],
    'offsetMd': [{ type: core.Input, args: ['fxFlexOffset.md',] },],
    'offsetLg': [{ type: core.Input, args: ['fxFlexOffset.lg',] },],
    'offsetXl': [{ type: core.Input, args: ['fxFlexOffset.xl',] },],
    'offsetLtSm': [{ type: core.Input, args: ['fxFlexOffset.lt-sm',] },],
    'offsetLtMd': [{ type: core.Input, args: ['fxFlexOffset.lt-md',] },],
    'offsetLtLg': [{ type: core.Input, args: ['fxFlexOffset.lt-lg',] },],
    'offsetLtXl': [{ type: core.Input, args: ['fxFlexOffset.lt-xl',] },],
    'offsetGtXs': [{ type: core.Input, args: ['fxFlexOffset.gt-xs',] },],
    'offsetGtSm': [{ type: core.Input, args: ['fxFlexOffset.gt-sm',] },],
    'offsetGtMd': [{ type: core.Input, args: ['fxFlexOffset.gt-md',] },],
    'offsetGtLg': [{ type: core.Input, args: ['fxFlexOffset.gt-lg',] },],
};
var FlexFillDirective = /** @class */ (function (_super) {
    __extends(FlexFillDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function FlexFillDirective(elRef, renderer) {
        var _this = _super.call(this, elRef, renderer) || this;
        _this.setClass('layoutFill');
        return _this;
    }
    return FlexFillDirective;
}(BaseFxDirective));
FlexFillDirective.decorators = [
    { type: core.Directive, args: [{ selector: "\n  [fxFill],\n  [fxFlexFill]\n" },] },
];
/**
 * @nocollapse
 */
FlexFillDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
var ShowHideDirective = /** @class */ (function (_super) {
    __extends(ShowHideDirective, _super);
    /**
     * @param {?} elRef
     * @param {?} renderer
     */
    function ShowHideDirective(elRef, renderer) {
        return _super.call(this, elRef, renderer) || this;
    }
    Object.defineProperty(ShowHideDirective.prototype, "show", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('show'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShowHideDirective.prototype, "showXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showXs'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShowHideDirective.prototype, "showSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showSm'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showMd'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showLg'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showXl'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showLtSm'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showLtMd'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showLtLg'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showLtXl'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showGtXs'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showGtSm'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showGtMd'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "showGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('showGtLg'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hide", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hide'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShowHideDirective.prototype, "hideXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideXs'); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ShowHideDirective.prototype, "hideSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideSm'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideMd'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideLg'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideXl'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideLtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideLtSm'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideLtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideLtMd'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideLtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideLtLg'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideLtXl", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideLtXl'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideGtXs", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideGtXs'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideGtSm", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideGtSm'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideGtMd", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideGtMd'); },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(ShowHideDirective.prototype, "hideGtLg", {
        /**
         * @param {?} val
         * @return {?}
         */
        set: function (val) { this.setClass('hideGtLg'); },
        enumerable: true,
        configurable: true
    });
    
    return ShowHideDirective;
}(BaseFxDirective));
ShowHideDirective.decorators = [
    { type: core.Directive, args: [{
                selector: "\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n"
            },] },
];
/**
 * @nocollapse
 */
ShowHideDirective.ctorParameters = function () { return [
    { type: core.ElementRef, },
    { type: core.Renderer2, },
]; };
ShowHideDirective.propDecorators = {
    'show': [{ type: core.Input, args: ['fxShow',] },],
    'showXs': [{ type: core.Input, args: ['fxShow.xs',] },],
    'showSm': [{ type: core.Input, args: ['fxShow.sm',] },],
    'showMd': [{ type: core.Input, args: ['fxShow.md',] },],
    'showLg': [{ type: core.Input, args: ['fxShow.lg',] },],
    'showXl': [{ type: core.Input, args: ['fxShow.xl',] },],
    'showLtSm': [{ type: core.Input, args: ['fxShow.lt-sm',] },],
    'showLtMd': [{ type: core.Input, args: ['fxShow.lt-md',] },],
    'showLtLg': [{ type: core.Input, args: ['fxShow.lt-lg',] },],
    'showLtXl': [{ type: core.Input, args: ['fxShow.lt-xl',] },],
    'showGtXs': [{ type: core.Input, args: ['fxShow.gt-xs',] },],
    'showGtSm': [{ type: core.Input, args: ['fxShow.gt-sm',] },],
    'showGtMd': [{ type: core.Input, args: ['fxShow.gt-md',] },],
    'showGtLg': [{ type: core.Input, args: ['fxShow.gt-lg',] },],
    'hide': [{ type: core.Input, args: ['fxHide',] },],
    'hideXs': [{ type: core.Input, args: ['fxHide.xs',] },],
    'hideSm': [{ type: core.Input, args: ['fxHide.sm',] },],
    'hideMd': [{ type: core.Input, args: ['fxHide.md',] },],
    'hideLg': [{ type: core.Input, args: ['fxHide.lg',] },],
    'hideXl': [{ type: core.Input, args: ['fxHide.xl',] },],
    'hideLtSm': [{ type: core.Input, args: ['fxHide.lt-sm',] },],
    'hideLtMd': [{ type: core.Input, args: ['fxHide.lt-md',] },],
    'hideLtLg': [{ type: core.Input, args: ['fxHide.lt-lg',] },],
    'hideLtXl': [{ type: core.Input, args: ['fxHide.lt-xl',] },],
    'hideGtXs': [{ type: core.Input, args: ['fxHide.gt-xs',] },],
    'hideGtSm': [{ type: core.Input, args: ['fxHide.gt-sm',] },],
    'hideGtMd': [{ type: core.Input, args: ['fxHide.gt-md',] },],
    'hideGtLg': [{ type: core.Input, args: ['fxHide.gt-lg',] },],
};
var CssFlexLayoutModule = /** @class */ (function () {
    function CssFlexLayoutModule() {
    }
    return CssFlexLayoutModule;
}());
CssFlexLayoutModule.decorators = [
    { type: core.NgModule, args: [{
                declarations: [LayoutDirective, LayoutWrapDirective, LayoutAlignDirective, FlexDirective, FlexOrderDirective,
                    FlexOffsetDirective, FlexFillDirective, ShowHideDirective],
                exports: [LayoutDirective, LayoutWrapDirective, LayoutAlignDirective, FlexDirective, FlexOrderDirective,
                    FlexOffsetDirective, FlexFillDirective, ShowHideDirective],
            },] },
];
/**
 * @nocollapse
 */
CssFlexLayoutModule.ctorParameters = function () { return []; };

exports.CssFlexLayoutModule = CssFlexLayoutModule;
exports.ɵb = BaseFxDirective;
exports.ɵh = FlexFillDirective;
exports.ɵg = FlexOffsetDirective;
exports.ɵf = FlexOrderDirective;
exports.ɵe = FlexDirective;
exports.ɵd = LayoutAlignDirective;
exports.ɵc = LayoutWrapDirective;
exports.ɵa = LayoutDirective;
exports.ɵi = ShowHideDirective;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-css-flex-layout.umd.js.map
