/// <reference types="google.visualization" />
import { OnInit, ElementRef, OnChanges, EventEmitter, AfterViewInit } from '@angular/core';
import { Observable } from 'rxjs';
import { ChartErrorEvent, ChartEvent } from '../models/events.model';
import { ScriptLoaderService } from '../script-loader/script-loader.service';
export declare class GoogleChartComponent implements OnInit, AfterViewInit, OnChanges {
    protected element: ElementRef;
    private loaderService;
    data: Array<Array<string | number>>;
    columnNames: Array<string>;
    roles: Array<{
        type: string;
        role: string;
    }>;
    title: string;
    width: number;
    height: number;
    dynamicResize: boolean;
    options: any;
    type: string;
    formatter: any | Array<{
        formatter: any;
        colIndex: number;
    }>;
    error: EventEmitter<ChartErrorEvent>;
    ready: EventEmitter<{}>;
    select: EventEmitter<ChartEvent>;
    mouseenter: EventEmitter<ChartEvent>;
    mouseleave: EventEmitter<ChartEvent>;
    wrapper: google.visualization.ChartWrapper;
    constructor(element: ElementRef, loaderService: ScriptLoaderService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(): void;
    protected readonly parsedOptions: any;
    getChartElement(): HTMLElement;
    protected createChart(): void;
    protected loadNeededPackages(): Observable<any>;
    protected updateChart(): void;
    protected getDataTable(): google.visualization.DataTable;
    protected formatData(dataTable: google.visualization.DataTable): void;
    private addResizeListener();
    private removeChartEvents();
    private registerChartEvents();
    private registerChartEvent(eventName, callback);
}
