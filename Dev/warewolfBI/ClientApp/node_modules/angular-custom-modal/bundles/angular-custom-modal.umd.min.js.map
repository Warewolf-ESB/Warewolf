{"version":3,"file":"angular-custom-modal.umd.min.js","sources":["~/angular-custom-modal/src/modal.component.ts","~/angular-custom-modal/src/modal.module.ts"],"sourcesContent":["/* tslint:disable:component-selector */\n\n\nimport {\n  Component,\n  OnDestroy,\n  ContentChild,\n  ElementRef,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Input,\n  HostListener,\n} from '@angular/core';\nexport class ModalComponent implements OnDestroy {\n   header: TemplateRef<any>;\n   body: TemplateRef<any>;\n   footer: TemplateRef<any>;\n   closeOnOutsideClick = true;\n\n  visible = false;\n  visibleAnimate = false;\n/**\n * @param {?} elementRef\n * @param {?} changeDetectorRef\n */\nconstructor(\nprivate elementRef: ElementRef,\nprivate changeDetectorRef: ChangeDetectorRef\n  ) { }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Prevent modal from not executing its closing actions if the user navigated away (for example,\n    // through a link).\n    this.close();\n  }\n/**\n * @return {?}\n */\nopen(): void {\n    document.body.classList.add('modal-open');\n\n    this.visible = true;\n    setTimeout(() => {\n      this.visibleAnimate = true;\n    });\n  }\n/**\n * @return {?}\n */\nclose(): void {\n    document.body.classList.remove('modal-open');\n\n    this.visibleAnimate = false;\n    setTimeout(() => {\n      this.visible = false;\n      this.changeDetectorRef.markForCheck();\n    }, 200);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonContainerClicked(event: MouseEvent): void {\n    if (( /** @type {?} */((<HTMLElement>event.target))).classList.contains('modal') && this.isTopMost() && this.closeOnOutsideClick) {\n      this.close();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonKeyDownHandler(event: KeyboardEvent) {\n    // If ESC key and TOP MOST modal, close it.\n    if (event.key === 'Escape' && this.isTopMost()) {\n      this.close();\n    }\n  }\n/**\n * Returns true if this modal is the top most modal.\n * @return {?}\n */\nisTopMost(): boolean {\n    return !this.elementRef.nativeElement.querySelector(':scope modal > .modal');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal',\n  template: `\n    <div \n      class=\"modal fade\"\n      role=\"dialog\"\n      tabindex=\"-1\"\n      [class.in]=\"visibleAnimate\"\n      *ngIf=\"visible\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <ng-container *ngTemplateOutlet=\"header\"></ng-container>\n            <button class=\"close\" data-dismiss=\"modal\" type=\"button\" aria-label=\"Close\" (click)=\"close()\">Ã—</button>\n          </div>\n          <div class=\"modal-body\">\n            <ng-container *ngTemplateOutlet=\"body\"></ng-container>\n          </div>\n          <div class=\"modal-footer\">\n            <ng-container *ngTemplateOutlet=\"footer\"></ng-container>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    /**\n     * A more specific selector overwrites bootstrap display properties, but they still enable users\n     * to overwite them on their apps.\n     */\n    /deep/ modal .modal {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n\n    /deep/ .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      min-height: 100%;\n      background-color: rgba(0, 0, 0, 0.15);\n      z-index: 42; }\n\n    /deep/ .modal.in {\n      opacity: 1; }\n  `],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: ContentChild, args: ['modalHeader', ] },],\n'body': [{ type: ContentChild, args: ['modalBody', ] },],\n'footer': [{ type: ContentChild, args: ['modalFooter', ] },],\n'closeOnOutsideClick': [{ type: Input },],\n'onContainerClicked': [{ type: HostListener, args: ['click', ['$event'], ] },],\n'onKeyDownHandler': [{ type: HostListener, args: ['document:keydown', ['$event'], ] },],\n};\n}\n\nfunction ModalComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nModalComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModalComponent.ctorParameters;\n/** @type {?} */\nModalComponent.propDecorators;\n/** @type {?} */\nModalComponent.prototype.header;\n/** @type {?} */\nModalComponent.prototype.body;\n/** @type {?} */\nModalComponent.prototype.footer;\n/** @type {?} */\nModalComponent.prototype.closeOnOutsideClick;\n/** @type {?} */\nModalComponent.prototype.visible;\n/** @type {?} */\nModalComponent.prototype.visibleAnimate;\n/** @type {?} */\nModalComponent.prototype.elementRef;\n/** @type {?} */\nModalComponent.prototype.changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ModalComponent } from './modal.component';\nexport class ModalModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n  ],\n  exports: [ModalComponent],\n  declarations: [ModalComponent],\n  providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["ModalComponent","elementRef","changeDetectorRef","this","closeOnOutsideClick","visible","visibleAnimate","prototype","ngOnDestroy","close","open","_this","document","body","classList","add","setTimeout","remove","markForCheck","onContainerClicked","event","contains","isTopMost","onKeyDownHandler","key","nativeElement","querySelector","decorators","type","Component","args","selector","template","styles","ctorParameters","ElementRef","ChangeDetectorRef","propDecorators","header","ContentChild","footer","Input","HostListener","ModalModule","NgModule","imports","CommonModule","exports","declarations","providers"],"mappings":"0TAGA,IAAAA,EAAA,WAuBA,SAAAA,EADYC,EACAC,GADAC,KAAZF,WAAYA,EACAE,KAAZD,kBAAYA,EARTC,KAAHC,qBACyB,EACvBD,KAAFE,SACY,EAAVF,KAAFG,gBACmB,SAWnBN,EAAAO,UAAAC,YAAA,WAGIL,KAJKM,SASTT,EAAAO,UAAAG,KAAA,WAAA,IAAAC,EAAAR,KACIS,SANSC,KAAKC,UAAUC,IAAI,cAQ5BZ,KANKE,SAAU,EAOfW,WANW,WAOTL,EANKL,gBAAiB,KAY5BN,EAAAO,UAAAE,MAAA,WAAA,IAAAE,EAAAR,KACIS,SARSC,KAAKC,UAAUG,OAAO,cAU/Bd,KARKG,gBAAiB,EAStBU,WARW,WASTL,EARKN,SAAU,EASfM,EARKT,kBAAkBgB,gBACtB,MAcPlB,EAAAO,UAAAY,mBAAA,SAVGC,GACmBA,EAAO,OAAON,UAAUO,SAAS,UAAYlB,KAAKmB,aAAenB,KAAKC,qBAWtFD,KAVKM,SAiBXT,EAAAO,UAAAgB,iBAAA,SAZGH,GAEmB,WAYdA,EAZMI,KAAoBrB,KAAKmB,aAajCnB,KAZKM,SAmBXT,EAAAO,UAAAe,UAAA,WACI,OAZOnB,KAAMF,WAAWwB,cAAcC,cAAc,4BAtExD,GAwEO1B,EAAP2B,aACEC,KAAMC,EAAAA,UAAWC,OAajBC,SAZU,QAaVC,SAZU,8uBAmCVC,QAZQ,uyBAkCTjC,EAADkC,eAAC,WAAA,QAeAN,KAAMO,EAAAA,aACNP,KAAMQ,EAAAA,qBAZApC,EAAPqC,gBAeAC,SAdaV,KAAMW,EAAAA,aAAcT,MAAM,iBAevCjB,OAdWe,KAAMW,EAAAA,aAAcT,MAAM,eAerCU,SAdaZ,KAAMW,EAAAA,aAAcT,MAAM,iBAevC1B,sBAd0BwB,KAAMa,EAAAA,QAehCtB,qBAdyBS,KAAMc,EAAAA,aAAcZ,MAAM,SAAU,aAe7DP,mBAduBK,KAAMc,EAAAA,aAAcZ,MAAM,oBAAqB,cC7ItE,IAAAa,EAAA,kBAAA,aAAA,GAEkCA,EAAlChB,aACEC,KAAMgB,EAAAA,SAAUd,OADhBe,SACEC,EAAAA,cAEFC,SAES/C,GADTgD,cAEchD,GADdiD,iBAMDN,EAADT,eAAC,WAAA"}
