  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Knockout-Validation/Dist/knockout.validation.min.js at master · ericmbarnard/Knockout-Validation · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="/5ipEzh5V6BaokqUJJgoiRoBReXCq/FPSuw1qfW0N/A=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-2cc00d0d3118fa5d35135cc56fe1a0c14611b069.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-51b9072e946bbf41f065de13b1579268fde9b919.css" media="screen" rel="stylesheet" type="text/css" />
    


        <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-995182d02a0effa06cdc51e33fe6e729014a3c91.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-1fdaf70f0e6c6a68104037c6ebfb12a85b03acaa.js" type="text/javascript"></script>
      

        <link rel='permalink' href='/ericmbarnard/Knockout-Validation/blob/7d6e5c465ae60c768923e9a44a6ec2bba3dd7609/Dist/knockout.validation.min.js'>
    <meta property="og:title" content="Knockout-Validation"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/ericmbarnard/Knockout-Validation"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/1bc7d14d4722fc291fc996a96b020115?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="A validation library for Knockout JS. Contribute to Knockout-Validation development by creating an account on GitHub."/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="ericmbarnard/Knockout-Validation"/>

    <meta name="description" content="A validation library for Knockout JS. Contribute to Knockout-Validation development by creating an account on GitHub." />

  <link href="https://github.com/ericmbarnard/Knockout-Validation/commits/master.atom" rel="alternate" title="Recent Commits to Knockout-Validation:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public env-production ">
    <div id="wrapper">

      

      

      


        <div class="header header-logged-out">
          <div class="container clearfix">

            <a class="header-logo-wordmark" href="https://github.com/">
              <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1338956357" />
              <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1338956357" />
            </a>

              
<ul class="top-nav">
    <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
  <li class="search"><a href="https://github.com/search">Search</a></li>
  <li class="features"><a href="https://github.com/features">Features</a></li>
    <li class="blog"><a href="https://github.com/blog">Blog</a></li>
</ul>


            <div class="header-actions">
                <a class="button primary" href="https://github.com/signup">Sign up for free</a>
              <a class="button" href="https://github.com/login?return_to=%2Fericmbarnard%2FKnockout-Validation%2Fblob%2Fmaster%2FDist%2Fknockout.validation.min.js">Sign in</a>
            </div>

          </div>
        </div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu">
          <div class="container">
            <div class="title-actions-bar">
              


                  <ul class="pagehead-actions">


          <li>
            <span class="star-button"><a href="/login?return_to=%2Fericmbarnard%2FKnockout-Validation" class="minibutton js-toggler-target entice tooltipped leftwards" title="You must be signed in to use this feature" rel="nofollow"><span class="mini-icon mini-icon-star"></span>Star</a><a class="social-count js-social-count" href="/ericmbarnard/Knockout-Validation/stargazers">305</a></span>
          </li>
          <li>
            <a href="/login?return_to=%2Fericmbarnard%2FKnockout-Validation" class="minibutton js-toggler-target fork-button entice tooltipped leftwards"  title="You must be signed in to fork a repository" rel="nofollow"><span class="mini-icon mini-icon-fork"></span>Fork</a><a href="/ericmbarnard/Knockout-Validation/network" class="social-count">103</a>
          </li>
    </ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/ericmbarnard" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">ericmbarnard</span>
                  </a></span> /
                <strong><a href="/ericmbarnard/Knockout-Validation" class="js-current-repository">Knockout-Validation</a></strong>
              </h1>
            </div>

            

  <ul class="tabs">
    <li><a href="/ericmbarnard/Knockout-Validation" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/ericmbarnard/Knockout-Validation/network" highlight="repo_network">Network</a></li>
    <li><a href="/ericmbarnard/Knockout-Validation/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>25</span></a></li>

      <li><a href="/ericmbarnard/Knockout-Validation/issues" highlight="repo_issues">Issues <span class='counter'>91</span></a></li>

      <li><a href="/ericmbarnard/Knockout-Validation/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/ericmbarnard/Knockout-Validation/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/ericmbarnard/Knockout-Validation/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">2</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container js-select-menu-pane">

        <div class="select-menu-modal js-select-menu-pane">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-select-menu-text-filter js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div> <!-- /.select-menu-text-filter -->
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-filter="branches" class="js-select-menu-tab selected">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list js-filter-tab js-filter-branches css-truncate" data-filterable-for="commitish-filter-field" data-filterable-type="substring">



              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/ericmbarnard/Knockout-Validation/blob/193-Checked-Binding/Dist/knockout.validation.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="193-Checked-Binding" rel="nofollow" title="193-Checked-Binding">193-Checked-Binding</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/ericmbarnard/Knockout-Validation/blob/gh-pages/Dist/knockout.validation.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" rel="nofollow" title="gh-pages">gh-pages</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-item js-navigation-item js-navigation-target selected">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                <a href="/ericmbarnard/Knockout-Validation/blob/master/Dist/knockout.validation.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-no-results js-not-filterable">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list js-filter-tab js-filter-tags css-truncate" data-filterable-for="commitish-filter-field" data-filterable-type="substring" style="display:none;">

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/ericmbarnard/Knockout-Validation/blob/v1.0.2/Dist/knockout.validation.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0.2" rel="nofollow" title="v1.0.2">v1.0.2</a>

              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-checkmark mini-icon mini-icon-confirm"></span>
                    <a href="/ericmbarnard/Knockout-Validation/blob/v0.9/Dist/knockout.validation.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.9" rel="nofollow" title="v0.9">v0.9</a>

              </div> <!-- /.select-menu-item -->

            <div class="select-menu-no-results js-not-filterable">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/ericmbarnard/Knockout-Validation" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/ericmbarnard/Knockout-Validation/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/ericmbarnard/Knockout-Validation/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">3</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:096c9137c3f4f5da290a902e399e7c9c -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:096c9137c3f4f5da290a902e399e7c9c -->

<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>
      <div class="breadcrumb">
        <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ericmbarnard/Knockout-Validation" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">Knockout-Validation</span></a></span></span> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ericmbarnard/Knockout-Validation/tree/master/Dist" class="js-slide-to" data-direction="back" itemscope="url"><span itemprop="title">Dist</span></a></span> / <strong class="final-path">knockout.validation.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="Dist/knockout.validation.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
      </div>

      <a href="/ericmbarnard/Knockout-Validation/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>

        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/1bc7d14d4722fc291fc996a96b020115?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/ericmbarnard" rel="author">ericmbarnard</a></span>
    <time class="js-relative-date" datetime="2012-11-25T16:23:45-08:00" title="2012-11-25 16:23:45">November 25, 2012</time>
    <div class="commit-title">
        <a href="/ericmbarnard/Knockout-Validation/commit/7b0b2a4322baeade871dca851d0f7f47f262ff93" class="message">rebuilding after pull-requests</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/1bc7d14d4722fc291fc996a96b020115?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/ericmbarnard">ericmbarnard</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/ericmbarnard/Knockout-Validation/blob/7d6e5c465ae60c768923e9a44a6ec2bba3dd7609/Dist/knockout.validation.min.js" data-title="Knockout-Validation/Dist/knockout.validation.min.js at master · ericmbarnard/Knockout-Validation · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>9 lines (8 sloc)</span>
                <span>12.819 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/ericmbarnard/Knockout-Validation/raw/master/Dist/knockout.validation.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/ericmbarnard/Knockout-Validation/blame/master/Dist/knockout.validation.min.js" class="button minibutton ">Blame</a>
                  <a href="/ericmbarnard/Knockout-Validation/commits/master/Dist/knockout.validation.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="data type-javascript js-blob-data">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
</pre>
          </td>
          <td width="100%">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm">===============================================================================</span></div><div class='line' id='LC3'><span class="cm">    Author:     Eric M. Barnard - @ericmbarnard                                </span></div><div class='line' id='LC4'><span class="cm">    License:    MIT (http://opensource.org/licenses/mit-license.php)           </span></div><div class='line' id='LC5'><span class="cm">                                                                               </span></div><div class='line' id='LC6'><span class="cm">    Description: Validation Library for KnockoutJS                             </span></div><div class='line' id='LC7'><span class="cm">===============================================================================</span></div><div class='line' id='LC8'><span class="cm">*/</span></div><div class='line' id='LC9'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">require</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s2">&quot;knockout&quot;</span><span class="p">),</span><span class="nx">exports</span><span class="p">)</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">([</span><span class="s2">&quot;knockout&quot;</span><span class="p">,</span><span class="s2">&quot;exports&quot;</span><span class="p">],</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">ko</span><span class="p">,</span><span class="nx">ko</span><span class="p">.</span><span class="nx">validation</span><span class="o">=</span><span class="p">{})})(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">validator</span><span class="p">(</span><span class="nx">a</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="o">===</span><span class="kc">undefined</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">formatMessage</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValidating</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">()){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValidating</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">isValid</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">formatMessage</span><span class="p">(</span><span class="nx">g</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValidating</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)};</span><span class="nx">c</span><span class="p">.</span><span class="nx">validator</span><span class="p">(</span><span class="nx">a</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="o">||!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="kc">undefined</span><span class="p">)</span><span class="k">throw</span><span class="s2">&quot;Knockout is required, please ensure it is loaded before loading this validation plug-in&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">validation</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">registerExtenders</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">messagesOnModified</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">errorsAsTitle</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">errorsAsTitleOnModified</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">messageTemplate</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">insertMessages</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">parseInputAttributes</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">writeInputAttributes</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">decorateElement</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">errorClass</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">errorElementClass</span><span class="o">:</span><span class="s2">&quot;validationElement&quot;</span><span class="p">,</span><span class="nx">errorMessageClass</span><span class="o">:</span><span class="s2">&quot;validationMessage&quot;</span><span class="p">,</span><span class="nx">grouping</span><span class="o">:</span><span class="p">{</span><span class="nx">deep</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">observable</span><span class="o">:!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;required&quot;</span><span class="p">,</span><span class="s2">&quot;pattern&quot;</span><span class="p">,</span><span class="s2">&quot;min&quot;</span><span class="p">,</span><span class="s2">&quot;max&quot;</span><span class="p">,</span><span class="s2">&quot;step&quot;</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;email&quot;</span><span class="p">,</span><span class="s2">&quot;number&quot;</span><span class="p">,</span><span class="s2">&quot;date&quot;</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">setImmediate</span><span class="o">?</span><span class="nb">window</span><span class="p">.</span><span class="nx">setImmediate</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">)},</span><span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;__ko_validation__&quot;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">isArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">},</span><span class="nx">isObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="p">},</span><span class="nx">values</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">getValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">hasAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!==</span><span class="kc">null</span><span class="p">},</span><span class="nx">getAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">setAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">isValidatable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rules</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValid</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isModified</span><span class="p">},</span><span class="nx">insertAfter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)},</span><span class="nx">newId</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="o">+=</span><span class="mi">1</span><span class="p">},</span><span class="nx">getConfigOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">contextFor</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="nx">e</span><span class="p">},</span><span class="nx">setDomData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">newId</span><span class="p">()),</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="nx">getDomData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="kc">undefined</span><span class="p">},</span><span class="nx">contextFor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="k">case</span> <span class="mi">8</span><span class="o">:</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getDomData</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">contextFor</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)}</span><span class="k">return</span> <span class="kc">undefined</span><span class="p">},</span><span class="nx">isEmptyVal</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="kc">undefined</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}}}(),</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">utils</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="p">{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">errorElementClass</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">errorElementClass</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">errorClass</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">errorElementClass</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">errorMessageClass</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">errorMessageClass</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">errorClass</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">errorMessageClass</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerExtenders</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">registerExtenders</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">},</span><span class="nx">configure</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">group</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">grouping</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">observableArray</span><span class="p">([]),</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">unwrapObservable</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">!==</span><span class="kc">undefined</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">deep</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">isObservable</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isValid</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">validatable</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">values</span><span class="p">(</span><span class="nx">g</span><span class="p">))),</span><span class="nx">e</span><span class="o">!==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)})};</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">observable</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">d</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValid</span><span class="p">()</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">)}),</span><span class="nx">b</span><span class="p">}))</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">d</span><span class="p">([]),</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">d</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValid</span><span class="p">()</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">)}),</span><span class="nx">c</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">showAllMessages</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">==</span><span class="kc">undefined</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">d</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isModified</span><span class="p">(</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">b</span><span class="p">.</span><span class="nx">errors</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">isValid</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">errors</span><span class="p">().</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">isAnyMessageShown</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">d</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isValid</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isModified</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">b</span><span class="p">},</span><span class="nx">f</span><span class="p">},</span><span class="nx">formatMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\{0\}/gi</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">addRule</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">validatable</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">addAnonymousRule</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">newId</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="o">===</span><span class="kc">undefined</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="s2">&quot;Error&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">rules</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">rule</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">params</span><span class="p">})},</span><span class="nx">addExtender</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">extenders</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">onlyIf</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">rule</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">message</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">condition</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">onlyIf</span><span class="p">})</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">rule</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">d</span><span class="p">})}},</span><span class="nx">registerExtenders</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerExtenders</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">rules</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">extenders</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">addExtender</span><span class="p">(</span><span class="nx">c</span><span class="p">))},</span><span class="nx">insertValidationMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;SPAN&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getConfigOptions</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">errorMessageClass</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">},</span><span class="nx">parseInputValidationAttributes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">d</span><span class="p">(),{</span><span class="nx">rule</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||!</span><span class="mi">0</span><span class="p">})});</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addRule</span><span class="p">(</span><span class="nx">d</span><span class="p">(),{</span><span class="nx">rule</span><span class="o">:</span><span class="nx">a</span><span class="o">==</span><span class="s2">&quot;date&quot;</span><span class="o">?</span><span class="s2">&quot;dateISO&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">params</span><span class="o">:!</span><span class="mi">0</span><span class="p">})})},</span><span class="nx">writeInputValidationAttributes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||!</span><span class="nx">d</span><span class="p">.</span><span class="nx">rules</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">rules</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayFirst</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">rule</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">params</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">rule</span><span class="o">==</span><span class="s2">&quot;pattern&quot;</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">params</span> <span class="k">instanceof</span> <span class="nb">RegExp</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">source</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">}}}();</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">required</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="kc">undefined</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="kc">null</span><span class="o">?!</span><span class="nx">b</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)),</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">:!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;This field is required.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a value greater than or equal to {0}.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a value less than or equal to {0}.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">minLength</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter at least {0} characters.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">maxLength</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter no more than {0} characters.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">pattern</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">!=</span><span class="kc">null</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please check this value.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">step</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="o">*</span><span class="mi">100</span><span class="o">%</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;The value must increment by {0}&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">email</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="sr">/^((([a-z]|\d|[!#\$%&amp;&#39;\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&amp;&#39;\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a proper email address&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">date</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="sr">/Invalid|NaN/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a proper date&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">dateISO</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="sr">/^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a proper date&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">number</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="sr">/^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a number&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">digit</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="sr">/^\d+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please enter a digit&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">phoneUS</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">!=</span><span class="s2">&quot;string&quot;</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">isEmptyVal</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(1-?)?(\([2-9]\d{2}\)|[2-9]\d{2})-?[2-9]\d{2}-?\d{4}$/</span><span class="p">))</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please specify a valid phone number&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">equal</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Values must equal&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">notEqual</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">i</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please choose another value.&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">unique</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">collection</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getValue</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">externalValue</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayFilter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">unwrapObservable</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">===</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueAccessor</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueAccessor</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">++</span><span class="p">}),</span><span class="nx">f</span><span class="o">&lt;</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="kc">undefined</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">e</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">2</span><span class="p">))},</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Please make sure the value is unique.&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">registerExtenders</span><span class="p">()}(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">validationCore</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getConfigOptions</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">parseInputAttributes</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">parseInputValidationAttributes</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">insertMessages</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">isValidatable</span><span class="p">(</span><span class="nx">d</span><span class="p">())){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">insertValidationMessage</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">messageTemplate</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderTemplate</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">messageTemplate</span><span class="p">,{</span><span class="nx">field</span><span class="o">:</span><span class="nx">d</span><span class="p">()},</span><span class="kc">null</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="s2">&quot;replaceNode&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">applyBindingsToNode</span><span class="p">(</span><span class="nx">k</span><span class="p">,{</span><span class="nx">validationMessage</span><span class="o">:</span><span class="nx">d</span><span class="p">()})}</span><span class="nx">j</span><span class="p">.</span><span class="nx">writeInputAttributes</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">isValidatable</span><span class="p">(</span><span class="nx">d</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">writeInputValidationAttributes</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">decorateElement</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">isValidatable</span><span class="p">(</span><span class="nx">d</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">applyBindingsToNode</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">validationElement</span><span class="o">:</span><span class="nx">d</span><span class="p">()})},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){}}}(),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">init</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">validationCore</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)}}(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">validationMessage</span><span class="o">=</span><span class="p">{</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getConfigOptions</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">unwrapObservable</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">validatable</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">isModified</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">isValid</span><span class="p">();</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">messagesOnModified</span><span class="o">||</span><span class="nx">h</span><span class="o">?</span><span class="nx">j</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">messagesOnModified</span><span class="o">||</span><span class="nx">h</span><span class="o">?!</span><span class="nx">j</span><span class="o">:!</span><span class="mi">1</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">visible</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">l</span><span class="p">)}},</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">validationElement</span><span class="o">=</span><span class="p">{</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getConfigOptions</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">unwrapObservable</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">validatable</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">isModified</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">isValid</span><span class="p">();</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="o">?!</span><span class="nx">j</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">decorateElement</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">errorElementClass</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">css</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">errorsAsTitle</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;data-orig-title&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;data-orig-title&quot;</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;true&quot;</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">errorsAsTitleOnModified</span><span class="o">||</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="nx">j</span><span class="o">?</span><span class="p">{</span><span class="nx">title</span><span class="o">:</span><span class="nx">l</span><span class="o">||</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;data-orig-title&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="nx">title</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="s2">&quot;data-orig-title&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">||</span><span class="nx">m</span><span class="p">}};</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">attr</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">o</span><span class="p">)}},</span><span class="nx">a</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">validationOptions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">unwrapObservable</span><span class="p">(</span><span class="nx">c</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">setDomData</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">j</span><span class="p">)}}}}(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">extenders</span><span class="p">.</span><span class="nx">validation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">arrayForEach</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">addAnonymousRule</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">c</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">extenders</span><span class="p">.</span><span class="nx">validatable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">.</span><span class="nx">isValidatable</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">c</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">observableArray</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">isValidating</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">__valid__</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">isModified</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">validateObservable</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">});</span><span class="nx">c</span><span class="p">.</span><span class="nx">isValid</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">()});</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">isModified</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">_disposeValidation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">isValid</span><span class="p">.</span><span class="nx">dispose</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">removeAll</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">isModified</span><span class="p">.</span><span class="nx">_subscriptions</span><span class="p">.</span><span class="nx">change</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">.</span><span class="nx">isValidating</span><span class="p">.</span><span class="nx">_subscriptions</span><span class="p">.</span><span class="nx">change</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">.</span><span class="nx">_subscriptions</span><span class="p">.</span><span class="nx">change</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="p">.</span><span class="nx">dispose</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">dispose</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">rules</span><span class="p">,</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">error</span><span class="p">,</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">isValid</span><span class="p">,</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">isValidating</span><span class="p">,</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">,</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">isModified</span><span class="p">}}</span><span class="k">else</span> <span class="nx">d</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">isValidatable</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_disposeValidation</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_disposeValidation</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">validateObservable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">rules</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">condition</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">condition</span><span class="p">())</span><span class="k">continue</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">rules</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">rule</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">async</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">async</span><span class="p">)</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">__valid__</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">validatedObservable</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">extend</span><span class="p">({</span><span class="nx">validatable</span><span class="o">:!</span><span class="mi">0</span><span class="p">});</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">observable</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">errors</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">group</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">isValid</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">errors</span><span class="p">().</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">}),</span><span class="nx">d</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">localize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">rules</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">message</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])},</span><span class="nx">a</span><span class="p">.</span><span class="nx">applyBindingsWithValidation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="o">:</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">init</span><span class="p">(),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">setDomData</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">applyBindings</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">applyBindings</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">applyBindings</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">init</span><span class="p">(),</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}});</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543528" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.08594s from fe1.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus command bar</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
        <dd>Preview comment</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> shift l</dt>
        <dd>Go fullscreen</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
          <dd>Preview comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> shift l</dt>
          <dd>Go fullscreen</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Show/hide all inline notes</dd>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.08907' data-host='fe1'></span>
    
  </body>
</html>

