// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Dev2.Studio.UI.Tests.UIMaps.FormatNumberUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class FormatNumberUIMap
    {
        
        /// <summary>
        /// NumberTextBoxClick
        /// </summary>
        public void NumberTextBoxClick()
        {
            #region Variable Declarations
            WpfText uIWholeordecimalText = this.UIBusinessDesignStudioWindow.UIDsfNumberFormatActivCustom.UIUI__Number_Inputtxt_Edit.UIWholeordecimalText;
            #endregion

            // Click 'Whole or decimal' label
            Mouse.Click(uIWholeordecimalText, new Point(60, 8));
        }
        
        /// <summary>
        /// RoundingComboBoxClick
        /// </summary>
        public void RoundingComboBoxClick()
        {
            #region Variable Declarations
            WpfComboBox uIUI__Rounding_ComboBoComboBox = this.UIBusinessDesignStudioWindow.UIFlowchartCustom1.UIDsfNumberFormatActivCustom.UIUI__Rounding_ComboBoComboBox;
            #endregion

            // Click 'UI__Rounding_ComboBox_AutoID' combo box
            Mouse.Click(uIUI__Rounding_ComboBoComboBox, new Point(65, 6));
        }


        public WpfComboBox GetRoundingComboBox()
        {
            WpfComboBox uIRoundingComboBox = this.UIBusinessDesignStudioWindow.UIFlowchartCustom1.UIDsfNumberFormatActivCustom.UIUI__Rounding_ComboBoComboBox;
            return uIRoundingComboBox;

        }

        /// <summary>
        /// RoundingInputBoxClick
        /// </summary>
        public void RoundingInputBoxClick()
        {
            #region Variable Declarations
            WpfEdit uIUI__Rounding_InputtxEdit = this.UIBusinessDesignStudioWindow.UIFlowchartCustom1.UIDsfNumberFormatActivCustom.UIUI__Rounding_InputtxEdit;
            #endregion

            // Click 'UI__Rounding_Inputtxt_AutoID' text box
            Mouse.Click(uIUI__Rounding_InputtxEdit, new Point(30, 12));
        }
        
        /// <summary>
        /// DecimalsToShowTextBoxClick
        /// </summary>
        public void DecimalsToShowTextBoxClick()
        {
            #region Variable Declarations
            WpfEdit uIUI__DecimalsToShow_IEdit = this.UIBusinessDesignStudioWindow.UIFlowchartCustom1.UIDsfNumberFormatActivCustom.UIUI__DecimalsToShow_IEdit;
            #endregion

            // Click 'UI__DecimalsToShow_Inputtxt_AutoID' text box
            Mouse.Click(uIUI__DecimalsToShow_IEdit, new Point(19, 0));
        }
        
        /// <summary>
        /// ResultTextBoxClick
        /// </summary>
        public void ResultTextBoxClick()
        {
            #region Variable Declarations
            WpfEdit uIUI__Result_Inputtxt_Edit = this.UIBusinessDesignStudioWindow.UIDsfNumberFormatActivCustom.UIUI__Result_Inputtxt_Edit;
            #endregion

            // Click 'UI__Result_Inputtxt_AutoID' text box
            Mouse.Click(uIUI__Result_Inputtxt_Edit, new Point(47, 10));
        }
        
        /// <summary>
        /// RoundingTextBoxDisabled - Use 'RoundingTextBoxDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void RoundingTextBoxDisabled()
        {
            #region Variable Declarations
            WpfEdit uIUI__Rounding_InputtxEdit = this.UIBusinessDesignStudioWindow.UIFlowchartCustom1.UIDsfNumberFormatActivCustom.UIUI__Rounding_InputtxEdit;
            #endregion

            // Verify that the 'Enabled' property of 'UI__Rounding_Inputtxt_AutoID' text box equals 'false'
            Assert.AreEqual(this.RoundingTextBoxDisabledExpectedValues.UIUI__Rounding_InputtxEditEnabled, uIUI__Rounding_InputtxEdit.Enabled);
        }
        
        #region Properties
        public virtual RoundingTextBoxDisabledExpectedValues RoundingTextBoxDisabledExpectedValues
        {
            get
            {
                if ((this.mRoundingTextBoxDisabledExpectedValues == null))
                {
                    this.mRoundingTextBoxDisabledExpectedValues = new RoundingTextBoxDisabledExpectedValues();
                }
                return this.mRoundingTextBoxDisabledExpectedValues;
            }
        }
        
        public UIBusinessDesignStudioWindow UIBusinessDesignStudioWindow
        {
            get
            {
                if ((this.mUIBusinessDesignStudioWindow == null))
                {
                    this.mUIBusinessDesignStudioWindow = new UIBusinessDesignStudioWindow();
                }
                return this.mUIBusinessDesignStudioWindow;
            }
        }
        #endregion
        
        #region Fields
        private RoundingTextBoxDisabledExpectedValues mRoundingTextBoxDisabledExpectedValues;
        
        private UIBusinessDesignStudioWindow mUIBusinessDesignStudioWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RoundingTextBoxDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class RoundingTextBoxDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'UI__Rounding_Inputtxt_AutoID' text box equals 'false'
        /// </summary>
        public bool UIUI__Rounding_InputtxEditEnabled = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIBusinessDesignStudioWindow : WpfWindow
    {
        
        public UIBusinessDesignStudioWindow()
        {
            #region Search Criteria

            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));

            #endregion
        }
        
        #region Properties
        public UIFlowchartCustom UIFlowchartCustom
        {
            get
            {
                if ((this.mUIFlowchartCustom == null))
                {
                    this.mUIFlowchartCustom = new UIFlowchartCustom(this);
                }
                return this.mUIFlowchartCustom;
            }
        }
        
        public UIDsfNumberFormatActivCustom1 UIDsfNumberFormatActivCustom
        {
            get
            {
                if ((this.mUIDsfNumberFormatActivCustom == null))
                {
                    this.mUIDsfNumberFormatActivCustom = new UIDsfNumberFormatActivCustom1(this);
                }
                return this.mUIDsfNumberFormatActivCustom;
            }
        }
        
        public UIFlowchartCustom1 UIFlowchartCustom1
        {
            get
            {
                if ((this.mUIFlowchartCustom1 == null))
                {
                    this.mUIFlowchartCustom1 = new UIFlowchartCustom1(this);
                }
                return this.mUIFlowchartCustom1;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowchartCustom mUIFlowchartCustom;
        
        private UIDsfNumberFormatActivCustom1 mUIDsfNumberFormatActivCustom;
        
        private UIFlowchartCustom1 mUIFlowchartCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIFlowchartCustom : WpfCustom
    {
        
        public UIFlowchartCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.SearchProperties["AutomationId"] = "MyWorkflow(FlowchartDesigner)";
            //this.WindowTitles.Add(UITestUtils.GetStudioWindowName());
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDsfNumberFormatActivCustom UIDsfNumberFormatActivCustom
        {
            get
            {
                if ((this.mUIDsfNumberFormatActivCustom == null))
                {
                    this.mUIDsfNumberFormatActivCustom = new UIDsfNumberFormatActivCustom(this);
                }
                return this.mUIDsfNumberFormatActivCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDsfNumberFormatActivCustom mUIDsfNumberFormatActivCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIDsfNumberFormatActivCustom : WpfCustom
    {
        
        public UIDsfNumberFormatActivCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.DsfNumberFormatActivityDesigner";
            this.SearchProperties["AutomationId"] = "Format Number(DsfNumberFormatActivityDesigner)";
            //this.WindowTitles.Add(UITestUtils.GetStudioWindowName());
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WpfEdit UIUI__Inputtxt_AutoIDEdit
        {
            get
            {
                if ((this.mUIUI__Inputtxt_AutoIDEdit == null))
                {
                    this.mUIUI__Inputtxt_AutoIDEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUI__Inputtxt_AutoIDEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
                    //this.mUIUI__Inputtxt_AutoIDEdit.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.mUIUI__Inputtxt_AutoIDEdit.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIUI__Inputtxt_AutoIDEdit;
            }
        }
        
        public WpfComboBox UIUI__AddTimeTypecbx_AComboBox
        {
            get
            {
                if ((this.mUIUI__AddTimeTypecbx_AComboBox == null))
                {
                    this.mUIUI__AddTimeTypecbx_AComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIUI__AddTimeTypecbx_AComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__AddTimeTypecbx_AutoID";
                    //this.mUIUI__AddTimeTypecbx_AComboBox.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.mUIUI__AddTimeTypecbx_AComboBox.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));

                    #endregion
                }
                return this.mUIUI__AddTimeTypecbx_AComboBox;
            }
        }
        
        public WpfEdit UIUI__Inputtxt_AutoIDEdit1
        {
            get
            {
                if ((this.mUIUI__Inputtxt_AutoIDEdit1 == null))
                {
                    this.mUIUI__Inputtxt_AutoIDEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUI__Inputtxt_AutoIDEdit1.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Inputtxt_AutoID";
                    this.mUIUI__Inputtxt_AutoIDEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    //this.mUIUI__Inputtxt_AutoIDEdit1.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.mUIUI__Inputtxt_AutoIDEdit1.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIUI__Inputtxt_AutoIDEdit1;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIUI__Inputtxt_AutoIDEdit;
        
        private WpfComboBox mUIUI__AddTimeTypecbx_AComboBox;
        
        private WpfEdit mUIUI__Inputtxt_AutoIDEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIDsfNumberFormatActivCustom1 : WpfCustom
    {
        
        public UIDsfNumberFormatActivCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.DsfNumberFormatActivityDesigner";
            this.SearchProperties["AutomationId"] = "Format Number(DsfNumberFormatActivityDesigner)";
            //this.WindowTitles.Add(UITestUtils.GetStudioWindowName());
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIUI__Number_Inputtxt_Edit UIUI__Number_Inputtxt_Edit
        {
            get
            {
                if ((this.mUIUI__Number_Inputtxt_Edit == null))
                {
                    this.mUIUI__Number_Inputtxt_Edit = new UIUI__Number_Inputtxt_Edit(this);
                }
                return this.mUIUI__Number_Inputtxt_Edit;
            }
        }
        
        public WpfEdit UIUI__Result_Inputtxt_Edit
        {
            get
            {
                if ((this.mUIUI__Result_Inputtxt_Edit == null))
                {
                    this.mUIUI__Result_Inputtxt_Edit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUI__Result_Inputtxt_Edit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Result_Inputtxt_AutoID";
                    //this.mUIUI__Result_Inputtxt_Edit.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.mUIUI__Result_Inputtxt_Edit.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    
                    #endregion
                }
                return this.mUIUI__Result_Inputtxt_Edit;
            }
        }
        #endregion
        
        #region Fields
        private UIUI__Number_Inputtxt_Edit mUIUI__Number_Inputtxt_Edit;
        
        private WpfEdit mUIUI__Result_Inputtxt_Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIUI__Number_Inputtxt_Edit : WpfEdit
    {
        
        public UIUI__Number_Inputtxt_Edit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI_Number_Inputtxt_AutoID";
            //this.WindowTitles.Add(UITestUtils.GetStudioWindowName());
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WpfText UIWholeordecimalText
        {
            get
            {
                if ((this.mUIWholeordecimalText == null))
                {
                    this.mUIWholeordecimalText = new WpfText(this);
                    #region Search Criteria
                    this.mUIWholeordecimalText.SearchProperties[WpfText.PropertyNames.Name] = "Whole or decimal";
                    //this.mUIWholeordecimalText.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.mUIWholeordecimalText.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    
                    #endregion
                }
                return this.mUIWholeordecimalText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIWholeordecimalText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIFlowchartCustom1 : WpfCustom
    {
        
        public UIFlowchartCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.FlowchartDesigner";
            this.SearchProperties["AutomationId"] = "BaseConvertIntegrationTest(FlowchartDesigner)";
            //this.WindowTitles.Add(UITestUtils.GetStudioWindowName());
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDsfNumberFormatActivCustom2 UIDsfNumberFormatActivCustom
        {
            get
            {
                if ((this.mUIDsfNumberFormatActivCustom == null))
                {
                    this.mUIDsfNumberFormatActivCustom = new UIDsfNumberFormatActivCustom2(this);
                }
                return this.mUIDsfNumberFormatActivCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDsfNumberFormatActivCustom2 mUIDsfNumberFormatActivCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIDsfNumberFormatActivCustom2 : WpfCustom
    {
        
        public UIDsfNumberFormatActivCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "Uia.DsfNumberFormatActivityDesigner";
            this.SearchProperties["AutomationId"] = "Format Number(DsfNumberFormatActivityDesigner)";
            //this.WindowTitles.Add(UITestUtils.GetStudioWindowName());
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WpfComboBox UIUI__Rounding_ComboBoComboBox
        {
            get
            {
                if ((this.mUIUI__Rounding_ComboBoComboBox == null))
                {
                    this.mUIUI__Rounding_ComboBoComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIUI__Rounding_ComboBoComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "UI__Rounding_ComboBox_AutoID";
                    //this.mUIUI__Rounding_ComboBoComboBox.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIUI__Rounding_ComboBoComboBox;
            }
        }
        
        public WpfEdit UIUI__Rounding_InputtxEdit
        {
            get
            {
                if ((this.mUIUI__Rounding_InputtxEdit == null))
                {
                    this.mUIUI__Rounding_InputtxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUI__Rounding_InputtxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__Rounding_Inputtxt_AutoID";
                    //this.mUIUI__Rounding_InputtxEdit.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIUI__Rounding_InputtxEdit;
            }
        }
        
        public WpfEdit UIUI__DecimalsToShow_IEdit
        {
            get
            {
                if ((this.mUIUI__DecimalsToShow_IEdit == null))
                {
                    this.mUIUI__DecimalsToShow_IEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUI__DecimalsToShow_IEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "UI__DecimalsToShow_Inputtxt_AutoID";
                    //this.mUIUI__DecimalsToShow_IEdit.WindowTitles.Add(UITestUtils.GetStudioWindowName());
                    this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.Name, "Warewolf", PropertyExpressionOperator.Contains));
                    #endregion
                }
                return this.mUIUI__DecimalsToShow_IEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUIUI__Rounding_ComboBoComboBox;
        
        private WpfEdit mUIUI__Rounding_InputtxEdit;
        
        private WpfEdit mUIUI__DecimalsToShow_IEdit;
        #endregion
    }
}
