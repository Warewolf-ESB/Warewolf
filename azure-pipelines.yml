# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  name: Default

jobs:

- job: build
  displayName: 'Compile'

  steps:
  - script: "powershell -NoProfile -NoLogo -ExecutionPolicy Bypass -NoExit -File \"$(Agent.BuildDirectory)/s/Compile.ps1\" -AcceptanceTesting"
    displayName: 'Compile'

  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting'
      Contents: 'TestResults' 

  - script: "(robocopy \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Upload Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Bare Metal/Other Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unit Tests'

- job: Zip_Tool_Specs
  displayName: 'Zip Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Zip Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs'

- job: Email_Tools_Specs
  displayName: 'Email Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Email Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Email Tools Specs'

- job: Resource_Tools_Specs
  displayName: 'Resource Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Resource Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Resource Tools Specs'

- job: File_And_Folder_Copy_Tool_Specs
  displayName: 'File And Folder Copy Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/File And Folder Copy Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Copy Tool Specs'

- job: Data_Tools_Specs
  displayName: 'Data Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Data Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Data Tools Specs'

- job: Request_Service_Name_View_Models_Unit_Tests
  displayName: 'Request Service Name View Models Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Request Service Name View Models Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Request Service Name View Models Unit Tests'

- job: Unzip_Tool_Specs_Validation
  displayName: 'Unzip Tool Specs Validation'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Unzip Tool Specs Validation.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs Validation'

- job: Recordset_Tools_Specs
  displayName: 'Recordset Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Recordset Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Recordset Tools Specs'

- job: File_And_Folder_Rename_Tool_Specs
  displayName: 'File And Folder Rename Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/File And Folder Rename Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Rename Tool Specs'

- job: Other_Tools_Specs
  displayName: 'Other Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Other Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Other Tools Specs'

- job: File_And_Folder_Move_Tool_Specs
  displayName: 'File And Folder Move Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/File And Folder Move Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Move Tool Specs'

- job: File_Read_Tool_Specs
  displayName: 'File Read Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/File Read Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File Read Tool Specs'

- job: Infrastructure_Unit_Tests
  displayName: 'Infrastructure Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Infrastructure Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Infrastructure Unit Tests'

- job: New_Folder_Read_Tool_Specs
  displayName: 'New Folder Read Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/New Folder Read Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'New Folder Read Tool Specs'

- job: Write_File_Tool_Specs
  displayName: 'Write File Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Write File Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Write File Tool Specs'

- job: Loop_Construct_Tools_Specs
  displayName: 'Loop Construct Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Loop Construct Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Loop Construct Tools Specs'

- job: Utility_Tools_Specs
  displayName: 'Utility Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Utility Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Utility Tools Specs'

- job: Folder_Read_Tool_Specs
  displayName: 'Folder Read Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Folder Read Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Folder Read Tool Specs'

- job: SQL_Bulk_Insert_Tool_Specs
  displayName: 'SQL Bulk Insert Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/SQL Bulk Insert Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'SQL Bulk Insert Tool Specs'

- job: Control_Flow_Tools_Specs
  displayName: 'Control Flow Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Control Flow Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Control Flow Tools Specs'

- job: Studio_View_Models_Unit_Tests
  displayName: 'Studio View Models Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio View Models Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio View Models Unit Tests'

- job: File_And_Folder_Create_Tool_Specs
  displayName: 'File And Folder Create Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/File And Folder Create Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Create Tool Specs'

- job: Storage_Unit_Tests
  displayName: 'Storage Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Storage Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Storage Unit Tests'

- job: Storage_Tools_Specs
  displayName: 'Storage Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Storage Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Storage Tools Specs'

- job: File_And_Folder_Delete_Tool_Specs
  displayName: 'File And Folder Delete Tool Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/File And Folder Delete Tool Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'File And Folder Delete Tool Specs'

- job: Scripting_Tools_Specs
  displayName: 'Scripting Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Scripting Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Scripting Tools Specs'

- job: Database_Tools_Specs
  displayName: 'Database Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Database Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Database Tools Specs'

- job: Auditing_Unit_Tests
  displayName: 'Auditing Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Auditing Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Auditing Unit Tests'

- job: Workflow_Execution_Specs
  displayName: 'Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Workflow Execution Specs'

- job: Studio_Test_Framework_With_Hello_World_Workflow_Specs
  displayName: 'Studio Test Framework With Hello World Workflow Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With Hello World Workflow Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Hello World Workflow Specs'

- job: Studio_Test_Framework_With_Utility_Tools_Specs
  displayName: 'Studio Test Framework With Utility Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With Utility Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Utility Tools Specs'

- job: MS_SQL_Server_Specs
  displayName: 'MS SQL Server Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/MS SQL Server Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'MS SQL Server Specs'

- job: Studio_Test_Framework_With_Data_Tools_Specs
  displayName: 'Studio Test Framework With Data Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With Data Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Data Tools Specs'

- job: Assign_Workflow_Execution_Specs
  displayName: 'Assign Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Assign Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Assign Workflow Execution Specs'

- job: Integration_Tests
  displayName: 'Integration Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Integration Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Integration Tests'

- job: Studio_Test_Framework_With_Scripting_Tools_Specs
  displayName: 'Studio Test Framework With Scripting Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With Scripting Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Scripting Tools Specs'

- job: Other_Activities_Specs
  displayName: 'Other Activities Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Other Activities Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Other Activities Specs'

- job: Studio_Test_Framework_With_File_And_Folder_Tools_Specs
  displayName: 'Studio Test Framework With File And Folder Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With File And Folder Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With File And Folder Tools Specs'

- job: Studio_Test_Framework_With_HTTP_Web_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With HTTP Web Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Tools Specs'

- job: Studio_Test_Framework_With_Subworkflow_Specs
  displayName: 'Studio Test Framework With Subworkflow Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With Subworkflow Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Subworkflow Specs'

- job: Workflow_Merging_Specs
  displayName: 'Workflow Merging Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Workflow Merging Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Workflow Merging Specs'

- job: Example_Workflow_Execution_Specs
  displayName: 'Example Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Example Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Example Workflow Execution Specs'

- job: Studio_Test_Framework_Specs
  displayName: 'Studio Test Framework Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework Specs'

- job: Subworkflow_Execution_Specs
  displayName: 'Subworkflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Subworkflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Subworkflow Execution Specs'

- job: Other_Specs
  displayName: 'Other Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Other Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Other Specs'

- job: Studio_Test_Framework_With_Deleted_Resources_Specs
  displayName: 'Studio Test Framework With Deleted Resources Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With Deleted Resources Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With Deleted Resources Specs'

- job: SQL_Integration_Tests
  displayName: 'SQL Integration Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/SQL Integration Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'SQL Integration Tests'

- job: For_Each_Workflow_Execution_Specs
  displayName: 'For Each Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/For Each Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'For Each Workflow Execution Specs'

- job: Copy_Tool_Specs_From_Local
  displayName: 'Copy Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Copy Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From Local'

- job: Move_Tool_Specs_From_Local
  displayName: 'Move Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Move Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From Local'

- job: Rename_Tool_Specs_From_Local
  displayName: 'Rename Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Rename Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From Local'

- job: Unzip_Tool_Specs_From_Local
  displayName: 'Unzip Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Unzip Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From Local'

- job: Zip_Tool_Specs_From_Local
  displayName: 'Zip Tool Specs From Local'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Zip Tool Specs From Local.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From Local'

- job: Copy_Tool_Specs_From_FTP
  displayName: 'Copy Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Copy Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs'

- job: Move_Tool_Specs_From_FTP
  displayName: 'Move Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Move Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From FTP'

- job: Rename_Tool_Specs_From_FTP
  displayName: 'Rename Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Rename Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From FTP'

- job: Unzip_Tool_Specs_From_FTP
  displayName: 'Unzip Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Unzip Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From FTP'

- job: Zip_Tool_Specs_From_FTP
  displayName: 'Zip Tool Specs From FTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Zip Tool Specs From FTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From FTP'

- job: Copy_Tool_Specs_From_FTPS
  displayName: 'Copy Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Copy Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From FTPS'

- job: Move_Tool_Specs_From_FTPS
  displayName: 'Move Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Move Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From FTPS'

- job: Rename_Tool_Specs_From_FTPS
  displayName: 'Rename Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Rename Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From FTPS'

- job: Unzip_Tool_Specs_From_FTPS
  displayName: 'Unzip Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Unzip Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From FTPS'

- job: Zip_Tool_Specs_From_FTPS
  displayName: 'Zip Tool Specs From FTPS'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Zip Tool Specs From FTPS.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From FTPS'

- job: Copy_Tool_Specs_From_SFTP
  displayName: 'Copy Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Copy Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From SFTP'

- job: Move_Tool_Specs_From_SFTP
  displayName: 'Move Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Move Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From SFTP'

- job: Rename_Tool_Specs_From_SFTP
  displayName: 'Rename Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Rename Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From SFTP'

- job: Unzip_Tool_Specs_From_SFTP
  displayName: 'Unzip Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Unzip Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Unzip Tool Specs From SFTP'

- job: Zip_Tool_Specs_From_SFTP
  displayName: 'Zip Tool Specs From SFTP'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Zip Tool Specs From SFTP.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Zip Tool Specs From SFTP'

- job: Copy_Tool_Specs_From_UNC
  displayName: 'Copy Tool Specs From UNC'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Copy Tool Specs From UNC.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Copy Tool Specs From UNC'

- job: Move_Tool_Specs_From_UNC
  displayName: 'Move Tool Specs From UNC'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Move Tool Specs From UNC.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Move Tool Specs From UNC'

- job: Studio_Core_Unit_Tests
  displayName: 'Studio Core Unit Tests'
  dependsOn: build
  pool: VM

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Bare Metal/Studio Core Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Core Unit Tests'

- job: Elasticsearch_View_Models_Unit_Tests
  displayName: 'Elasticsearch View Models Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Elasticsearch View Models Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Elasticsearch View Models Unit Tests'

- job: Search_Specs
  displayName: 'Search Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Search Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Search Specs'

- job: Logger_Unit_Tests
  displayName: 'Logger Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Logger Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Logger Unit Tests'

- job: Rename_Tool_Specs_From_UNC
  displayName: 'Rename Tool Specs From UNC'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Rename Tool Specs From UNC.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Rename Tool Specs From UNC'

- job: Not_Parallelizable_Unit_Tests
  displayName: 'Not Parallelizable Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Bare Metal/Not Parallelizable Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Not Parallelizable Unit Tests'

- job: Database_Workflow_Execution_Specs
  displayName: 'Database Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Database Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Database Workflow Execution Specs'

- job: RabbitMQ_Workflow_Execution_Specs
  displayName: 'RabbitMQ Workflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/RabbitMQ Workflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'RabbitMQ Workflow Execution Specs'

- job: Studio_Test_Framework_With_HTTP_Web_Get_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Get Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With HTTP Web Get Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Get Tools Specs'

- job: Studio_Test_Framework_With_HTTP_Web_Delete_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Delete Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With HTTP Web Delete Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Delete Tools Specs'

- job: Studio_Test_Framework_With_HTTP_Web_Post_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Post Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With HTTP Web Post Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Post Tools Specs'

- job: Studio_Test_Framework_With_HTTP_Web_Put_Tools_Specs
  displayName: 'Studio Test Framework With HTTP Web Put Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With HTTP Web Put Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With HTTP Web Put Tools Specs'

- job: Studio_Test_Framework_With_RabbitMQ_Tools_Specs
  displayName: 'Studio Test Framework With RabbitMQ Tools Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Studio Test Framework With RabbitMQ Tools Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Studio Test Framework With RabbitMQ Tools Specs'

- job: Database_Subworkflow_Execution_Specs
  displayName: 'Database Subworkflow Execution Specs'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Container/Database Subworkflow Execution Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Database Subworkflow Execution Specs'

- job: Intellisense_Textbox_Visual_Tree_Unit_Tests
  displayName: 'Intellisense Textbox Visual Tree Unit Tests'
  dependsOn: build

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Bare Metal/Intellisense Textbox Visual Tree Unit Tests.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Intellisense Textbox Visual Tree Unit Tests'

- job: Workflow_Execution_Logging_Specs
  displayName: 'Workflow Execution Logging Specs'
  dependsOn: build
  pool: VM

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\AcceptanceTesting $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\s\\bin\\AcceptanceTesting\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Artifacts'

  - script: "\"$(Agent.BuildDirectory)/s/Dev/.run/Job Shortcuts/Bare Metal/Workflow Execution Logging Specs.bat\""
    displayName: 'Run Tests'

  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '$(Agent.BuildDirectory)/s/bin/AcceptanceTesting/TestResults/*.trx'
      failTaskOnFailedTests: true
      testRunTitle: 'Workflow Execution Logging Specs'

- job: build_release
  displayName: 'Compile for Release'
  dependsOn: [Zip_Tool_Specs,Email_Tools_Specs,Resource_Tools_Specs,File_And_Folder_Copy_Tool_Specs,Data_Tools_Specs,Request_Service_Name_View_Models_Unit_Tests,Unzip_Tool_Specs_Validation,Recordset_Tools_Specs,File_And_Folder_Rename_Tool_Specs,Other_Tools_Specs,File_And_Folder_Move_Tool_Specs,File_Read_Tool_Specs,Infrastructure_Unit_Tests,New_Folder_Read_Tool_Specs,Write_File_Tool_Specs,Loop_Construct_Tools_Specs,Utility_Tools_Specs,Folder_Read_Tool_Specs,SQL_Bulk_Insert_Tool_Specs,Control_Flow_Tools_Specs,Studio_View_Models_Unit_Tests,File_And_Folder_Create_Tool_Specs,Storage_Unit_Tests,Storage_Tools_Specs,File_And_Folder_Delete_Tool_Specs,Scripting_Tools_Specs,Database_Tools_Specs,Auditing_Unit_Tests,Workflow_Execution_Specs,Studio_Test_Framework_With_Hello_World_Workflow_Specs,Studio_Test_Framework_With_Utility_Tools_Specs,MS_SQL_Server_Specs,Studio_Test_Framework_With_Data_Tools_Specs,Assign_Workflow_Execution_Specs,Integration_Tests,Studio_Test_Framework_With_Scripting_Tools_Specs,Other_Activities_Specs,Studio_Test_Framework_With_File_And_Folder_Tools_Specs,Studio_Test_Framework_With_HTTP_Web_Tools_Specs,Studio_Test_Framework_With_Subworkflow_Specs,Workflow_Merging_Specs,Example_Workflow_Execution_Specs,Studio_Test_Framework_Specs,Subworkflow_Execution_Specs,Other_Specs,Studio_Test_Framework_With_Deleted_Resources_Specs,SQL_Integration_Tests,For_Each_Workflow_Execution_Specs,Copy_Tool_Specs_From_Local,Move_Tool_Specs_From_Local,Rename_Tool_Specs_From_Local,Unzip_Tool_Specs_From_Local,Zip_Tool_Specs_From_Local,Copy_Tool_Specs_From_FTP,Move_Tool_Specs_From_FTP,Rename_Tool_Specs_From_FTP,Unzip_Tool_Specs_From_FTP,Zip_Tool_Specs_From_FTP,Copy_Tool_Specs_From_FTPS,Move_Tool_Specs_From_FTPS,Rename_Tool_Specs_From_FTPS,Unzip_Tool_Specs_From_FTPS,Zip_Tool_Specs_From_FTPS,Copy_Tool_Specs_From_SFTP,Move_Tool_Specs_From_SFTP,Rename_Tool_Specs_From_SFTP,Unzip_Tool_Specs_From_SFTP,Zip_Tool_Specs_From_SFTP,Copy_Tool_Specs_From_UNC,Move_Tool_Specs_From_UNC,Studio_Core_Unit_Tests,Elasticsearch_View_Models_Unit_Tests,Search_Specs,Logger_Unit_Tests,Rename_Tool_Specs_From_UNC,Not_Parallelizable_Unit_Tests,Database_Workflow_Execution_Specs,RabbitMQ_Workflow_Execution_Specs,Studio_Test_Framework_With_HTTP_Web_Get_Tools_Specs,Studio_Test_Framework_With_HTTP_Web_Delete_Tools_Specs,Studio_Test_Framework_With_HTTP_Web_Post_Tools_Specs,Studio_Test_Framework_With_HTTP_Web_Put_Tools_Specs,Studio_Test_Framework_With_RabbitMQ_Tools_Specs,Database_Subworkflow_Execution_Specs,Intellisense_Textbox_Visual_Tree_Unit_Tests,Workflow_Execution_Logging_Specs]

  variables:
  - name: FullVersionString
    value: 0.0.0.0

  steps:
  - checkout: self
    clean: true
    persistCredentials: true

  - script: "powershell -NoProfile -NoLogo -ExecutionPolicy Bypass -NoExit -File \"$(Agent.BuildDirectory)/s/Compile.ps1\" -AcceptanceTesting -AutoVersion -Config Release -Target Rebuild -ProjectSpecificOutputs"
    displayName: 'Compile in Release Config'
    workingDirectory: '$(Agent.BuildDirectory)/s'

  - powershell: |
      Write-Host Testing Warewolf assembly file versions...
      $HighestReadVersion = "0.0.0.0"
      $LastReadVersion = "0.0.0.0"
      foreach ($file in Get-ChildItem -recurse "$(Agent.BuildDirectory)\s\Dev") {
          if (($file.Name.EndsWith(".dll") -or ($file.Name.EndsWith(".exe") -and -Not $file.Name.EndsWith(".vshost.exe"))) -and ($file.Name.StartsWith("Dev2.") -or $file.Name.StartsWith("Warewolf.") -or $file.Name.StartsWith("WareWolf")) -and $file.Name -ne "Warewolf.Usage.dll") {
              # Get version.
              $ReadVersion = [system.diagnostics.fileversioninfo]::GetVersionInfo($file.FullName).FileVersion
      
              # Find highest version
              $SeperateVersionNumbers = $ReadVersion.split(".")
              $SeperateVersionNumbersHighest = $HighestReadVersion.split(".")
              if ([convert]::ToInt32($SeperateVersionNumbers[0], 10) -gt [convert]::ToInt32($SeperateVersionNumbersHighest[0], 10)`
              -or [convert]::ToInt32($SeperateVersionNumbers[1], 10) -gt [convert]::ToInt32($SeperateVersionNumbersHighest[1], 10)`
              -or [convert]::ToInt32($SeperateVersionNumbers[2], 10) -gt [convert]::ToInt32($SeperateVersionNumbersHighest[2], 10)`
              -or [convert]::ToInt32($SeperateVersionNumbers[3], 10) -gt [convert]::ToInt32($SeperateVersionNumbersHighest[3], 10)){
                  $HighestReadVersion = $ReadVersion
              }
      
              # Check for invalid.
              if ($ReadVersion.StartsWith("0.0.") -or ($LastReadVersion -ne $ReadVersion -and $LastReadVersion -ne "0.0.0.0")) {
                  $getFullPath = $file.FullName
                  Write-Host ERROR! Invalid version! $getFullPath $ReadVersion $LastReadVersion
                  throw "ERROR! `"$getFullPath $ReadVersion`" is either an invalid version or not equal to `"$LastReadVersion`". All Warewolf assembly versions in `"$TestsPath`" must conform and cannot start with 0.0. or end with .0"
              }
              $LastReadVersion = $ReadVersion
          }
      }
      Out-File -LiteralPath "$(Agent.BuildDirectory)\s\Dev\Dev2.Server\bin\Release\net48\win\FullVersionString" -InputObject $HighestReadVersion -Encoding default -Force
      Out-File -LiteralPath "$(Agent.BuildDirectory)\s\Dev\Dev2.Studio\bin\Release\net48\win\FullVersionString" -InputObject $HighestReadVersion -Encoding default -Force
      git -C "$(Build.SourcesDirectory)" tag $HighestReadVersion
      git -C "$(Build.SourcesDirectory)" push origin $HighestReadVersion

  - script: "(robocopy \"$(Agent.BuildDirectory)\\s\\Dev\\Dev2.Server\\bin\\Release\\net48\\win\" \"\\\\opswolf\\Azure Devops\\Release Server $(Build.BuildId)\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Upload Server Artifacts'

  - script: "(robocopy \"$(Agent.BuildDirectory)\\s\\Dev\\Dev2.Studio\\bin\\Release\\net48\\win\" \"\\\\opswolf\\Azure Devops\\Release Studio $(Build.BuildId)\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Upload Studio Artifacts'

- job: Compile_Installer
  displayName: 'Compile Installer'
  dependsOn: build_release

  steps:
  - checkout: none

  - powershell: |
      if (Test-Path "$(Agent.BuildDirectory)\InstallerSource") {
        git -C "$(Agent.BuildDirectory)\InstallerSource" pull
      } else {
        git -C "$(Agent.BuildDirectory)" clone https://gitlab.com/warewolf/installer InstallerSource
      }
      $InstallerBranch = git -C "$(Agent.BuildDirectory)\InstallerSource" rev-parse --abbrev-ref HEAD
      $ThisBranch = git -C "$(Agent.BuildDirectory)\s" rev-parse --abbrev-ref HEAD
      if ($InstallerBranch -ne $ThisBranch) {
        git -C "$(Agent.BuildDirectory)\InstallerSource" fetch
        $TryGetThisBranchOnTheInstaller = git -C "$(Agent.BuildDirectory)\InstallerSource" ls-remote --heads "https://gitlab.com/warewolf/installer" $ThisBranch
        if ("$TryGetThisBranchOnTheInstaller" -ne "") {
          git -C "$(Agent.BuildDirectory)\InstallerSource" checkout $ThisBranch
          git -C "$(Agent.BuildDirectory)\InstallerSource" pull
        }
      }

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\Release Server $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\InstallerSource\\WarewolfInstaller\\ProductBuild\\Server\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Server Artifacts'

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\Release Studio $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\InstallerSource\\WarewolfInstaller\\ProductBuild\\Studio\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Studio Artifacts'
    
  - powershell: |
      $Installers = Get-ChildItem -Path "$(Agent.BuildDirectory)" -File -Filter Warewolf-*.exe
      foreach ($Installer in $Installers) {
        Write-Host Found extra installer in working directory: $Installer.FullName
        Remove-Item $Installer.FullName
      }
      Set-Location "$(Agent.BuildDirectory)\InstallerSource"
      docker build -t registry.gitlab.com/warewolf/installer .
      docker rm -f installerbuild
      docker create --name=installerbuild registry.gitlab.com/warewolf/installer
      $VersionString = Get-Content "$(Agent.BuildDirectory)\InstallerSource\WarewolfInstaller\ProductBuild\Server\FullVersionString"
      docker cp installerbuild:app/WixWPF/bin/Debug/Warewolf-$VersionString.exe ./Warewolf-$VersionString.exe
      New-Item -ItemType Directory "\\opswolf\Azure Devops\Installer $(Build.BuildId)"
      Copy-Item ./Warewolf-$VersionString.exe "\\opswolf\Azure Devops\Installer $(Build.BuildId)\Warewolf-$VersionString.exe"
      if ($VersionString.EndsWith(".0")) {
        $TrimmedVersionString = $VersionString.TrimEnd(".0")
        Copy-Item ./Warewolf-$VersionString.exe "\\opswolf\Azure Devops\Installer $(Build.BuildId)\Warewolf-$TrimmedVersionString.exe"
      }

- job: Docker_Hub
  displayName: 'Docker Hub'
  dependsOn: build_release

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\Release Server $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\Server\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Server Artifacts'
  
  - powershell: |
      Set-Location "$(Agent.BuildDirectory)\Server"
      $VersionString = Get-Content "$(Agent.BuildDirectory)\Server\FullVersionString"
      if ("$VersionString" -ne "") {
        docker build --isolation=hyperv -t warewolfserver/warewolfserver:latest .
        docker login
        
        $BranchName = git -C "$(Agent.BuildDirectory)\s" rev-parse --abbrev-ref HEAD
        if ("$BranchName" -eq "develop") {
          Write-Host Pushing...
          docker push warewolfserver/warewolfserver:latest
          Write-Host Pushed.
        } else {
          $cleanBranchName = "$BranchName".Replace("/","-")
          Write-Host Tagging with $cleanBranchName
          docker tag warewolfserver/warewolfserver:latest warewolfserver/warewolfserver:$cleanBranchName
          Write-Host Pushing...
          docker push warewolfserver/warewolfserver:$cleanBranchName
          Write-Host Pushed.
          docker rmi warewolfserver/warewolfserver:$cleanBranchName
        }
        
        Write-Host Tagging with $VersionString
        docker tag warewolfserver/warewolfserver:latest warewolfserver/warewolfserver:$VersionString
        Write-Host Pushing...
        docker push warewolfserver/warewolfserver:$VersionString
        Write-Host Pushed.
        docker rmi warewolfserver/warewolfserver:$VersionString

        if ($VersionString.EndsWith(".0")) {
          $TrimmedVersionString = "$VersionString".TrimEnd(".0")
          Write-Host Tagging with $TrimmedVersionString
          docker tag warewolfserver/warewolfserver:latest warewolfserver/warewolfserver:$TrimmedVersionString
          Write-Host Pushing...
          docker push warewolfserver/warewolfserver:$TrimmedVersionString
          Write-Host Pushed.
          docker rmi warewolfserver/warewolfserver:$TrimmedVersionString
        }
      }

- job: GitLab_Registry
  displayName: 'GitLab Registry'
  dependsOn: build_release

  steps:
  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\Release Server $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\Server\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Server Artifacts'
  
  - powershell: |
      Set-Location "$(Agent.BuildDirectory)\Server"
      $VersionString = Get-Content "$(Agent.BuildDirectory)\Server\FullVersionString"
      if ("$VersionString" -ne "") {    
        docker build --isolation=hyperv -t registry.gitlab.com/warewolf/warewolf .
        docker login registry.gitlab.com/warewolf/warewolf
        
        $BranchName = git -C "$(Agent.BuildDirectory)\s" rev-parse --abbrev-ref HEAD
        if ("$BranchName" -eq "develop") {
          Write-Host Pushing...
          docker push registry.gitlab.com/warewolf/warewolf
          Write-Host Pushed.
        } else {
          $cleanBranchName = "$BranchName".Replace("/","-")
          Write-Host Tagging with $cleanBranchName
          docker tag registry.gitlab.com/warewolf/warewolf registry.gitlab.com/warewolf/warewolf:$cleanBranchName
          Write-Host Pushing...
          docker push registry.gitlab.com/warewolf/warewolf:$cleanBranchName
          Write-Host Pushed.
          docker rmi registry.gitlab.com/warewolf/warewolf:$cleanBranchName
        }
        
        Write-Host Tagging with $VersionString
        docker tag registry.gitlab.com/warewolf/warewolf:latest registry.gitlab.com/warewolf/warewolf:$VersionString
        Write-Host Pushing...
        docker push registry.gitlab.com/warewolf/warewolf:$VersionString
        Write-Host Pushed.
        docker rmi registry.gitlab.com/warewolf/warewolf:$VersionString

        if ($VersionString.EndsWith(".0")) {
          $TrimmedVersionString = "$VersionString".TrimEnd(".0")
          Write-Host Tagging with $VersionString
          docker tag registry.gitlab.com/warewolf/warewolf:latest registry.gitlab.com/warewolf/warewolf:$TrimmedVersionString
          Write-Host Pushing...
          docker push registry.gitlab.com/warewolf/warewolf:$TrimmedVersionString
          Write-Host Pushed.
          docker rmi registry.gitlab.com/warewolf/warewolf:$TrimmedVersionString
        }
      }

- job: Upload_To_AWS_S3
  displayName: 'Upload To AWS S3'
  dependsOn: Compile_Installer

  steps:
  - checkout: none

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\Release Server $(Build.BuildId)\" \"$(Agent.BuildDirectory)\\Server\" /E /PURGE) ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Server Artifacts'

  - powershell: |
      $Installers = Get-ChildItem -Path "$(Agent.BuildDirectory)" -File -Filter Warewolf-*.exe
      foreach ($Installer in $Installers) {
        Write-Host Found extra installer in working directory: $Installer.FullName
        Remove-Item $Installer.FullName
      }

  - script: "(robocopy \"\\\\opswolf\\Azure Devops\\Installer $(Build.BuildId)\" \"$(Agent.BuildDirectory)\") ^& IF %ERRORLEVEL% LEQ 1 exit 0"
    displayName: 'Download Installer'

  - powershell: |
      $Installers = Get-ChildItem -Path "$(Agent.BuildDirectory)" -File -Filter Warewolf-*.exe
      foreach ($Installer in $Installers) {
        Write-Host Uploading installer to AWS S3: $Installer.FullName
        Write-S3Object -BucketName warewolfreleases -File $Installer.FullName -Key $Installer.Name -CannedACLName public-read -PublicReadOnly -StoredCredentials warewolfreleases -AccessKey $env:AccessKey -SecretKey $env:SecretKey
      }
      $VersionString = Get-Content "$(Agent.BuildDirectory)\Server\FullVersionString"
      $AllAssemblies = Get-ChildItem "$(Agent.BuildDirectory)\Server" | Foreach {$_.FullName}
      $ServerZips = Get-ChildItem -Path "$(Agent.BuildDirectory)" -File -Filter Server-*.zip
      foreach ($ServerZip in $ServerZips) {
        Write-Host Found extra zipped server in working directory: $ServerZip.FullName
        Remove-Item $ServerZip.FullName
      }
      Compress-Archive $AllAssemblies "$(Agent.BuildDirectory)\Server-$VersionString.zip" -Update
      Write-S3Object -BucketName warewolfreleases -File "$(Agent.BuildDirectory)\Server-$VersionString.zip" -Key Server-$VersionString.zip -CannedACLName public-read -PublicReadOnly -StoredCredentials warewolfreleases -AccessKey $env:AccessKey -SecretKey $env:SecretKey
      if ($VersionString.EndsWith(".0")) {
        $TrimmedVersionString = "$VersionString".TrimEnd(".0")
        Copy-Item ./Server-$VersionString.zip ./Server-$TrimmedVersionString.zip
        Write-S3Object -BucketName warewolfreleases -File .\Server-$TrimmedVersionString.zip -Key Server-$TrimmedVersionString.zip -CannedACLName public-read -PublicReadOnly -StoredCredentials warewolfreleases -AccessKey $env:AccessKey -SecretKey $env:SecretKey
      }
    env:
      AccessKey: $(AccessKeyPassword)
      SecretKey: $(SecretKeyPassword)